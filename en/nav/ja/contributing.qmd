---
title: "数学ナレッジグラフへの貢献"
lang: ja
translations:
  en: "../en/contributing.html"
---

# 数学ナレッジグラフWikiへの貢献

数学ナレッジグラフWikiへの貢献に興味を持っていただき、ありがとうございます！このプロジェクトは、数学的知識の包括的で相互接続された表現を作成することを目指しています。あなたの貢献により、数学をすべての人にとってよりアクセスしやすく理解しやすいものにすることができます。

## 🎯 貢献方法

### 貢献の種類

1. **コンテンツ作成**: 新しい数学的概念（定義、定理、例）を書く
2. **コンテンツレビュー**: 既存のコンテンツをレビューし改善する
3. **相互参照**: 関連する概念間の欠落しているリンクを追加
4. **形式的検証**: 数学的命題にLean 4の証明を追加
5. **バグ報告**: ウェブサイトやコンテンツの問題を報告
6. **機能リクエスト**: 新しい機能や改善を提案

### はじめに

1. **リポジトリをフォーク**
   ```bash
   git clone https://github.com/RK0429/ModernMath.git
   cd ModernMath
   ```

2. **開発環境のセットアップ**
   ```bash
   poetry install
   quarto check
   ```

3. **新しいブランチを作成**
   ```bash
   git checkout -b feature/your-feature-name
   ```

## 📝 コンテンツガイドライン

### ファイル構造

各数学的概念は独自の`.qmd`ファイルを持つ必要があります：
- 定義: `content/{domain}/def-{concept}.qmd`
- 定理: `content/{domain}/thm-{theorem-name}.qmd`
- 例: `content/{domain}/ex-{example-name}.qmd`
- 公理: `content/{domain}/ax-{axiom-name}.qmd`

### 必須メタデータ

すべての`.qmd`ファイルにはYAMLフロントマターを含める必要があります：

```yaml
---
title: "定義：群"
id: "def-group"
type: "Definition"
status: "draft|complete|verified"
requires:
  - "def-set"
  - "def-binary-operation"
lean_id: "Mathlib.Algebra.Group.Defs.Group" # オプション
---
```

### コンテンツ形式

```markdown
# 定義：群 {#def-group}

**群**とは、@def-set $G$と@def-binary-operation の組み合わせであり...

## 性質

1. **閉性**: すべての$a, b \in G$に対して、$a \cdot b \in G$
2. **結合律**: すべての$a, b, c \in G$に対して、$(a \cdot b) \cdot c = a \cdot (b \cdot c)$
...

## 例

- 整数$\mathbb{Z}$は加法の下で群を成す（@ex-integers-addition 参照）
- $n \times n$の可逆行列の集合は乗法の下で群を成す
```

### 相互参照ガイドライン

`@`構文を使用して他の概念に常にリンクしてください：
- `@def-group` - 群の定義へのリンク
- `@thm-lagrange` - ラグランジュの定理へのリンク
- `@ex-integers-addition` - 例へのリンク

**重要**: 独自のページを持つ数学的概念に言及する場合は、必ずリンクを作成してください。

## 🔧 技術的ガイドライン

### ナレッジグラフの構築

提出前に：

1. **メタデータの検証**
   ```bash
   poetry run python scripts/validate_metadata.py
   ```

2. **グラフの構築**
   ```bash
   poetry run python scripts/build_graph.py
   ```

3. **可視化の生成**
   ```bash
   poetry run python scripts/generate_pyvis.py
   poetry run python scripts/fix_pyvis_css.py
   ```

4. **変更のプレビュー**
   ```bash
   quarto preview
   ```

### コード品質

- リンティングの実行: `poetry run flake8 scripts/`
- コードのフォーマット: `poetry run black scripts/`
- 型チェック: `poetry run mypy scripts/`

## 🤖 自動チェック

CI/CDパイプラインは自動的に以下を行います：
- すべてのYAMLメタデータを検証
- 壊れた相互参照をチェック
- ナレッジグラフを構築
- 可視化を生成
- 欠落している相互参照についてLLMレビューを実行

## 📊 数学分野

コンテンツは分野別に整理されています：

| 分野 | ディレクトリ | 重点分野 |
|------|-------------|----------|
| 代数学 | `content/algebra/` | 群、環、体、線形代数 |
| 解析学 | `content/analysis/` | 極限、微分、積分 |
| 位相空間論 | `content/topology/` | 位相空間、コンパクト性、連結性 |
| 幾何学 | `content/geometry/` | ユークリッド、距離空間 |
| 数論 | `content/number-theory/` | 素数、整除性 |
| 組合せ論 | `content/combinatorics/` | 数え上げ、グラフ理論 |
| 論理と集合論 | `content/logic-set-theory/` | 集合、論理、基礎 |
| 確率と統計 | `content/probability-statistics/` | 確率空間、分布 |
| 圏論 | `content/category-theory/` | 圏、関手、自然変換 |

## 🚀 提出プロセス

1. **ローカルで変更をテスト**
   - すべてのリンクが正しく解決されることを確認
   - 可視化が適切に生成されることを確認
   - サイトがエラーなしでビルドされることを確認

2. **変更をコミット**
   ```bash
   git add .
   git commit -m "feat: コンパクト空間の定義を追加"
   ```

3. **プッシュしてプルリクエストを作成**
   ```bash
   git push origin feature/your-feature-name
   ```
   その後、GitHubでプルリクエストを作成します。

4. **プルリクエストガイドライン**
   - 説明的なタイトルを使用
   - 関連するイシューを参照
   - 追加/変更した内容を説明
   - 関連する場合はスクリーンショットを含める

## 🎓 スタイルガイド

### 数学的記法

- すべての数学的表現にLaTeXを使用
- 最初の使用前に記法を定義
- 標準的な数学的慣習に一貫性を持たせる

### 文章スタイル

- 明確でアクセスしやすい言語で書く
- 最初の使用時に専門用語を定義
- 形式的な定義と共に直感的な説明を提供
- 抽象的な概念を説明するための例を含める

### 定理環境

Quartoの定理環境を使用：

```markdown
::: {.theorem #thm-unique-identity}
**単位元の一意性**

任意の群$(G, \cdot)$において、単位元は一意である。
:::

::: {.proof}
$e$と$e'$が両方とも単位元であると仮定すると...
:::
```

## 🤝 コミュニティガイドライン

- 議論において敬意を持ち建設的であること
- 新参者を歓迎し、始めるのを手伝う
- 適切にクレジットを与える
- 数学的な正確さと明確さに焦点を当てる

## 📚 リソース

- [Quartoドキュメント](https://quarto.org/docs/)
- [RDF/OWL入門](https://www.w3.org/TR/owl2-primer/)
- [Lean 4ドキュメント](https://leanprover.github.io/lean4/doc/)
- [プロジェクトアーキテクチャ](../../design_JA/knowledge_graph.md)

## ❓ ヘルプを得る

- **質問**: [GitHubディスカッション](https://github.com/RK0429/ModernMath/discussions)を開く
- **バグ**: [イシュー](https://github.com/RK0429/ModernMath/issues)を作成
- **チャット**: コミュニティに参加（近日公開）

数学的知識のための包括的でアクセスしやすいリソースの構築にご協力いただき、ありがとうございます！
