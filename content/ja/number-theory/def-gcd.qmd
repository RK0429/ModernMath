---
id: def-gcd
requires:
- def-set
- def-divisibility
status: complete
title: 定義：最大公約数
translation_of: ../../en/number-theory/def-gcd.qmd
translations:
  en: ../en/number-theory/def-gcd.html
  ja: ../ja/number-theory/def-gcd.html
type: Definition
---

# 定義：最大公約数 {#def-gcd}

2つの整数の**最大公約数 (GCD)** は、両方の数を[割り切る](def-divisibility.qmd)最大の正の整数です。

## 定義

$a, b \in \mathbb{Z}$ で、両方が0でないとします。$a$ と $b$ の最大公約数を $\gcd(a, b)$ で表し、次の条件を満たす唯一の正の整数 $d$ として定義します：

1. $d \mid a$ かつ $d \mid b$ （すなわち、$d$ は $a$ と $b$ の両方を[割り切る](def-divisibility.qmd)）
2. ある整数 $c$ に対して $c \mid a$ かつ $c \mid b$ ならば、$c \mid d$

## 別の特徴付け

$\gcd(a, b)$ は次の[集合](../logic-set-theory/def-set.qmd)の最大元です：
$$\{d \in \mathbb{Z}^+ : d \mid a \text{ かつ } d \mid b\}$$

## 性質

1. **可換性**：$\gcd(a, b) = \gcd(b, a)$
2. **結合性**：$\gcd(a, \gcd(b, c)) = \gcd(\gcd(a, b), c)$
3. **単位元**：$a \neq 0$ のとき $\gcd(a, 0) = |a|$
4. **スケール性**：任意の整数 $k$ に対して $\gcd(ka, kb) = |k| \cdot \gcd(a, b)$
5. **ベズーの等式**：$\gcd(a, b) = ax + by$ を満たす整数 $x, y$ が存在する

## ユークリッドのアルゴリズム

GCD は次のユークリッドのアルゴリズムを用いて効率的に計算できます：
$$\gcd(a, b) = \gcd(b, a \bmod b)$$

余りが0になるまで繰り返します。

## 特殊な場合

- $\gcd(a, a) = |a|$
- 任意の整数 $a$ に対して $\gcd(a, 1) = 1$
- $\gcd(a, b) = 1$ のとき、$a$ と $b$ は**互いに素**または**相対的に素**であるという

## 例

1. $\gcd(12, 18) = 6$
2. $\gcd(17, 19) = 1$ （17と19は互いに素）
3. $\gcd(0, 5) = 5$
4. $\gcd(−24, 36) = 12$

## 拡張定義

すべてが0でない有限個の整数の集合 $\{a_1, a_2, \ldots, a_n\}$ に対して：
$$\gcd(a_1, a_2, \ldots, a_n) = \gcd(a_1, \gcd(a_2, \ldots, a_n))$$

## Mermaidダイアグラム

```mermaid
graph TD
    A[GCD(a,b)] --> B[最大公約数]
    B --> C[d | a かつ d | b]
    B --> D[c | a, c | b ⟹ c | d]
    A --> E[性質]
    E --> F[可換]
    E --> G[結合]
    E --> H[ベズーの等式]
    A --> I[ユークリッドのアルゴリズム]
    I --> J[gcd(a,b) = gcd(b, a mod b)]

    style A fill:#f9f,stroke:#333,stroke-width:2px
    style B fill:#bbf,stroke:#333,stroke-width:2px
    style H fill:#bfb,stroke:#333,stroke-width:2px
    style I fill:#bbf,stroke:#333,stroke-width:2px
```

## 関連項目

- @def-congruence - 互いに素な整数はモジュラー逆元に不可欠
- @def-lcm - 関連概念で基本的な関係式：$\gcd(a,b) \cdot \text{lcm}(a,b) = |a| \cdot |b|$
- @def-prime - 素数はそれより小さいすべての正の整数と互いに素
- @thm-euclidean-algorithm - GCDを計算する効率的なアルゴリズム
- @thm-euler - 互いに素な整数の概念を使用

## 依存関係グラフ

```{mermaid}
%%| fig-cap: "ローカル依存関係グラフ"
graph TD
    classDef definition fill:#e1f5fe,stroke:#01579b,stroke-width:2px
    classDef theorem fill:#f3e5f5,stroke:#4a148c,stroke-width:2px
    classDef axiom fill:#fff3e0,stroke:#e65100,stroke-width:2px
    classDef example fill:#e8f5e9,stroke:#1b5e20,stroke-width:2px
    classDef current fill:#ffebee,stroke:#b71c1c,stroke-width:3px
    def-set["定義: 集合"]:::definition
    def-lcm["定義：最小公倍数"]:::definition
    thm-euclidean-algorithm["定理：ユークリッドのアルゴリズム"]:::theorem
    thm-fermat-little["定理: フェルマーの小定理"]:::theorem
    thm-fundamental-arithmetic["定理：算術の基本定理"]:::theorem
    thm-euler["定理：オイラーの定理"]:::theorem
    def-congruence["定義: 合同（モジュラー演算）"]:::definition
    ex-principal-ideal["例: 整数における単項イデアル"]:::example
    def-prime["定義：素数"]:::definition
    def-gcd["定義：最大公約数"]:::definition
    thm-chinese-remainder["定理: 中国剰余定理"]:::theorem
    def-divisibility["定義: 整除性"]:::definition
    def-gcd --> def-prime
    thm-fermat-little --> def-gcd
    def-divisibility --> def-gcd
    thm-fundamental-arithmetic --> def-gcd
    thm-euclidean-algorithm --> def-gcd
    def-prime --> def-gcd
    def-gcd --> thm-euler
    def-gcd --> def-congruence
    ex-principal-ideal --> def-gcd
    def-gcd --> def-lcm
    def-gcd --> thm-euclidean-algorithm
    def-lcm --> def-gcd
    thm-chinese-remainder --> def-gcd
    def-congruence --> def-gcd
    def-gcd --> def-divisibility
    def-gcd --> def-set
    class def-gcd current
    click def-set "def-set.html" "集合の定義へ"
    click def-lcm "def-lcm.html" "定義：最小公倍数へ"
    click thm-euclidean-algorithm "thm-euclidean-algorithm.html" "定理：ユークリッドのアルゴリズムへ"
    click thm-fermat-little "thm-fermat-little.html" "フェルマーの小定理の定理へ"
    click thm-fundamental-arithmetic "thm-fundamental-arithmetic.html" "定理：算術の基本定理へ"
    click thm-euler "thm-euler.html" "定理：オイラーの定理へ"
    click def-congruence "def-congruence.html" "合同（モジュラー演算）の定義へ"
    click ex-principal-ideal "ex-principal-ideal.html" "整数における単項イデアルの例へ"
    click def-prime "def-prime.html" "定義：素数へ"
    click thm-chinese-remainder "thm-chinese-remainder.html" "中国剰余定理の定理へ"
    click def-divisibility "def-divisibility.html" "整除性の定義へ"
```

## インタラクティブ可視化

ローカルナレッジグラフの近傍をインタラクティブに探索：

::: {.graph-viz data-id="def-gcd" data-width="700" data-height="500"}
:::

次のことができます：
- ノードを**ドラッグ**してレイアウトを再配置
- マウスホイールで**ズーム**イン/アウト
- ノードに**ホバー**して詳細を表示
- [別ウィンドウ](../../output/interactive/ja/def-gcd.html){target="_blank"}で完全なインタラクティブ版を表示
