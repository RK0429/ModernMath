---
id: def-divisibility
requires:
- def-prime
- def-gcd
- def-partial-order
status: complete
title: 整除性
translation_of: ../../en/number-theory/def-divisibility.qmd
translations:
  en: ../en/number-theory/def-divisibility.html
  ja: ../ja/number-theory/def-divisibility.html
type: Definition
---

# 整除性 {#def-divisibility}

整除性は数論において基本的な[関係](../logic-set-theory/def-relation.qmd)であり、一つの整数が別の整数を余りなく割ることができるかどうかを記述します。

## 形式的定義

$a, b \in \mathbb{Z}$（$b \neq 0$）に対して、ある整数$q$が存在して$a = bq$となるとき、**$b$は$a$を割り切る**（$b$ divides $a$）または**$a$は$b$で割り切れる**（$a$ is divisible by $b$）といいます。

## 記法

$b$が$a$を割り切ることを記号で次のように表します：
$$b \mid a$$

$b$が$a$を割り切らないときは：
$$b \nmid a$$

## 同値な表現

以下の命題はすべて同値です：
- $b \mid a$
- $b$は$a$を割り切る
- $a$は$b$で割り切れる
- $b$は$a$の約数である
- $a$は$b$の倍数である
- $a \equiv 0 \pmod{b}$

## 性質

### 1. 推移性
$a \mid b$かつ$b \mid c$ならば、$a \mid c$

### 2. 線形結合
$a \mid b$かつ$a \mid c$ならば、任意の整数$x, y$に対して$a \mid (bx + cy)$

### 3. 反射性
任意の非零整数$a$に対して、$a \mid a$

### 4. 反対称性
$a \mid b$かつ$b \mid a$ならば、$a = \pm b$

### 5. 1と-1の性質
任意の整数$a$に対して、$1 \mid a$かつ$-1 \mid a$

### 6. ゼロの性質
任意の非零整数$a$に対して、$a \mid 0$（なぜなら$0 = a \cdot 0$）

## 半順序構造

正の整数上の整除関係は[半順序](../logic-set-theory/def-partial-order.qmd)を形成する：
- **反射的**：すべての正の整数 $a$ に対して $a \mid a$
- **反対称的**：正の整数に対して、$a \mid b$ かつ $b \mid a$ ならば $a = b$
- **推移的**：$a \mid b$ かつ $b \mid c$ ならば $a \mid c$

これは全順序ではないことに注意。なぜなら、すべての正の整数の組が整除性の下で比較可能ではないから（例：$2 \nmid 3$ かつ $3 \nmid 2$）。

## 例

1. $3 \mid 12$（なぜなら$12 = 3 \times 4$）
2. $5 \nmid 17$（17を5で割ると余り2が生じる）
3. $-4 \mid 20$（なぜなら$20 = (-4) \times (-5)$）
4. 任意の偶数$n$に対して、$2 \mid n$
5. $p$が[素数](def-prime.qmd)で$p \mid ab$ならば、$p \mid a$または$p \mid b$（またはその両方）

## 応用

整除性は数論全体において基本的な役割を果たします：

- **[素数](def-prime.qmd)の定義**：素数$p$は、その約数が$\pm 1$と$\pm p$のみである自然数
- **[最大公約数](def-gcd.qmd)**：$a$と$b$の公約数の中で最大のもの
- **[ユークリッドのアルゴリズム](thm-euclidean-algorithm.qmd)**：整除性の性質を用いてGCDを計算
- **[中国剰余定理](thm-chinese-remainder.qmd)**：互いに素な約数を持つ連立合同方程式を解く
- **[フェルマーの小定理](thm-fermat-little.qmd)**：素数による整除性の結果

## 関連項目

- [素数](def-prime.qmd)
- [最大公約数](def-gcd.qmd)
- [合同（モジュラー算術）](def-congruence.qmd)
- [ユークリッドのアルゴリズム](thm-euclidean-algorithm.qmd)

## 依存関係グラフ

```{mermaid}
%%| fig-cap: "ローカル依存関係グラフ"
graph TD
    classDef definition fill:#e1f5fe,stroke:#01579b,stroke-width:2px
    classDef theorem fill:#f3e5f5,stroke:#4a148c,stroke-width:2px
    classDef axiom fill:#fff3e0,stroke:#e65100,stroke-width:2px
    classDef example fill:#e8f5e9,stroke:#1b5e20,stroke-width:2px
    classDef current fill:#ffebee,stroke:#b71c1c,stroke-width:3px
    thm-euclidean-algorithm["定理：ユークリッドのアルゴリズム"]:::theorem
    def-lcm["定義：最小公倍数"]:::definition
    thm-fermat-little["定理: フェルマーの小定理"]:::theorem
    thm-fundamental-arithmetic["定理：算術の基本定理"]:::theorem
    def-partial-order["定義：半順序"]:::definition
    thm-euclid-infinitude-primes["定理：素数の無限性に関するユークリッドの定理"]:::theorem
    def-congruence["定義: 合同（モジュラー演算）"]:::definition
    def-prime["定義：素数"]:::definition
    def-gcd["定義：最大公約数"]:::definition
    thm-chinese-remainder["定理: 中国剰余定理"]:::theorem
    def-divisibility["定義: 整除性"]:::definition
    def-lcm --> def-divisibility
    thm-euclid-infinitude-primes --> def-divisibility
    def-divisibility --> def-prime
    thm-euclidean-algorithm --> def-divisibility
    def-prime --> def-divisibility
    def-divisibility --> def-partial-order
    thm-fundamental-arithmetic --> def-divisibility
    thm-chinese-remainder --> def-divisibility
    def-congruence --> def-divisibility
    def-divisibility --> def-gcd
    thm-fermat-little --> def-divisibility
    def-gcd --> def-divisibility
    class def-divisibility current
    click thm-euclidean-algorithm "thm-euclidean-algorithm.html" "定理：ユークリッドのアルゴリズムへ"
    click def-lcm "def-lcm.html" "定義：最小公倍数へ"
    click thm-fermat-little "thm-fermat-little.html" "フェルマーの小定理の定理へ"
    click thm-fundamental-arithmetic "thm-fundamental-arithmetic.html" "定理：算術の基本定理へ"
    click def-partial-order "def-partial-order.html" "定義：半順序へ"
    click thm-euclid-infinitude-primes "thm-euclid-infinitude-primes.html" "定理：素数の無限性に関するユークリッドの定理へ"
    click def-congruence "def-congruence.html" "合同（モジュラー演算）の定義へ"
    click def-prime "def-prime.html" "定義：素数へ"
    click def-gcd "def-gcd.html" "定義：最大公約数へ"
    click thm-chinese-remainder "thm-chinese-remainder.html" "中国剰余定理の定理へ"
```

## インタラクティブ可視化

ローカルナレッジグラフの近傍をインタラクティブに探索：

::: {.graph-viz data-id="def-divisibility" data-width="700" data-height="500"}
:::

次のことができます：
- ノードを**ドラッグ**してレイアウトを再配置
- マウスホイールで**ズーム**イン/アウト
- ノードに**ホバー**して詳細を表示
- [別ウィンドウ](../../output/interactive/ja/def-divisibility.html){target="_blank"}で完全なインタラクティブ版を表示
