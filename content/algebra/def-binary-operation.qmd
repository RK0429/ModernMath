---
id: def-binary-operation
requires:
- def-set
status: complete
title: 'Definition: Binary Operation'
type: Definition
lean_id: MathKnowledgeGraph.Algebra.BinaryOp
---

# Definition: Binary Operation {#def-binary-operation}

Let $S$ be a [Set](logic-set-theory/def-set.qmd). A **binary operation** on $S$ is a function $\star: S \times S \to S$.

## Explanation

A binary operation takes two elements from a set and produces another element from the same set. We often write $a \star b$ instead of $\star(a, b)$.

## Properties of Binary Operations

A binary operation $\star$ on a set $S$ may satisfy various properties:

1. **Closure**: By definition, $a \star b \in S$ for all $a, b \in S$

2. **Associativity**: $(a \star b) \star c = a \star (b \star c)$ for all $a, b, c \in S$

3. **Commutativity**: $a \star b = b \star a$ for all $a, b \in S$

4. **Identity element**: There exists $e \in S$ such that $a \star e = e \star a = a$ for all $a \in S$

5. **Inverse elements**: For each $a \in S$, there exists $b \in S$ such that $a \star b = b \star a = e$ (where $e$ is the identity)

## Examples

Common binary operations include:

- Addition ($+$) on the integers $\mathbb{Z}$
- Multiplication ($\cdot$) on the real numbers $\mathbb{R}$
- Matrix multiplication on $n \times n$ matrices
- Composition of functions

## See Also

- Definition: Group (uses this concept)
- Example: Integers under Addition (illustrates this concept)

## Dependency Graph

```{mermaid}
%%| fig-cap: "Local dependency graph"
graph TD
    classDef definition fill:#e1f5fe,stroke:#01579b,stroke-width:2px
    classDef theorem fill:#f3e5f5,stroke:#4a148c,stroke-width:2px
    classDef axiom fill:#fff3e0,stroke:#e65100,stroke-width:2px
    classDef example fill:#e8f5e9,stroke:#1b5e20,stroke-width:2px
    classDef current fill:#ffebee,stroke:#b71c1c,stroke-width:3px
    def-binary-operation["Definition: Binary Operation"]:::definition
    ex-integers-addition["Example: Integers under Addition"]:::example
    def-set["Definition: Set"]:::definition
    def-group["Definition: Group"]:::definition
    def-group --> def-binary-operation
    ex-integers-addition --> def-binary-operation
    def-binary-operation --> def-set
    class def-binary-operation current
```