---
id: def-commutativity
requires:
- def-binary-operation
status: complete
title: 'Definition: Commutativity'
type: Definition
---

**Commutativity** is a property of a [Binary Operation](def-binary-operation.qmd) where the order of the operands does not affect the result.

## Formal Definition

A binary operation $*$ on a set $S$ is **commutative** (or **abelian**) if for all $a, b \in S$:
$$a * b = b * a$$

## Examples of Commutative Operations

### Arithmetic
- **Addition**: $a + b = b + a$
- **Multiplication**: $a \cdot b = b \cdot a$

### Set Theory
- **Union**: $A \cup B = B \cup A$
- **Intersection**: $A \cap B = B \cap A$
- **Symmetric difference**: $A \triangle B = B \triangle A$

### Logic
- **AND**: $p \land q = q \land p$
- **OR**: $p \lor q = q \lor p$
- **XOR**: $p \oplus q = q \oplus p$

### Number Theory
- **GCD**: $\gcd(a, b) = \gcd(b, a)$
- **LCM**: $\text{lcm}(a, b) = \text{lcm}(b, a)$

## Non-Commutative Operations

### Arithmetic
- **Subtraction**: $a - b \neq b - a$ (unless $a = b$)
  - Example: $5 - 3 = 2$ but $3 - 5 = -2$
- **Division**: $a \div b \neq b \div a$ (unless $a = b$ or both equal 1)
  - Example: $6 \div 2 = 3$ but $2 \div 6 = \frac{1}{3}$

### Linear Algebra
- **Matrix multiplication**: $\mathbf{AB} \neq \mathbf{BA}$ in general
- **Cross product**: $\vec{a} \times \vec{b} = -\vec{b} \times \vec{a}$ (anti-commutative)

### Other
- **Function composition**: $f \circ g \neq g \circ f$ in general
- **String concatenation**: $"ab" \neq "ba"$

## Importance

1. **Abelian Groups**: [Groups](def-group.qmd) with commutative operation
   - Examples: $(\mathbb{Z}, +)$, $(\mathbb{R}^*, \cdot)$

2. **Simplification**: Allows reordering of terms
   - In expressions like $a + b + c + d$, can rearrange freely

3. **Parallel Computation**: Commutative operations can be parallelized more easily

## Relationship with Other Properties

- **Independent of [Associativity](def-associativity.qmd)**: An operation can be:
  - Commutative but not associative
  - Associative but not commutative
  - Both (e.g., addition)
  - Neither (e.g., subtraction)

## Special Cases

### Commutators
For non-commutative operations, the **commutator** measures failure of commutativity:
- In groups: $[a, b] = a * b * a^{-1} * b^{-1}$
- In rings: $[a, b] = ab - ba$

### Graded Commutativity
In graded algebras: $ab = (-1)^{|a||b|}ba$ where $|a|$ is the degree of $a$

## Applications

- **Cryptography**: Commutative encryption allows flexible ordering
- **Database queries**: Commutative operations enable query optimization
- **Physics**: Commuting observables can be measured simultaneously

## Dependency Graph

```{mermaid}
%%| fig-cap: "Local dependency graph"
graph TD
    classDef definition fill:#e1f5fe,stroke:#01579b,stroke-width:2px
    classDef theorem fill:#f3e5f5,stroke:#4a148c,stroke-width:2px
    classDef axiom fill:#fff3e0,stroke:#e65100,stroke-width:2px
    classDef example fill:#e8f5e9,stroke:#1b5e20,stroke-width:2px
    classDef current fill:#ffebee,stroke:#b71c1c,stroke-width:3px
    def-group["Definition: Group"]:::definition
    def-binary-operation["Definition: Binary Operation"]:::definition
    def-associativity["Definition: Associativity"]:::definition
    def-commutativity["Definition: Commutativity"]:::definition
    def-commutativity --> def-associativity
    def-commutativity --> def-binary-operation
    def-commutativity --> def-group
    class def-commutativity current
```