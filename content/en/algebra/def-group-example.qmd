---
id: def-group-example
lang: en
requires:
- def-binary-operation
- def-associativity
- def-identity-element
- def-inverse-element
status: complete
title: 'Definition: Group'
translations:
  en: ../en/algebra/def-group-example.html
  ja: ../ja/algebra/def-group-example.html
type: Definition
---

# Group {#def-group-example}

## Definition

A **group** is a set $G$ equipped with a binary operation $\cdot: G \times G \to G$ that satisfies the following axioms:

1. **Associativity**: For all $a, b, c \in G$, we have $(a \cdot b) \cdot c = a \cdot (b \cdot c)$
2. **Identity element**: There exists an element $e \in G$ such that for all $a \in G$, we have $e \cdot a = a \cdot e = a$
3. **Inverse elements**: For each $a \in G$, there exists an element $a^{-1} \in G$ such that $a \cdot a^{-1} = a^{-1} \cdot a = e$

## Notation

- The group operation is often written multiplicatively as $ab$ instead of $a \cdot b$
- When the operation is addition, we write $a + b$ and use $0$ for the identity and $-a$ for the inverse
- We denote a group by $(G, \cdot)$ or simply $G$ when the operation is clear from context

## Properties

- The identity element is unique (@thm-unique-identity)
- For each element, the inverse is unique
- The cancellation laws hold: if $ab = ac$ then $b = c$

## Examples

- The integers $\mathbb{Z}$ under addition form a group (@ex-integers-addition)
- The non-zero real numbers $\mathbb{R}^*$ under multiplication form a group
- The set of $n \times n$ invertible matrices over a field forms a group under matrix multiplication

## Related Concepts

- @def-subgroup
- @def-homomorphism
- @thm-lagrange

## Dependency Graph

%%| fig-cap: "Local dependency graph"
graph TD
    classDef definition fill:#e1f5fe,stroke:#01579b,stroke-width:2px
    classDef theorem fill:#f3e5f5,stroke:#4a148c,stroke-width:2px
    classDef axiom fill:#fff3e0,stroke:#e65100,stroke-width:2px
    classDef example fill:#e8f5e9,stroke:#1b5e20,stroke-width:2px
    classDef current fill:#ffebee,stroke:#b71c1c,stroke-width:3px
    ex-integers-addition["Example: Integers under Addition"]:::example
    def-group-example["Definition: Group"]:::definition
    def-binary-operation["Definition: Binary Operation"]:::definition
    def-associativity["Definition: Associativity"]:::definition
    def-identity-element["Definition: Identity Element"]:::definition
    def-homomorphism["Definition: Group Homomorphism"]:::definition
    def-subgroup["Definition: Subgroup"]:::definition
    thm-unique-identity["Theorem: Uniqueness of Identity"]:::theorem
    def-inverse-element["Definition: Inverse Element"]:::definition
    thm-lagrange["Theorem: Lagrange's Theorem"]:::theorem
    def-group-example --> def-associativity
    def-group-example --> def-homomorphism
    def-group-example --> def-inverse-element
    def-group-example --> def-subgroup
    def-group-example --> def-binary-operation
    def-group-example --> def-identity-element
    def-group-example --> ex-integers-addition
    def-group-example --> thm-lagrange
    def-group-example --> thm-unique-identity
    class def-group-example current
```
    click ex-integers-addition "ex-integers-addition.html" "Go to Integers under Addition example"
    click def-binary-operation "def-binary-operation.html" "Go to Binary Operation definition"
    click def-associativity "def-associativity.html" "Go to Associativity definition"
    click def-identity-element "def-identity-element.html" "Go to Identity Element definition"
    click def-homomorphism "def-homomorphism.html" "Go to Group Homomorphism definition"
    click def-subgroup "def-subgroup.html" "Go to Subgroup definition"
    click thm-unique-identity "thm-unique-identity.html" "Go to Uniqueness of Identity theorem"
    click def-inverse-element "def-inverse-element.html" "Go to Inverse Element definition"
    click thm-lagrange "thm-lagrange.html" "Go to Lagrange's Theorem theorem"

## Interactive Visualization

Explore the local knowledge graph neighborhood interactively:

::: {.graph-viz data-id="def-group-example" data-width="700" data-height="500"}
:::

You can:
- **Drag** nodes to rearrange the layout
- **Zoom** in/out with your mouse wheel
- **Hover** over nodes to see details
- View the [full interactive version](../../output/interactive/def-group-example.html){target="_blank"}
