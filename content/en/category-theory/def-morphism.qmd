---
id: def-morphism
requires:
- def-category
status: complete
title: 'Definition: Morphism'
translations:
  en: ../en/category-theory/def-morphism.html
  ja: ../ja/category-theory/def-morphism.html
type: Definition
---

# Definition: Morphism

A **morphism** (also called an arrow) is a fundamental concept in [Category](def-category.qmd) theory representing a structure-preserving map between objects.

## Formal Definition

In a [Category](def-category.qmd) $\mathcal{C}$, a morphism $f: A \to B$ consists of:
- A **domain** (or source) object $A$
- A **codomain** (or target) object $B$
- An abstract "arrow" $f$ from $A$ to $B$

## Key Properties

For morphisms in a category, we have:

1. **Composition**: If $f: A \to B$ and $g: B \to C$, then there exists a composite morphism $g \circ f: A \to C$

2. **Identity**: For each object $A$, there exists an identity morphism $\text{id}_A: A \to A$

3. **Associativity**: $(h \circ g) \circ f = h \circ (g \circ f)$ whenever the compositions are defined

4. **Identity laws**: $f \circ \text{id}_A = f$ and $\text{id}_B \circ f = f$ for $f: A \to B$

## Notation

The collection of all morphisms from $A$ to $B$ in category $\mathcal{C}$ is denoted:
- $\text{Hom}_{\mathcal{C}}(A, B)$ or
- $\mathcal{C}(A, B)$ or
- $\text{Mor}_{\mathcal{C}}(A, B)$

## Types of Morphisms

Special types of morphisms include:
- **Monomorphism**: A categorical generalization of injective functions
- **Epimorphism**: A categorical generalization of surjective functions
- **Isomorphism**: A morphism with a two-sided inverse

```{mermaid}
```

## Dependency Graph

%%| fig-cap: "Local dependency graph"
graph TD
    classDef definition fill:#e1f5fe,stroke:#01579b,stroke-width:2px
    classDef theorem fill:#f3e5f5,stroke:#4a148c,stroke-width:2px
    classDef axiom fill:#fff3e0,stroke:#e65100,stroke-width:2px
    classDef example fill:#e8f5e9,stroke:#1b5e20,stroke-width:2px
    classDef current fill:#ffebee,stroke:#b71c1c,stroke-width:3px
    ex-set-category["Example: The Category of Sets"]:::example
    def-morphism["Definition: Morphism"]:::definition
    def-composition["Definition: Composition"]:::definition
    def-natural-transformation["Definition: Natural Transformation"]:::definition
    def-category["Definition: Category"]:::definition
    def-isomorphism["Definition: Isomorphism"]:::definition
    def-natural-transformation --> def-morphism
    ex-set-category --> def-morphism
    def-isomorphism --> def-morphism
    def-morphism --> def-category
    def-composition --> def-morphism
    class def-morphism current
```
    click ex-set-category "ex-set-category.html" "Go to The Category of Sets example"
    click def-composition "def-composition.html" "Go to Composition definition"
    click def-natural-transformation "def-natural-transformation.html" "Go to Natural Transformation definition"
    click def-category "def-category.html" "Go to Category definition"
    click def-isomorphism "def-isomorphism.html" "Go to Isomorphism definition"

## Interactive Visualization

Explore the local knowledge graph neighborhood interactively:

::: {.graph-viz data-id="def-morphism" data-width="700" data-height="500"}
:::

You can:
- **Drag** nodes to rearrange the layout
- **Zoom** in/out with your mouse wheel
- **Hover** over nodes to see details
- View the [full interactive version](../../output/interactive/def-morphism.html){target="_blank"}
