---
id: def-composition
requires:
- def-category
- def-morphism
status: complete
title: 'Definition: Composition'
translations:
  en: ../en/category-theory/def-composition.html
  ja: ../ja/category-theory/def-composition.html
type: Definition
---

**Composition** is the fundamental operation in a [Category](def-category.qmd) that combines two compatible [Morphisms](def-morphism.qmd) to produce a third morphism.

## Formal Definition

In a category $\mathcal{C}$, given morphisms:
- $f: A \to B$
- $g: B \to C$

Their **composition** is a morphism:
$$g \circ f: A \to C$$

The composition is defined whenever the codomain of $f$ equals the domain of $g$.

## Axioms

Composition must satisfy:

### 1. Associativity
For morphisms $f: A \to B$, $g: B \to C$, $h: C \to D$:
$$(h \circ g) \circ f = h \circ (g \circ f)$$

### 2. Identity Laws
For any morphism $f: A \to B$ and identity morphisms $\text{id}_A$, $\text{id}_B$:
- **Left identity**: $\text{id}_B \circ f = f$
- **Right identity**: $f \circ \text{id}_A = f$

## Notation

Various notations for composition:
- $g \circ f$ (standard, read "g after f")
- $gf$ (shortened form)
- $f;g$ (diagrammatic order, "f then g")
- $fg$ (sometimes used, but can be confusing)

## Examples

### Set Category
In **Set**, morphisms are functions:
- If $f: X \to Y$ and $g: Y \to Z$
- Then $(g \circ f)(x) = g(f(x))$ for all $x \in X$

### Linear Transformations
In the category of vector spaces:
- Morphisms are linear maps
- Composition is matrix multiplication (in finite dimensions)

### Group Homomorphisms
In **Grp** (category of groups):
- If $\phi: G \to H$ and $\psi: H \to K$ are homomorphisms
- $(\psi \circ \phi)(g) = \psi(\phi(g))$ is also a homomorphism

## Properties

1. **Non-commutativity**: Generally $g \circ f \neq f \circ g$
2. **Partial operation**: Not all pairs of morphisms can be composed
3. **Preservation of structure**: Composition preserves the categorical structure

## Commutative Diagrams

Composition is often visualized using commutative diagrams:
```
A ---f---> B
|          |
h          g
|          |
v          v
C ---k---> D
```
This diagram commutes if $k \circ h = g \circ f$

## Related Concepts

- [Isomorphism](def-isomorphism.qmd): Morphisms with two-sided inverses under composition
- Endomorphisms: Morphisms that can be composed with themselves
- Monoids: Single-object categories where all morphisms compose

## Dependency Graph

```{mermaid}
%%| fig-cap: "Local dependency graph"
graph TD
    classDef definition fill:#e1f5fe,stroke:#01579b,stroke-width:2px
    classDef theorem fill:#f3e5f5,stroke:#4a148c,stroke-width:2px
    classDef axiom fill:#fff3e0,stroke:#e65100,stroke-width:2px
    classDef example fill:#e8f5e9,stroke:#1b5e20,stroke-width:2px
    classDef current fill:#ffebee,stroke:#b71c1c,stroke-width:3px
    def-morphism["Definition: Morphism"]:::definition
    def-isomorphism["Definition: Isomorphism"]:::definition
    def-composition["Definition: Composition"]:::definition
    def-category["Definition: Category"]:::definition
    def-composition --> def-morphism
    def-isomorphism --> def-composition
    def-composition --> def-category
    class def-composition current
    click def-morphism "def-morphism.html" "Go to Morphism definition"
    click def-isomorphism "def-isomorphism.html" "Go to Isomorphism definition"
    click def-category "def-category.html" "Go to Category definition"
```

## Interactive Visualization

Explore the local knowledge graph neighborhood interactively:

::: {.graph-viz data-id="def-composition" data-width="700" data-height="500"}
:::

You can:
- **Drag** nodes to rearrange the layout
- **Zoom** in/out with your mouse wheel
- **Hover** over nodes to see details
- View the [full interactive version](../../output/interactive/def-composition.html){target="_blank"}
