---
id: def-isomorphism
requires:
- def-morphism
- def-composition
- def-category
- def-homeomorphism
status: complete
title: 'Definition: Isomorphism'
translations:
  en: ../en/category-theory/def-isomorphism.html
  ja: ../ja/category-theory/def-isomorphism.html
type: Definition
---

An **isomorphism** in a [Category](def-category.qmd) is a [Morphism](def-morphism.qmd) that has a two-sided inverse. Isomorphic objects are considered "the same" from the categorical perspective.

## Formal Definition

A morphism $f: A \to B$ in a category $\mathcal{C}$ is an **isomorphism** if there exists a morphism $g: B \to A$ such that:
1. $g \circ f = \text{id}_A$
2. $f \circ g = \text{id}_B$

The morphism $g$ is called the **inverse** of $f$, denoted $f^{-1}$.

## Properties

1. **Uniqueness of Inverse**: If $f$ has an inverse, it is unique
2. **Symmetry**: If $f: A \to B$ is an isomorphism, then $f^{-1}: B \to A$ is also an isomorphism
3. **Composition**: The [Composition](def-composition.qmd) of isomorphisms is an isomorphism:
   - If $f: A \to B$ and $g: B \to C$ are isomorphisms
   - Then $g \circ f: A \to C$ is an isomorphism with $(g \circ f)^{-1} = f^{-1} \circ g^{-1}$

## Isomorphic Objects

Objects $A$ and $B$ are **isomorphic**, written $A \cong B$, if there exists an isomorphism $f: A \to B$.

Isomorphism is an equivalence relation:
- **Reflexive**: $A \cong A$ via $\text{id}_A$
- **Symmetric**: $A \cong B$ implies $B \cong A$
- **Transitive**: $A \cong B$ and $B \cong C$ implies $A \cong C$

## Examples in Different Categories

### Set
- Isomorphisms are bijective functions
- Two sets are isomorphic iff they have the same cardinality

### Group
- Isomorphisms are bijective group homomorphisms
- Example: $(\mathbb{Z}, +) \cong (2\mathbb{Z}, +)$ via $n \mapsto 2n$

### Top (Topological Spaces)
- Isomorphisms are [homeomorphisms](../topology/def-homeomorphism.qmd) (continuous bijections with continuous inverse)
- Example: Open interval $(0,1)$ is homeomorphic to $\mathbb{R}$

### Vect (Vector Spaces)
- Isomorphisms are invertible linear transformations
- Finite-dimensional spaces are isomorphic iff they have the same dimension

## Special Types

### Automorphism
An isomorphism from an object to itself: $f: A \to A$

### Natural Isomorphism
An isomorphism in the functor category (see [Natural Transformation](def-natural-transformation.qmd))

## Categorical Perspective

- Isomorphism captures the idea of "sameness" in a category
- Category theory studies properties invariant under isomorphism
- The principle of equivalence: isomorphic objects are indistinguishable within the category

## Non-Examples

- In **Set**: Injective but non-surjective functions
- In **Group**: Non-bijective homomorphisms
- Continuous functions that aren't homeomorphisms

## Dependency Graph

```{mermaid}
%%| fig-cap: "Local dependency graph"
graph TD
    classDef definition fill:#e1f5fe,stroke:#01579b,stroke-width:2px
    classDef theorem fill:#f3e5f5,stroke:#4a148c,stroke-width:2px
    classDef axiom fill:#fff3e0,stroke:#e65100,stroke-width:2px
    classDef example fill:#e8f5e9,stroke:#1b5e20,stroke-width:2px
    classDef current fill:#ffebee,stroke:#b71c1c,stroke-width:3px
    def-category["Definition: Category"]:::definition
    def-composition["Definition: Composition"]:::definition
    def-morphism["Definition: Morphism"]:::definition
    def-homeomorphism["Definition: Homeomorphism"]:::definition
    def-isomorphism["Definition: Isomorphism"]:::definition
    def-isomorphism --> def-morphism
    def-homeomorphism --> def-isomorphism
    def-isomorphism --> def-homeomorphism
    def-isomorphism --> def-composition
    def-isomorphism --> def-category
    class def-isomorphism current
    click def-category "def-category.html" "Go to Category definition"
    click def-composition "def-composition.html" "Go to Composition definition"
    click def-morphism "def-morphism.html" "Go to Morphism definition"
    click def-homeomorphism "def-homeomorphism.html" "Go to Homeomorphism definition"
```

## Interactive Visualization

Explore the local knowledge graph neighborhood interactively:

::: {.graph-viz data-id="def-isomorphism" data-width="700" data-height="500"}
:::

You can:
- **Drag** nodes to rearrange the layout
- **Zoom** in/out with your mouse wheel
- **Hover** over nodes to see details
- View the [full interactive version](../../output/interactive/def-isomorphism.html){target="_blank"}
