{"title":"Knowledge Graph Search","markdown":{"yaml":{"title":"Knowledge Graph Search","format":{"html":{"code-fold":true,"code-tools":true}}},"headingText":"Mathematical Knowledge Graph Search","containsRefs":false,"markdown":"\n\n\nExplore our comprehensive mathematical knowledge base with enhanced search capabilities.\n\n## Search Features\n\n- **Full-text search**: Search across all mathematical content, not just titles\n- **Fuzzy matching**: Find results even with slight typos\n- **Auto-suggestions**: Get suggestions as you type\n- **Related content**: Discover dependencies and examples for each concept\n\n## Interactive Search\n\n<div id=\"search-container\" style=\"margin: 2em 0;\">\n  <div style=\"display: flex; gap: 1em; margin-bottom: 1em;\">\n    <input type=\"text\" id=\"search-input\" placeholder=\"Search for mathematical concepts...\" \n           style=\"flex: 1; padding: 0.5em; font-size: 1.1em; border: 1px solid #ccc; border-radius: 4px;\">\n    <button id=\"search-button\" onclick=\"performSearch()\" \n            style=\"padding: 0.5em 1.5em; background: #007bff; color: white; border: none; border-radius: 4px; cursor: pointer;\">\n      Search\n    </button>\n  </div>\n  <div id=\"suggestions\" style=\"display: none; border: 1px solid #ddd; border-radius: 4px; background: white; position: relative; z-index: 100;\"></div>\n</div>\n\n<div id=\"search-results\" style=\"margin-top: 2em;\"></div>\n\n<script>\nconst API_BASE = 'http://localhost:5001/api';\nlet searchTimeout = null;\n\n// Search input with debouncing\ndocument.getElementById('search-input').addEventListener('input', function(e) {\n  clearTimeout(searchTimeout);\n  const query = e.target.value.trim();\n  \n  if (query.length >= 2) {\n    searchTimeout = setTimeout(() => {\n      fetchSuggestions(query);\n    }, 300);\n  } else {\n    document.getElementById('suggestions').style.display = 'none';\n  }\n});\n\n// Enter key to search\ndocument.getElementById('search-input').addEventListener('keypress', function(e) {\n  if (e.key === 'Enter') {\n    performSearch();\n  }\n});\n\n// Fetch search suggestions\nasync function fetchSuggestions(query) {\n  try {\n    const response = await fetch(`${API_BASE}/search/suggest?q=${encodeURIComponent(query)}`);\n    const data = await response.json();\n    \n    const suggestionsDiv = document.getElementById('suggestions');\n    if (data.suggestions && data.suggestions.length > 0) {\n      suggestionsDiv.innerHTML = data.suggestions.map(s => \n        `<div style=\"padding: 0.5em; cursor: pointer; hover: background: #f0f0f0;\" \n              onclick=\"selectSuggestion('${s}')\">${s}</div>`\n      ).join('');\n      suggestionsDiv.style.display = 'block';\n    } else {\n      suggestionsDiv.style.display = 'none';\n    }\n  } catch (error) {\n    console.error('Failed to fetch suggestions:', error);\n  }\n}\n\n// Select a suggestion\nfunction selectSuggestion(suggestion) {\n  document.getElementById('search-input').value = suggestion;\n  document.getElementById('suggestions').style.display = 'none';\n  performSearch();\n}\n\n// Perform search\nasync function performSearch() {\n  const query = document.getElementById('search-input').value.trim();\n  if (!query) return;\n  \n  document.getElementById('suggestions').style.display = 'none';\n  const resultsDiv = document.getElementById('search-results');\n  resultsDiv.innerHTML = '<p>Searching...</p>';\n  \n  try {\n    const response = await fetch(`${API_BASE}/search?q=${encodeURIComponent(query)}&limit=20`);\n    const data = await response.json();\n    \n    if (data.results && data.results.length > 0) {\n      resultsDiv.innerHTML = `\n        <h3>Search Results (${data.count} found)</h3>\n        <div style=\"display: grid; gap: 1em;\">\n          ${data.results.map(result => createResultCard(result)).join('')}\n        </div>\n      `;\n    } else {\n      resultsDiv.innerHTML = '<p>No results found. Try different search terms.</p>';\n    }\n  } catch (error) {\n    console.error('Search failed:', error);\n    resultsDiv.innerHTML = '<p style=\"color: red;\">Search failed. Please check if the API is running.</p>';\n  }\n}\n\n// Create result card\nfunction createResultCard(result) {\n  const typeColor = {\n    'Definition': '#2196F3',\n    'Theorem': '#9C27B0',\n    'Example': '#4CAF50',\n    'Axiom': '#FF9800'\n  };\n  \n  const sources = result.sources ? result.sources.join(', ') : 'rdf';\n  const score = result.combined_score ? result.combined_score.toFixed(2) : result.score?.toFixed(2) || '';\n  \n  return `\n    <div style=\"border: 1px solid #ddd; border-radius: 8px; padding: 1em; background: #f9f9f9;\">\n      <div style=\"display: flex; justify-content: space-between; align-items: start;\">\n        <h4 style=\"margin: 0 0 0.5em 0;\">\n          <a href=\"content/${result.path || result.id + '.qmd'}\" target=\"_blank\">${result.title}</a>\n        </h4>\n        <span style=\"background: ${typeColor[result.type] || '#666'}; color: white; padding: 0.2em 0.5em; border-radius: 4px; font-size: 0.9em;\">\n          ${result.type}\n        </span>\n      </div>\n      ${result.description ? `<p style=\"margin: 0.5em 0; color: #555;\">${result.description}</p>` : ''}\n      <div style=\"display: flex; gap: 1em; font-size: 0.9em; color: #666;\">\n        ${result.domain ? `<span>Domain: ${result.domain}</span>` : ''}\n        <span>Source: ${sources}</span>\n        ${score ? `<span>Score: ${score}</span>` : ''}\n      </div>\n      <button onclick=\"loadRelated('${result.id}')\" style=\"margin-top: 0.5em; padding: 0.3em 1em; background: #f0f0f0; border: 1px solid #ddd; border-radius: 4px; cursor: pointer;\">\n        Show Related\n      </button>\n      <div id=\"related-${result.id}\" style=\"margin-top: 1em; display: none;\"></div>\n    </div>\n  `;\n}\n\n// Load related nodes\nasync function loadRelated(nodeId) {\n  const relatedDiv = document.getElementById(`related-${nodeId}`);\n  \n  if (relatedDiv.style.display === 'block') {\n    relatedDiv.style.display = 'none';\n    return;\n  }\n  \n  relatedDiv.innerHTML = '<p>Loading related content...</p>';\n  relatedDiv.style.display = 'block';\n  \n  try {\n    const response = await fetch(`${API_BASE}/nodes/${nodeId}/related`);\n    const data = await response.json();\n    \n    let html = '<div style=\"display: grid; gap: 1em;\">';\n    \n    if (data.related.dependencies.length > 0) {\n      html += '<div><strong>Dependencies:</strong> ' + \n              data.related.dependencies.map(d => \n                `<a href=\"content/${d.id}.qmd\" target=\"_blank\">${d.title}</a>`\n              ).join(', ') + '</div>';\n    }\n    \n    if (data.related.dependents.length > 0) {\n      html += '<div><strong>Used by:</strong> ' + \n              data.related.dependents.map(d => \n                `<a href=\"content/${d.id}.qmd\" target=\"_blank\">${d.title}</a>`\n              ).join(', ') + '</div>';\n    }\n    \n    if (data.related.examples.length > 0) {\n      html += '<div><strong>Examples:</strong> ' + \n              data.related.examples.map(e => \n                `<a href=\"content/${e.id}.qmd\" target=\"_blank\">${e.title}</a>`\n              ).join(', ') + '</div>';\n    }\n    \n    html += '</div>';\n    relatedDiv.innerHTML = html;\n    \n  } catch (error) {\n    console.error('Failed to load related nodes:', error);\n    relatedDiv.innerHTML = '<p style=\"color: red;\">Failed to load related content.</p>';\n  }\n}\n</script>\n\n## Example Searches\n\nTry these example searches to explore the knowledge graph:\n\n- **\"group\"** - Find all content related to groups in algebra\n- **\"continuous\"** - Discover concepts related to continuity\n- **\"theorem\"** - Browse all theorems in the knowledge base\n- **\"associativity\"** - Search for content mentioning associativity\n- **\"topology\"** - Explore topological concepts\n\n## Search Tips\n\n1. **Use keywords**: Search for specific mathematical terms like \"homomorphism\", \"compact\", or \"prime\"\n2. **Search by type**: Look for specific types of content (definitions, theorems, examples)\n3. **Explore domains**: Search for areas like \"algebra\", \"topology\", or \"analysis\"\n4. **Follow connections**: Use the \"Show Related\" button to discover dependencies and examples","srcMarkdownNoYaml":"\n\n# Mathematical Knowledge Graph Search\n\nExplore our comprehensive mathematical knowledge base with enhanced search capabilities.\n\n## Search Features\n\n- **Full-text search**: Search across all mathematical content, not just titles\n- **Fuzzy matching**: Find results even with slight typos\n- **Auto-suggestions**: Get suggestions as you type\n- **Related content**: Discover dependencies and examples for each concept\n\n## Interactive Search\n\n<div id=\"search-container\" style=\"margin: 2em 0;\">\n  <div style=\"display: flex; gap: 1em; margin-bottom: 1em;\">\n    <input type=\"text\" id=\"search-input\" placeholder=\"Search for mathematical concepts...\" \n           style=\"flex: 1; padding: 0.5em; font-size: 1.1em; border: 1px solid #ccc; border-radius: 4px;\">\n    <button id=\"search-button\" onclick=\"performSearch()\" \n            style=\"padding: 0.5em 1.5em; background: #007bff; color: white; border: none; border-radius: 4px; cursor: pointer;\">\n      Search\n    </button>\n  </div>\n  <div id=\"suggestions\" style=\"display: none; border: 1px solid #ddd; border-radius: 4px; background: white; position: relative; z-index: 100;\"></div>\n</div>\n\n<div id=\"search-results\" style=\"margin-top: 2em;\"></div>\n\n<script>\nconst API_BASE = 'http://localhost:5001/api';\nlet searchTimeout = null;\n\n// Search input with debouncing\ndocument.getElementById('search-input').addEventListener('input', function(e) {\n  clearTimeout(searchTimeout);\n  const query = e.target.value.trim();\n  \n  if (query.length >= 2) {\n    searchTimeout = setTimeout(() => {\n      fetchSuggestions(query);\n    }, 300);\n  } else {\n    document.getElementById('suggestions').style.display = 'none';\n  }\n});\n\n// Enter key to search\ndocument.getElementById('search-input').addEventListener('keypress', function(e) {\n  if (e.key === 'Enter') {\n    performSearch();\n  }\n});\n\n// Fetch search suggestions\nasync function fetchSuggestions(query) {\n  try {\n    const response = await fetch(`${API_BASE}/search/suggest?q=${encodeURIComponent(query)}`);\n    const data = await response.json();\n    \n    const suggestionsDiv = document.getElementById('suggestions');\n    if (data.suggestions && data.suggestions.length > 0) {\n      suggestionsDiv.innerHTML = data.suggestions.map(s => \n        `<div style=\"padding: 0.5em; cursor: pointer; hover: background: #f0f0f0;\" \n              onclick=\"selectSuggestion('${s}')\">${s}</div>`\n      ).join('');\n      suggestionsDiv.style.display = 'block';\n    } else {\n      suggestionsDiv.style.display = 'none';\n    }\n  } catch (error) {\n    console.error('Failed to fetch suggestions:', error);\n  }\n}\n\n// Select a suggestion\nfunction selectSuggestion(suggestion) {\n  document.getElementById('search-input').value = suggestion;\n  document.getElementById('suggestions').style.display = 'none';\n  performSearch();\n}\n\n// Perform search\nasync function performSearch() {\n  const query = document.getElementById('search-input').value.trim();\n  if (!query) return;\n  \n  document.getElementById('suggestions').style.display = 'none';\n  const resultsDiv = document.getElementById('search-results');\n  resultsDiv.innerHTML = '<p>Searching...</p>';\n  \n  try {\n    const response = await fetch(`${API_BASE}/search?q=${encodeURIComponent(query)}&limit=20`);\n    const data = await response.json();\n    \n    if (data.results && data.results.length > 0) {\n      resultsDiv.innerHTML = `\n        <h3>Search Results (${data.count} found)</h3>\n        <div style=\"display: grid; gap: 1em;\">\n          ${data.results.map(result => createResultCard(result)).join('')}\n        </div>\n      `;\n    } else {\n      resultsDiv.innerHTML = '<p>No results found. Try different search terms.</p>';\n    }\n  } catch (error) {\n    console.error('Search failed:', error);\n    resultsDiv.innerHTML = '<p style=\"color: red;\">Search failed. Please check if the API is running.</p>';\n  }\n}\n\n// Create result card\nfunction createResultCard(result) {\n  const typeColor = {\n    'Definition': '#2196F3',\n    'Theorem': '#9C27B0',\n    'Example': '#4CAF50',\n    'Axiom': '#FF9800'\n  };\n  \n  const sources = result.sources ? result.sources.join(', ') : 'rdf';\n  const score = result.combined_score ? result.combined_score.toFixed(2) : result.score?.toFixed(2) || '';\n  \n  return `\n    <div style=\"border: 1px solid #ddd; border-radius: 8px; padding: 1em; background: #f9f9f9;\">\n      <div style=\"display: flex; justify-content: space-between; align-items: start;\">\n        <h4 style=\"margin: 0 0 0.5em 0;\">\n          <a href=\"content/${result.path || result.id + '.qmd'}\" target=\"_blank\">${result.title}</a>\n        </h4>\n        <span style=\"background: ${typeColor[result.type] || '#666'}; color: white; padding: 0.2em 0.5em; border-radius: 4px; font-size: 0.9em;\">\n          ${result.type}\n        </span>\n      </div>\n      ${result.description ? `<p style=\"margin: 0.5em 0; color: #555;\">${result.description}</p>` : ''}\n      <div style=\"display: flex; gap: 1em; font-size: 0.9em; color: #666;\">\n        ${result.domain ? `<span>Domain: ${result.domain}</span>` : ''}\n        <span>Source: ${sources}</span>\n        ${score ? `<span>Score: ${score}</span>` : ''}\n      </div>\n      <button onclick=\"loadRelated('${result.id}')\" style=\"margin-top: 0.5em; padding: 0.3em 1em; background: #f0f0f0; border: 1px solid #ddd; border-radius: 4px; cursor: pointer;\">\n        Show Related\n      </button>\n      <div id=\"related-${result.id}\" style=\"margin-top: 1em; display: none;\"></div>\n    </div>\n  `;\n}\n\n// Load related nodes\nasync function loadRelated(nodeId) {\n  const relatedDiv = document.getElementById(`related-${nodeId}`);\n  \n  if (relatedDiv.style.display === 'block') {\n    relatedDiv.style.display = 'none';\n    return;\n  }\n  \n  relatedDiv.innerHTML = '<p>Loading related content...</p>';\n  relatedDiv.style.display = 'block';\n  \n  try {\n    const response = await fetch(`${API_BASE}/nodes/${nodeId}/related`);\n    const data = await response.json();\n    \n    let html = '<div style=\"display: grid; gap: 1em;\">';\n    \n    if (data.related.dependencies.length > 0) {\n      html += '<div><strong>Dependencies:</strong> ' + \n              data.related.dependencies.map(d => \n                `<a href=\"content/${d.id}.qmd\" target=\"_blank\">${d.title}</a>`\n              ).join(', ') + '</div>';\n    }\n    \n    if (data.related.dependents.length > 0) {\n      html += '<div><strong>Used by:</strong> ' + \n              data.related.dependents.map(d => \n                `<a href=\"content/${d.id}.qmd\" target=\"_blank\">${d.title}</a>`\n              ).join(', ') + '</div>';\n    }\n    \n    if (data.related.examples.length > 0) {\n      html += '<div><strong>Examples:</strong> ' + \n              data.related.examples.map(e => \n                `<a href=\"content/${e.id}.qmd\" target=\"_blank\">${e.title}</a>`\n              ).join(', ') + '</div>';\n    }\n    \n    html += '</div>';\n    relatedDiv.innerHTML = html;\n    \n  } catch (error) {\n    console.error('Failed to load related nodes:', error);\n    relatedDiv.innerHTML = '<p style=\"color: red;\">Failed to load related content.</p>';\n  }\n}\n</script>\n\n## Example Searches\n\nTry these example searches to explore the knowledge graph:\n\n- **\"group\"** - Find all content related to groups in algebra\n- **\"continuous\"** - Discover concepts related to continuity\n- **\"theorem\"** - Browse all theorems in the knowledge base\n- **\"associativity\"** - Search for content mentioning associativity\n- **\"topology\"** - Explore topological concepts\n\n## Search Tips\n\n1. **Use keywords**: Search for specific mathematical terms like \"homomorphism\", \"compact\", or \"prime\"\n2. **Search by type**: Look for specific types of content (definitions, theorems, examples)\n3. **Explore domains**: Search for areas like \"algebra\", \"topology\", or \"analysis\"\n4. **Follow connections**: Use the \"Show Related\" button to discover dependencies and examples"},"formats":{"html":{"identifier":{"display-name":"HTML","target-format":"html","base-format":"html"},"execute":{"fig-width":7,"fig-height":5,"fig-format":"retina","fig-dpi":96,"df-print":"default","error":false,"eval":true,"cache":null,"freeze":"auto","echo":true,"output":true,"warning":true,"include":true,"keep-md":false,"keep-ipynb":false,"ipynb":null,"enabled":null,"daemon":null,"daemon-restart":false,"debug":false,"ipynb-filters":[],"ipynb-shell-interactivity":null,"plotly-connected":true,"engine":"markdown"},"render":{"keep-tex":false,"keep-typ":false,"keep-source":false,"keep-hidden":false,"prefer-html":false,"output-divs":true,"output-ext":"html","fig-align":"default","fig-pos":null,"fig-env":null,"code-fold":true,"code-overflow":"wrap","code-link":false,"code-line-numbers":false,"code-tools":true,"tbl-colwidths":"auto","merge-includes":true,"inline-includes":false,"preserve-yaml":false,"latex-auto-mk":true,"latex-auto-install":true,"latex-clean":true,"latex-min-runs":1,"latex-max-runs":10,"latex-makeindex":"makeindex","latex-makeindex-opts":[],"latex-tlmgr-opts":[],"latex-input-paths":[],"latex-output-dir":null,"link-external-icon":false,"link-external-newwindow":false,"self-contained-math":false,"format-resources":[],"notebook-links":true},"pandoc":{"standalone":true,"wrap":"none","default-image-extension":"png","to":"html","filters":["graph-viz"],"css":["styles.css"],"toc":true,"toc-depth":3,"html-math-method":"mathjax","output-file":"search.html"},"language":{"toc-title-document":"Table of contents","toc-title-website":"On this page","related-formats-title":"Other Formats","related-notebooks-title":"Notebooks","source-notebooks-prefix":"Source","other-links-title":"Other Links","code-links-title":"Code Links","launch-dev-container-title":"Launch Dev Container","launch-binder-title":"Launch Binder","article-notebook-label":"Article Notebook","notebook-preview-download":"Download Notebook","notebook-preview-download-src":"Download Source","notebook-preview-back":"Back to Article","manuscript-meca-bundle":"MECA Bundle","section-title-abstract":"Abstract","section-title-appendices":"Appendices","section-title-footnotes":"Footnotes","section-title-references":"References","section-title-reuse":"Reuse","section-title-copyright":"Copyright","section-title-citation":"Citation","appendix-attribution-cite-as":"For attribution, please cite this work as:","appendix-attribution-bibtex":"BibTeX citation:","appendix-view-license":"View License","title-block-author-single":"Author","title-block-author-plural":"Authors","title-block-affiliation-single":"Affiliation","title-block-affiliation-plural":"Affiliations","title-block-published":"Published","title-block-modified":"Modified","title-block-keywords":"Keywords","callout-tip-title":"Tip","callout-note-title":"Note","callout-warning-title":"Warning","callout-important-title":"Important","callout-caution-title":"Caution","code-summary":"Code","code-tools-menu-caption":"Code","code-tools-show-all-code":"Show All Code","code-tools-hide-all-code":"Hide All Code","code-tools-view-source":"View Source","code-tools-source-code":"Source Code","tools-share":"Share","tools-download":"Download","code-line":"Line","code-lines":"Lines","copy-button-tooltip":"Copy to Clipboard","copy-button-tooltip-success":"Copied!","repo-action-links-edit":"Edit this page","repo-action-links-source":"View source","repo-action-links-issue":"Report an issue","back-to-top":"Back to top","search-no-results-text":"No results","search-matching-documents-text":"matching documents","search-copy-link-title":"Copy link to search","search-hide-matches-text":"Hide additional matches","search-more-match-text":"more match in this document","search-more-matches-text":"more matches in this document","search-clear-button-title":"Clear","search-text-placeholder":"","search-detached-cancel-button-title":"Cancel","search-submit-button-title":"Submit","search-label":"Search","toggle-section":"Toggle section","toggle-sidebar":"Toggle sidebar navigation","toggle-dark-mode":"Toggle dark mode","toggle-reader-mode":"Toggle reader mode","toggle-navigation":"Toggle navigation","crossref-fig-title":"Figure","crossref-tbl-title":"Table","crossref-lst-title":"Listing","crossref-thm-title":"Theorem","crossref-lem-title":"Lemma","crossref-cor-title":"Corollary","crossref-prp-title":"Proposition","crossref-cnj-title":"Conjecture","crossref-def-title":"Definition","crossref-exm-title":"Example","crossref-exr-title":"Exercise","crossref-ch-prefix":"Chapter","crossref-apx-prefix":"Appendix","crossref-sec-prefix":"Section","crossref-eq-prefix":"Equation","crossref-lof-title":"List of Figures","crossref-lot-title":"List of Tables","crossref-lol-title":"List of Listings","environment-proof-title":"Proof","environment-remark-title":"Remark","environment-solution-title":"Solution","listing-page-order-by":"Order By","listing-page-order-by-default":"Default","listing-page-order-by-date-asc":"Oldest","listing-page-order-by-date-desc":"Newest","listing-page-order-by-number-desc":"High to Low","listing-page-order-by-number-asc":"Low to High","listing-page-field-date":"Date","listing-page-field-title":"Title","listing-page-field-description":"Description","listing-page-field-author":"Author","listing-page-field-filename":"File Name","listing-page-field-filemodified":"Modified","listing-page-field-subtitle":"Subtitle","listing-page-field-readingtime":"Reading Time","listing-page-field-wordcount":"Word Count","listing-page-field-categories":"Categories","listing-page-minutes-compact":"{0} min","listing-page-category-all":"All","listing-page-no-matches":"No matching items","listing-page-words":"{0} words","listing-page-filter":"Filter","draft":"Draft"},"metadata":{"lang":"en","fig-responsive":true,"quarto-version":"1.7.32","bibliography":["references.bib"],"resources":["knowledge_graph.ttl",".nojekyll","output/interactive","output/d3-data"],"theme":"cosmo","toc-location":"right","code-copy":true,"title":"Knowledge Graph Search"},"extensions":{"book":{"multiFile":true}}}},"projectFormats":["html"]}