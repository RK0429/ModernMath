::: {.graph-visualization}

```{ojs}
//| echo: false

// Import D3.js library
d3 = require("d3@7")

// Import our custom graph visualization module
graphViz = FileAttachment("/assets/js/graph-viz.js").text().then(eval)

// Function to load graph data for a specific node
async function loadGraphData(nodeId) {
  try {
    const response = await fetch(`/output/d3-data/${nodeId}.json`);
    if (!response.ok) {
      throw new Error(`Failed to load data for ${nodeId}`);
    }
    return await response.json();
  } catch (error) {
    console.error("Error loading graph data:", error);
    return null;
  }
}

// Get the node ID from the page metadata or a parameter
nodeId = {
  // This will be replaced by the actual node ID when included
  const pageNodeId = '{{node_id}}';
  return pageNodeId;
}

// Load and display the graph
graphData = loadGraphData(nodeId)

// Create the visualization if data is loaded successfully
{
  if (graphData) {
    const container = html`<div class="d3-graph-container"></div>`;
    
    // Create the force-directed graph
    const graph = graphViz.createForceGraph(graphData, {
      width: 700,
      height: 500,
      nodeRadius: 10,
      linkDistance: 120,
      chargeStrength: -400
    });
    
    // Add the graph to the container
    container.appendChild(graph);
    
    // Add statistics display
    const stats = graphViz.createStatsDisplay(graphData);
    container.appendChild(stats);
    
    // Display the container
    return container;
  } else {
    return html`<div class="alert alert-warning">Unable to load graph visualization for ${nodeId}</div>`;
  }
}
```

```{ojs}
//| echo: false
//| output: false

// Add custom CSS for the visualization
html`<style>
.graph-visualization {
  margin: 2em 0;
  padding: 1em;
  background: #f8f9fa;
  border-radius: 8px;
  box-shadow: 0 2px 4px rgba(0,0,0,0.1);
}

.d3-graph-container {
  display: flex;
  flex-direction: column;
  align-items: center;
  gap: 1em;
}

.d3-graph-container svg {
  border: 1px solid #ddd;
  border-radius: 4px;
  background: white;
}

.graph-stats {
  width: 100%;
  max-width: 700px;
}

.alert {
  padding: 12px 20px;
  border-radius: 4px;
  margin: 1em 0;
}

.alert-warning {
  background-color: #fff3cd;
  border: 1px solid #ffeaa7;
  color: #856404;
}
</style>`
```

:::