{
  "modules": {
    "MathKnowledgeGraph": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/MathKnowledgeGraph.lean"
    },
    "Main": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/Main.lean"
    },
    "MathKnowledgeGraph.Basic": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/MathKnowledgeGraph/Basic.lean"
    },
    "MathKnowledgeGraph.Topology.Basic": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": "def-connected",
      "file_path": "formal/MathKnowledgeGraph/Topology/Basic.lean"
    },
    "MathKnowledgeGraph.Analysis.Limits": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/MathKnowledgeGraph/Analysis/Limits.lean"
    },
    "MathKnowledgeGraph.NumberTheory.Primes": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/MathKnowledgeGraph/NumberTheory/Primes.lean"
    },
    "MathKnowledgeGraph.Logic.Sets": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/MathKnowledgeGraph/Logic/Sets.lean"
    },
    "MathKnowledgeGraph.Algebra.Rings": {
      "status": "warnings_present",
      "errors": [],
      "warnings": [
        {
          "file": "MathKnowledgeGraph/Algebra/Rings",
          "line": "170",
          "column": "8",
          "message": "declaration uses 'sorry'"
        }
      ],
      "has_sorry": true,
      "node_id": "def-field",
      "file_path": "formal/MathKnowledgeGraph/Algebra/Rings.lean"
    },
    "MathKnowledgeGraph.Algebra.Groups": {
      "status": "warnings_present",
      "errors": [],
      "warnings": [
        {
          "file": "MathKnowledgeGraph/Algebra/Groups",
          "line": "95",
          "column": "8",
          "message": "declaration uses 'sorry'"
        }
      ],
      "has_sorry": true,
      "node_id": "def-subgroup",
      "file_path": "formal/MathKnowledgeGraph/Algebra/Groups.lean"
    },
    "MathKnowledgeGraph.Algebra.VectorSpaces": {
      "status": "warnings_present",
      "errors": [],
      "warnings": [
        {
          "file": "MathKnowledgeGraph/Algebra/VectorSpaces",
          "line": "259",
          "column": "8",
          "message": "declaration uses 'sorry'"
        }
      ],
      "has_sorry": true,
      "node_id": "def-image",
      "file_path": "formal/MathKnowledgeGraph/Algebra/VectorSpaces.lean"
    },
    ".lake.packages.mathlib.Mathlib": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib.lean"
    },
    ".lake.packages.mathlib.Archive": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Archive.lean"
    },
    ".lake.packages.mathlib.docs": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/docs.lean"
    },
    ".lake.packages.mathlib.Counterexamples": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Counterexamples.lean"
    },
    ".lake.packages.mathlib.LongestPole.Unused": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/LongestPole/Unused.lean"
    },
    ".lake.packages.mathlib.LongestPole.Rectangles": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/LongestPole/Rectangles.lean"
    },
    ".lake.packages.mathlib.LongestPole.SpeedCenterJson": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/LongestPole/SpeedCenterJson.lean"
    },
    ".lake.packages.mathlib.LongestPole.Main": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/LongestPole/Main.lean"
    },
    ".lake.packages.mathlib.Mathlib.Init": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Init.lean"
    },
    ".lake.packages.mathlib.Mathlib.Tactic": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Tactic.lean"
    },
    ".lake.packages.mathlib.Mathlib.Tactic.ToAdditive": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Tactic/ToAdditive.lean"
    },
    ".lake.packages.mathlib.Mathlib.Tactic.Algebraize": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Tactic/Algebraize.lean"
    },
    ".lake.packages.mathlib.Mathlib.Tactic.Check": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Tactic/Check.lean"
    },
    ".lake.packages.mathlib.Mathlib.Tactic.Generalize": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Tactic/Generalize.lean"
    },
    ".lake.packages.mathlib.Mathlib.Tactic.WithoutCDot": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Tactic/WithoutCDot.lean"
    },
    ".lake.packages.mathlib.Mathlib.Tactic.ExtractGoal": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Tactic/ExtractGoal.lean"
    },
    ".lake.packages.mathlib.Mathlib.Tactic.SuccessIfFailWithMsg": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Tactic/SuccessIfFailWithMsg.lean"
    },
    ".lake.packages.mathlib.Mathlib.Tactic.Clear_": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Tactic/Clear_.lean"
    },
    ".lake.packages.mathlib.Mathlib.Tactic.Observe": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Tactic/Observe.lean"
    },
    ".lake.packages.mathlib.Mathlib.Tactic.Replace": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Tactic/Replace.lean"
    },
    ".lake.packages.mathlib.Mathlib.Tactic.FindSyntax": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Tactic/FindSyntax.lean"
    },
    ".lake.packages.mathlib.Mathlib.Tactic.ContinuousFunctionalCalculus": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Tactic/ContinuousFunctionalCalculus.lean"
    },
    ".lake.packages.mathlib.Mathlib.Tactic.Core": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Tactic/Core.lean"
    },
    ".lake.packages.mathlib.Mathlib.Tactic.GuardGoalNums": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Tactic/GuardGoalNums.lean"
    },
    ".lake.packages.mathlib.Mathlib.Tactic.ToLevel": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Tactic/ToLevel.lean"
    },
    ".lake.packages.mathlib.Mathlib.Tactic.DeprecateTo": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Tactic/DeprecateTo.lean"
    },
    ".lake.packages.mathlib.Mathlib.Tactic.CongrM": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Tactic/CongrM.lean"
    },
    ".lake.packages.mathlib.Mathlib.Tactic.Cases": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Tactic/Cases.lean"
    },
    ".lake.packages.mathlib.Mathlib.Tactic.GuardHypNums": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Tactic/GuardHypNums.lean"
    },
    ".lake.packages.mathlib.Mathlib.Tactic.Explode": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Tactic/Explode.lean"
    },
    ".lake.packages.mathlib.Mathlib.Tactic.NormNum": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Tactic/NormNum.lean"
    },
    ".lake.packages.mathlib.Mathlib.Tactic.HaveI": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Tactic/HaveI.lean"
    },
    ".lake.packages.mathlib.Mathlib.Tactic.ENatToNat": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Tactic/ENatToNat.lean"
    },
    ".lake.packages.mathlib.Mathlib.Tactic.ApplyWith": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Tactic/ApplyWith.lean"
    },
    ".lake.packages.mathlib.Mathlib.Tactic.Measurability": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Tactic/Measurability.lean"
    },
    ".lake.packages.mathlib.Mathlib.Tactic.Module": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Tactic/Module.lean"
    },
    ".lake.packages.mathlib.Mathlib.Tactic.Ring": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Tactic/Ring.lean"
    },
    ".lake.packages.mathlib.Mathlib.Tactic.DefEqTransformations": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Tactic/DefEqTransformations.lean"
    },
    ".lake.packages.mathlib.Mathlib.Tactic.ErwQuestion": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Tactic/ErwQuestion.lean"
    },
    ".lake.packages.mathlib.Mathlib.Tactic.Conv": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Tactic/Conv.lean"
    },
    ".lake.packages.mathlib.Mathlib.Tactic.Constructor": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Tactic/Constructor.lean"
    },
    ".lake.packages.mathlib.Mathlib.Tactic.ByContra": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Tactic/ByContra.lean"
    },
    ".lake.packages.mathlib.Mathlib.Tactic.Group": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Tactic/Group.lean"
    },
    ".lake.packages.mathlib.Mathlib.Tactic.SplitIfs": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Tactic/SplitIfs.lean"
    },
    ".lake.packages.mathlib.Mathlib.Tactic.IntervalCases": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Tactic/IntervalCases.lean"
    },
    ".lake.packages.mathlib.Mathlib.Tactic.SwapVar": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Tactic/SwapVar.lean"
    },
    ".lake.packages.mathlib.Mathlib.Tactic.TypeCheck": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Tactic/TypeCheck.lean"
    },
    ".lake.packages.mathlib.Mathlib.Tactic.PNatToNat": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Tactic/PNatToNat.lean"
    },
    ".lake.packages.mathlib.Mathlib.Tactic.RSuffices": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Tactic/RSuffices.lean"
    },
    ".lake.packages.mathlib.Mathlib.Tactic.FBinop": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Tactic/FBinop.lean"
    },
    ".lake.packages.mathlib.Mathlib.Tactic.Recover": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Tactic/Recover.lean"
    },
    ".lake.packages.mathlib.Mathlib.Tactic.TFAE": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Tactic/TFAE.lean"
    },
    ".lake.packages.mathlib.Mathlib.Tactic.Rename": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Tactic/Rename.lean"
    },
    ".lake.packages.mathlib.Mathlib.Tactic.Propose": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Tactic/Propose.lean"
    },
    ".lake.packages.mathlib.Mathlib.Tactic.MkIffOfInductiveProp": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Tactic/MkIffOfInductiveProp.lean"
    },
    ".lake.packages.mathlib.Mathlib.Tactic.FailIfNoProgress": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Tactic/FailIfNoProgress.lean"
    },
    ".lake.packages.mathlib.Mathlib.Tactic.ArithMult": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Tactic/ArithMult.lean"
    },
    ".lake.packages.mathlib.Mathlib.Tactic.FastInstance": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Tactic/FastInstance.lean"
    },
    ".lake.packages.mathlib.Mathlib.Tactic.Eval": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Tactic/Eval.lean"
    },
    ".lake.packages.mathlib.Mathlib.Tactic.HigherOrder": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Tactic/HigherOrder.lean"
    },
    ".lake.packages.mathlib.Mathlib.Tactic.IrreducibleDef": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Tactic/IrreducibleDef.lean"
    },
    ".lake.packages.mathlib.Mathlib.Tactic.Change": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Tactic/Change.lean"
    },
    ".lake.packages.mathlib.Mathlib.Tactic.ScopedNS": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Tactic/ScopedNS.lean"
    },
    ".lake.packages.mathlib.Mathlib.Tactic.Have": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Tactic/Have.lean"
    },
    ".lake.packages.mathlib.Mathlib.Tactic.OfNat": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Tactic/OfNat.lean"
    },
    ".lake.packages.mathlib.Mathlib.Tactic.Order": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Tactic/Order.lean"
    },
    ".lake.packages.mathlib.Mathlib.Tactic.Monotonicity": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Tactic/Monotonicity.lean"
    },
    ".lake.packages.mathlib.Mathlib.Tactic.WLOG": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Tactic/WLOG.lean"
    },
    ".lake.packages.mathlib.Mathlib.Tactic.PPWithUniv": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Tactic/PPWithUniv.lean"
    },
    ".lake.packages.mathlib.Mathlib.Tactic.Eqns": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Tactic/Eqns.lean"
    },
    ".lake.packages.mathlib.Mathlib.Tactic.Inhabit": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Tactic/Inhabit.lean"
    },
    ".lake.packages.mathlib.Mathlib.Tactic.ToExpr": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Tactic/ToExpr.lean"
    },
    ".lake.packages.mathlib.Mathlib.Tactic.Basic": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Tactic/Basic.lean"
    },
    ".lake.packages.mathlib.Mathlib.Tactic.ClearExcept": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Tactic/ClearExcept.lean"
    },
    ".lake.packages.mathlib.Mathlib.Tactic.Recall": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Tactic/Recall.lean"
    },
    ".lake.packages.mathlib.Mathlib.Tactic.ExistsI": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Tactic/ExistsI.lean"
    },
    ".lake.packages.mathlib.Mathlib.Tactic.NoncommRing": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Tactic/NoncommRing.lean"
    },
    ".lake.packages.mathlib.Mathlib.Tactic.Clean": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Tactic/Clean.lean"
    },
    ".lake.packages.mathlib.Mathlib.Tactic.ApplyCongr": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Tactic/ApplyCongr.lean"
    },
    ".lake.packages.mathlib.Mathlib.Tactic.DeriveTraversable": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Tactic/DeriveTraversable.lean"
    },
    ".lake.packages.mathlib.Mathlib.Tactic.ApplyAt": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Tactic/ApplyAt.lean"
    },
    ".lake.packages.mathlib.Mathlib.Tactic.Polyrith": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Tactic/Polyrith.lean"
    },
    ".lake.packages.mathlib.Mathlib.Tactic.Rify": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Tactic/Rify.lean"
    },
    ".lake.packages.mathlib.Mathlib.Tactic.Tauto": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Tactic/Tauto.lean"
    },
    ".lake.packages.mathlib.Mathlib.Tactic.LiftLets": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Tactic/LiftLets.lean"
    },
    ".lake.packages.mathlib.Mathlib.Tactic.ITauto": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Tactic/ITauto.lean"
    },
    ".lake.packages.mathlib.Mathlib.Tactic.ProxyType": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Tactic/ProxyType.lean"
    },
    ".lake.packages.mathlib.Mathlib.Tactic.ApplyFun": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Tactic/ApplyFun.lean"
    },
    ".lake.packages.mathlib.Mathlib.Tactic.FunProp": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Tactic/FunProp.lean"
    },
    ".lake.packages.mathlib.Mathlib.Tactic.SimpRw": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Tactic/SimpRw.lean"
    },
    ".lake.packages.mathlib.Mathlib.Tactic.InferParam": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Tactic/InferParam.lean"
    },
    ".lake.packages.mathlib.Mathlib.Tactic.Continuity": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Tactic/Continuity.lean"
    },
    ".lake.packages.mathlib.Mathlib.Tactic.ExtractLets": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Tactic/ExtractLets.lean"
    },
    ".lake.packages.mathlib.Mathlib.Tactic.CongrExclamation": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Tactic/CongrExclamation.lean"
    },
    ".lake.packages.mathlib.Mathlib.Tactic.GeneralizeProofs": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Tactic/GeneralizeProofs.lean"
    },
    ".lake.packages.mathlib.Mathlib.Tactic.Set": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Tactic/Set.lean"
    },
    ".lake.packages.mathlib.Mathlib.Tactic.Spread": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Tactic/Spread.lean"
    },
    ".lake.packages.mathlib.Mathlib.Tactic.RewriteSearch": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Tactic/RewriteSearch.lean"
    },
    ".lake.packages.mathlib.Mathlib.Tactic.CasesM": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Tactic/CasesM.lean"
    },
    ".lake.packages.mathlib.Mathlib.Tactic.Trace": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Tactic/Trace.lean"
    },
    ".lake.packages.mathlib.Mathlib.Tactic.GRewrite": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Tactic/GRewrite.lean"
    },
    ".lake.packages.mathlib.Mathlib.Tactic.Linter": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Tactic/Linter.lean"
    },
    ".lake.packages.mathlib.Mathlib.Tactic.Convert": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Tactic/Convert.lean"
    },
    ".lake.packages.mathlib.Mathlib.Tactic.Peel": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Tactic/Peel.lean"
    },
    ".lake.packages.mathlib.Mathlib.Tactic.RenameBVar": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Tactic/RenameBVar.lean"
    },
    ".lake.packages.mathlib.Mathlib.Tactic.Zify": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Tactic/Zify.lean"
    },
    ".lake.packages.mathlib.Mathlib.Tactic.TautoSet": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Tactic/TautoSet.lean"
    },
    ".lake.packages.mathlib.Mathlib.Tactic.Says": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Tactic/Says.lean"
    },
    ".lake.packages.mathlib.Mathlib.Tactic.Nontriviality": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Tactic/Nontriviality.lean"
    },
    ".lake.packages.mathlib.Mathlib.Tactic.GCongr": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Tactic/GCongr.lean"
    },
    ".lake.packages.mathlib.Mathlib.Tactic.LinearCombination'": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Tactic/LinearCombination'.lean"
    },
    ".lake.packages.mathlib.Mathlib.Tactic.SudoSetOption": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Tactic/SudoSetOption.lean"
    },
    ".lake.packages.mathlib.Mathlib.Tactic.Positivity": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Tactic/Positivity.lean"
    },
    ".lake.packages.mathlib.Mathlib.Tactic.NthRewrite": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Tactic/NthRewrite.lean"
    },
    ".lake.packages.mathlib.Mathlib.Tactic.SuppressCompilation": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Tactic/SuppressCompilation.lean"
    },
    ".lake.packages.mathlib.Mathlib.Tactic.Substs": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Tactic/Substs.lean"
    },
    ".lake.packages.mathlib.Mathlib.Tactic.AdaptationNote": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Tactic/AdaptationNote.lean"
    },
    ".lake.packages.mathlib.Mathlib.Tactic.Abel": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Tactic/Abel.lean"
    },
    ".lake.packages.mathlib.Mathlib.Tactic.DeriveFintype": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Tactic/DeriveFintype.lean"
    },
    ".lake.packages.mathlib.Mathlib.Tactic.UnsetOption": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Tactic/UnsetOption.lean"
    },
    ".lake.packages.mathlib.Mathlib.Tactic.Bound": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Tactic/Bound.lean"
    },
    ".lake.packages.mathlib.Mathlib.Tactic.FinCases": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Tactic/FinCases.lean"
    },
    ".lake.packages.mathlib.Mathlib.Tactic.ClearExclamation": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Tactic/ClearExclamation.lean"
    },
    ".lake.packages.mathlib.Mathlib.Tactic.CancelDenoms": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Tactic/CancelDenoms.lean"
    },
    ".lake.packages.mathlib.Mathlib.Tactic.Coe": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Tactic/Coe.lean"
    },
    ".lake.packages.mathlib.Mathlib.Tactic.ExtendDoc": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Tactic/ExtendDoc.lean"
    },
    ".lake.packages.mathlib.Mathlib.Tactic.Common": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Tactic/Common.lean"
    },
    ".lake.packages.mathlib.Mathlib.Tactic.ProdAssoc": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Tactic/ProdAssoc.lean"
    },
    ".lake.packages.mathlib.Mathlib.Tactic.SetLike": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Tactic/SetLike.lean"
    },
    ".lake.packages.mathlib.Mathlib.Tactic.ModCases": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Tactic/ModCases.lean"
    },
    ".lake.packages.mathlib.Mathlib.Tactic.DeclarationNames": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Tactic/DeclarationNames.lean"
    },
    ".lake.packages.mathlib.Mathlib.Tactic.FieldSimp": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Tactic/FieldSimp.lean"
    },
    ".lake.packages.mathlib.Mathlib.Tactic.Hint": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Tactic/Hint.lean"
    },
    ".lake.packages.mathlib.Mathlib.Tactic.Qify": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Tactic/Qify.lean"
    },
    ".lake.packages.mathlib.Mathlib.Tactic.TypeStar": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Tactic/TypeStar.lean"
    },
    ".lake.packages.mathlib.Mathlib.Tactic.Lemma": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Tactic/Lemma.lean"
    },
    ".lake.packages.mathlib.Mathlib.Tactic.DeriveEncodable": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Tactic/DeriveEncodable.lean"
    },
    ".lake.packages.mathlib.Mathlib.Tactic.Subsingleton": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Tactic/Subsingleton.lean"
    },
    ".lake.packages.mathlib.Mathlib.Tactic.Lift": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Tactic/Lift.lean"
    },
    ".lake.packages.mathlib.Mathlib.Tactic.DeriveCountable": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Tactic/DeriveCountable.lean"
    },
    ".lake.packages.mathlib.Mathlib.Tactic.TryThis": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Tactic/TryThis.lean"
    },
    ".lake.packages.mathlib.Mathlib.Tactic.ReduceModChar": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Tactic/ReduceModChar.lean"
    },
    ".lake.packages.mathlib.Mathlib.Tactic.CC": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Tactic/CC.lean"
    },
    ".lake.packages.mathlib.Mathlib.Tactic.Push": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Tactic/Push.lean"
    },
    ".lake.packages.mathlib.Mathlib.Tactic.TermCongr": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Tactic/TermCongr.lean"
    },
    ".lake.packages.mathlib.Mathlib.Tactic.ComputeDegree": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Tactic/ComputeDegree.lean"
    },
    ".lake.packages.mathlib.Mathlib.Tactic.StacksAttribute": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Tactic/StacksAttribute.lean"
    },
    ".lake.packages.mathlib.Mathlib.Tactic.Contrapose": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Tactic/Contrapose.lean"
    },
    ".lake.packages.mathlib.Mathlib.Tactic.Finiteness": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Tactic/Finiteness.lean"
    },
    ".lake.packages.mathlib.Mathlib.Tactic.MinImports": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Tactic/MinImports.lean"
    },
    ".lake.packages.mathlib.Mathlib.Tactic.LinearCombination": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Tactic/LinearCombination.lean"
    },
    ".lake.packages.mathlib.Mathlib.Tactic.Use": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Tactic/Use.lean"
    },
    ".lake.packages.mathlib.Mathlib.Tactic.Variable": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Tactic/Variable.lean"
    },
    ".lake.packages.mathlib.Mathlib.Tactic.Find": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Tactic/Find.lean"
    },
    ".lake.packages.mathlib.Mathlib.Tactic.SimpIntro": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Tactic/SimpIntro.lean"
    },
    ".lake.packages.mathlib.Mathlib.Tactic.MoveAdd": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Tactic/MoveAdd.lean"
    },
    ".lake.packages.mathlib.Mathlib.Tactic.Linarith": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Tactic/Linarith.lean"
    },
    ".lake.packages.mathlib.Mathlib.Tactic.Choose": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Tactic/Choose.lean"
    },
    ".lake.packages.mathlib.Mathlib.Tactic.LinearCombination.Lemmas": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Tactic/LinearCombination/Lemmas.lean"
    },
    ".lake.packages.mathlib.Mathlib.Tactic.CancelDenoms.Core": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Tactic/CancelDenoms/Core.lean"
    },
    ".lake.packages.mathlib.Mathlib.Tactic.Order.Preprocessing": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Tactic/Order/Preprocessing.lean"
    },
    ".lake.packages.mathlib.Mathlib.Tactic.Order.CollectFacts": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Tactic/Order/CollectFacts.lean"
    },
    ".lake.packages.mathlib.Mathlib.Tactic.Order.Graph.Basic": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Tactic/Order/Graph/Basic.lean"
    },
    ".lake.packages.mathlib.Mathlib.Tactic.Order.Graph.Tarjan": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Tactic/Order/Graph/Tarjan.lean"
    },
    ".lake.packages.mathlib.Mathlib.Tactic.Continuity.Init": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Tactic/Continuity/Init.lean"
    },
    ".lake.packages.mathlib.Mathlib.Tactic.Relation.Rfl": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Tactic/Relation/Rfl.lean"
    },
    ".lake.packages.mathlib.Mathlib.Tactic.Relation.Symm": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Tactic/Relation/Symm.lean"
    },
    ".lake.packages.mathlib.Mathlib.Tactic.Simproc.ExistsAndEq": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Tactic/Simproc/ExistsAndEq.lean"
    },
    ".lake.packages.mathlib.Mathlib.Tactic.Simproc.Factors": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Tactic/Simproc/Factors.lean"
    },
    ".lake.packages.mathlib.Mathlib.Tactic.Simproc.Divisors": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Tactic/Simproc/Divisors.lean"
    },
    ".lake.packages.mathlib.Mathlib.Tactic.Widget.Calc": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Tactic/Widget/Calc.lean"
    },
    ".lake.packages.mathlib.Mathlib.Tactic.Widget.CongrM": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Tactic/Widget/CongrM.lean"
    },
    ".lake.packages.mathlib.Mathlib.Tactic.Widget.Conv": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Tactic/Widget/Conv.lean"
    },
    ".lake.packages.mathlib.Mathlib.Tactic.Widget.InteractiveUnfold": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Tactic/Widget/InteractiveUnfold.lean"
    },
    ".lake.packages.mathlib.Mathlib.Tactic.Widget.SelectPanelUtils": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Tactic/Widget/SelectPanelUtils.lean"
    },
    ".lake.packages.mathlib.Mathlib.Tactic.Widget.CommDiag": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Tactic/Widget/CommDiag.lean"
    },
    ".lake.packages.mathlib.Mathlib.Tactic.Widget.LibraryRewrite": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Tactic/Widget/LibraryRewrite.lean"
    },
    ".lake.packages.mathlib.Mathlib.Tactic.Widget.StringDiagram": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Tactic/Widget/StringDiagram.lean"
    },
    ".lake.packages.mathlib.Mathlib.Tactic.Widget.GCongr": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Tactic/Widget/GCongr.lean"
    },
    ".lake.packages.mathlib.Mathlib.Tactic.Widget.SelectInsertParamsClass": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Tactic/Widget/SelectInsertParamsClass.lean"
    },
    ".lake.packages.mathlib.Mathlib.Tactic.Simps.Basic": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Tactic/Simps/Basic.lean"
    },
    ".lake.packages.mathlib.Mathlib.Tactic.Simps.NotationClass": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Tactic/Simps/NotationClass.lean"
    },
    ".lake.packages.mathlib.Mathlib.Tactic.Linter.UnusedTactic": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Tactic/Linter/UnusedTactic.lean"
    },
    ".lake.packages.mathlib.Mathlib.Tactic.Linter.Lint": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Tactic/Linter/Lint.lean"
    },
    ".lake.packages.mathlib.Mathlib.Tactic.Linter.PPRoundtrip": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Tactic/Linter/PPRoundtrip.lean"
    },
    ".lake.packages.mathlib.Mathlib.Tactic.Linter.DirectoryDependency": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Tactic/Linter/DirectoryDependency.lean"
    },
    ".lake.packages.mathlib.Mathlib.Tactic.Linter.Multigoal": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Tactic/Linter/Multigoal.lean"
    },
    ".lake.packages.mathlib.Mathlib.Tactic.Linter.UpstreamableDecl": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Tactic/Linter/UpstreamableDecl.lean"
    },
    ".lake.packages.mathlib.Mathlib.Tactic.Linter.DocPrime": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Tactic/Linter/DocPrime.lean"
    },
    ".lake.packages.mathlib.Mathlib.Tactic.Linter.TextBased": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Tactic/Linter/TextBased.lean"
    },
    ".lake.packages.mathlib.Mathlib.Tactic.Linter.GlobalAttributeIn": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Tactic/Linter/GlobalAttributeIn.lean"
    },
    ".lake.packages.mathlib.Mathlib.Tactic.Linter.FlexibleLinter": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Tactic/Linter/FlexibleLinter.lean"
    },
    ".lake.packages.mathlib.Mathlib.Tactic.Linter.HashCommandLinter": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Tactic/Linter/HashCommandLinter.lean"
    },
    ".lake.packages.mathlib.Mathlib.Tactic.Linter.DocString": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Tactic/Linter/DocString.lean"
    },
    ".lake.packages.mathlib.Mathlib.Tactic.Linter.Header": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Tactic/Linter/Header.lean"
    },
    ".lake.packages.mathlib.Mathlib.Tactic.Linter.UnusedTacticExtension": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Tactic/Linter/UnusedTacticExtension.lean"
    },
    ".lake.packages.mathlib.Mathlib.Tactic.Linter.CommandStart": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Tactic/Linter/CommandStart.lean"
    },
    ".lake.packages.mathlib.Mathlib.Tactic.Linter.DeprecatedModule": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Tactic/Linter/DeprecatedModule.lean"
    },
    ".lake.packages.mathlib.Mathlib.Tactic.Linter.OldObtain": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Tactic/Linter/OldObtain.lean"
    },
    ".lake.packages.mathlib.Mathlib.Tactic.Linter.HaveLetLinter": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Tactic/Linter/HaveLetLinter.lean"
    },
    ".lake.packages.mathlib.Mathlib.Tactic.Linter.Style": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Tactic/Linter/Style.lean"
    },
    ".lake.packages.mathlib.Mathlib.Tactic.Linter.MinImports": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Tactic/Linter/MinImports.lean"
    },
    ".lake.packages.mathlib.Mathlib.Tactic.Linter.DeprecatedSyntaxLinter": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Tactic/Linter/DeprecatedSyntaxLinter.lean"
    },
    ".lake.packages.mathlib.Mathlib.Tactic.NormNum.DivMod": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Tactic/NormNum/DivMod.lean"
    },
    ".lake.packages.mathlib.Mathlib.Tactic.NormNum.Ineq": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Tactic/NormNum/Ineq.lean"
    },
    ".lake.packages.mathlib.Mathlib.Tactic.NormNum.NatFib": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Tactic/NormNum/NatFib.lean"
    },
    ".lake.packages.mathlib.Mathlib.Tactic.NormNum.Pow": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Tactic/NormNum/Pow.lean"
    },
    ".lake.packages.mathlib.Mathlib.Tactic.NormNum.GCD": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Tactic/NormNum/GCD.lean"
    },
    ".lake.packages.mathlib.Mathlib.Tactic.NormNum.Core": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Tactic/NormNum/Core.lean"
    },
    ".lake.packages.mathlib.Mathlib.Tactic.NormNum.PowMod": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Tactic/NormNum/PowMod.lean"
    },
    ".lake.packages.mathlib.Mathlib.Tactic.NormNum.NatSqrt": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Tactic/NormNum/NatSqrt.lean"
    },
    ".lake.packages.mathlib.Mathlib.Tactic.NormNum.LegendreSymbol": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Tactic/NormNum/LegendreSymbol.lean"
    },
    ".lake.packages.mathlib.Mathlib.Tactic.NormNum.Basic": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Tactic/NormNum/Basic.lean"
    },
    ".lake.packages.mathlib.Mathlib.Tactic.NormNum.IsCoprime": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Tactic/NormNum/IsCoprime.lean"
    },
    ".lake.packages.mathlib.Mathlib.Tactic.NormNum.OfScientific": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Tactic/NormNum/OfScientific.lean"
    },
    ".lake.packages.mathlib.Mathlib.Tactic.NormNum.Result": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Tactic/NormNum/Result.lean"
    },
    ".lake.packages.mathlib.Mathlib.Tactic.NormNum.Ordinal": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Tactic/NormNum/Ordinal.lean"
    },
    ".lake.packages.mathlib.Mathlib.Tactic.NormNum.Eq": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Tactic/NormNum/Eq.lean"
    },
    ".lake.packages.mathlib.Mathlib.Tactic.NormNum.RealSqrt": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Tactic/NormNum/RealSqrt.lean"
    },
    ".lake.packages.mathlib.Mathlib.Tactic.NormNum.BigOperators": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Tactic/NormNum/BigOperators.lean"
    },
    ".lake.packages.mathlib.Mathlib.Tactic.NormNum.Irrational": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Tactic/NormNum/Irrational.lean"
    },
    ".lake.packages.mathlib.Mathlib.Tactic.NormNum.Prime": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Tactic/NormNum/Prime.lean"
    },
    ".lake.packages.mathlib.Mathlib.Tactic.NormNum.NatLog": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Tactic/NormNum/NatLog.lean"
    },
    ".lake.packages.mathlib.Mathlib.Tactic.NormNum.NatFactorial": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Tactic/NormNum/NatFactorial.lean"
    },
    ".lake.packages.mathlib.Mathlib.Tactic.NormNum.Inv": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Tactic/NormNum/Inv.lean"
    },
    ".lake.packages.mathlib.Mathlib.Tactic.Nontriviality.Core": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Tactic/Nontriviality/Core.lean"
    },
    ".lake.packages.mathlib.Mathlib.Tactic.ToAdditive.Frontend": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Tactic/ToAdditive/Frontend.lean"
    },
    ".lake.packages.mathlib.Mathlib.Tactic.FunProp.Core": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Tactic/FunProp/Core.lean"
    },
    ".lake.packages.mathlib.Mathlib.Tactic.FunProp.Attr": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Tactic/FunProp/Attr.lean"
    },
    ".lake.packages.mathlib.Mathlib.Tactic.FunProp.FunctionData": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Tactic/FunProp/FunctionData.lean"
    },
    ".lake.packages.mathlib.Mathlib.Tactic.FunProp.ToBatteries": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Tactic/FunProp/ToBatteries.lean"
    },
    ".lake.packages.mathlib.Mathlib.Tactic.FunProp.Mor": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Tactic/FunProp/Mor.lean"
    },
    ".lake.packages.mathlib.Mathlib.Tactic.FunProp.ContDiff": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Tactic/FunProp/ContDiff.lean"
    },
    ".lake.packages.mathlib.Mathlib.Tactic.FunProp.Theorems": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Tactic/FunProp/Theorems.lean"
    },
    ".lake.packages.mathlib.Mathlib.Tactic.FunProp.Differentiable": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Tactic/FunProp/Differentiable.lean"
    },
    ".lake.packages.mathlib.Mathlib.Tactic.FunProp.Elab": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Tactic/FunProp/Elab.lean"
    },
    ".lake.packages.mathlib.Mathlib.Tactic.FunProp.Decl": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Tactic/FunProp/Decl.lean"
    },
    ".lake.packages.mathlib.Mathlib.Tactic.FunProp.Types": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Tactic/FunProp/Types.lean"
    },
    ".lake.packages.mathlib.Mathlib.Tactic.CategoryTheory.Coherence": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Tactic/CategoryTheory/Coherence.lean"
    },
    ".lake.packages.mathlib.Mathlib.Tactic.CategoryTheory.BicategoricalComp": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Tactic/CategoryTheory/BicategoricalComp.lean"
    },
    ".lake.packages.mathlib.Mathlib.Tactic.CategoryTheory.Elementwise": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Tactic/CategoryTheory/Elementwise.lean"
    },
    ".lake.packages.mathlib.Mathlib.Tactic.CategoryTheory.Reassoc": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Tactic/CategoryTheory/Reassoc.lean"
    },
    ".lake.packages.mathlib.Mathlib.Tactic.CategoryTheory.ToApp": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Tactic/CategoryTheory/ToApp.lean"
    },
    ".lake.packages.mathlib.Mathlib.Tactic.CategoryTheory.IsoReassoc": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Tactic/CategoryTheory/IsoReassoc.lean"
    },
    ".lake.packages.mathlib.Mathlib.Tactic.CategoryTheory.CheckCompositions": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Tactic/CategoryTheory/CheckCompositions.lean"
    },
    ".lake.packages.mathlib.Mathlib.Tactic.CategoryTheory.MonoidalComp": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Tactic/CategoryTheory/MonoidalComp.lean"
    },
    ".lake.packages.mathlib.Mathlib.Tactic.CategoryTheory.Slice": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Tactic/CategoryTheory/Slice.lean"
    },
    ".lake.packages.mathlib.Mathlib.Tactic.CategoryTheory.BicategoryCoherence": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Tactic/CategoryTheory/BicategoryCoherence.lean"
    },
    ".lake.packages.mathlib.Mathlib.Tactic.CategoryTheory.Coherence.PureCoherence": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Tactic/CategoryTheory/Coherence/PureCoherence.lean"
    },
    ".lake.packages.mathlib.Mathlib.Tactic.CategoryTheory.Coherence.Basic": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Tactic/CategoryTheory/Coherence/Basic.lean"
    },
    ".lake.packages.mathlib.Mathlib.Tactic.CategoryTheory.Coherence.Normalize": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Tactic/CategoryTheory/Coherence/Normalize.lean"
    },
    ".lake.packages.mathlib.Mathlib.Tactic.CategoryTheory.Coherence.Datatypes": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Tactic/CategoryTheory/Coherence/Datatypes.lean"
    },
    ".lake.packages.mathlib.Mathlib.Tactic.CategoryTheory.Monoidal.PureCoherence": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Tactic/CategoryTheory/Monoidal/PureCoherence.lean"
    },
    ".lake.packages.mathlib.Mathlib.Tactic.CategoryTheory.Monoidal.Basic": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Tactic/CategoryTheory/Monoidal/Basic.lean"
    },
    ".lake.packages.mathlib.Mathlib.Tactic.CategoryTheory.Monoidal.Normalize": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Tactic/CategoryTheory/Monoidal/Normalize.lean"
    },
    ".lake.packages.mathlib.Mathlib.Tactic.CategoryTheory.Monoidal.Datatypes": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Tactic/CategoryTheory/Monoidal/Datatypes.lean"
    },
    ".lake.packages.mathlib.Mathlib.Tactic.CategoryTheory.Bicategory.PureCoherence": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Tactic/CategoryTheory/Bicategory/PureCoherence.lean"
    },
    ".lake.packages.mathlib.Mathlib.Tactic.CategoryTheory.Bicategory.Basic": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Tactic/CategoryTheory/Bicategory/Basic.lean"
    },
    ".lake.packages.mathlib.Mathlib.Tactic.CategoryTheory.Bicategory.Normalize": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Tactic/CategoryTheory/Bicategory/Normalize.lean"
    },
    ".lake.packages.mathlib.Mathlib.Tactic.CategoryTheory.Bicategory.Datatypes": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Tactic/CategoryTheory/Bicategory/Datatypes.lean"
    },
    ".lake.packages.mathlib.Mathlib.Tactic.GRewrite.Core": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Tactic/GRewrite/Core.lean"
    },
    ".lake.packages.mathlib.Mathlib.Tactic.GRewrite.Elab": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Tactic/GRewrite/Elab.lean"
    },
    ".lake.packages.mathlib.Mathlib.Tactic.Attr.Register": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Tactic/Attr/Register.lean"
    },
    ".lake.packages.mathlib.Mathlib.Tactic.Attr.Core": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Tactic/Attr/Core.lean"
    },
    ".lake.packages.mathlib.Mathlib.Tactic.Finiteness.Attr": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Tactic/Finiteness/Attr.lean"
    },
    ".lake.packages.mathlib.Mathlib.Tactic.GCongr.Core": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Tactic/GCongr/Core.lean"
    },
    ".lake.packages.mathlib.Mathlib.Tactic.GCongr.CoreAttrs": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Tactic/GCongr/CoreAttrs.lean"
    },
    ".lake.packages.mathlib.Mathlib.Tactic.GCongr.ForwardAttr": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Tactic/GCongr/ForwardAttr.lean"
    },
    ".lake.packages.mathlib.Mathlib.Tactic.Sat.FromLRAT": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Tactic/Sat/FromLRAT.lean"
    },
    ".lake.packages.mathlib.Mathlib.Tactic.Monotonicity.Lemmas": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Tactic/Monotonicity/Lemmas.lean"
    },
    ".lake.packages.mathlib.Mathlib.Tactic.Monotonicity.Attr": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Tactic/Monotonicity/Attr.lean"
    },
    ".lake.packages.mathlib.Mathlib.Tactic.Monotonicity.Basic": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Tactic/Monotonicity/Basic.lean"
    },
    ".lake.packages.mathlib.Mathlib.Tactic.Linarith.Parsing": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Tactic/Linarith/Parsing.lean"
    },
    ".lake.packages.mathlib.Mathlib.Tactic.Linarith.Lemmas": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Tactic/Linarith/Lemmas.lean"
    },
    ".lake.packages.mathlib.Mathlib.Tactic.Linarith.Verification": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Tactic/Linarith/Verification.lean"
    },
    ".lake.packages.mathlib.Mathlib.Tactic.Linarith.Preprocessing": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Tactic/Linarith/Preprocessing.lean"
    },
    ".lake.packages.mathlib.Mathlib.Tactic.Linarith.Datatypes": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Tactic/Linarith/Datatypes.lean"
    },
    ".lake.packages.mathlib.Mathlib.Tactic.Linarith.Frontend": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Tactic/Linarith/Frontend.lean"
    },
    ".lake.packages.mathlib.Mathlib.Tactic.Linarith.Oracle.SimplexAlgorithm": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Tactic/Linarith/Oracle/SimplexAlgorithm.lean"
    },
    ".lake.packages.mathlib.Mathlib.Tactic.Linarith.Oracle.FourierMotzkin": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Tactic/Linarith/Oracle/FourierMotzkin.lean"
    },
    ".lake.packages.mathlib.Mathlib.Tactic.Linarith.Oracle.SimplexAlgorithm.Gauss": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Tactic/Linarith/Oracle/SimplexAlgorithm/Gauss.lean"
    },
    ".lake.packages.mathlib.Mathlib.Tactic.Linarith.Oracle.SimplexAlgorithm.SimplexAlgorithm": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Tactic/Linarith/Oracle/SimplexAlgorithm/SimplexAlgorithm.lean"
    },
    ".lake.packages.mathlib.Mathlib.Tactic.Linarith.Oracle.SimplexAlgorithm.PositiveVector": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Tactic/Linarith/Oracle/SimplexAlgorithm/PositiveVector.lean"
    },
    ".lake.packages.mathlib.Mathlib.Tactic.Linarith.Oracle.SimplexAlgorithm.Datatypes": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Tactic/Linarith/Oracle/SimplexAlgorithm/Datatypes.lean"
    },
    ".lake.packages.mathlib.Mathlib.Tactic.Bound.Init": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Tactic/Bound/Init.lean"
    },
    ".lake.packages.mathlib.Mathlib.Tactic.Bound.Attribute": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Tactic/Bound/Attribute.lean"
    },
    ".lake.packages.mathlib.Mathlib.Tactic.Measurability.Init": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Tactic/Measurability/Init.lean"
    },
    ".lake.packages.mathlib.Mathlib.Tactic.CC.Lemmas": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Tactic/CC/Lemmas.lean"
    },
    ".lake.packages.mathlib.Mathlib.Tactic.CC.MkProof": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Tactic/CC/MkProof.lean"
    },
    ".lake.packages.mathlib.Mathlib.Tactic.CC.Addition": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Tactic/CC/Addition.lean"
    },
    ".lake.packages.mathlib.Mathlib.Tactic.CC.Datatypes": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Tactic/CC/Datatypes.lean"
    },
    ".lake.packages.mathlib.Mathlib.Tactic.Ring.NamePolyVars": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Tactic/Ring/NamePolyVars.lean"
    },
    ".lake.packages.mathlib.Mathlib.Tactic.Ring.Basic": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Tactic/Ring/Basic.lean"
    },
    ".lake.packages.mathlib.Mathlib.Tactic.Ring.Compare": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Tactic/Ring/Compare.lean"
    },
    ".lake.packages.mathlib.Mathlib.Tactic.Ring.PNat": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Tactic/Ring/PNat.lean"
    },
    ".lake.packages.mathlib.Mathlib.Tactic.Ring.RingNF": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Tactic/Ring/RingNF.lean"
    },
    ".lake.packages.mathlib.Mathlib.Tactic.Explode.Pretty": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Tactic/Explode/Pretty.lean"
    },
    ".lake.packages.mathlib.Mathlib.Tactic.Explode.Datatypes": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Tactic/Explode/Datatypes.lean"
    },
    ".lake.packages.mathlib.Mathlib.Tactic.Positivity.Core": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Tactic/Positivity/Core.lean"
    },
    ".lake.packages.mathlib.Mathlib.Tactic.Positivity.Finset": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Tactic/Positivity/Finset.lean"
    },
    ".lake.packages.mathlib.Mathlib.Tactic.Positivity.Basic": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Tactic/Positivity/Basic.lean"
    },
    ".lake.packages.mathlib.Mathlib.Tactic.ArithMult.Init": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Tactic/ArithMult/Init.lean"
    },
    ".lake.packages.mathlib.Mathlib.Tactic.ReduceModChar.Ext": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Tactic/ReduceModChar/Ext.lean"
    },
    ".lake.packages.mathlib.Mathlib.Order.WellFoundedSet": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Order/WellFoundedSet.lean"
    },
    ".lake.packages.mathlib.Mathlib.Order.CompleteLatticeIntervals": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Order/CompleteLatticeIntervals.lean"
    },
    ".lake.packages.mathlib.Mathlib.Order.CountableDenseLinearOrder": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Order/CountableDenseLinearOrder.lean"
    },
    ".lake.packages.mathlib.Mathlib.Order.KonigLemma": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Order/KonigLemma.lean"
    },
    ".lake.packages.mathlib.Mathlib.Order.Part": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Order/Part.lean"
    },
    ".lake.packages.mathlib.Mathlib.Order.Synonym": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Order/Synonym.lean"
    },
    ".lake.packages.mathlib.Mathlib.Order.Comparable": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Order/Comparable.lean"
    },
    ".lake.packages.mathlib.Mathlib.Order.Birkhoff": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Order/Birkhoff.lean"
    },
    ".lake.packages.mathlib.Mathlib.Order.Sublattice": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Order/Sublattice.lean"
    },
    ".lake.packages.mathlib.Mathlib.Order.Chain": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Order/Chain.lean"
    },
    ".lake.packages.mathlib.Mathlib.Order.PrimeIdeal": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Order/PrimeIdeal.lean"
    },
    ".lake.packages.mathlib.Mathlib.Order.Iterate": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Order/Iterate.lean"
    },
    ".lake.packages.mathlib.Mathlib.Order.TransfiniteIteration": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Order/TransfiniteIteration.lean"
    },
    ".lake.packages.mathlib.Mathlib.Order.CompleteBooleanAlgebra": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Order/CompleteBooleanAlgebra.lean"
    },
    ".lake.packages.mathlib.Mathlib.Order.MinMax": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Order/MinMax.lean"
    },
    ".lake.packages.mathlib.Mathlib.Order.PrimeSeparator": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Order/PrimeSeparator.lean"
    },
    ".lake.packages.mathlib.Mathlib.Order.Atoms": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Order/Atoms.lean"
    },
    ".lake.packages.mathlib.Mathlib.Order.Disjointed": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Order/Disjointed.lean"
    },
    ".lake.packages.mathlib.Mathlib.Order.DirectedInverseSystem": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Order/DirectedInverseSystem.lean"
    },
    ".lake.packages.mathlib.Mathlib.Order.RelSeries": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Order/RelSeries.lean"
    },
    ".lake.packages.mathlib.Mathlib.Order.JordanHolder": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Order/JordanHolder.lean"
    },
    ".lake.packages.mathlib.Mathlib.Order.SupIndep": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Order/SupIndep.lean"
    },
    ".lake.packages.mathlib.Mathlib.Order.OrdContinuous": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Order/OrdContinuous.lean"
    },
    ".lake.packages.mathlib.Mathlib.Order.Nat": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Order/Nat.lean"
    },
    ".lake.packages.mathlib.Mathlib.Order.LiminfLimsup": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Order/LiminfLimsup.lean"
    },
    ".lake.packages.mathlib.Mathlib.Order.Antichain": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Order/Antichain.lean"
    },
    ".lake.packages.mathlib.Mathlib.Order.Cofinal": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Order/Cofinal.lean"
    },
    ".lake.packages.mathlib.Mathlib.Order.Closure": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Order/Closure.lean"
    },
    ".lake.packages.mathlib.Mathlib.Order.ScottContinuity": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Order/ScottContinuity.lean"
    },
    ".lake.packages.mathlib.Mathlib.Order.Restriction": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Order/Restriction.lean"
    },
    ".lake.packages.mathlib.Mathlib.Order.SetIsMax": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Order/SetIsMax.lean"
    },
    ".lake.packages.mathlib.Mathlib.Order.Cover": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Order/Cover.lean"
    },
    ".lake.packages.mathlib.Mathlib.Order.BooleanAlgebra": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Order/BooleanAlgebra.lean"
    },
    ".lake.packages.mathlib.Mathlib.Order.Basic": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Order/Basic.lean"
    },
    ".lake.packages.mathlib.Mathlib.Order.BooleanGenerators": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Order/BooleanGenerators.lean"
    },
    ".lake.packages.mathlib.Mathlib.Order.Disjoint": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Order/Disjoint.lean"
    },
    ".lake.packages.mathlib.Mathlib.Order.PartialSups": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Order/PartialSups.lean"
    },
    ".lake.packages.mathlib.Mathlib.Order.ULift": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Order/ULift.lean"
    },
    ".lake.packages.mathlib.Mathlib.Order.Compare": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Order/Compare.lean"
    },
    ".lake.packages.mathlib.Mathlib.Order.Ideal": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Order/Ideal.lean"
    },
    ".lake.packages.mathlib.Mathlib.Order.WellFounded": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Order/WellFounded.lean"
    },
    ".lake.packages.mathlib.Mathlib.Order.IsNormal": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Order/IsNormal.lean"
    },
    ".lake.packages.mathlib.Mathlib.Order.Estimator": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Order/Estimator.lean"
    },
    ".lake.packages.mathlib.Mathlib.Order.RelClasses": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Order/RelClasses.lean"
    },
    ".lake.packages.mathlib.Mathlib.Order.Minimal": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Order/Minimal.lean"
    },
    ".lake.packages.mathlib.Mathlib.Order.Concept": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Order/Concept.lean"
    },
    ".lake.packages.mathlib.Mathlib.Order.Notation": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Order/Notation.lean"
    },
    ".lake.packages.mathlib.Mathlib.Order.Zorn": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Order/Zorn.lean"
    },
    ".lake.packages.mathlib.Mathlib.Order.Booleanisation": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Order/Booleanisation.lean"
    },
    ".lake.packages.mathlib.Mathlib.Order.InitialSeg": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Order/InitialSeg.lean"
    },
    ".lake.packages.mathlib.Mathlib.Order.Shrink": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Order/Shrink.lean"
    },
    ".lake.packages.mathlib.Mathlib.Order.Set": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Order/Set.lean"
    },
    ".lake.packages.mathlib.Mathlib.Order.CompleteSublattice": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Order/CompleteSublattice.lean"
    },
    ".lake.packages.mathlib.Mathlib.Order.GameAdd": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Order/GameAdd.lean"
    },
    ".lake.packages.mathlib.Mathlib.Order.PropInstances": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Order/PropInstances.lean"
    },
    ".lake.packages.mathlib.Mathlib.Order.SymmDiff": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Order/SymmDiff.lean"
    },
    ".lake.packages.mathlib.Mathlib.Order.ZornAtoms": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Order/ZornAtoms.lean"
    },
    ".lake.packages.mathlib.Mathlib.Order.Grade": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Order/Grade.lean"
    },
    ".lake.packages.mathlib.Mathlib.Order.WithBot": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Order/WithBot.lean"
    },
    ".lake.packages.mathlib.Mathlib.Order.WellQuasiOrder": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Order/WellQuasiOrder.lean"
    },
    ".lake.packages.mathlib.Mathlib.Order.KrullDimension": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Order/KrullDimension.lean"
    },
    ".lake.packages.mathlib.Mathlib.Order.Copy": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Order/Copy.lean"
    },
    ".lake.packages.mathlib.Mathlib.Order.PFilter": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Order/PFilter.lean"
    },
    ".lake.packages.mathlib.Mathlib.Order.CompletePartialOrder": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Order/CompletePartialOrder.lean"
    },
    ".lake.packages.mathlib.Mathlib.Order.OrderIsoNat": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Order/OrderIsoNat.lean"
    },
    ".lake.packages.mathlib.Mathlib.Order.Bounded": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Order/Bounded.lean"
    },
    ".lake.packages.mathlib.Mathlib.Order.TypeTags": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Order/TypeTags.lean"
    },
    ".lake.packages.mathlib.Mathlib.Order.Directed": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Order/Directed.lean"
    },
    ".lake.packages.mathlib.Mathlib.Order.ModularLattice": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Order/ModularLattice.lean"
    },
    ".lake.packages.mathlib.Mathlib.Order.OmegaCompletePartialOrder": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Order/OmegaCompletePartialOrder.lean"
    },
    ".lake.packages.mathlib.Mathlib.Order.Circular": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Order/Circular.lean"
    },
    ".lake.packages.mathlib.Mathlib.Order.SetNotation": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Order/SetNotation.lean"
    },
    ".lake.packages.mathlib.Mathlib.Order.Irreducible": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Order/Irreducible.lean"
    },
    ".lake.packages.mathlib.Mathlib.Order.SemiconjSup": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Order/SemiconjSup.lean"
    },
    ".lake.packages.mathlib.Mathlib.Order.Nucleus": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Order/Nucleus.lean"
    },
    ".lake.packages.mathlib.Mathlib.Order.Antisymmetrization": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Order/Antisymmetrization.lean"
    },
    ".lake.packages.mathlib.Mathlib.Order.BooleanSubalgebra": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Order/BooleanSubalgebra.lean"
    },
    ".lake.packages.mathlib.Mathlib.Order.Lattice": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Order/Lattice.lean"
    },
    ".lake.packages.mathlib.Mathlib.Order.FixedPoints": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Order/FixedPoints.lean"
    },
    ".lake.packages.mathlib.Mathlib.Order.Height": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Order/Height.lean"
    },
    ".lake.packages.mathlib.Mathlib.Order.SupClosed": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Order/SupClosed.lean"
    },
    ".lake.packages.mathlib.Mathlib.Order.Max": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Order/Max.lean"
    },
    ".lake.packages.mathlib.Mathlib.Order.LatticeIntervals": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Order/LatticeIntervals.lean"
    },
    ".lake.packages.mathlib.Mathlib.Order.Radical": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Order/Radical.lean"
    },
    ".lake.packages.mathlib.Mathlib.Order.PiLex": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Order/PiLex.lean"
    },
    ".lake.packages.mathlib.Mathlib.Order.Prod.Lex.Hom": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Order/Prod/Lex/Hom.lean"
    },
    ".lake.packages.mathlib.Mathlib.Order.Bounds.OrderIso": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Order/Bounds/OrderIso.lean"
    },
    ".lake.packages.mathlib.Mathlib.Order.Bounds.Image": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Order/Bounds/Image.lean"
    },
    ".lake.packages.mathlib.Mathlib.Order.Bounds.Basic": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Order/Bounds/Basic.lean"
    },
    ".lake.packages.mathlib.Mathlib.Order.Bounds.Defs": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Order/Bounds/Defs.lean"
    },
    ".lake.packages.mathlib.Mathlib.Order.Bounds.Lattice": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Order/Bounds/Lattice.lean"
    },
    ".lake.packages.mathlib.Mathlib.Order.Atoms.Finite": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Order/Atoms/Finite.lean"
    },
    ".lake.packages.mathlib.Mathlib.Order.Preorder.Finite": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Order/Preorder/Finite.lean"
    },
    ".lake.packages.mathlib.Mathlib.Order.Preorder.Chain": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Order/Preorder/Chain.lean"
    },
    ".lake.packages.mathlib.Mathlib.Order.Heyting.Regular": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Order/Heyting/Regular.lean"
    },
    ".lake.packages.mathlib.Mathlib.Order.Heyting.Boundary": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Order/Heyting/Boundary.lean"
    },
    ".lake.packages.mathlib.Mathlib.Order.Heyting.Basic": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Order/Heyting/Basic.lean"
    },
    ".lake.packages.mathlib.Mathlib.Order.Heyting.Hom": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Order/Heyting/Hom.lean"
    },
    ".lake.packages.mathlib.Mathlib.Order.Extension.Linear": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Order/Extension/Linear.lean"
    },
    ".lake.packages.mathlib.Mathlib.Order.Extension.Well": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Order/Extension/Well.lean"
    },
    ".lake.packages.mathlib.Mathlib.Order.Fin.Tuple": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Order/Fin/Tuple.lean"
    },
    ".lake.packages.mathlib.Mathlib.Order.Fin.Finset": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Order/Fin/Finset.lean"
    },
    ".lake.packages.mathlib.Mathlib.Order.Fin.Basic": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Order/Fin/Basic.lean"
    },
    ".lake.packages.mathlib.Mathlib.Order.Fin.SuccAboveOrderIso": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Order/Fin/SuccAboveOrderIso.lean"
    },
    ".lake.packages.mathlib.Mathlib.Order.Hom.BoundedLattice": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Order/Hom/BoundedLattice.lean"
    },
    ".lake.packages.mathlib.Mathlib.Order.Hom.Lex": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Order/Hom/Lex.lean"
    },
    ".lake.packages.mathlib.Mathlib.Order.Hom.Order": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Order/Hom/Order.lean"
    },
    ".lake.packages.mathlib.Mathlib.Order.Hom.Basic": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Order/Hom/Basic.lean"
    },
    ".lake.packages.mathlib.Mathlib.Order.Hom.Set": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Order/Hom/Set.lean"
    },
    ".lake.packages.mathlib.Mathlib.Order.Hom.Bounded": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Order/Hom/Bounded.lean"
    },
    ".lake.packages.mathlib.Mathlib.Order.Hom.WithTopBot": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Order/Hom/WithTopBot.lean"
    },
    ".lake.packages.mathlib.Mathlib.Order.Hom.CompleteLattice": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Order/Hom/CompleteLattice.lean"
    },
    ".lake.packages.mathlib.Mathlib.Order.Hom.Lattice": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Order/Hom/Lattice.lean"
    },
    ".lake.packages.mathlib.Mathlib.Order.Category.DistLat": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Order/Category/DistLat.lean"
    },
    ".lake.packages.mathlib.Mathlib.Order.Category.BddLat": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Order/Category/BddLat.lean"
    },
    ".lake.packages.mathlib.Mathlib.Order.Category.Preord": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Order/Category/Preord.lean"
    },
    ".lake.packages.mathlib.Mathlib.Order.Category.BddDistLat": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Order/Category/BddDistLat.lean"
    },
    ".lake.packages.mathlib.Mathlib.Order.Category.FinBddDistLat": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Order/Category/FinBddDistLat.lean"
    },
    ".lake.packages.mathlib.Mathlib.Order.Category.LinOrd": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Order/Category/LinOrd.lean"
    },
    ".lake.packages.mathlib.Mathlib.Order.Category.PartOrd": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Order/Category/PartOrd.lean"
    },
    ".lake.packages.mathlib.Mathlib.Order.Category.FinPartOrd": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Order/Category/FinPartOrd.lean"
    },
    ".lake.packages.mathlib.Mathlib.Order.Category.Lat": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Order/Category/Lat.lean"
    },
    ".lake.packages.mathlib.Mathlib.Order.Category.HeytAlg": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Order/Category/HeytAlg.lean"
    },
    ".lake.packages.mathlib.Mathlib.Order.Category.NonemptyFinLinOrd": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Order/Category/NonemptyFinLinOrd.lean"
    },
    ".lake.packages.mathlib.Mathlib.Order.Category.OmegaCompletePartialOrder": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Order/Category/OmegaCompletePartialOrder.lean"
    },
    ".lake.packages.mathlib.Mathlib.Order.Category.CompleteLat": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Order/Category/CompleteLat.lean"
    },
    ".lake.packages.mathlib.Mathlib.Order.Category.Semilat": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Order/Category/Semilat.lean"
    },
    ".lake.packages.mathlib.Mathlib.Order.Category.BddOrd": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Order/Category/BddOrd.lean"
    },
    ".lake.packages.mathlib.Mathlib.Order.Category.BoolAlg": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Order/Category/BoolAlg.lean"
    },
    ".lake.packages.mathlib.Mathlib.Order.Category.Frm": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Order/Category/Frm.lean"
    },
    ".lake.packages.mathlib.Mathlib.Order.Category.FinBoolAlg": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Order/Category/FinBoolAlg.lean"
    },
    ".lake.packages.mathlib.Mathlib.Order.SuccPred.Limit": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Order/SuccPred/Limit.lean"
    },
    ".lake.packages.mathlib.Mathlib.Order.SuccPred.Archimedean": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Order/SuccPred/Archimedean.lean"
    },
    ".lake.packages.mathlib.Mathlib.Order.SuccPred.CompleteLinearOrder": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Order/SuccPred/CompleteLinearOrder.lean"
    },
    ".lake.packages.mathlib.Mathlib.Order.SuccPred.LinearLocallyFinite": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Order/SuccPred/LinearLocallyFinite.lean"
    },
    ".lake.packages.mathlib.Mathlib.Order.SuccPred.Basic": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Order/SuccPred/Basic.lean"
    },
    ".lake.packages.mathlib.Mathlib.Order.SuccPred.Tree": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Order/SuccPred/Tree.lean"
    },
    ".lake.packages.mathlib.Mathlib.Order.SuccPred.Relation": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Order/SuccPred/Relation.lean"
    },
    ".lake.packages.mathlib.Mathlib.Order.SuccPred.InitialSeg": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Order/SuccPred/InitialSeg.lean"
    },
    ".lake.packages.mathlib.Mathlib.Order.SuccPred.WithBot": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Order/SuccPred/WithBot.lean"
    },
    ".lake.packages.mathlib.Mathlib.Order.SuccPred.IntervalSucc": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Order/SuccPred/IntervalSucc.lean"
    },
    ".lake.packages.mathlib.Mathlib.Order.UpperLower.Prod": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Order/UpperLower/Prod.lean"
    },
    ".lake.packages.mathlib.Mathlib.Order.UpperLower.Closure": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Order/UpperLower/Closure.lean"
    },
    ".lake.packages.mathlib.Mathlib.Order.UpperLower.Basic": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Order/UpperLower/Basic.lean"
    },
    ".lake.packages.mathlib.Mathlib.Order.UpperLower.Fibration": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Order/UpperLower/Fibration.lean"
    },
    ".lake.packages.mathlib.Mathlib.Order.UpperLower.Principal": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Order/UpperLower/Principal.lean"
    },
    ".lake.packages.mathlib.Mathlib.Order.UpperLower.CompleteLattice": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Order/UpperLower/CompleteLattice.lean"
    },
    ".lake.packages.mathlib.Mathlib.Order.UpperLower.Relative": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Order/UpperLower/Relative.lean"
    },
    ".lake.packages.mathlib.Mathlib.Order.UpperLower.Hom": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Order/UpperLower/Hom.lean"
    },
    ".lake.packages.mathlib.Mathlib.Order.UpperLower.LocallyFinite": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Order/UpperLower/LocallyFinite.lean"
    },
    ".lake.packages.mathlib.Mathlib.Order.Interval.Lex": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Order/Interval/Lex.lean"
    },
    ".lake.packages.mathlib.Mathlib.Order.Interval.Basic": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Order/Interval/Basic.lean"
    },
    ".lake.packages.mathlib.Mathlib.Order.Interval.Multiset": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Order/Interval/Multiset.lean"
    },
    ".lake.packages.mathlib.Mathlib.Order.Interval.Finset.DenselyOrdered": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Order/Interval/Finset/DenselyOrdered.lean"
    },
    ".lake.packages.mathlib.Mathlib.Order.Interval.Finset.Fin": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Order/Interval/Finset/Fin.lean"
    },
    ".lake.packages.mathlib.Mathlib.Order.Interval.Finset.SuccPred": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Order/Interval/Finset/SuccPred.lean"
    },
    ".lake.packages.mathlib.Mathlib.Order.Interval.Finset.Nat": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Order/Interval/Finset/Nat.lean"
    },
    ".lake.packages.mathlib.Mathlib.Order.Interval.Finset.Basic": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Order/Interval/Finset/Basic.lean"
    },
    ".lake.packages.mathlib.Mathlib.Order.Interval.Finset.Defs": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Order/Interval/Finset/Defs.lean"
    },
    ".lake.packages.mathlib.Mathlib.Order.Interval.Finset.Box": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Order/Interval/Finset/Box.lean"
    },
    ".lake.packages.mathlib.Mathlib.Order.Interval.Set.IsoIoo": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Order/Interval/Set/IsoIoo.lean"
    },
    ".lake.packages.mathlib.Mathlib.Order.Interval.Set.Limit": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Order/Interval/Set/Limit.lean"
    },
    ".lake.packages.mathlib.Mathlib.Order.Interval.Set.UnorderedInterval": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Order/Interval/Set/UnorderedInterval.lean"
    },
    ".lake.packages.mathlib.Mathlib.Order.Interval.Set.OrderIso": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Order/Interval/Set/OrderIso.lean"
    },
    ".lake.packages.mathlib.Mathlib.Order.Interval.Set.Fin": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Order/Interval/Set/Fin.lean"
    },
    ".lake.packages.mathlib.Mathlib.Order.Interval.Set.SuccPred": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Order/Interval/Set/SuccPred.lean"
    },
    ".lake.packages.mathlib.Mathlib.Order.Interval.Set.SuccOrder": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Order/Interval/Set/SuccOrder.lean"
    },
    ".lake.packages.mathlib.Mathlib.Order.Interval.Set.SurjOn": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Order/Interval/Set/SurjOn.lean"
    },
    ".lake.packages.mathlib.Mathlib.Order.Interval.Set.Final": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Order/Interval/Set/Final.lean"
    },
    ".lake.packages.mathlib.Mathlib.Order.Interval.Set.Union": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Order/Interval/Set/Union.lean"
    },
    ".lake.packages.mathlib.Mathlib.Order.Interval.Set.WithBotTop": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Order/Interval/Set/WithBotTop.lean"
    },
    ".lake.packages.mathlib.Mathlib.Order.Interval.Set.Pi": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Order/Interval/Set/Pi.lean"
    },
    ".lake.packages.mathlib.Mathlib.Order.Interval.Set.Image": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Order/Interval/Set/Image.lean"
    },
    ".lake.packages.mathlib.Mathlib.Order.Interval.Set.OrdConnectedLinear": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Order/Interval/Set/OrdConnectedLinear.lean"
    },
    ".lake.packages.mathlib.Mathlib.Order.Interval.Set.Basic": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Order/Interval/Set/Basic.lean"
    },
    ".lake.packages.mathlib.Mathlib.Order.Interval.Set.ProjIcc": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Order/Interval/Set/ProjIcc.lean"
    },
    ".lake.packages.mathlib.Mathlib.Order.Interval.Set.Disjoint": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Order/Interval/Set/Disjoint.lean"
    },
    ".lake.packages.mathlib.Mathlib.Order.Interval.Set.Defs": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Order/Interval/Set/Defs.lean"
    },
    ".lake.packages.mathlib.Mathlib.Order.Interval.Set.InitialSeg": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Order/Interval/Set/InitialSeg.lean"
    },
    ".lake.packages.mathlib.Mathlib.Order.Interval.Set.LinearOrder": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Order/Interval/Set/LinearOrder.lean"
    },
    ".lake.packages.mathlib.Mathlib.Order.Interval.Set.OrdConnectedComponent": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Order/Interval/Set/OrdConnectedComponent.lean"
    },
    ".lake.packages.mathlib.Mathlib.Order.Interval.Set.OrdConnected": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Order/Interval/Set/OrdConnected.lean"
    },
    ".lake.packages.mathlib.Mathlib.Order.Interval.Set.OrderEmbedding": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Order/Interval/Set/OrderEmbedding.lean"
    },
    ".lake.packages.mathlib.Mathlib.Order.Interval.Set.Monotone": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Order/Interval/Set/Monotone.lean"
    },
    ".lake.packages.mathlib.Mathlib.Order.Interval.Set.Infinite": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Order/Interval/Set/Infinite.lean"
    },
    ".lake.packages.mathlib.Mathlib.Order.Rel.GaloisConnection": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Order/Rel/GaloisConnection.lean"
    },
    ".lake.packages.mathlib.Mathlib.Order.RelIso.Basic": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Order/RelIso/Basic.lean"
    },
    ".lake.packages.mathlib.Mathlib.Order.RelIso.Set": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Order/RelIso/Set.lean"
    },
    ".lake.packages.mathlib.Mathlib.Order.BoundedOrder.Basic": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Order/BoundedOrder/Basic.lean"
    },
    ".lake.packages.mathlib.Mathlib.Order.BoundedOrder.Monotone": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Order/BoundedOrder/Monotone.lean"
    },
    ".lake.packages.mathlib.Mathlib.Order.BoundedOrder.Lattice": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Order/BoundedOrder/Lattice.lean"
    },
    ".lake.packages.mathlib.Mathlib.Order.BooleanAlgebra.Basic": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Order/BooleanAlgebra/Basic.lean"
    },
    ".lake.packages.mathlib.Mathlib.Order.BooleanAlgebra.Defs": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Order/BooleanAlgebra/Defs.lean"
    },
    ".lake.packages.mathlib.Mathlib.Order.BooleanAlgebra.Set": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Order/BooleanAlgebra/Set.lean"
    },
    ".lake.packages.mathlib.Mathlib.Order.ConditionallyCompleteLattice.Group": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Order/ConditionallyCompleteLattice/Group.lean"
    },
    ".lake.packages.mathlib.Mathlib.Order.ConditionallyCompleteLattice.Finset": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Order/ConditionallyCompleteLattice/Finset.lean"
    },
    ".lake.packages.mathlib.Mathlib.Order.ConditionallyCompleteLattice.Basic": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Order/ConditionallyCompleteLattice/Basic.lean"
    },
    ".lake.packages.mathlib.Mathlib.Order.ConditionallyCompleteLattice.Defs": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Order/ConditionallyCompleteLattice/Defs.lean"
    },
    ".lake.packages.mathlib.Mathlib.Order.ConditionallyCompleteLattice.Indexed": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Order/ConditionallyCompleteLattice/Indexed.lean"
    },
    ".lake.packages.mathlib.Mathlib.Order.Filter.Finite": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Order/Filter/Finite.lean"
    },
    ".lake.packages.mathlib.Mathlib.Order.Filter.CountableSeparatingOn": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Order/Filter/CountableSeparatingOn.lean"
    },
    ".lake.packages.mathlib.Mathlib.Order.Filter.Cofinite": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Order/Filter/Cofinite.lean"
    },
    ".lake.packages.mathlib.Mathlib.Order.Filter.FilterProduct": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Order/Filter/FilterProduct.lean"
    },
    ".lake.packages.mathlib.Mathlib.Order.Filter.Cocardinal": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Order/Filter/Cocardinal.lean"
    },
    ".lake.packages.mathlib.Mathlib.Order.Filter.ENNReal": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Order/Filter/ENNReal.lean"
    },
    ".lake.packages.mathlib.Mathlib.Order.Filter.Ring": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Order/Filter/Ring.lean"
    },
    ".lake.packages.mathlib.Mathlib.Order.Filter.Curry": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Order/Filter/Curry.lean"
    },
    ".lake.packages.mathlib.Mathlib.Order.Filter.CountablyGenerated": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Order/Filter/CountablyGenerated.lean"
    },
    ".lake.packages.mathlib.Mathlib.Order.Filter.Tendsto": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Order/Filter/Tendsto.lean"
    },
    ".lake.packages.mathlib.Mathlib.Order.Filter.ZeroAndBoundedAtFilter": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Order/Filter/ZeroAndBoundedAtFilter.lean"
    },
    ".lake.packages.mathlib.Mathlib.Order.Filter.Interval": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Order/Filter/Interval.lean"
    },
    ".lake.packages.mathlib.Mathlib.Order.Filter.NAry": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Order/Filter/NAry.lean"
    },
    ".lake.packages.mathlib.Mathlib.Order.Filter.EventuallyConst": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Order/Filter/EventuallyConst.lean"
    },
    ".lake.packages.mathlib.Mathlib.Order.Filter.Prod": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Order/Filter/Prod.lean"
    },
    ".lake.packages.mathlib.Mathlib.Order.Filter.Partial": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Order/Filter/Partial.lean"
    },
    ".lake.packages.mathlib.Mathlib.Order.Filter.Pointwise": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Order/Filter/Pointwise.lean"
    },
    ".lake.packages.mathlib.Mathlib.Order.Filter.Map": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Order/Filter/Map.lean"
    },
    ".lake.packages.mathlib.Mathlib.Order.Filter.Pi": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Order/Filter/Pi.lean"
    },
    ".lake.packages.mathlib.Mathlib.Order.Filter.Basic": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Order/Filter/Basic.lean"
    },
    ".lake.packages.mathlib.Mathlib.Order.Filter.IsBounded": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Order/Filter/IsBounded.lean"
    },
    ".lake.packages.mathlib.Mathlib.Order.Filter.Defs": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Order/Filter/Defs.lean"
    },
    ".lake.packages.mathlib.Mathlib.Order.Filter.CountableInter": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Order/Filter/CountableInter.lean"
    },
    ".lake.packages.mathlib.Mathlib.Order.Filter.IndicatorFunction": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Order/Filter/IndicatorFunction.lean"
    },
    ".lake.packages.mathlib.Mathlib.Order.Filter.CardinalInter": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Order/Filter/CardinalInter.lean"
    },
    ".lake.packages.mathlib.Mathlib.Order.Filter.Ker": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Order/Filter/Ker.lean"
    },
    ".lake.packages.mathlib.Mathlib.Order.Filter.ListTraverse": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Order/Filter/ListTraverse.lean"
    },
    ".lake.packages.mathlib.Mathlib.Order.Filter.Subsingleton": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Order/Filter/Subsingleton.lean"
    },
    ".lake.packages.mathlib.Mathlib.Order.Filter.Lift": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Order/Filter/Lift.lean"
    },
    ".lake.packages.mathlib.Mathlib.Order.Filter.SmallSets": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Order/Filter/SmallSets.lean"
    },
    ".lake.packages.mathlib.Mathlib.Order.Filter.Extr": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Order/Filter/Extr.lean"
    },
    ".lake.packages.mathlib.Mathlib.Order.Filter.Germ.Basic": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Order/Filter/Germ/Basic.lean"
    },
    ".lake.packages.mathlib.Mathlib.Order.Filter.Germ.OrderedMonoid": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Order/Filter/Germ/OrderedMonoid.lean"
    },
    ".lake.packages.mathlib.Mathlib.Order.Filter.AtTopBot.ModEq": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Order/Filter/AtTopBot/ModEq.lean"
    },
    ".lake.packages.mathlib.Mathlib.Order.Filter.AtTopBot.Finite": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Order/Filter/AtTopBot/Finite.lean"
    },
    ".lake.packages.mathlib.Mathlib.Order.Filter.AtTopBot.Monoid": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Order/Filter/AtTopBot/Monoid.lean"
    },
    ".lake.packages.mathlib.Mathlib.Order.Filter.AtTopBot.Ring": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Order/Filter/AtTopBot/Ring.lean"
    },
    ".lake.packages.mathlib.Mathlib.Order.Filter.AtTopBot.CountablyGenerated": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Order/Filter/AtTopBot/CountablyGenerated.lean"
    },
    ".lake.packages.mathlib.Mathlib.Order.Filter.AtTopBot.Tendsto": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Order/Filter/AtTopBot/Tendsto.lean"
    },
    ".lake.packages.mathlib.Mathlib.Order.Filter.AtTopBot.Group": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Order/Filter/AtTopBot/Group.lean"
    },
    ".lake.packages.mathlib.Mathlib.Order.Filter.AtTopBot.Prod": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Order/Filter/AtTopBot/Prod.lean"
    },
    ".lake.packages.mathlib.Mathlib.Order.Filter.AtTopBot.Archimedean": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Order/Filter/AtTopBot/Archimedean.lean"
    },
    ".lake.packages.mathlib.Mathlib.Order.Filter.AtTopBot.Map": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Order/Filter/AtTopBot/Map.lean"
    },
    ".lake.packages.mathlib.Mathlib.Order.Filter.AtTopBot.Finset": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Order/Filter/AtTopBot/Finset.lean"
    },
    ".lake.packages.mathlib.Mathlib.Order.Filter.AtTopBot.Basic": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Order/Filter/AtTopBot/Basic.lean"
    },
    ".lake.packages.mathlib.Mathlib.Order.Filter.AtTopBot.Disjoint": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Order/Filter/AtTopBot/Disjoint.lean"
    },
    ".lake.packages.mathlib.Mathlib.Order.Filter.AtTopBot.Defs": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Order/Filter/AtTopBot/Defs.lean"
    },
    ".lake.packages.mathlib.Mathlib.Order.Filter.AtTopBot.Floor": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Order/Filter/AtTopBot/Floor.lean"
    },
    ".lake.packages.mathlib.Mathlib.Order.Filter.AtTopBot.BigOperators": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Order/Filter/AtTopBot/BigOperators.lean"
    },
    ".lake.packages.mathlib.Mathlib.Order.Filter.AtTopBot.Field": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Order/Filter/AtTopBot/Field.lean"
    },
    ".lake.packages.mathlib.Mathlib.Order.Filter.AtTopBot.CompleteLattice": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Order/Filter/AtTopBot/CompleteLattice.lean"
    },
    ".lake.packages.mathlib.Mathlib.Order.Filter.Bases.Finite": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Order/Filter/Bases/Finite.lean"
    },
    ".lake.packages.mathlib.Mathlib.Order.Filter.Bases.Basic": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Order/Filter/Bases/Basic.lean"
    },
    ".lake.packages.mathlib.Mathlib.Order.Filter.Ultrafilter.Basic": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Order/Filter/Ultrafilter/Basic.lean"
    },
    ".lake.packages.mathlib.Mathlib.Order.Filter.Ultrafilter.Defs": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Order/Filter/Ultrafilter/Defs.lean"
    },
    ".lake.packages.mathlib.Mathlib.Order.Partition.Finpartition": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Order/Partition/Finpartition.lean"
    },
    ".lake.packages.mathlib.Mathlib.Order.Partition.Basic": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Order/Partition/Basic.lean"
    },
    ".lake.packages.mathlib.Mathlib.Order.Partition.Equipartition": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Order/Partition/Equipartition.lean"
    },
    ".lake.packages.mathlib.Mathlib.Order.Circular.ZMod": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Order/Circular/ZMod.lean"
    },
    ".lake.packages.mathlib.Mathlib.Order.CompleteLattice.Chain": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Order/CompleteLattice/Chain.lean"
    },
    ".lake.packages.mathlib.Mathlib.Order.CompleteLattice.Lemmas": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Order/CompleteLattice/Lemmas.lean"
    },
    ".lake.packages.mathlib.Mathlib.Order.CompleteLattice.Group": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Order/CompleteLattice/Group.lean"
    },
    ".lake.packages.mathlib.Mathlib.Order.CompleteLattice.Finset": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Order/CompleteLattice/Finset.lean"
    },
    ".lake.packages.mathlib.Mathlib.Order.CompleteLattice.Basic": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Order/CompleteLattice/Basic.lean"
    },
    ".lake.packages.mathlib.Mathlib.Order.CompleteLattice.Defs": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Order/CompleteLattice/Defs.lean"
    },
    ".lake.packages.mathlib.Mathlib.Order.CompleteLattice.MulticoequalizerDiagram": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Order/CompleteLattice/MulticoequalizerDiagram.lean"
    },
    ".lake.packages.mathlib.Mathlib.Order.CompleteLattice.SetLike": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Order/CompleteLattice/SetLike.lean"
    },
    ".lake.packages.mathlib.Mathlib.Order.GaloisConnection.Basic": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Order/GaloisConnection/Basic.lean"
    },
    ".lake.packages.mathlib.Mathlib.Order.GaloisConnection.Defs": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Order/GaloisConnection/Defs.lean"
    },
    ".lake.packages.mathlib.Mathlib.Order.CompactlyGenerated.Basic": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Order/CompactlyGenerated/Basic.lean"
    },
    ".lake.packages.mathlib.Mathlib.Order.CompactlyGenerated.Intervals": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Order/CompactlyGenerated/Intervals.lean"
    },
    ".lake.packages.mathlib.Mathlib.Order.Monotone.Odd": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Order/Monotone/Odd.lean"
    },
    ".lake.packages.mathlib.Mathlib.Order.Monotone.Monovary": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Order/Monotone/Monovary.lean"
    },
    ".lake.packages.mathlib.Mathlib.Order.Monotone.Union": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Order/Monotone/Union.lean"
    },
    ".lake.packages.mathlib.Mathlib.Order.Monotone.Extension": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Order/Monotone/Extension.lean"
    },
    ".lake.packages.mathlib.Mathlib.Order.Monotone.Basic": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Order/Monotone/Basic.lean"
    },
    ".lake.packages.mathlib.Mathlib.Order.Monotone.MonovaryOrder": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Order/Monotone/MonovaryOrder.lean"
    },
    ".lake.packages.mathlib.Mathlib.Order.Monotone.Defs": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Order/Monotone/Defs.lean"
    },
    ".lake.packages.mathlib.Mathlib.Order.Defs.Unbundled": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Order/Defs/Unbundled.lean"
    },
    ".lake.packages.mathlib.Mathlib.Order.Defs.LinearOrder": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Order/Defs/LinearOrder.lean"
    },
    ".lake.packages.mathlib.Mathlib.Order.Defs.PartialOrder": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Order/Defs/PartialOrder.lean"
    },
    ".lake.packages.mathlib.Mathlib.ModelTheory.PartialEquiv": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/ModelTheory/PartialEquiv.lean"
    },
    ".lake.packages.mathlib.Mathlib.ModelTheory.Skolem": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/ModelTheory/Skolem.lean"
    },
    ".lake.packages.mathlib.Mathlib.ModelTheory.Fraisse": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/ModelTheory/Fraisse.lean"
    },
    ".lake.packages.mathlib.Mathlib.ModelTheory.Semantics": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/ModelTheory/Semantics.lean"
    },
    ".lake.packages.mathlib.Mathlib.ModelTheory.Graph": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/ModelTheory/Graph.lean"
    },
    ".lake.packages.mathlib.Mathlib.ModelTheory.Complexity": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/ModelTheory/Complexity.lean"
    },
    ".lake.packages.mathlib.Mathlib.ModelTheory.ElementarySubstructures": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/ModelTheory/ElementarySubstructures.lean"
    },
    ".lake.packages.mathlib.Mathlib.ModelTheory.Quotients": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/ModelTheory/Quotients.lean"
    },
    ".lake.packages.mathlib.Mathlib.ModelTheory.LanguageMap": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/ModelTheory/LanguageMap.lean"
    },
    ".lake.packages.mathlib.Mathlib.ModelTheory.FinitelyGenerated": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/ModelTheory/FinitelyGenerated.lean"
    },
    ".lake.packages.mathlib.Mathlib.ModelTheory.Order": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/ModelTheory/Order.lean"
    },
    ".lake.packages.mathlib.Mathlib.ModelTheory.ElementaryMaps": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/ModelTheory/ElementaryMaps.lean"
    },
    ".lake.packages.mathlib.Mathlib.ModelTheory.DirectLimit": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/ModelTheory/DirectLimit.lean"
    },
    ".lake.packages.mathlib.Mathlib.ModelTheory.Syntax": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/ModelTheory/Syntax.lean"
    },
    ".lake.packages.mathlib.Mathlib.ModelTheory.Basic": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/ModelTheory/Basic.lean"
    },
    ".lake.packages.mathlib.Mathlib.ModelTheory.Satisfiability": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/ModelTheory/Satisfiability.lean"
    },
    ".lake.packages.mathlib.Mathlib.ModelTheory.Bundled": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/ModelTheory/Bundled.lean"
    },
    ".lake.packages.mathlib.Mathlib.ModelTheory.Substructures": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/ModelTheory/Substructures.lean"
    },
    ".lake.packages.mathlib.Mathlib.ModelTheory.Encoding": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/ModelTheory/Encoding.lean"
    },
    ".lake.packages.mathlib.Mathlib.ModelTheory.Ultraproducts": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/ModelTheory/Ultraproducts.lean"
    },
    ".lake.packages.mathlib.Mathlib.ModelTheory.Types": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/ModelTheory/Types.lean"
    },
    ".lake.packages.mathlib.Mathlib.ModelTheory.Equivalence": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/ModelTheory/Equivalence.lean"
    },
    ".lake.packages.mathlib.Mathlib.ModelTheory.Definability": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/ModelTheory/Definability.lean"
    },
    ".lake.packages.mathlib.Mathlib.ModelTheory.Arithmetic.Presburger.Basic": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/ModelTheory/Arithmetic/Presburger/Basic.lean"
    },
    ".lake.packages.mathlib.Mathlib.ModelTheory.Algebra.Field.IsAlgClosed": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/ModelTheory/Algebra/Field/IsAlgClosed.lean"
    },
    ".lake.packages.mathlib.Mathlib.ModelTheory.Algebra.Field.CharP": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/ModelTheory/Algebra/Field/CharP.lean"
    },
    ".lake.packages.mathlib.Mathlib.ModelTheory.Algebra.Field.Basic": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/ModelTheory/Algebra/Field/Basic.lean"
    },
    ".lake.packages.mathlib.Mathlib.ModelTheory.Algebra.Ring.Basic": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/ModelTheory/Algebra/Ring/Basic.lean"
    },
    ".lake.packages.mathlib.Mathlib.ModelTheory.Algebra.Ring.FreeCommRing": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/ModelTheory/Algebra/Ring/FreeCommRing.lean"
    },
    ".lake.packages.mathlib.Mathlib.ModelTheory.Algebra.Ring.Definability": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/ModelTheory/Algebra/Ring/Definability.lean"
    },
    ".lake.packages.mathlib.Mathlib.Topology.Germ": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Topology/Germ.lean"
    },
    ".lake.packages.mathlib.Mathlib.Topology.Covering": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Topology/Covering.lean"
    },
    ".lake.packages.mathlib.Mathlib.Topology.UrysohnsBounded": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Topology/UrysohnsBounded.lean"
    },
    ".lake.packages.mathlib.Mathlib.Topology.UnitInterval": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Topology/UnitInterval.lean"
    },
    ".lake.packages.mathlib.Mathlib.Topology.CompactOpen": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Topology/CompactOpen.lean"
    },
    ".lake.packages.mathlib.Mathlib.Topology.PartialHomeomorph": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Topology/PartialHomeomorph.lean"
    },
    ".lake.packages.mathlib.Mathlib.Topology.Exterior": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Topology/Exterior.lean"
    },
    ".lake.packages.mathlib.Mathlib.Topology.UrysohnsLemma": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Topology/UrysohnsLemma.lean"
    },
    ".lake.packages.mathlib.Mathlib.Topology.DenseEmbedding": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Topology/DenseEmbedding.lean"
    },
    ".lake.packages.mathlib.Mathlib.Topology.LocallyClosed": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Topology/LocallyClosed.lean"
    },
    ".lake.packages.mathlib.Mathlib.Topology.Specialization": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Topology/Specialization.lean"
    },
    ".lake.packages.mathlib.Mathlib.Topology.Bases": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Topology/Bases.lean"
    },
    ".lake.packages.mathlib.Mathlib.Topology.FiberPartition": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Topology/FiberPartition.lean"
    },
    ".lake.packages.mathlib.Mathlib.Topology.Clopen": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Topology/Clopen.lean"
    },
    ".lake.packages.mathlib.Mathlib.Topology.ClusterPt": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Topology/ClusterPt.lean"
    },
    ".lake.packages.mathlib.Mathlib.Topology.DerivedSet": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Topology/DerivedSet.lean"
    },
    ".lake.packages.mathlib.Mathlib.Topology.List": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Topology/List.lean"
    },
    ".lake.packages.mathlib.Mathlib.Topology.JacobsonSpace": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Topology/JacobsonSpace.lean"
    },
    ".lake.packages.mathlib.Mathlib.Topology.Piecewise": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Topology/Piecewise.lean"
    },
    ".lake.packages.mathlib.Mathlib.Topology.Inseparable": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Topology/Inseparable.lean"
    },
    ".lake.packages.mathlib.Mathlib.Topology.Partial": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Topology/Partial.lean"
    },
    ".lake.packages.mathlib.Mathlib.Topology.SeparatedMap": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Topology/SeparatedMap.lean"
    },
    ".lake.packages.mathlib.Mathlib.Topology.Perfect": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Topology/Perfect.lean"
    },
    ".lake.packages.mathlib.Mathlib.Topology.IndicatorConstPointwise": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Topology/IndicatorConstPointwise.lean"
    },
    ".lake.packages.mathlib.Mathlib.Topology.Closure": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Topology/Closure.lean"
    },
    ".lake.packages.mathlib.Mathlib.Topology.Order": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Topology/Order.lean"
    },
    ".lake.packages.mathlib.Mathlib.Topology.IsLocalHomeomorph": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Topology/IsLocalHomeomorph.lean"
    },
    ".lake.packages.mathlib.Mathlib.Topology.Coherent": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Topology/Coherent.lean"
    },
    ".lake.packages.mathlib.Mathlib.Topology.Neighborhoods": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Topology/Neighborhoods.lean"
    },
    ".lake.packages.mathlib.Mathlib.Topology.Basic": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Topology/Basic.lean"
    },
    ".lake.packages.mathlib.Mathlib.Topology.AlexandrovDiscrete": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Topology/AlexandrovDiscrete.lean"
    },
    ".lake.packages.mathlib.Mathlib.Topology.Gluing": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Topology/Gluing.lean"
    },
    ".lake.packages.mathlib.Mathlib.Topology.Semicontinuous": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Topology/Semicontinuous.lean"
    },
    ".lake.packages.mathlib.Mathlib.Topology.Filter": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Topology/Filter.lean"
    },
    ".lake.packages.mathlib.Mathlib.Topology.Constructions": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Topology/Constructions.lean"
    },
    ".lake.packages.mathlib.Mathlib.Topology.Path": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Topology/Path.lean"
    },
    ".lake.packages.mathlib.Mathlib.Topology.Sober": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Topology/Sober.lean"
    },
    ".lake.packages.mathlib.Mathlib.Topology.DiscreteQuotient": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Topology/DiscreteQuotient.lean"
    },
    ".lake.packages.mathlib.Mathlib.Topology.NhdsKer": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Topology/NhdsKer.lean"
    },
    ".lake.packages.mathlib.Mathlib.Topology.NoetherianSpace": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Topology/NoetherianSpace.lean"
    },
    ".lake.packages.mathlib.Mathlib.Topology.TietzeExtension": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Topology/TietzeExtension.lean"
    },
    ".lake.packages.mathlib.Mathlib.Topology.ApproximateUnit": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Topology/ApproximateUnit.lean"
    },
    ".lake.packages.mathlib.Mathlib.Topology.Ultrafilter": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Topology/Ultrafilter.lean"
    },
    ".lake.packages.mathlib.Mathlib.Topology.ClopenBox": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Topology/ClopenBox.lean"
    },
    ".lake.packages.mathlib.Mathlib.Topology.StoneCech": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Topology/StoneCech.lean"
    },
    ".lake.packages.mathlib.Mathlib.Topology.KrullDimension": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Topology/KrullDimension.lean"
    },
    ".lake.packages.mathlib.Mathlib.Topology.ContinuousOn": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Topology/ContinuousOn.lean"
    },
    ".lake.packages.mathlib.Mathlib.Topology.ShrinkingLemma": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Topology/ShrinkingLemma.lean"
    },
    ".lake.packages.mathlib.Mathlib.Topology.Continuous": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Topology/Continuous.lean"
    },
    ".lake.packages.mathlib.Mathlib.Topology.LocallyFinsupp": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Topology/LocallyFinsupp.lean"
    },
    ".lake.packages.mathlib.Mathlib.Topology.PreorderRestrict": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Topology/PreorderRestrict.lean"
    },
    ".lake.packages.mathlib.Mathlib.Topology.OmegaCompletePartialOrder": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Topology/OmegaCompletePartialOrder.lean"
    },
    ".lake.packages.mathlib.Mathlib.Topology.NhdsSet": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Topology/NhdsSet.lean"
    },
    ".lake.packages.mathlib.Mathlib.Topology.Irreducible": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Topology/Irreducible.lean"
    },
    ".lake.packages.mathlib.Mathlib.Topology.ExtremallyDisconnected": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Topology/ExtremallyDisconnected.lean"
    },
    ".lake.packages.mathlib.Mathlib.Topology.QuasiSeparated": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Topology/QuasiSeparated.lean"
    },
    ".lake.packages.mathlib.Mathlib.Topology.LocalAtTarget": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Topology/LocalAtTarget.lean"
    },
    ".lake.packages.mathlib.Mathlib.Topology.PartitionOfUnity": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Topology/PartitionOfUnity.lean"
    },
    ".lake.packages.mathlib.Mathlib.Topology.DiscreteSubset": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Topology/DiscreteSubset.lean"
    },
    ".lake.packages.mathlib.Mathlib.Topology.Sequences": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Topology/Sequences.lean"
    },
    ".lake.packages.mathlib.Mathlib.Topology.IsClosedRestrict": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Topology/IsClosedRestrict.lean"
    },
    ".lake.packages.mathlib.Mathlib.Topology.Constructible": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Topology/Constructible.lean"
    },
    ".lake.packages.mathlib.Mathlib.Topology.LocallyFinite": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Topology/LocallyFinite.lean"
    },
    ".lake.packages.mathlib.Mathlib.Topology.ExtendFrom": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Topology/ExtendFrom.lean"
    },
    ".lake.packages.mathlib.Mathlib.Topology.Maps.Basic": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Topology/Maps/Basic.lean"
    },
    ".lake.packages.mathlib.Mathlib.Topology.Maps.OpenQuotient": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Topology/Maps/OpenQuotient.lean"
    },
    ".lake.packages.mathlib.Mathlib.Topology.Maps.Proper.CompactlyGenerated": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Topology/Maps/Proper/CompactlyGenerated.lean"
    },
    ".lake.packages.mathlib.Mathlib.Topology.Maps.Proper.Basic": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Topology/Maps/Proper/Basic.lean"
    },
    ".lake.packages.mathlib.Mathlib.Topology.Maps.Proper.UniversallyClosed": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Topology/Maps/Proper/UniversallyClosed.lean"
    },
    ".lake.packages.mathlib.Mathlib.Topology.Order.IsLocallyClosed": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Topology/Order/IsLocallyClosed.lean"
    },
    ".lake.packages.mathlib.Mathlib.Topology.Order.MonotoneContinuity": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Topology/Order/MonotoneContinuity.lean"
    },
    ".lake.packages.mathlib.Mathlib.Topology.Order.LowerUpperTopology": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Topology/Order/LowerUpperTopology.lean"
    },
    ".lake.packages.mathlib.Mathlib.Topology.Order.DenselyOrdered": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Topology/Order/DenselyOrdered.lean"
    },
    ".lake.packages.mathlib.Mathlib.Topology.Order.OrderClosedExtr": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Topology/Order/OrderClosedExtr.lean"
    },
    ".lake.packages.mathlib.Mathlib.Topology.Order.Bornology": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Topology/Order/Bornology.lean"
    },
    ".lake.packages.mathlib.Mathlib.Topology.Order.Compact": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Topology/Order/Compact.lean"
    },
    ".lake.packages.mathlib.Mathlib.Topology.Order.ScottTopology": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Topology/Order/ScottTopology.lean"
    },
    ".lake.packages.mathlib.Mathlib.Topology.Order.CountableSeparating": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Topology/Order/CountableSeparating.lean"
    },
    ".lake.packages.mathlib.Mathlib.Topology.Order.T5": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Topology/Order/T5.lean"
    },
    ".lake.packages.mathlib.Mathlib.Topology.Order.ExtrClosure": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Topology/Order/ExtrClosure.lean"
    },
    ".lake.packages.mathlib.Mathlib.Topology.Order.LiminfLimsup": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Topology/Order/LiminfLimsup.lean"
    },
    ".lake.packages.mathlib.Mathlib.Topology.Order.IntermediateValue": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Topology/Order/IntermediateValue.lean"
    },
    ".lake.packages.mathlib.Mathlib.Topology.Order.Basic": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Topology/Order/Basic.lean"
    },
    ".lake.packages.mathlib.Mathlib.Topology.Order.Priestley": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Topology/Order/Priestley.lean"
    },
    ".lake.packages.mathlib.Mathlib.Topology.Order.ProjIcc": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Topology/Order/ProjIcc.lean"
    },
    ".lake.packages.mathlib.Mathlib.Topology.Order.PartialSups": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Topology/Order/PartialSups.lean"
    },
    ".lake.packages.mathlib.Mathlib.Topology.Order.IsLUB": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Topology/Order/IsLUB.lean"
    },
    ".lake.packages.mathlib.Mathlib.Topology.Order.Filter": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Topology/Order/Filter.lean"
    },
    ".lake.packages.mathlib.Mathlib.Topology.Order.OrderClosed": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Topology/Order/OrderClosed.lean"
    },
    ".lake.packages.mathlib.Mathlib.Topology.Order.LeftRight": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Topology/Order/LeftRight.lean"
    },
    ".lake.packages.mathlib.Mathlib.Topology.Order.LeftRightLim": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Topology/Order/LeftRightLim.lean"
    },
    ".lake.packages.mathlib.Mathlib.Topology.Order.LawsonTopology": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Topology/Order/LawsonTopology.lean"
    },
    ".lake.packages.mathlib.Mathlib.Topology.Order.MonotoneConvergence": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Topology/Order/MonotoneConvergence.lean"
    },
    ".lake.packages.mathlib.Mathlib.Topology.Order.NhdsSet": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Topology/Order/NhdsSet.lean"
    },
    ".lake.packages.mathlib.Mathlib.Topology.Order.UpperLowerSetTopology": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Topology/Order/UpperLowerSetTopology.lean"
    },
    ".lake.packages.mathlib.Mathlib.Topology.Order.LeftRightNhds": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Topology/Order/LeftRightNhds.lean"
    },
    ".lake.packages.mathlib.Mathlib.Topology.Order.Monotone": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Topology/Order/Monotone.lean"
    },
    ".lake.packages.mathlib.Mathlib.Topology.Order.Lattice": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Topology/Order/Lattice.lean"
    },
    ".lake.packages.mathlib.Mathlib.Topology.Order.HullKernel": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Topology/Order/HullKernel.lean"
    },
    ".lake.packages.mathlib.Mathlib.Topology.Order.Rolle": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Topology/Order/Rolle.lean"
    },
    ".lake.packages.mathlib.Mathlib.Topology.Order.LocalExtr": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Topology/Order/LocalExtr.lean"
    },
    ".lake.packages.mathlib.Mathlib.Topology.Order.ExtendFrom": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Topology/Order/ExtendFrom.lean"
    },
    ".lake.packages.mathlib.Mathlib.Topology.Order.Real": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Topology/Order/Real.lean"
    },
    ".lake.packages.mathlib.Mathlib.Topology.Order.Hom.Esakia": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Topology/Order/Hom/Esakia.lean"
    },
    ".lake.packages.mathlib.Mathlib.Topology.Order.Hom.Basic": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Topology/Order/Hom/Basic.lean"
    },
    ".lake.packages.mathlib.Mathlib.Topology.Order.Category.FrameAdjunction": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Topology/Order/Category/FrameAdjunction.lean"
    },
    ".lake.packages.mathlib.Mathlib.Topology.Order.Category.AlexDisc": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Topology/Order/Category/AlexDisc.lean"
    },
    ".lake.packages.mathlib.Mathlib.Topology.Hom.ContinuousEval": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Topology/Hom/ContinuousEval.lean"
    },
    ".lake.packages.mathlib.Mathlib.Topology.Hom.ContinuousEvalConst": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Topology/Hom/ContinuousEvalConst.lean"
    },
    ".lake.packages.mathlib.Mathlib.Topology.Hom.Open": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Topology/Hom/Open.lean"
    },
    ".lake.packages.mathlib.Mathlib.Topology.CWComplex.Abstract.Basic": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Topology/CWComplex/Abstract/Basic.lean"
    },
    ".lake.packages.mathlib.Mathlib.Topology.CWComplex.Classical.Finite": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Topology/CWComplex/Classical/Finite.lean"
    },
    ".lake.packages.mathlib.Mathlib.Topology.CWComplex.Classical.Basic": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Topology/CWComplex/Classical/Basic.lean"
    },
    ".lake.packages.mathlib.Mathlib.Topology.LocallyConstant.Basic": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Topology/LocallyConstant/Basic.lean"
    },
    ".lake.packages.mathlib.Mathlib.Topology.LocallyConstant.Algebra": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Topology/LocallyConstant/Algebra.lean"
    },
    ".lake.packages.mathlib.Mathlib.Topology.Category.Sequential": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Topology/Category/Sequential.lean"
    },
    ".lake.packages.mathlib.Mathlib.Topology.Category.CompactlyGenerated": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Topology/Category/CompactlyGenerated.lean"
    },
    ".lake.packages.mathlib.Mathlib.Topology.Category.Born": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Topology/Category/Born.lean"
    },
    ".lake.packages.mathlib.Mathlib.Topology.Category.TopCommRingCat": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Topology/Category/TopCommRingCat.lean"
    },
    ".lake.packages.mathlib.Mathlib.Topology.Category.FinTopCat": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Topology/Category/FinTopCat.lean"
    },
    ".lake.packages.mathlib.Mathlib.Topology.Category.UniformSpace": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Topology/Category/UniformSpace.lean"
    },
    ".lake.packages.mathlib.Mathlib.Topology.Category.DeltaGenerated": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Topology/Category/DeltaGenerated.lean"
    },
    ".lake.packages.mathlib.Mathlib.Topology.Category.Locale": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Topology/Category/Locale.lean"
    },
    ".lake.packages.mathlib.Mathlib.Topology.Category.Compactum": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Topology/Category/Compactum.lean"
    },
    ".lake.packages.mathlib.Mathlib.Topology.Category.LightProfinite.EffectiveEpi": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Topology/Category/LightProfinite/EffectiveEpi.lean"
    },
    ".lake.packages.mathlib.Mathlib.Topology.Category.LightProfinite.Sequence": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Topology/Category/LightProfinite/Sequence.lean"
    },
    ".lake.packages.mathlib.Mathlib.Topology.Category.LightProfinite.Basic": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Topology/Category/LightProfinite/Basic.lean"
    },
    ".lake.packages.mathlib.Mathlib.Topology.Category.LightProfinite.Limits": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Topology/Category/LightProfinite/Limits.lean"
    },
    ".lake.packages.mathlib.Mathlib.Topology.Category.LightProfinite.Extend": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Topology/Category/LightProfinite/Extend.lean"
    },
    ".lake.packages.mathlib.Mathlib.Topology.Category.LightProfinite.AsLimit": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Topology/Category/LightProfinite/AsLimit.lean"
    },
    ".lake.packages.mathlib.Mathlib.Topology.Category.TopCat.Yoneda": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Topology/Category/TopCat/Yoneda.lean"
    },
    ".lake.packages.mathlib.Mathlib.Topology.Category.TopCat.EpiMono": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Topology/Category/TopCat/EpiMono.lean"
    },
    ".lake.packages.mathlib.Mathlib.Topology.Category.TopCat.Opens": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Topology/Category/TopCat/Opens.lean"
    },
    ".lake.packages.mathlib.Mathlib.Topology.Category.TopCat.EffectiveEpi": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Topology/Category/TopCat/EffectiveEpi.lean"
    },
    ".lake.packages.mathlib.Mathlib.Topology.Category.TopCat.Basic": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Topology/Category/TopCat/Basic.lean"
    },
    ".lake.packages.mathlib.Mathlib.Topology.Category.TopCat.ULift": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Topology/Category/TopCat/ULift.lean"
    },
    ".lake.packages.mathlib.Mathlib.Topology.Category.TopCat.OpenNhds": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Topology/Category/TopCat/OpenNhds.lean"
    },
    ".lake.packages.mathlib.Mathlib.Topology.Category.TopCat.Sphere": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Topology/Category/TopCat/Sphere.lean"
    },
    ".lake.packages.mathlib.Mathlib.Topology.Category.TopCat.Adjunctions": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Topology/Category/TopCat/Adjunctions.lean"
    },
    ".lake.packages.mathlib.Mathlib.Topology.Category.TopCat.Limits.Products": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Topology/Category/TopCat/Limits/Products.lean"
    },
    ".lake.packages.mathlib.Mathlib.Topology.Category.TopCat.Limits.Konig": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Topology/Category/TopCat/Limits/Konig.lean"
    },
    ".lake.packages.mathlib.Mathlib.Topology.Category.TopCat.Limits.Basic": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Topology/Category/TopCat/Limits/Basic.lean"
    },
    ".lake.packages.mathlib.Mathlib.Topology.Category.TopCat.Limits.Cofiltered": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Topology/Category/TopCat/Limits/Cofiltered.lean"
    },
    ".lake.packages.mathlib.Mathlib.Topology.Category.TopCat.Limits.Pullbacks": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Topology/Category/TopCat/Limits/Pullbacks.lean"
    },
    ".lake.packages.mathlib.Mathlib.Topology.Category.CompHausLike.SigmaComparison": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Topology/Category/CompHausLike/SigmaComparison.lean"
    },
    ".lake.packages.mathlib.Mathlib.Topology.Category.CompHausLike.EffectiveEpi": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Topology/Category/CompHausLike/EffectiveEpi.lean"
    },
    ".lake.packages.mathlib.Mathlib.Topology.Category.CompHausLike.Basic": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Topology/Category/CompHausLike/Basic.lean"
    },
    ".lake.packages.mathlib.Mathlib.Topology.Category.CompHausLike.Limits": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Topology/Category/CompHausLike/Limits.lean"
    },
    ".lake.packages.mathlib.Mathlib.Topology.Category.Profinite.CofilteredLimit": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Topology/Category/Profinite/CofilteredLimit.lean"
    },
    ".lake.packages.mathlib.Mathlib.Topology.Category.Profinite.EffectiveEpi": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Topology/Category/Profinite/EffectiveEpi.lean"
    },
    ".lake.packages.mathlib.Mathlib.Topology.Category.Profinite.Product": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Topology/Category/Profinite/Product.lean"
    },
    ".lake.packages.mathlib.Mathlib.Topology.Category.Profinite.Basic": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Topology/Category/Profinite/Basic.lean"
    },
    ".lake.packages.mathlib.Mathlib.Topology.Category.Profinite.Nobeling": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Topology/Category/Profinite/Nobeling.lean"
    },
    ".lake.packages.mathlib.Mathlib.Topology.Category.Profinite.Projective": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Topology/Category/Profinite/Projective.lean"
    },
    ".lake.packages.mathlib.Mathlib.Topology.Category.Profinite.Limits": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Topology/Category/Profinite/Limits.lean"
    },
    ".lake.packages.mathlib.Mathlib.Topology.Category.Profinite.Extend": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Topology/Category/Profinite/Extend.lean"
    },
    ".lake.packages.mathlib.Mathlib.Topology.Category.Profinite.AsLimit": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Topology/Category/Profinite/AsLimit.lean"
    },
    ".lake.packages.mathlib.Mathlib.Topology.Category.Profinite.Nobeling.Successor": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Topology/Category/Profinite/Nobeling/Successor.lean"
    },
    ".lake.packages.mathlib.Mathlib.Topology.Category.Profinite.Nobeling.Basic": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Topology/Category/Profinite/Nobeling/Basic.lean"
    },
    ".lake.packages.mathlib.Mathlib.Topology.Category.Profinite.Nobeling.Span": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Topology/Category/Profinite/Nobeling/Span.lean"
    },
    ".lake.packages.mathlib.Mathlib.Topology.Category.Profinite.Nobeling.ZeroLimit": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Topology/Category/Profinite/Nobeling/ZeroLimit.lean"
    },
    ".lake.packages.mathlib.Mathlib.Topology.Category.Profinite.Nobeling.Induction": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Topology/Category/Profinite/Nobeling/Induction.lean"
    },
    ".lake.packages.mathlib.Mathlib.Topology.Category.CompHaus.EffectiveEpi": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Topology/Category/CompHaus/EffectiveEpi.lean"
    },
    ".lake.packages.mathlib.Mathlib.Topology.Category.CompHaus.Basic": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Topology/Category/CompHaus/Basic.lean"
    },
    ".lake.packages.mathlib.Mathlib.Topology.Category.CompHaus.Projective": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Topology/Category/CompHaus/Projective.lean"
    },
    ".lake.packages.mathlib.Mathlib.Topology.Category.CompHaus.Limits": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Topology/Category/CompHaus/Limits.lean"
    },
    ".lake.packages.mathlib.Mathlib.Topology.Category.CompHaus.Frm": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Topology/Category/CompHaus/Frm.lean"
    },
    ".lake.packages.mathlib.Mathlib.Topology.Category.Stonean.EffectiveEpi": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Topology/Category/Stonean/EffectiveEpi.lean"
    },
    ".lake.packages.mathlib.Mathlib.Topology.Category.Stonean.Basic": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Topology/Category/Stonean/Basic.lean"
    },
    ".lake.packages.mathlib.Mathlib.Topology.Category.Stonean.Limits": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Topology/Category/Stonean/Limits.lean"
    },
    ".lake.packages.mathlib.Mathlib.Topology.Category.Stonean.Adjunctions": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Topology/Category/Stonean/Adjunctions.lean"
    },
    ".lake.packages.mathlib.Mathlib.Topology.Connected.TotallyDisconnected": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Topology/Connected/TotallyDisconnected.lean"
    },
    ".lake.packages.mathlib.Mathlib.Topology.Connected.Clopen": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Topology/Connected/Clopen.lean"
    },
    ".lake.packages.mathlib.Mathlib.Topology.Connected.Basic": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Topology/Connected/Basic.lean"
    },
    ".lake.packages.mathlib.Mathlib.Topology.Connected.PathComponentOne": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Topology/Connected/PathComponentOne.lean"
    },
    ".lake.packages.mathlib.Mathlib.Topology.Connected.PathConnected": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Topology/Connected/PathConnected.lean"
    },
    ".lake.packages.mathlib.Mathlib.Topology.Connected.Separation": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Topology/Connected/Separation.lean"
    },
    ".lake.packages.mathlib.Mathlib.Topology.Connected.LocPathConnected": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Topology/Connected/LocPathConnected.lean"
    },
    ".lake.packages.mathlib.Mathlib.Topology.Connected.LocallyConnected": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Topology/Connected/LocallyConnected.lean"
    },
    ".lake.packages.mathlib.Mathlib.Topology.ContinuousMap.ContinuousSqrt": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Topology/ContinuousMap/ContinuousSqrt.lean"
    },
    ".lake.packages.mathlib.Mathlib.Topology.ContinuousMap.Weierstrass": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Topology/ContinuousMap/Weierstrass.lean"
    },
    ".lake.packages.mathlib.Mathlib.Topology.ContinuousMap.StoneWeierstrass": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Topology/ContinuousMap/StoneWeierstrass.lean"
    },
    ".lake.packages.mathlib.Mathlib.Topology.ContinuousMap.Compact": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Topology/ContinuousMap/Compact.lean"
    },
    ".lake.packages.mathlib.Mathlib.Topology.ContinuousMap.Ideals": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Topology/ContinuousMap/Ideals.lean"
    },
    ".lake.packages.mathlib.Mathlib.Topology.ContinuousMap.Star": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Topology/ContinuousMap/Star.lean"
    },
    ".lake.packages.mathlib.Mathlib.Topology.ContinuousMap.Interval": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Topology/ContinuousMap/Interval.lean"
    },
    ".lake.packages.mathlib.Mathlib.Topology.ContinuousMap.Sigma": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Topology/ContinuousMap/Sigma.lean"
    },
    ".lake.packages.mathlib.Mathlib.Topology.ContinuousMap.CocompactMap": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Topology/ContinuousMap/CocompactMap.lean"
    },
    ".lake.packages.mathlib.Mathlib.Topology.ContinuousMap.CompactlySupported": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Topology/ContinuousMap/CompactlySupported.lean"
    },
    ".lake.packages.mathlib.Mathlib.Topology.ContinuousMap.Basic": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Topology/ContinuousMap/Basic.lean"
    },
    ".lake.packages.mathlib.Mathlib.Topology.ContinuousMap.Defs": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Topology/ContinuousMap/Defs.lean"
    },
    ".lake.packages.mathlib.Mathlib.Topology.ContinuousMap.SecondCountableSpace": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Topology/ContinuousMap/SecondCountableSpace.lean"
    },
    ".lake.packages.mathlib.Mathlib.Topology.ContinuousMap.Ordered": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Topology/ContinuousMap/Ordered.lean"
    },
    ".lake.packages.mathlib.Mathlib.Topology.ContinuousMap.T0Sierpinski": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Topology/ContinuousMap/T0Sierpinski.lean"
    },
    ".lake.packages.mathlib.Mathlib.Topology.ContinuousMap.Periodic": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Topology/ContinuousMap/Periodic.lean"
    },
    ".lake.packages.mathlib.Mathlib.Topology.ContinuousMap.LocallyConstant": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Topology/ContinuousMap/LocallyConstant.lean"
    },
    ".lake.packages.mathlib.Mathlib.Topology.ContinuousMap.ContinuousMapZero": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Topology/ContinuousMap/ContinuousMapZero.lean"
    },
    ".lake.packages.mathlib.Mathlib.Topology.ContinuousMap.Polynomial": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Topology/ContinuousMap/Polynomial.lean"
    },
    ".lake.packages.mathlib.Mathlib.Topology.ContinuousMap.StarOrdered": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Topology/ContinuousMap/StarOrdered.lean"
    },
    ".lake.packages.mathlib.Mathlib.Topology.ContinuousMap.BoundedCompactlySupported": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Topology/ContinuousMap/BoundedCompactlySupported.lean"
    },
    ".lake.packages.mathlib.Mathlib.Topology.ContinuousMap.Algebra": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Topology/ContinuousMap/Algebra.lean"
    },
    ".lake.packages.mathlib.Mathlib.Topology.ContinuousMap.Lattice": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Topology/ContinuousMap/Lattice.lean"
    },
    ".lake.packages.mathlib.Mathlib.Topology.ContinuousMap.Units": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Topology/ContinuousMap/Units.lean"
    },
    ".lake.packages.mathlib.Mathlib.Topology.ContinuousMap.ZeroAtInfty": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Topology/ContinuousMap/ZeroAtInfty.lean"
    },
    ".lake.packages.mathlib.Mathlib.Topology.ContinuousMap.LocallyConvex": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Topology/ContinuousMap/LocallyConvex.lean"
    },
    ".lake.packages.mathlib.Mathlib.Topology.ContinuousMap.Bounded.Normed": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Topology/ContinuousMap/Bounded/Normed.lean"
    },
    ".lake.packages.mathlib.Mathlib.Topology.ContinuousMap.Bounded.Star": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Topology/ContinuousMap/Bounded/Star.lean"
    },
    ".lake.packages.mathlib.Mathlib.Topology.ContinuousMap.Bounded.ArzelaAscoli": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Topology/ContinuousMap/Bounded/ArzelaAscoli.lean"
    },
    ".lake.packages.mathlib.Mathlib.Topology.ContinuousMap.Bounded.Basic": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Topology/ContinuousMap/Bounded/Basic.lean"
    },
    ".lake.packages.mathlib.Mathlib.Topology.Homotopy.Lifting": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Topology/Homotopy/Lifting.lean"
    },
    ".lake.packages.mathlib.Mathlib.Topology.Homotopy.Product": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Topology/Homotopy/Product.lean"
    },
    ".lake.packages.mathlib.Mathlib.Topology.Homotopy.Basic": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Topology/Homotopy/Basic.lean"
    },
    ".lake.packages.mathlib.Mathlib.Topology.Homotopy.HSpaces": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Topology/Homotopy/HSpaces.lean"
    },
    ".lake.packages.mathlib.Mathlib.Topology.Homotopy.Path": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Topology/Homotopy/Path.lean"
    },
    ".lake.packages.mathlib.Mathlib.Topology.Homotopy.Contractible": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Topology/Homotopy/Contractible.lean"
    },
    ".lake.packages.mathlib.Mathlib.Topology.Homotopy.Equiv": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Topology/Homotopy/Equiv.lean"
    },
    ".lake.packages.mathlib.Mathlib.Topology.Homotopy.HomotopyGroup": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Topology/Homotopy/HomotopyGroup.lean"
    },
    ".lake.packages.mathlib.Mathlib.Topology.Compactification.OnePointEquiv": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Topology/Compactification/OnePointEquiv.lean"
    },
    ".lake.packages.mathlib.Mathlib.Topology.Compactification.StoneCech": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Topology/Compactification/StoneCech.lean"
    },
    ".lake.packages.mathlib.Mathlib.Topology.Compactification.OnePoint": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Topology/Compactification/OnePoint.lean"
    },
    ".lake.packages.mathlib.Mathlib.Topology.Compactification.OnePoint.Basic": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Topology/Compactification/OnePoint/Basic.lean"
    },
    ".lake.packages.mathlib.Mathlib.Topology.Compactification.OnePoint.ProjectiveLine": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Topology/Compactification/OnePoint/ProjectiveLine.lean"
    },
    ".lake.packages.mathlib.Mathlib.Topology.Compactification.OnePoint.Sphere": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Topology/Compactification/OnePoint/Sphere.lean"
    },
    ".lake.packages.mathlib.Mathlib.Topology.Bornology.BoundedOperation": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Topology/Bornology/BoundedOperation.lean"
    },
    ".lake.packages.mathlib.Mathlib.Topology.Bornology.Basic": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Topology/Bornology/Basic.lean"
    },
    ".lake.packages.mathlib.Mathlib.Topology.Bornology.Constructions": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Topology/Bornology/Constructions.lean"
    },
    ".lake.packages.mathlib.Mathlib.Topology.Bornology.Absorbs": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Topology/Bornology/Absorbs.lean"
    },
    ".lake.packages.mathlib.Mathlib.Topology.Bornology.Hom": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Topology/Bornology/Hom.lean"
    },
    ".lake.packages.mathlib.Mathlib.Topology.Bornology.Real": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Topology/Bornology/Real.lean"
    },
    ".lake.packages.mathlib.Mathlib.Topology.Constructions.SumProd": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Topology/Constructions/SumProd.lean"
    },
    ".lake.packages.mathlib.Mathlib.Topology.Homeomorph.Lemmas": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Topology/Homeomorph/Lemmas.lean"
    },
    ".lake.packages.mathlib.Mathlib.Topology.Homeomorph.Defs": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Topology/Homeomorph/Defs.lean"
    },
    ".lake.packages.mathlib.Mathlib.Topology.Spectral.Prespectral": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Topology/Spectral/Prespectral.lean"
    },
    ".lake.packages.mathlib.Mathlib.Topology.Spectral.Basic": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Topology/Spectral/Basic.lean"
    },
    ".lake.packages.mathlib.Mathlib.Topology.Spectral.Hom": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Topology/Spectral/Hom.lean"
    },
    ".lake.packages.mathlib.Mathlib.Topology.EMetricSpace.Paracompact": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Topology/EMetricSpace/Paracompact.lean"
    },
    ".lake.packages.mathlib.Mathlib.Topology.EMetricSpace.Pi": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Topology/EMetricSpace/Pi.lean"
    },
    ".lake.packages.mathlib.Mathlib.Topology.EMetricSpace.Basic": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Topology/EMetricSpace/Basic.lean"
    },
    ".lake.packages.mathlib.Mathlib.Topology.EMetricSpace.Defs": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Topology/EMetricSpace/Defs.lean"
    },
    ".lake.packages.mathlib.Mathlib.Topology.EMetricSpace.Diam": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Topology/EMetricSpace/Diam.lean"
    },
    ".lake.packages.mathlib.Mathlib.Topology.EMetricSpace.Lipschitz": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Topology/EMetricSpace/Lipschitz.lean"
    },
    ".lake.packages.mathlib.Mathlib.Topology.EMetricSpace.BoundedVariation": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Topology/EMetricSpace/BoundedVariation.lean"
    },
    ".lake.packages.mathlib.Mathlib.Topology.MetricSpace.ProperSpace": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Topology/MetricSpace/ProperSpace.lean"
    },
    ".lake.packages.mathlib.Mathlib.Topology.MetricSpace.Thickening": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Topology/MetricSpace/Thickening.lean"
    },
    ".lake.packages.mathlib.Mathlib.Topology.MetricSpace.HausdorffDimension": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Topology/MetricSpace/HausdorffDimension.lean"
    },
    ".lake.packages.mathlib.Mathlib.Topology.MetricSpace.GromovHausdorff": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Topology/MetricSpace/GromovHausdorff.lean"
    },
    ".lake.packages.mathlib.Mathlib.Topology.MetricSpace.Dilation": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Topology/MetricSpace/Dilation.lean"
    },
    ".lake.packages.mathlib.Mathlib.Topology.MetricSpace.ThickenedIndicator": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Topology/MetricSpace/ThickenedIndicator.lean"
    },
    ".lake.packages.mathlib.Mathlib.Topology.MetricSpace.Infsep": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Topology/MetricSpace/Infsep.lean"
    },
    ".lake.packages.mathlib.Mathlib.Topology.MetricSpace.HolderNorm": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Topology/MetricSpace/HolderNorm.lean"
    },
    ".lake.packages.mathlib.Mathlib.Topology.MetricSpace.Bilipschitz": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Topology/MetricSpace/Bilipschitz.lean"
    },
    ".lake.packages.mathlib.Mathlib.Topology.MetricSpace.Isometry": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Topology/MetricSpace/Isometry.lean"
    },
    ".lake.packages.mathlib.Mathlib.Topology.MetricSpace.Perfect": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Topology/MetricSpace/Perfect.lean"
    },
    ".lake.packages.mathlib.Mathlib.Topology.MetricSpace.Kuratowski": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Topology/MetricSpace/Kuratowski.lean"
    },
    ".lake.packages.mathlib.Mathlib.Topology.MetricSpace.Cauchy": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Topology/MetricSpace/Cauchy.lean"
    },
    ".lake.packages.mathlib.Mathlib.Topology.MetricSpace.Holder": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Topology/MetricSpace/Holder.lean"
    },
    ".lake.packages.mathlib.Mathlib.Topology.MetricSpace.Completion": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Topology/MetricSpace/Completion.lean"
    },
    ".lake.packages.mathlib.Mathlib.Topology.MetricSpace.BundledFun": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Topology/MetricSpace/BundledFun.lean"
    },
    ".lake.packages.mathlib.Mathlib.Topology.MetricSpace.Closeds": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Topology/MetricSpace/Closeds.lean"
    },
    ".lake.packages.mathlib.Mathlib.Topology.MetricSpace.Contracting": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Topology/MetricSpace/Contracting.lean"
    },
    ".lake.packages.mathlib.Mathlib.Topology.MetricSpace.MetricSeparated": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Topology/MetricSpace/MetricSeparated.lean"
    },
    ".lake.packages.mathlib.Mathlib.Topology.MetricSpace.Basic": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Topology/MetricSpace/Basic.lean"
    },
    ".lake.packages.mathlib.Mathlib.Topology.MetricSpace.UniformConvergence": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Topology/MetricSpace/UniformConvergence.lean"
    },
    ".lake.packages.mathlib.Mathlib.Topology.MetricSpace.CauSeqFilter": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Topology/MetricSpace/CauSeqFilter.lean"
    },
    ".lake.packages.mathlib.Mathlib.Topology.MetricSpace.Similarity": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Topology/MetricSpace/Similarity.lean"
    },
    ".lake.packages.mathlib.Mathlib.Topology.MetricSpace.Antilipschitz": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Topology/MetricSpace/Antilipschitz.lean"
    },
    ".lake.packages.mathlib.Mathlib.Topology.MetricSpace.Gluing": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Topology/MetricSpace/Gluing.lean"
    },
    ".lake.packages.mathlib.Mathlib.Topology.MetricSpace.Defs": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Topology/MetricSpace/Defs.lean"
    },
    ".lake.packages.mathlib.Mathlib.Topology.MetricSpace.IsometricSMul": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Topology/MetricSpace/IsometricSMul.lean"
    },
    ".lake.packages.mathlib.Mathlib.Topology.MetricSpace.Polish": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Topology/MetricSpace/Polish.lean"
    },
    ".lake.packages.mathlib.Mathlib.Topology.MetricSpace.DilationEquiv": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Topology/MetricSpace/DilationEquiv.lean"
    },
    ".lake.packages.mathlib.Mathlib.Topology.MetricSpace.Lipschitz": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Topology/MetricSpace/Lipschitz.lean"
    },
    ".lake.packages.mathlib.Mathlib.Topology.MetricSpace.GromovHausdorffRealized": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Topology/MetricSpace/GromovHausdorffRealized.lean"
    },
    ".lake.packages.mathlib.Mathlib.Topology.MetricSpace.ShrinkingLemma": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Topology/MetricSpace/ShrinkingLemma.lean"
    },
    ".lake.packages.mathlib.Mathlib.Topology.MetricSpace.CantorScheme": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Topology/MetricSpace/CantorScheme.lean"
    },
    ".lake.packages.mathlib.Mathlib.Topology.MetricSpace.Bounded": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Topology/MetricSpace/Bounded.lean"
    },
    ".lake.packages.mathlib.Mathlib.Topology.MetricSpace.Equicontinuity": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Topology/MetricSpace/Equicontinuity.lean"
    },
    ".lake.packages.mathlib.Mathlib.Topology.MetricSpace.HausdorffDistance": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Topology/MetricSpace/HausdorffDistance.lean"
    },
    ".lake.packages.mathlib.Mathlib.Topology.MetricSpace.Congruence": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Topology/MetricSpace/Congruence.lean"
    },
    ".lake.packages.mathlib.Mathlib.Topology.MetricSpace.Algebra": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Topology/MetricSpace/Algebra.lean"
    },
    ".lake.packages.mathlib.Mathlib.Topology.MetricSpace.PartitionOfUnity": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Topology/MetricSpace/PartitionOfUnity.lean"
    },
    ".lake.packages.mathlib.Mathlib.Topology.MetricSpace.PiNat": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Topology/MetricSpace/PiNat.lean"
    },
    ".lake.packages.mathlib.Mathlib.Topology.MetricSpace.Sequences": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Topology/MetricSpace/Sequences.lean"
    },
    ".lake.packages.mathlib.Mathlib.Topology.MetricSpace.ProperSpace.Lemmas": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Topology/MetricSpace/ProperSpace/Lemmas.lean"
    },
    ".lake.packages.mathlib.Mathlib.Topology.MetricSpace.ProperSpace.Real": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Topology/MetricSpace/ProperSpace/Real.lean"
    },
    ".lake.packages.mathlib.Mathlib.Topology.MetricSpace.Ultra.ContinuousMaps": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Topology/MetricSpace/Ultra/ContinuousMaps.lean"
    },
    ".lake.packages.mathlib.Mathlib.Topology.MetricSpace.Ultra.Pi": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Topology/MetricSpace/Ultra/Pi.lean"
    },
    ".lake.packages.mathlib.Mathlib.Topology.MetricSpace.Ultra.Basic": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Topology/MetricSpace/Ultra/Basic.lean"
    },
    ".lake.packages.mathlib.Mathlib.Topology.MetricSpace.Ultra.TotallySeparated": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Topology/MetricSpace/Ultra/TotallySeparated.lean"
    },
    ".lake.packages.mathlib.Mathlib.Topology.MetricSpace.Pseudo.Lemmas": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Topology/MetricSpace/Pseudo/Lemmas.lean"
    },
    ".lake.packages.mathlib.Mathlib.Topology.MetricSpace.Pseudo.Pi": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Topology/MetricSpace/Pseudo/Pi.lean"
    },
    ".lake.packages.mathlib.Mathlib.Topology.MetricSpace.Pseudo.Basic": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Topology/MetricSpace/Pseudo/Basic.lean"
    },
    ".lake.packages.mathlib.Mathlib.Topology.MetricSpace.Pseudo.Constructions": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Topology/MetricSpace/Pseudo/Constructions.lean"
    },
    ".lake.packages.mathlib.Mathlib.Topology.MetricSpace.Pseudo.Defs": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Topology/MetricSpace/Pseudo/Defs.lean"
    },
    ".lake.packages.mathlib.Mathlib.Topology.MetricSpace.Pseudo.Real": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Topology/MetricSpace/Pseudo/Real.lean"
    },
    ".lake.packages.mathlib.Mathlib.Topology.VectorBundle.Riemannian": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Topology/VectorBundle/Riemannian.lean"
    },
    ".lake.packages.mathlib.Mathlib.Topology.VectorBundle.Basic": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Topology/VectorBundle/Basic.lean"
    },
    ".lake.packages.mathlib.Mathlib.Topology.VectorBundle.Constructions": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Topology/VectorBundle/Constructions.lean"
    },
    ".lake.packages.mathlib.Mathlib.Topology.VectorBundle.Hom": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Topology/VectorBundle/Hom.lean"
    },
    ".lake.packages.mathlib.Mathlib.Topology.UniformSpace.Matrix": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Topology/UniformSpace/Matrix.lean"
    },
    ".lake.packages.mathlib.Mathlib.Topology.UniformSpace.OfCompactT2": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Topology/UniformSpace/OfCompactT2.lean"
    },
    ".lake.packages.mathlib.Mathlib.Topology.UniformSpace.Compact": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Topology/UniformSpace/Compact.lean"
    },
    ".lake.packages.mathlib.Mathlib.Topology.UniformSpace.OfFun": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Topology/UniformSpace/OfFun.lean"
    },
    ".lake.packages.mathlib.Mathlib.Topology.UniformSpace.Ascoli": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Topology/UniformSpace/Ascoli.lean"
    },
    ".lake.packages.mathlib.Mathlib.Topology.UniformSpace.Cauchy": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Topology/UniformSpace/Cauchy.lean"
    },
    ".lake.packages.mathlib.Mathlib.Topology.UniformSpace.Completion": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Topology/UniformSpace/Completion.lean"
    },
    ".lake.packages.mathlib.Mathlib.Topology.UniformSpace.CompactConvergence": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Topology/UniformSpace/CompactConvergence.lean"
    },
    ".lake.packages.mathlib.Mathlib.Topology.UniformSpace.Pi": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Topology/UniformSpace/Pi.lean"
    },
    ".lake.packages.mathlib.Mathlib.Topology.UniformSpace.ProdApproximation": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Topology/UniformSpace/ProdApproximation.lean"
    },
    ".lake.packages.mathlib.Mathlib.Topology.UniformSpace.UniformApproximation": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Topology/UniformSpace/UniformApproximation.lean"
    },
    ".lake.packages.mathlib.Mathlib.Topology.UniformSpace.Basic": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Topology/UniformSpace/Basic.lean"
    },
    ".lake.packages.mathlib.Mathlib.Topology.UniformSpace.UniformConvergence": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Topology/UniformSpace/UniformConvergence.lean"
    },
    ".lake.packages.mathlib.Mathlib.Topology.UniformSpace.Defs": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Topology/UniformSpace/Defs.lean"
    },
    ".lake.packages.mathlib.Mathlib.Topology.UniformSpace.UniformEmbedding": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Topology/UniformSpace/UniformEmbedding.lean"
    },
    ".lake.packages.mathlib.Mathlib.Topology.UniformSpace.Separation": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Topology/UniformSpace/Separation.lean"
    },
    ".lake.packages.mathlib.Mathlib.Topology.UniformSpace.CompareReals": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Topology/UniformSpace/CompareReals.lean"
    },
    ".lake.packages.mathlib.Mathlib.Topology.UniformSpace.Equiv": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Topology/UniformSpace/Equiv.lean"
    },
    ".lake.packages.mathlib.Mathlib.Topology.UniformSpace.Dini": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Topology/UniformSpace/Dini.lean"
    },
    ".lake.packages.mathlib.Mathlib.Topology.UniformSpace.HeineCantor": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Topology/UniformSpace/HeineCantor.lean"
    },
    ".lake.packages.mathlib.Mathlib.Topology.UniformSpace.Equicontinuity": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Topology/UniformSpace/Equicontinuity.lean"
    },
    ".lake.packages.mathlib.Mathlib.Topology.UniformSpace.UniformConvergenceTopology": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Topology/UniformSpace/UniformConvergenceTopology.lean"
    },
    ".lake.packages.mathlib.Mathlib.Topology.UniformSpace.AbstractCompletion": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Topology/UniformSpace/AbstractCompletion.lean"
    },
    ".lake.packages.mathlib.Mathlib.Topology.UniformSpace.LocallyUniformConvergence": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Topology/UniformSpace/LocallyUniformConvergence.lean"
    },
    ".lake.packages.mathlib.Mathlib.Topology.UniformSpace.DiscreteUniformity": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Topology/UniformSpace/DiscreteUniformity.lean"
    },
    ".lake.packages.mathlib.Mathlib.Topology.UniformSpace.CompleteSeparated": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Topology/UniformSpace/CompleteSeparated.lean"
    },
    ".lake.packages.mathlib.Mathlib.Topology.UniformSpace.AbsoluteValue": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Topology/UniformSpace/AbsoluteValue.lean"
    },
    ".lake.packages.mathlib.Mathlib.Topology.UniformSpace.Real": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Topology/UniformSpace/Real.lean"
    },
    ".lake.packages.mathlib.Mathlib.Topology.UniformSpace.Ultra.Basic": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Topology/UniformSpace/Ultra/Basic.lean"
    },
    ".lake.packages.mathlib.Mathlib.Topology.UniformSpace.Ultra.Constructions": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Topology/UniformSpace/Ultra/Constructions.lean"
    },
    ".lake.packages.mathlib.Mathlib.Topology.Sets.OpenCover": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Topology/Sets/OpenCover.lean"
    },
    ".lake.packages.mathlib.Mathlib.Topology.Sets.Opens": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Topology/Sets/Opens.lean"
    },
    ".lake.packages.mathlib.Mathlib.Topology.Sets.CompactOpenCovered": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Topology/Sets/CompactOpenCovered.lean"
    },
    ".lake.packages.mathlib.Mathlib.Topology.Sets.Order": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Topology/Sets/Order.lean"
    },
    ".lake.packages.mathlib.Mathlib.Topology.Sets.Compacts": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Topology/Sets/Compacts.lean"
    },
    ".lake.packages.mathlib.Mathlib.Topology.Sets.Closeds": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Topology/Sets/Closeds.lean"
    },
    ".lake.packages.mathlib.Mathlib.Topology.GDelta.Basic": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Topology/GDelta/Basic.lean"
    },
    ".lake.packages.mathlib.Mathlib.Topology.GDelta.UniformSpace": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Topology/GDelta/UniformSpace.lean"
    },
    ".lake.packages.mathlib.Mathlib.Topology.GDelta.MetrizableSpace": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Topology/GDelta/MetrizableSpace.lean"
    },
    ".lake.packages.mathlib.Mathlib.Topology.Separation.SeparatedNhds": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Topology/Separation/SeparatedNhds.lean"
    },
    ".lake.packages.mathlib.Mathlib.Topology.Separation.CountableSeparatingOn": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Topology/Separation/CountableSeparatingOn.lean"
    },
    ".lake.packages.mathlib.Mathlib.Topology.Separation.Regular": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Topology/Separation/Regular.lean"
    },
    ".lake.packages.mathlib.Mathlib.Topology.Separation.GDelta": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Topology/Separation/GDelta.lean"
    },
    ".lake.packages.mathlib.Mathlib.Topology.Separation.Basic": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Topology/Separation/Basic.lean"
    },
    ".lake.packages.mathlib.Mathlib.Topology.Separation.Hausdorff": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Topology/Separation/Hausdorff.lean"
    },
    ".lake.packages.mathlib.Mathlib.Topology.Separation.Profinite": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Topology/Separation/Profinite.lean"
    },
    ".lake.packages.mathlib.Mathlib.Topology.Separation.CompletelyRegular": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Topology/Separation/CompletelyRegular.lean"
    },
    ".lake.packages.mathlib.Mathlib.Topology.Separation.DisjointCover": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Topology/Separation/DisjointCover.lean"
    },
    ".lake.packages.mathlib.Mathlib.Topology.Separation.Connected": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Topology/Separation/Connected.lean"
    },
    ".lake.packages.mathlib.Mathlib.Topology.Separation.NotNormal": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Topology/Separation/NotNormal.lean"
    },
    ".lake.packages.mathlib.Mathlib.Topology.FiberBundle.IsHomeomorphicTrivialBundle": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Topology/FiberBundle/IsHomeomorphicTrivialBundle.lean"
    },
    ".lake.packages.mathlib.Mathlib.Topology.FiberBundle.Basic": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Topology/FiberBundle/Basic.lean"
    },
    ".lake.packages.mathlib.Mathlib.Topology.FiberBundle.Constructions": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Topology/FiberBundle/Constructions.lean"
    },
    ".lake.packages.mathlib.Mathlib.Topology.FiberBundle.Trivialization": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Topology/FiberBundle/Trivialization.lean"
    },
    ".lake.packages.mathlib.Mathlib.Topology.Instances.CantorSet": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Topology/Instances/CantorSet.lean"
    },
    ".lake.packages.mathlib.Mathlib.Topology.Instances.Int": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Topology/Instances/Int.lean"
    },
    ".lake.packages.mathlib.Mathlib.Topology.Instances.Sign": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Topology/Instances/Sign.lean"
    },
    ".lake.packages.mathlib.Mathlib.Topology.Instances.Matrix": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Topology/Instances/Matrix.lean"
    },
    ".lake.packages.mathlib.Mathlib.Topology.Instances.Discrete": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Topology/Instances/Discrete.lean"
    },
    ".lake.packages.mathlib.Mathlib.Topology.Instances.Rat": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Topology/Instances/Rat.lean"
    },
    ".lake.packages.mathlib.Mathlib.Topology.Instances.RealVectorSpace": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Topology/Instances/RealVectorSpace.lean"
    },
    ".lake.packages.mathlib.Mathlib.Topology.Instances.Nat": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Topology/Instances/Nat.lean"
    },
    ".lake.packages.mathlib.Mathlib.Topology.Instances.ENat": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Topology/Instances/ENat.lean"
    },
    ".lake.packages.mathlib.Mathlib.Topology.Instances.RatLemmas": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Topology/Instances/RatLemmas.lean"
    },
    ".lake.packages.mathlib.Mathlib.Topology.Instances.PNat": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Topology/Instances/PNat.lean"
    },
    ".lake.packages.mathlib.Mathlib.Topology.Instances.ZMultiples": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Topology/Instances/ZMultiples.lean"
    },
    ".lake.packages.mathlib.Mathlib.Topology.Instances.Shrink": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Topology/Instances/Shrink.lean"
    },
    ".lake.packages.mathlib.Mathlib.Topology.Instances.Complex": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Topology/Instances/Complex.lean"
    },
    ".lake.packages.mathlib.Mathlib.Topology.Instances.Irrational": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Topology/Instances/Irrational.lean"
    },
    ".lake.packages.mathlib.Mathlib.Topology.Instances.ZMod": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Topology/Instances/ZMod.lean"
    },
    ".lake.packages.mathlib.Mathlib.Topology.Instances.TrivSqZeroExt": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Topology/Instances/TrivSqZeroExt.lean"
    },
    ".lake.packages.mathlib.Mathlib.Topology.Instances.NNReal.Lemmas": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Topology/Instances/NNReal/Lemmas.lean"
    },
    ".lake.packages.mathlib.Mathlib.Topology.Instances.Real.Lemmas": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Topology/Instances/Real/Lemmas.lean"
    },
    ".lake.packages.mathlib.Mathlib.Topology.Instances.ENNReal.Lemmas": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Topology/Instances/ENNReal/Lemmas.lean"
    },
    ".lake.packages.mathlib.Mathlib.Topology.Instances.AddCircle.Defs": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Topology/Instances/AddCircle/Defs.lean"
    },
    ".lake.packages.mathlib.Mathlib.Topology.Instances.AddCircle.DenseSubgroup": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Topology/Instances/AddCircle/DenseSubgroup.lean"
    },
    ".lake.packages.mathlib.Mathlib.Topology.Instances.AddCircle.Real": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Topology/Instances/AddCircle/Real.lean"
    },
    ".lake.packages.mathlib.Mathlib.Topology.Instances.EReal.Lemmas": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Topology/Instances/EReal/Lemmas.lean"
    },
    ".lake.packages.mathlib.Mathlib.Topology.Compactness.CompactlyGeneratedSpace": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Topology/Compactness/CompactlyGeneratedSpace.lean"
    },
    ".lake.packages.mathlib.Mathlib.Topology.Compactness.Exterior": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Topology/Compactness/Exterior.lean"
    },
    ".lake.packages.mathlib.Mathlib.Topology.Compactness.HilbertCubeEmbedding": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Topology/Compactness/HilbertCubeEmbedding.lean"
    },
    ".lake.packages.mathlib.Mathlib.Topology.Compactness.CompactlyCoherentSpace": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Topology/Compactness/CompactlyCoherentSpace.lean"
    },
    ".lake.packages.mathlib.Mathlib.Topology.Compactness.Bases": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Topology/Compactness/Bases.lean"
    },
    ".lake.packages.mathlib.Mathlib.Topology.Compactness.DeltaGeneratedSpace": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Topology/Compactness/DeltaGeneratedSpace.lean"
    },
    ".lake.packages.mathlib.Mathlib.Topology.Compactness.Compact": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Topology/Compactness/Compact.lean"
    },
    ".lake.packages.mathlib.Mathlib.Topology.Compactness.SigmaCompact": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Topology/Compactness/SigmaCompact.lean"
    },
    ".lake.packages.mathlib.Mathlib.Topology.Compactness.PseudometrizableLindelof": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Topology/Compactness/PseudometrizableLindelof.lean"
    },
    ".lake.packages.mathlib.Mathlib.Topology.Compactness.Paracompact": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Topology/Compactness/Paracompact.lean"
    },
    ".lake.packages.mathlib.Mathlib.Topology.Compactness.Lindelof": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Topology/Compactness/Lindelof.lean"
    },
    ".lake.packages.mathlib.Mathlib.Topology.Compactness.LocallyCompact": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Topology/Compactness/LocallyCompact.lean"
    },
    ".lake.packages.mathlib.Mathlib.Topology.Compactness.NhdsKer": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Topology/Compactness/NhdsKer.lean"
    },
    ".lake.packages.mathlib.Mathlib.Topology.Compactness.LocallyFinite": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Topology/Compactness/LocallyFinite.lean"
    },
    ".lake.packages.mathlib.Mathlib.Topology.Baire.BaireMeasurable": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Topology/Baire/BaireMeasurable.lean"
    },
    ".lake.packages.mathlib.Mathlib.Topology.Baire.Lemmas": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Topology/Baire/Lemmas.lean"
    },
    ".lake.packages.mathlib.Mathlib.Topology.Baire.LocallyCompactRegular": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Topology/Baire/LocallyCompactRegular.lean"
    },
    ".lake.packages.mathlib.Mathlib.Topology.Baire.CompleteMetrizable": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Topology/Baire/CompleteMetrizable.lean"
    },
    ".lake.packages.mathlib.Mathlib.Topology.Metrizable.CompletelyMetrizable": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Topology/Metrizable/CompletelyMetrizable.lean"
    },
    ".lake.packages.mathlib.Mathlib.Topology.Metrizable.Basic": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Topology/Metrizable/Basic.lean"
    },
    ".lake.packages.mathlib.Mathlib.Topology.Metrizable.ContinuousMap": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Topology/Metrizable/ContinuousMap.lean"
    },
    ".lake.packages.mathlib.Mathlib.Topology.Metrizable.Uniformity": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Topology/Metrizable/Uniformity.lean"
    },
    ".lake.packages.mathlib.Mathlib.Topology.Metrizable.Urysohn": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Topology/Metrizable/Urysohn.lean"
    },
    ".lake.packages.mathlib.Mathlib.Topology.Metrizable.Real": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Topology/Metrizable/Real.lean"
    },
    ".lake.packages.mathlib.Mathlib.Topology.Algebra.GroupCompletion": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Topology/Algebra/GroupCompletion.lean"
    },
    ".lake.packages.mathlib.Mathlib.Topology.Algebra.RestrictedProduct": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Topology/Algebra/RestrictedProduct.lean"
    },
    ".lake.packages.mathlib.Mathlib.Topology.Algebra.ClopenNhdofOne": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Topology/Algebra/ClopenNhdofOne.lean"
    },
    ".lake.packages.mathlib.Mathlib.Topology.Algebra.Monoid": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Topology/Algebra/Monoid.lean"
    },
    ".lake.packages.mathlib.Mathlib.Topology.Algebra.PontryaginDual": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Topology/Algebra/PontryaginDual.lean"
    },
    ".lake.packages.mathlib.Mathlib.Topology.Algebra.Indicator": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Topology/Algebra/Indicator.lean"
    },
    ".lake.packages.mathlib.Mathlib.Topology.Algebra.UniformFilterBasis": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Topology/Algebra/UniformFilterBasis.lean"
    },
    ".lake.packages.mathlib.Mathlib.Topology.Algebra.OpenSubgroup": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Topology/Algebra/OpenSubgroup.lean"
    },
    ".lake.packages.mathlib.Mathlib.Topology.Algebra.Support": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Topology/Algebra/Support.lean"
    },
    ".lake.packages.mathlib.Mathlib.Topology.Algebra.UniformRing": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Topology/Algebra/UniformRing.lean"
    },
    ".lake.packages.mathlib.Mathlib.Topology.Algebra.Star": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Topology/Algebra/Star.lean"
    },
    ".lake.packages.mathlib.Mathlib.Topology.Algebra.ConstMulAction": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Topology/Algebra/ConstMulAction.lean"
    },
    ".lake.packages.mathlib.Mathlib.Topology.Algebra.AffineSubspace": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Topology/Algebra/AffineSubspace.lean"
    },
    ".lake.packages.mathlib.Mathlib.Topology.Algebra.TopologicallyNilpotent": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Topology/Algebra/TopologicallyNilpotent.lean"
    },
    ".lake.packages.mathlib.Mathlib.Topology.Algebra.ProperConstSMul": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Topology/Algebra/ProperConstSMul.lean"
    },
    ".lake.packages.mathlib.Mathlib.Topology.Algebra.IntermediateField": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Topology/Algebra/IntermediateField.lean"
    },
    ".lake.packages.mathlib.Mathlib.Topology.Algebra.ContinuousMonoidHom": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Topology/Algebra/ContinuousMonoidHom.lean"
    },
    ".lake.packages.mathlib.Mathlib.Topology.Algebra.WithZeroTopology": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Topology/Algebra/WithZeroTopology.lean"
    },
    ".lake.packages.mathlib.Mathlib.Topology.Algebra.StarSubalgebra": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Topology/Algebra/StarSubalgebra.lean"
    },
    ".lake.packages.mathlib.Mathlib.Topology.Algebra.UniformConvergence": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Topology/Algebra/UniformConvergence.lean"
    },
    ".lake.packages.mathlib.Mathlib.Topology.Algebra.Constructions": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Topology/Algebra/Constructions.lean"
    },
    ".lake.packages.mathlib.Mathlib.Topology.Algebra.Localization": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Topology/Algebra/Localization.lean"
    },
    ".lake.packages.mathlib.Mathlib.Topology.Algebra.NonUnitalStarAlgebra": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Topology/Algebra/NonUnitalStarAlgebra.lean"
    },
    ".lake.packages.mathlib.Mathlib.Topology.Algebra.MvPolynomial": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Topology/Algebra/MvPolynomial.lean"
    },
    ".lake.packages.mathlib.Mathlib.Topology.Algebra.ClosedSubgroup": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Topology/Algebra/ClosedSubgroup.lean"
    },
    ".lake.packages.mathlib.Mathlib.Topology.Algebra.IsOpenUnits": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Topology/Algebra/IsOpenUnits.lean"
    },
    ".lake.packages.mathlib.Mathlib.Topology.Algebra.Field": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Topology/Algebra/Field.lean"
    },
    ".lake.packages.mathlib.Mathlib.Topology.Algebra.Equicontinuity": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Topology/Algebra/Equicontinuity.lean"
    },
    ".lake.packages.mathlib.Mathlib.Topology.Algebra.Polynomial": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Topology/Algebra/Polynomial.lean"
    },
    ".lake.packages.mathlib.Mathlib.Topology.Algebra.Semigroup": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Topology/Algebra/Semigroup.lean"
    },
    ".lake.packages.mathlib.Mathlib.Topology.Algebra.UniformMulAction": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Topology/Algebra/UniformMulAction.lean"
    },
    ".lake.packages.mathlib.Mathlib.Topology.Algebra.Affine": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Topology/Algebra/Affine.lean"
    },
    ".lake.packages.mathlib.Mathlib.Topology.Algebra.Algebra": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Topology/Algebra/Algebra.lean"
    },
    ".lake.packages.mathlib.Mathlib.Topology.Algebra.LinearTopology": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Topology/Algebra/LinearTopology.lean"
    },
    ".lake.packages.mathlib.Mathlib.Topology.Algebra.ContinuousAffineMap": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Topology/Algebra/ContinuousAffineMap.lean"
    },
    ".lake.packages.mathlib.Mathlib.Topology.Algebra.FilterBasis": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Topology/Algebra/FilterBasis.lean"
    },
    ".lake.packages.mathlib.Mathlib.Topology.Algebra.UniformField": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Topology/Algebra/UniformField.lean"
    },
    ".lake.packages.mathlib.Mathlib.Topology.Algebra.NonUnitalAlgebra": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Topology/Algebra/NonUnitalAlgebra.lean"
    },
    ".lake.packages.mathlib.Mathlib.Topology.Algebra.MulAction": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Topology/Algebra/MulAction.lean"
    },
    ".lake.packages.mathlib.Mathlib.Topology.Algebra.GroupWithZero": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Topology/Algebra/GroupWithZero.lean"
    },
    ".lake.packages.mathlib.Mathlib.Topology.Algebra.Order.Support": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Topology/Algebra/Order/Support.lean"
    },
    ".lake.packages.mathlib.Mathlib.Topology.Algebra.Order.Module": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Topology/Algebra/Order/Module.lean"
    },
    ".lake.packages.mathlib.Mathlib.Topology.Algebra.Order.Group": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Topology/Algebra/Order/Group.lean"
    },
    ".lake.packages.mathlib.Mathlib.Topology.Algebra.Order.LiminfLimsup": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Topology/Algebra/Order/LiminfLimsup.lean"
    },
    ".lake.packages.mathlib.Mathlib.Topology.Algebra.Order.Archimedean": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Topology/Algebra/Order/Archimedean.lean"
    },
    ".lake.packages.mathlib.Mathlib.Topology.Algebra.Order.UpperLower": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Topology/Algebra/Order/UpperLower.lean"
    },
    ".lake.packages.mathlib.Mathlib.Topology.Algebra.Order.Floor": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Topology/Algebra/Order/Floor.lean"
    },
    ".lake.packages.mathlib.Mathlib.Topology.Algebra.Order.Field": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Topology/Algebra/Order/Field.lean"
    },
    ".lake.packages.mathlib.Mathlib.Topology.Algebra.Monoid.Defs": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Topology/Algebra/Monoid/Defs.lean"
    },
    ".lake.packages.mathlib.Mathlib.Topology.Algebra.Monoid.AddChar": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Topology/Algebra/Monoid/AddChar.lean"
    },
    ".lake.packages.mathlib.Mathlib.Topology.Algebra.RestrictedProduct.Basic": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Topology/Algebra/RestrictedProduct/Basic.lean"
    },
    ".lake.packages.mathlib.Mathlib.Topology.Algebra.RestrictedProduct.TopologicalSpace": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Topology/Algebra/RestrictedProduct/TopologicalSpace.lean"
    },
    ".lake.packages.mathlib.Mathlib.Topology.Algebra.Category.ProfiniteGrp.Basic": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Topology/Algebra/Category/ProfiniteGrp/Basic.lean"
    },
    ".lake.packages.mathlib.Mathlib.Topology.Algebra.Category.ProfiniteGrp.Limits": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Topology/Algebra/Category/ProfiniteGrp/Limits.lean"
    },
    ".lake.packages.mathlib.Mathlib.Topology.Algebra.Group.CompactOpen": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Topology/Algebra/Group/CompactOpen.lean"
    },
    ".lake.packages.mathlib.Mathlib.Topology.Algebra.Group.OpenMapping": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Topology/Algebra/Group/OpenMapping.lean"
    },
    ".lake.packages.mathlib.Mathlib.Topology.Algebra.Group.Compact": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Topology/Algebra/Group/Compact.lean"
    },
    ".lake.packages.mathlib.Mathlib.Topology.Algebra.Group.SubmonoidClosure": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Topology/Algebra/Group/SubmonoidClosure.lean"
    },
    ".lake.packages.mathlib.Mathlib.Topology.Algebra.Group.Pointwise": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Topology/Algebra/Group/Pointwise.lean"
    },
    ".lake.packages.mathlib.Mathlib.Topology.Algebra.Group.Basic": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Topology/Algebra/Group/Basic.lean"
    },
    ".lake.packages.mathlib.Mathlib.Topology.Algebra.Group.Quotient": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Topology/Algebra/Group/Quotient.lean"
    },
    ".lake.packages.mathlib.Mathlib.Topology.Algebra.Group.GroupTopology": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Topology/Algebra/Group/GroupTopology.lean"
    },
    ".lake.packages.mathlib.Mathlib.Topology.Algebra.Group.Defs": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Topology/Algebra/Group/Defs.lean"
    },
    ".lake.packages.mathlib.Mathlib.Topology.Algebra.Group.ClosedSubgroup": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Topology/Algebra/Group/ClosedSubgroup.lean"
    },
    ".lake.packages.mathlib.Mathlib.Topology.Algebra.Group.TopologicalAbelianization": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Topology/Algebra/Group/TopologicalAbelianization.lean"
    },
    ".lake.packages.mathlib.Mathlib.Topology.Algebra.Module.WeakDual": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Topology/Algebra/Module/WeakDual.lean"
    },
    ".lake.packages.mathlib.Mathlib.Topology.Algebra.Module.Compact": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Topology/Algebra/Module/Compact.lean"
    },
    ".lake.packages.mathlib.Mathlib.Topology.Algebra.Module.Star": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Topology/Algebra/Module/Star.lean"
    },
    ".lake.packages.mathlib.Mathlib.Topology.Algebra.Module.PerfectPairing": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Topology/Algebra/Module/PerfectPairing.lean"
    },
    ".lake.packages.mathlib.Mathlib.Topology.Algebra.Module.ClosedSubmodule": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Topology/Algebra/Module/ClosedSubmodule.lean"
    },
    ".lake.packages.mathlib.Mathlib.Topology.Algebra.Module.PerfectSpace": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Topology/Algebra/Module/PerfectSpace.lean"
    },
    ".lake.packages.mathlib.Mathlib.Topology.Algebra.Module.Basic": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Topology/Algebra/Module/Basic.lean"
    },
    ".lake.packages.mathlib.Mathlib.Topology.Algebra.Module.FiniteDimension": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Topology/Algebra/Module/FiniteDimension.lean"
    },
    ".lake.packages.mathlib.Mathlib.Topology.Algebra.Module.UniformConvergence": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Topology/Algebra/Module/UniformConvergence.lean"
    },
    ".lake.packages.mathlib.Mathlib.Topology.Algebra.Module.Cardinality": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Topology/Algebra/Module/Cardinality.lean"
    },
    ".lake.packages.mathlib.Mathlib.Topology.Algebra.Module.LinearMapPiProd": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Topology/Algebra/Module/LinearMapPiProd.lean"
    },
    ".lake.packages.mathlib.Mathlib.Topology.Algebra.Module.Simple": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Topology/Algebra/Module/Simple.lean"
    },
    ".lake.packages.mathlib.Mathlib.Topology.Algebra.Module.StrongTopology": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Topology/Algebra/Module/StrongTopology.lean"
    },
    ".lake.packages.mathlib.Mathlib.Topology.Algebra.Module.LinearMap": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Topology/Algebra/Module/LinearMap.lean"
    },
    ".lake.packages.mathlib.Mathlib.Topology.Algebra.Module.Equiv": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Topology/Algebra/Module/Equiv.lean"
    },
    ".lake.packages.mathlib.Mathlib.Topology.Algebra.Module.WeakBilin": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Topology/Algebra/Module/WeakBilin.lean"
    },
    ".lake.packages.mathlib.Mathlib.Topology.Algebra.Module.LinearPMap": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Topology/Algebra/Module/LinearPMap.lean"
    },
    ".lake.packages.mathlib.Mathlib.Topology.Algebra.Module.Determinant": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Topology/Algebra/Module/Determinant.lean"
    },
    ".lake.packages.mathlib.Mathlib.Topology.Algebra.Module.CharacterSpace": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Topology/Algebra/Module/CharacterSpace.lean"
    },
    ".lake.packages.mathlib.Mathlib.Topology.Algebra.Module.ModuleTopology": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Topology/Algebra/Module/ModuleTopology.lean"
    },
    ".lake.packages.mathlib.Mathlib.Topology.Algebra.Module.LocallyConvex": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Topology/Algebra/Module/LocallyConvex.lean"
    },
    ".lake.packages.mathlib.Mathlib.Topology.Algebra.Module.Multilinear.Topology": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Topology/Algebra/Module/Multilinear/Topology.lean"
    },
    ".lake.packages.mathlib.Mathlib.Topology.Algebra.Module.Multilinear.Basic": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Topology/Algebra/Module/Multilinear/Basic.lean"
    },
    ".lake.packages.mathlib.Mathlib.Topology.Algebra.Module.Multilinear.Bounded": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Topology/Algebra/Module/Multilinear/Bounded.lean"
    },
    ".lake.packages.mathlib.Mathlib.Topology.Algebra.Module.Alternating.Topology": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Topology/Algebra/Module/Alternating/Topology.lean"
    },
    ".lake.packages.mathlib.Mathlib.Topology.Algebra.Module.Alternating.Basic": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Topology/Algebra/Module/Alternating/Basic.lean"
    },
    ".lake.packages.mathlib.Mathlib.Topology.Algebra.Constructions.DomMulAct": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Topology/Algebra/Constructions/DomMulAct.lean"
    },
    ".lake.packages.mathlib.Mathlib.Topology.Algebra.MetricSpace.Lipschitz": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Topology/Algebra/MetricSpace/Lipschitz.lean"
    },
    ".lake.packages.mathlib.Mathlib.Topology.Algebra.Star.Unitary": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Topology/Algebra/Star/Unitary.lean"
    },
    ".lake.packages.mathlib.Mathlib.Topology.Algebra.Star.Real": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Topology/Algebra/Star/Real.lean"
    },
    ".lake.packages.mathlib.Mathlib.Topology.Algebra.IsUniformGroup.Order": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Topology/Algebra/IsUniformGroup/Order.lean"
    },
    ".lake.packages.mathlib.Mathlib.Topology.Algebra.IsUniformGroup.Basic": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Topology/Algebra/IsUniformGroup/Basic.lean"
    },
    ".lake.packages.mathlib.Mathlib.Topology.Algebra.IsUniformGroup.Defs": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Topology/Algebra/IsUniformGroup/Defs.lean"
    },
    ".lake.packages.mathlib.Mathlib.Topology.Algebra.ProperAction.Basic": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Topology/Algebra/ProperAction/Basic.lean"
    },
    ".lake.packages.mathlib.Mathlib.Topology.Algebra.ProperAction.ProperlyDiscontinuous": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Topology/Algebra/ProperAction/ProperlyDiscontinuous.lean"
    },
    ".lake.packages.mathlib.Mathlib.Topology.Algebra.Ring.Compact": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Topology/Algebra/Ring/Compact.lean"
    },
    ".lake.packages.mathlib.Mathlib.Topology.Algebra.Ring.Basic": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Topology/Algebra/Ring/Basic.lean"
    },
    ".lake.packages.mathlib.Mathlib.Topology.Algebra.Ring.Ideal": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Topology/Algebra/Ring/Ideal.lean"
    },
    ".lake.packages.mathlib.Mathlib.Topology.Algebra.Ring.Real": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Topology/Algebra/Ring/Real.lean"
    },
    ".lake.packages.mathlib.Mathlib.Topology.Algebra.InfiniteSum.GroupCompletion": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Topology/Algebra/InfiniteSum/GroupCompletion.lean"
    },
    ".lake.packages.mathlib.Mathlib.Topology.Algebra.InfiniteSum.NatInt": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Topology/Algebra/InfiniteSum/NatInt.lean"
    },
    ".lake.packages.mathlib.Mathlib.Topology.Algebra.InfiniteSum.ENNReal": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Topology/Algebra/InfiniteSum/ENNReal.lean"
    },
    ".lake.packages.mathlib.Mathlib.Topology.Algebra.InfiniteSum.Module": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Topology/Algebra/InfiniteSum/Module.lean"
    },
    ".lake.packages.mathlib.Mathlib.Topology.Algebra.InfiniteSum.Ring": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Topology/Algebra/InfiniteSum/Ring.lean"
    },
    ".lake.packages.mathlib.Mathlib.Topology.Algebra.InfiniteSum.Group": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Topology/Algebra/InfiniteSum/Group.lean"
    },
    ".lake.packages.mathlib.Mathlib.Topology.Algebra.InfiniteSum.Order": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Topology/Algebra/InfiniteSum/Order.lean"
    },
    ".lake.packages.mathlib.Mathlib.Topology.Algebra.InfiniteSum.Basic": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Topology/Algebra/InfiniteSum/Basic.lean"
    },
    ".lake.packages.mathlib.Mathlib.Topology.Algebra.InfiniteSum.Constructions": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Topology/Algebra/InfiniteSum/Constructions.lean"
    },
    ".lake.packages.mathlib.Mathlib.Topology.Algebra.InfiniteSum.UniformOn": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Topology/Algebra/InfiniteSum/UniformOn.lean"
    },
    ".lake.packages.mathlib.Mathlib.Topology.Algebra.InfiniteSum.Defs": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Topology/Algebra/InfiniteSum/Defs.lean"
    },
    ".lake.packages.mathlib.Mathlib.Topology.Algebra.InfiniteSum.Field": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Topology/Algebra/InfiniteSum/Field.lean"
    },
    ".lake.packages.mathlib.Mathlib.Topology.Algebra.InfiniteSum.Nonarchimedean": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Topology/Algebra/InfiniteSum/Nonarchimedean.lean"
    },
    ".lake.packages.mathlib.Mathlib.Topology.Algebra.InfiniteSum.Real": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Topology/Algebra/InfiniteSum/Real.lean"
    },
    ".lake.packages.mathlib.Mathlib.Topology.Algebra.Nonarchimedean.Bases": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Topology/Algebra/Nonarchimedean/Bases.lean"
    },
    ".lake.packages.mathlib.Mathlib.Topology.Algebra.Nonarchimedean.TotallyDisconnected": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Topology/Algebra/Nonarchimedean/TotallyDisconnected.lean"
    },
    ".lake.packages.mathlib.Mathlib.Topology.Algebra.Nonarchimedean.Completion": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Topology/Algebra/Nonarchimedean/Completion.lean"
    },
    ".lake.packages.mathlib.Mathlib.Topology.Algebra.Nonarchimedean.Basic": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Topology/Algebra/Nonarchimedean/Basic.lean"
    },
    ".lake.packages.mathlib.Mathlib.Topology.Algebra.Nonarchimedean.AdicTopology": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Topology/Algebra/Nonarchimedean/AdicTopology.lean"
    },
    ".lake.packages.mathlib.Mathlib.Topology.Algebra.Valued.WithVal": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Topology/Algebra/Valued/WithVal.lean"
    },
    ".lake.packages.mathlib.Mathlib.Topology.Algebra.Valued.NormedValued": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Topology/Algebra/Valued/NormedValued.lean"
    },
    ".lake.packages.mathlib.Mathlib.Topology.Algebra.Valued.LocallyCompact": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Topology/Algebra/Valued/LocallyCompact.lean"
    },
    ".lake.packages.mathlib.Mathlib.Topology.Algebra.Valued.ValuativeRel": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Topology/Algebra/Valued/ValuativeRel.lean"
    },
    ".lake.packages.mathlib.Mathlib.Topology.Algebra.Valued.WithZeroMulInt": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Topology/Algebra/Valued/WithZeroMulInt.lean"
    },
    ".lake.packages.mathlib.Mathlib.Topology.Algebra.Valued.ValuationTopology": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Topology/Algebra/Valued/ValuationTopology.lean"
    },
    ".lake.packages.mathlib.Mathlib.Topology.Algebra.Valued.ValuedField": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Topology/Algebra/Valued/ValuedField.lean"
    },
    ".lake.packages.mathlib.Mathlib.Topology.Algebra.Algebra.Rat": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Topology/Algebra/Algebra/Rat.lean"
    },
    ".lake.packages.mathlib.Mathlib.Topology.Algebra.Algebra.Equiv": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Topology/Algebra/Algebra/Equiv.lean"
    },
    ".lake.packages.mathlib.Mathlib.Topology.Algebra.SeparationQuotient.Basic": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Topology/Algebra/SeparationQuotient/Basic.lean"
    },
    ".lake.packages.mathlib.Mathlib.Topology.Algebra.SeparationQuotient.Section": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Topology/Algebra/SeparationQuotient/Section.lean"
    },
    ".lake.packages.mathlib.Mathlib.Topology.Algebra.SeparationQuotient.Hom": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Topology/Algebra/SeparationQuotient/Hom.lean"
    },
    ".lake.packages.mathlib.Mathlib.Topology.Algebra.SeparationQuotient.FiniteDimensional": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Topology/Algebra/SeparationQuotient/FiniteDimensional.lean"
    },
    ".lake.packages.mathlib.Mathlib.Topology.Defs.Basic": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Topology/Defs/Basic.lean"
    },
    ".lake.packages.mathlib.Mathlib.Topology.Defs.Filter": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Topology/Defs/Filter.lean"
    },
    ".lake.packages.mathlib.Mathlib.Topology.Defs.Ultrafilter": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Topology/Defs/Ultrafilter.lean"
    },
    ".lake.packages.mathlib.Mathlib.Topology.Defs.Sequences": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Topology/Defs/Sequences.lean"
    },
    ".lake.packages.mathlib.Mathlib.Topology.Defs.Induced": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Topology/Defs/Induced.lean"
    },
    ".lake.packages.mathlib.Mathlib.Topology.Sheaves.Stalks": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Topology/Sheaves/Stalks.lean"
    },
    ".lake.packages.mathlib.Mathlib.Topology.Sheaves.Forget": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Topology/Sheaves/Forget.lean"
    },
    ".lake.packages.mathlib.Mathlib.Topology.Sheaves.LocallySurjective": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Topology/Sheaves/LocallySurjective.lean"
    },
    ".lake.packages.mathlib.Mathlib.Topology.Sheaves.SheafOfFunctions": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Topology/Sheaves/SheafOfFunctions.lean"
    },
    ".lake.packages.mathlib.Mathlib.Topology.Sheaves.PUnit": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Topology/Sheaves/PUnit.lean"
    },
    ".lake.packages.mathlib.Mathlib.Topology.Sheaves.Presheaf": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Topology/Sheaves/Presheaf.lean"
    },
    ".lake.packages.mathlib.Mathlib.Topology.Sheaves.Init": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Topology/Sheaves/Init.lean"
    },
    ".lake.packages.mathlib.Mathlib.Topology.Sheaves.Sheafify": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Topology/Sheaves/Sheafify.lean"
    },
    ".lake.packages.mathlib.Mathlib.Topology.Sheaves.Functors": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Topology/Sheaves/Functors.lean"
    },
    ".lake.packages.mathlib.Mathlib.Topology.Sheaves.CommRingCat": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Topology/Sheaves/CommRingCat.lean"
    },
    ".lake.packages.mathlib.Mathlib.Topology.Sheaves.Alexandrov": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Topology/Sheaves/Alexandrov.lean"
    },
    ".lake.packages.mathlib.Mathlib.Topology.Sheaves.Skyscraper": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Topology/Sheaves/Skyscraper.lean"
    },
    ".lake.packages.mathlib.Mathlib.Topology.Sheaves.LocalPredicate": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Topology/Sheaves/LocalPredicate.lean"
    },
    ".lake.packages.mathlib.Mathlib.Topology.Sheaves.PresheafOfFunctions": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Topology/Sheaves/PresheafOfFunctions.lean"
    },
    ".lake.packages.mathlib.Mathlib.Topology.Sheaves.Sheaf": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Topology/Sheaves/Sheaf.lean"
    },
    ".lake.packages.mathlib.Mathlib.Topology.Sheaves.Limits": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Topology/Sheaves/Limits.lean"
    },
    ".lake.packages.mathlib.Mathlib.Topology.Sheaves.MayerVietoris": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Topology/Sheaves/MayerVietoris.lean"
    },
    ".lake.packages.mathlib.Mathlib.Topology.Sheaves.SheafCondition.OpensLeCover": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Topology/Sheaves/SheafCondition/OpensLeCover.lean"
    },
    ".lake.packages.mathlib.Mathlib.Topology.Sheaves.SheafCondition.PairwiseIntersections": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Topology/Sheaves/SheafCondition/PairwiseIntersections.lean"
    },
    ".lake.packages.mathlib.Mathlib.Topology.Sheaves.SheafCondition.Sites": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Topology/Sheaves/SheafCondition/Sites.lean"
    },
    ".lake.packages.mathlib.Mathlib.Topology.Sheaves.SheafCondition.UniqueGluing": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Topology/Sheaves/SheafCondition/UniqueGluing.lean"
    },
    ".lake.packages.mathlib.Mathlib.Topology.Sheaves.SheafCondition.EqualizerProducts": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Topology/Sheaves/SheafCondition/EqualizerProducts.lean"
    },
    ".lake.packages.mathlib.Mathlib.Lean.EnvExtension": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Lean/EnvExtension.lean"
    },
    ".lake.packages.mathlib.Mathlib.Lean.LocalContext": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Lean/LocalContext.lean"
    },
    ".lake.packages.mathlib.Mathlib.Lean.Json": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Lean/Json.lean"
    },
    ".lake.packages.mathlib.Mathlib.Lean.Exception": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Lean/Exception.lean"
    },
    ".lake.packages.mathlib.Mathlib.Lean.CoreM": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Lean/CoreM.lean"
    },
    ".lake.packages.mathlib.Mathlib.Lean.Thunk": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Lean/Thunk.lean"
    },
    ".lake.packages.mathlib.Mathlib.Lean.GoalsLocation": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Lean/GoalsLocation.lean"
    },
    ".lake.packages.mathlib.Mathlib.Lean.Meta": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Lean/Meta.lean"
    },
    ".lake.packages.mathlib.Mathlib.Lean.Message": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Lean/Message.lean"
    },
    ".lake.packages.mathlib.Mathlib.Lean.Expr": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Lean/Expr.lean"
    },
    ".lake.packages.mathlib.Mathlib.Lean.Name": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Lean/Name.lean"
    },
    ".lake.packages.mathlib.Mathlib.Lean.PrettyPrinter.Delaborator": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Lean/PrettyPrinter/Delaborator.lean"
    },
    ".lake.packages.mathlib.Mathlib.Lean.Meta.KAbstractPositions": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Lean/Meta/KAbstractPositions.lean"
    },
    ".lake.packages.mathlib.Mathlib.Lean.Meta.Basic": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Lean/Meta/Basic.lean"
    },
    ".lake.packages.mathlib.Mathlib.Lean.Meta.Simp": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Lean/Meta/Simp.lean"
    },
    ".lake.packages.mathlib.Mathlib.Lean.Meta.CongrTheorems": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Lean/Meta/CongrTheorems.lean"
    },
    ".lake.packages.mathlib.Mathlib.Lean.Meta.RefinedDiscrTree": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Lean/Meta/RefinedDiscrTree.lean"
    },
    ".lake.packages.mathlib.Mathlib.Lean.Meta.DiscrTree": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Lean/Meta/DiscrTree.lean"
    },
    ".lake.packages.mathlib.Mathlib.Lean.Meta.RefinedDiscrTree.Lookup": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Lean/Meta/RefinedDiscrTree/Lookup.lean"
    },
    ".lake.packages.mathlib.Mathlib.Lean.Meta.RefinedDiscrTree.Initialize": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Lean/Meta/RefinedDiscrTree/Initialize.lean"
    },
    ".lake.packages.mathlib.Mathlib.Lean.Meta.RefinedDiscrTree.Basic": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Lean/Meta/RefinedDiscrTree/Basic.lean"
    },
    ".lake.packages.mathlib.Mathlib.Lean.Meta.RefinedDiscrTree.Encode": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Lean/Meta/RefinedDiscrTree/Encode.lean"
    },
    ".lake.packages.mathlib.Mathlib.Lean.Expr.Rat": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Lean/Expr/Rat.lean"
    },
    ".lake.packages.mathlib.Mathlib.Lean.Expr.ExtraRecognizers": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Lean/Expr/ExtraRecognizers.lean"
    },
    ".lake.packages.mathlib.Mathlib.Lean.Expr.ReplaceRec": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Lean/Expr/ReplaceRec.lean"
    },
    ".lake.packages.mathlib.Mathlib.Lean.Expr.Basic": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Lean/Expr/Basic.lean"
    },
    ".lake.packages.mathlib.Mathlib.Lean.Elab.Term": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Lean/Elab/Term.lean"
    },
    ".lake.packages.mathlib.Mathlib.Lean.Elab.Tactic.Basic": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Lean/Elab/Tactic/Basic.lean"
    },
    ".lake.packages.mathlib.Mathlib.Dynamics.Flow": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Dynamics/Flow.lean"
    },
    ".lake.packages.mathlib.Mathlib.Dynamics.OmegaLimit": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Dynamics/OmegaLimit.lean"
    },
    ".lake.packages.mathlib.Mathlib.Dynamics.Minimal": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Dynamics/Minimal.lean"
    },
    ".lake.packages.mathlib.Mathlib.Dynamics.Newton": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Dynamics/Newton.lean"
    },
    ".lake.packages.mathlib.Mathlib.Dynamics.TopologicalEntropy.Subset": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Dynamics/TopologicalEntropy/Subset.lean"
    },
    ".lake.packages.mathlib.Mathlib.Dynamics.TopologicalEntropy.Semiconj": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Dynamics/TopologicalEntropy/Semiconj.lean"
    },
    ".lake.packages.mathlib.Mathlib.Dynamics.TopologicalEntropy.CoverEntropy": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Dynamics/TopologicalEntropy/CoverEntropy.lean"
    },
    ".lake.packages.mathlib.Mathlib.Dynamics.TopologicalEntropy.NetEntropy": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Dynamics/TopologicalEntropy/NetEntropy.lean"
    },
    ".lake.packages.mathlib.Mathlib.Dynamics.TopologicalEntropy.DynamicalEntourage": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Dynamics/TopologicalEntropy/DynamicalEntourage.lean"
    },
    ".lake.packages.mathlib.Mathlib.Dynamics.BirkhoffSum.Average": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Dynamics/BirkhoffSum/Average.lean"
    },
    ".lake.packages.mathlib.Mathlib.Dynamics.BirkhoffSum.Basic": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Dynamics/BirkhoffSum/Basic.lean"
    },
    ".lake.packages.mathlib.Mathlib.Dynamics.BirkhoffSum.NormedSpace": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Dynamics/BirkhoffSum/NormedSpace.lean"
    },
    ".lake.packages.mathlib.Mathlib.Dynamics.FixedPoints.Prufer": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Dynamics/FixedPoints/Prufer.lean"
    },
    ".lake.packages.mathlib.Mathlib.Dynamics.FixedPoints.Topology": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Dynamics/FixedPoints/Topology.lean"
    },
    ".lake.packages.mathlib.Mathlib.Dynamics.FixedPoints.Basic": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Dynamics/FixedPoints/Basic.lean"
    },
    ".lake.packages.mathlib.Mathlib.Dynamics.Circle.RotationNumber.TranslationNumber": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Dynamics/Circle/RotationNumber/TranslationNumber.lean"
    },
    ".lake.packages.mathlib.Mathlib.Dynamics.Ergodic.MeasurePreserving": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Dynamics/Ergodic/MeasurePreserving.lean"
    },
    ".lake.packages.mathlib.Mathlib.Dynamics.Ergodic.AddCircle": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Dynamics/Ergodic/AddCircle.lean"
    },
    ".lake.packages.mathlib.Mathlib.Dynamics.Ergodic.Extreme": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Dynamics/Ergodic/Extreme.lean"
    },
    ".lake.packages.mathlib.Mathlib.Dynamics.Ergodic.RadonNikodym": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Dynamics/Ergodic/RadonNikodym.lean"
    },
    ".lake.packages.mathlib.Mathlib.Dynamics.Ergodic.Function": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Dynamics/Ergodic/Function.lean"
    },
    ".lake.packages.mathlib.Mathlib.Dynamics.Ergodic.AddCircleAdd": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Dynamics/Ergodic/AddCircleAdd.lean"
    },
    ".lake.packages.mathlib.Mathlib.Dynamics.Ergodic.Ergodic": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Dynamics/Ergodic/Ergodic.lean"
    },
    ".lake.packages.mathlib.Mathlib.Dynamics.Ergodic.Conservative": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Dynamics/Ergodic/Conservative.lean"
    },
    ".lake.packages.mathlib.Mathlib.Dynamics.Ergodic.Action.Regular": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Dynamics/Ergodic/Action/Regular.lean"
    },
    ".lake.packages.mathlib.Mathlib.Dynamics.Ergodic.Action.Basic": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Dynamics/Ergodic/Action/Basic.lean"
    },
    ".lake.packages.mathlib.Mathlib.Dynamics.Ergodic.Action.OfMinimal": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Dynamics/Ergodic/Action/OfMinimal.lean"
    },
    ".lake.packages.mathlib.Mathlib.Dynamics.PeriodicPts.Lemmas": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Dynamics/PeriodicPts/Lemmas.lean"
    },
    ".lake.packages.mathlib.Mathlib.Dynamics.PeriodicPts.Defs": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Dynamics/PeriodicPts/Defs.lean"
    },
    ".lake.packages.mathlib.Mathlib.Analysis.Hofer": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Analysis/Hofer.lean"
    },
    ".lake.packages.mathlib.Mathlib.Analysis.Convolution": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Analysis/Convolution.lean"
    },
    ".lake.packages.mathlib.Mathlib.Analysis.Matrix": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Analysis/Matrix.lean"
    },
    ".lake.packages.mathlib.Mathlib.Analysis.Subadditive": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Analysis/Subadditive.lean"
    },
    ".lake.packages.mathlib.Mathlib.Analysis.MellinTransform": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Analysis/MellinTransform.lean"
    },
    ".lake.packages.mathlib.Mathlib.Analysis.PSeries": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Analysis/PSeries.lean"
    },
    ".lake.packages.mathlib.Mathlib.Analysis.MeanInequalities": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Analysis/MeanInequalities.lean"
    },
    ".lake.packages.mathlib.Mathlib.Analysis.ConstantSpeed": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Analysis/ConstantSpeed.lean"
    },
    ".lake.packages.mathlib.Mathlib.Analysis.Oscillation": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Analysis/Oscillation.lean"
    },
    ".lake.packages.mathlib.Mathlib.Analysis.Quaternion": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Analysis/Quaternion.lean"
    },
    ".lake.packages.mathlib.Mathlib.Analysis.MeanInequalitiesPow": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Analysis/MeanInequalitiesPow.lean"
    },
    ".lake.packages.mathlib.Mathlib.Analysis.BoundedVariation": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Analysis/BoundedVariation.lean"
    },
    ".lake.packages.mathlib.Mathlib.Analysis.PSeriesComplex": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Analysis/PSeriesComplex.lean"
    },
    ".lake.packages.mathlib.Mathlib.Analysis.SumIntegralComparisons": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Analysis/SumIntegralComparisons.lean"
    },
    ".lake.packages.mathlib.Mathlib.Analysis.Seminorm": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Analysis/Seminorm.lean"
    },
    ".lake.packages.mathlib.Mathlib.Analysis.SumOverResidueClass": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Analysis/SumOverResidueClass.lean"
    },
    ".lake.packages.mathlib.Mathlib.Analysis.MellinInversion": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Analysis/MellinInversion.lean"
    },
    ".lake.packages.mathlib.Mathlib.Analysis.LConvolution": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Analysis/LConvolution.lean"
    },
    ".lake.packages.mathlib.Mathlib.Analysis.InnerProductSpace.Orthonormal": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Analysis/InnerProductSpace/Orthonormal.lean"
    },
    ".lake.packages.mathlib.Mathlib.Analysis.InnerProductSpace.Convex": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Analysis/InnerProductSpace/Convex.lean"
    },
    ".lake.packages.mathlib.Mathlib.Analysis.InnerProductSpace.MeanErgodic": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Analysis/InnerProductSpace/MeanErgodic.lean"
    },
    ".lake.packages.mathlib.Mathlib.Analysis.InnerProductSpace.Rayleigh": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Analysis/InnerProductSpace/Rayleigh.lean"
    },
    ".lake.packages.mathlib.Mathlib.Analysis.InnerProductSpace.WeakOperatorTopology": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Analysis/InnerProductSpace/WeakOperatorTopology.lean"
    },
    ".lake.packages.mathlib.Mathlib.Analysis.InnerProductSpace.Calculus": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Analysis/InnerProductSpace/Calculus.lean"
    },
    ".lake.packages.mathlib.Mathlib.Analysis.InnerProductSpace.TwoDim": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Analysis/InnerProductSpace/TwoDim.lean"
    },
    ".lake.packages.mathlib.Mathlib.Analysis.InnerProductSpace.Completion": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Analysis/InnerProductSpace/Completion.lean"
    },
    ".lake.packages.mathlib.Mathlib.Analysis.InnerProductSpace.StarOrder": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Analysis/InnerProductSpace/StarOrder.lean"
    },
    ".lake.packages.mathlib.Mathlib.Analysis.InnerProductSpace.Laplacian": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Analysis/InnerProductSpace/Laplacian.lean"
    },
    ".lake.packages.mathlib.Mathlib.Analysis.InnerProductSpace.Orientation": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Analysis/InnerProductSpace/Orientation.lean"
    },
    ".lake.packages.mathlib.Mathlib.Analysis.InnerProductSpace.Basic": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Analysis/InnerProductSpace/Basic.lean"
    },
    ".lake.packages.mathlib.Mathlib.Analysis.InnerProductSpace.Subspace": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Analysis/InnerProductSpace/Subspace.lean"
    },
    ".lake.packages.mathlib.Mathlib.Analysis.InnerProductSpace.GramSchmidtOrtho": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Analysis/InnerProductSpace/GramSchmidtOrtho.lean"
    },
    ".lake.packages.mathlib.Mathlib.Analysis.InnerProductSpace.EuclideanDist": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Analysis/InnerProductSpace/EuclideanDist.lean"
    },
    ".lake.packages.mathlib.Mathlib.Analysis.InnerProductSpace.JointEigenspace": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Analysis/InnerProductSpace/JointEigenspace.lean"
    },
    ".lake.packages.mathlib.Mathlib.Analysis.InnerProductSpace.OfNorm": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Analysis/InnerProductSpace/OfNorm.lean"
    },
    ".lake.packages.mathlib.Mathlib.Analysis.InnerProductSpace.l2Space": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Analysis/InnerProductSpace/l2Space.lean"
    },
    ".lake.packages.mathlib.Mathlib.Analysis.InnerProductSpace.Defs": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Analysis/InnerProductSpace/Defs.lean"
    },
    ".lake.packages.mathlib.Mathlib.Analysis.InnerProductSpace.PiL2": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Analysis/InnerProductSpace/PiL2.lean"
    },
    ".lake.packages.mathlib.Mathlib.Analysis.InnerProductSpace.Positive": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Analysis/InnerProductSpace/Positive.lean"
    },
    ".lake.packages.mathlib.Mathlib.Analysis.InnerProductSpace.LaxMilgram": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Analysis/InnerProductSpace/LaxMilgram.lean"
    },
    ".lake.packages.mathlib.Mathlib.Analysis.InnerProductSpace.Trace": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Analysis/InnerProductSpace/Trace.lean"
    },
    ".lake.packages.mathlib.Mathlib.Analysis.InnerProductSpace.ConformalLinearMap": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Analysis/InnerProductSpace/ConformalLinearMap.lean"
    },
    ".lake.packages.mathlib.Mathlib.Analysis.InnerProductSpace.Adjoint": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Analysis/InnerProductSpace/Adjoint.lean"
    },
    ".lake.packages.mathlib.Mathlib.Analysis.InnerProductSpace.LinearMap": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Analysis/InnerProductSpace/LinearMap.lean"
    },
    ".lake.packages.mathlib.Mathlib.Analysis.InnerProductSpace.Orthogonal": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Analysis/InnerProductSpace/Orthogonal.lean"
    },
    ".lake.packages.mathlib.Mathlib.Analysis.InnerProductSpace.Continuous": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Analysis/InnerProductSpace/Continuous.lean"
    },
    ".lake.packages.mathlib.Mathlib.Analysis.InnerProductSpace.NormPow": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Analysis/InnerProductSpace/NormPow.lean"
    },
    ".lake.packages.mathlib.Mathlib.Analysis.InnerProductSpace.Dual": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Analysis/InnerProductSpace/Dual.lean"
    },
    ".lake.packages.mathlib.Mathlib.Analysis.InnerProductSpace.LinearPMap": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Analysis/InnerProductSpace/LinearPMap.lean"
    },
    ".lake.packages.mathlib.Mathlib.Analysis.InnerProductSpace.Symmetric": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Analysis/InnerProductSpace/Symmetric.lean"
    },
    ".lake.packages.mathlib.Mathlib.Analysis.InnerProductSpace.Projection": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Analysis/InnerProductSpace/Projection.lean"
    },
    ".lake.packages.mathlib.Mathlib.Analysis.InnerProductSpace.CanonicalTensor": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Analysis/InnerProductSpace/CanonicalTensor.lean"
    },
    ".lake.packages.mathlib.Mathlib.Analysis.InnerProductSpace.ProdL2": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Analysis/InnerProductSpace/ProdL2.lean"
    },
    ".lake.packages.mathlib.Mathlib.Analysis.InnerProductSpace.Affine": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Analysis/InnerProductSpace/Affine.lean"
    },
    ".lake.packages.mathlib.Mathlib.Analysis.InnerProductSpace.Semisimple": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Analysis/InnerProductSpace/Semisimple.lean"
    },
    ".lake.packages.mathlib.Mathlib.Analysis.InnerProductSpace.Spectrum": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Analysis/InnerProductSpace/Spectrum.lean"
    },
    ".lake.packages.mathlib.Mathlib.Analysis.InnerProductSpace.Harmonic.Basic": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Analysis/InnerProductSpace/Harmonic/Basic.lean"
    },
    ".lake.packages.mathlib.Mathlib.Analysis.InnerProductSpace.Harmonic.Constructions": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Analysis/InnerProductSpace/Harmonic/Constructions.lean"
    },
    ".lake.packages.mathlib.Mathlib.Analysis.CStarAlgebra.ContinuousLinearMap": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Analysis/CStarAlgebra/ContinuousLinearMap.lean"
    },
    ".lake.packages.mathlib.Mathlib.Analysis.CStarAlgebra.Matrix": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Analysis/CStarAlgebra/Matrix.lean"
    },
    ".lake.packages.mathlib.Mathlib.Analysis.CStarAlgebra.PositiveLinearMap": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Analysis/CStarAlgebra/PositiveLinearMap.lean"
    },
    ".lake.packages.mathlib.Mathlib.Analysis.CStarAlgebra.CompletelyPositiveMap": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Analysis/CStarAlgebra/CompletelyPositiveMap.lean"
    },
    ".lake.packages.mathlib.Mathlib.Analysis.CStarAlgebra.Exponential": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Analysis/CStarAlgebra/Exponential.lean"
    },
    ".lake.packages.mathlib.Mathlib.Analysis.CStarAlgebra.Basic": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Analysis/CStarAlgebra/Basic.lean"
    },
    ".lake.packages.mathlib.Mathlib.Analysis.CStarAlgebra.ApproximateUnit": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Analysis/CStarAlgebra/ApproximateUnit.lean"
    },
    ".lake.packages.mathlib.Mathlib.Analysis.CStarAlgebra.ContinuousMap": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Analysis/CStarAlgebra/ContinuousMap.lean"
    },
    ".lake.packages.mathlib.Mathlib.Analysis.CStarAlgebra.lpSpace": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Analysis/CStarAlgebra/lpSpace.lean"
    },
    ".lake.packages.mathlib.Mathlib.Analysis.CStarAlgebra.Multiplier": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Analysis/CStarAlgebra/Multiplier.lean"
    },
    ".lake.packages.mathlib.Mathlib.Analysis.CStarAlgebra.Unitization": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Analysis/CStarAlgebra/Unitization.lean"
    },
    ".lake.packages.mathlib.Mathlib.Analysis.CStarAlgebra.Classes": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Analysis/CStarAlgebra/Classes.lean"
    },
    ".lake.packages.mathlib.Mathlib.Analysis.CStarAlgebra.GelfandDuality": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Analysis/CStarAlgebra/GelfandDuality.lean"
    },
    ".lake.packages.mathlib.Mathlib.Analysis.CStarAlgebra.CStarMatrix": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Analysis/CStarAlgebra/CStarMatrix.lean"
    },
    ".lake.packages.mathlib.Mathlib.Analysis.CStarAlgebra.Projection": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Analysis/CStarAlgebra/Projection.lean"
    },
    ".lake.packages.mathlib.Mathlib.Analysis.CStarAlgebra.Hom": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Analysis/CStarAlgebra/Hom.lean"
    },
    ".lake.packages.mathlib.Mathlib.Analysis.CStarAlgebra.Spectrum": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Analysis/CStarAlgebra/Spectrum.lean"
    },
    ".lake.packages.mathlib.Mathlib.Analysis.CStarAlgebra.Module.Synonym": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Analysis/CStarAlgebra/Module/Synonym.lean"
    },
    ".lake.packages.mathlib.Mathlib.Analysis.CStarAlgebra.Module.Constructions": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Analysis/CStarAlgebra/Module/Constructions.lean"
    },
    ".lake.packages.mathlib.Mathlib.Analysis.CStarAlgebra.Module.Defs": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Analysis/CStarAlgebra/Module/Defs.lean"
    },
    ".lake.packages.mathlib.Mathlib.Analysis.CStarAlgebra.SpecialFunctions.PosPart": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Analysis/CStarAlgebra/SpecialFunctions/PosPart.lean"
    },
    ".lake.packages.mathlib.Mathlib.Analysis.CStarAlgebra.ContinuousFunctionalCalculus.Isometric": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Analysis/CStarAlgebra/ContinuousFunctionalCalculus/Isometric.lean"
    },
    ".lake.packages.mathlib.Mathlib.Analysis.CStarAlgebra.ContinuousFunctionalCalculus.Instances": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Analysis/CStarAlgebra/ContinuousFunctionalCalculus/Instances.lean"
    },
    ".lake.packages.mathlib.Mathlib.Analysis.CStarAlgebra.ContinuousFunctionalCalculus.Integral": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Analysis/CStarAlgebra/ContinuousFunctionalCalculus/Integral.lean"
    },
    ".lake.packages.mathlib.Mathlib.Analysis.CStarAlgebra.ContinuousFunctionalCalculus.Order": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Analysis/CStarAlgebra/ContinuousFunctionalCalculus/Order.lean"
    },
    ".lake.packages.mathlib.Mathlib.Analysis.CStarAlgebra.ContinuousFunctionalCalculus.Pi": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Analysis/CStarAlgebra/ContinuousFunctionalCalculus/Pi.lean"
    },
    ".lake.packages.mathlib.Mathlib.Analysis.CStarAlgebra.ContinuousFunctionalCalculus.Restrict": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Analysis/CStarAlgebra/ContinuousFunctionalCalculus/Restrict.lean"
    },
    ".lake.packages.mathlib.Mathlib.Analysis.CStarAlgebra.ContinuousFunctionalCalculus.Basic": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Analysis/CStarAlgebra/ContinuousFunctionalCalculus/Basic.lean"
    },
    ".lake.packages.mathlib.Mathlib.Analysis.CStarAlgebra.ContinuousFunctionalCalculus.Unital": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Analysis/CStarAlgebra/ContinuousFunctionalCalculus/Unital.lean"
    },
    ".lake.packages.mathlib.Mathlib.Analysis.CStarAlgebra.ContinuousFunctionalCalculus.Unique": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Analysis/CStarAlgebra/ContinuousFunctionalCalculus/Unique.lean"
    },
    ".lake.packages.mathlib.Mathlib.Analysis.CStarAlgebra.ContinuousFunctionalCalculus.NonUnital": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Analysis/CStarAlgebra/ContinuousFunctionalCalculus/NonUnital.lean"
    },
    ".lake.packages.mathlib.Mathlib.Analysis.CStarAlgebra.ContinuousFunctionalCalculus.Continuity": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Analysis/CStarAlgebra/ContinuousFunctionalCalculus/Continuity.lean"
    },
    ".lake.packages.mathlib.Mathlib.Analysis.CStarAlgebra.ContinuousFunctionalCalculus.Unitary": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Analysis/CStarAlgebra/ContinuousFunctionalCalculus/Unitary.lean"
    },
    ".lake.packages.mathlib.Mathlib.Analysis.CStarAlgebra.ContinuousFunctionalCalculus.Note": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Analysis/CStarAlgebra/ContinuousFunctionalCalculus/Note.lean"
    },
    ".lake.packages.mathlib.Mathlib.Analysis.FunctionalSpaces.SobolevInequality": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Analysis/FunctionalSpaces/SobolevInequality.lean"
    },
    ".lake.packages.mathlib.Mathlib.Analysis.RCLike.Lemmas": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Analysis/RCLike/Lemmas.lean"
    },
    ".lake.packages.mathlib.Mathlib.Analysis.RCLike.Inner": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Analysis/RCLike/Inner.lean"
    },
    ".lake.packages.mathlib.Mathlib.Analysis.RCLike.Basic": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Analysis/RCLike/Basic.lean"
    },
    ".lake.packages.mathlib.Mathlib.Analysis.RCLike.BoundedContinuous": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Analysis/RCLike/BoundedContinuous.lean"
    },
    ".lake.packages.mathlib.Mathlib.Analysis.RCLike.TangentCone": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Analysis/RCLike/TangentCone.lean"
    },
    ".lake.packages.mathlib.Mathlib.Analysis.VonNeumannAlgebra.Basic": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Analysis/VonNeumannAlgebra/Basic.lean"
    },
    ".lake.packages.mathlib.Mathlib.Analysis.Complex.Tietze": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Analysis/Complex/Tietze.lean"
    },
    ".lake.packages.mathlib.Mathlib.Analysis.Complex.Convex": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Analysis/Complex/Convex.lean"
    },
    ".lake.packages.mathlib.Mathlib.Analysis.Complex.OperatorNorm": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Analysis/Complex/OperatorNorm.lean"
    },
    ".lake.packages.mathlib.Mathlib.Analysis.Complex.OpenMapping": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Analysis/Complex/OpenMapping.lean"
    },
    ".lake.packages.mathlib.Mathlib.Analysis.Complex.Asymptotics": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Analysis/Complex/Asymptotics.lean"
    },
    ".lake.packages.mathlib.Mathlib.Analysis.Complex.Hadamard": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Analysis/Complex/Hadamard.lean"
    },
    ".lake.packages.mathlib.Mathlib.Analysis.Complex.TaylorSeries": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Analysis/Complex/TaylorSeries.lean"
    },
    ".lake.packages.mathlib.Mathlib.Analysis.Complex.Isometry": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Analysis/Complex/Isometry.lean"
    },
    ".lake.packages.mathlib.Mathlib.Analysis.Complex.Angle": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Analysis/Complex/Angle.lean"
    },
    ".lake.packages.mathlib.Mathlib.Analysis.Complex.RemovableSingularity": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Analysis/Complex/RemovableSingularity.lean"
    },
    ".lake.packages.mathlib.Mathlib.Analysis.Complex.AbsMax": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Analysis/Complex/AbsMax.lean"
    },
    ".lake.packages.mathlib.Mathlib.Analysis.Complex.ReImTopology": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Analysis/Complex/ReImTopology.lean"
    },
    ".lake.packages.mathlib.Mathlib.Analysis.Complex.Arg": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Analysis/Complex/Arg.lean"
    },
    ".lake.packages.mathlib.Mathlib.Analysis.Complex.IntegerCompl": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Analysis/Complex/IntegerCompl.lean"
    },
    ".lake.packages.mathlib.Mathlib.Analysis.Complex.HalfPlane": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Analysis/Complex/HalfPlane.lean"
    },
    ".lake.packages.mathlib.Mathlib.Analysis.Complex.Basic": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Analysis/Complex/Basic.lean"
    },
    ".lake.packages.mathlib.Mathlib.Analysis.Complex.LocallyUniformLimit": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Analysis/Complex/LocallyUniformLimit.lean"
    },
    ".lake.packages.mathlib.Mathlib.Analysis.Complex.IsIntegral": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Analysis/Complex/IsIntegral.lean"
    },
    ".lake.packages.mathlib.Mathlib.Analysis.Complex.CauchyIntegral": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Analysis/Complex/CauchyIntegral.lean"
    },
    ".lake.packages.mathlib.Mathlib.Analysis.Complex.Positivity": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Analysis/Complex/Positivity.lean"
    },
    ".lake.packages.mathlib.Mathlib.Analysis.Complex.PhragmenLindelof": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Analysis/Complex/PhragmenLindelof.lean"
    },
    ".lake.packages.mathlib.Mathlib.Analysis.Complex.RealDeriv": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Analysis/Complex/RealDeriv.lean"
    },
    ".lake.packages.mathlib.Mathlib.Analysis.Complex.Periodic": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Analysis/Complex/Periodic.lean"
    },
    ".lake.packages.mathlib.Mathlib.Analysis.Complex.Liouville": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Analysis/Complex/Liouville.lean"
    },
    ".lake.packages.mathlib.Mathlib.Analysis.Complex.Conformal": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Analysis/Complex/Conformal.lean"
    },
    ".lake.packages.mathlib.Mathlib.Analysis.Complex.AbelLimit": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Analysis/Complex/AbelLimit.lean"
    },
    ".lake.packages.mathlib.Mathlib.Analysis.Complex.Schwarz": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Analysis/Complex/Schwarz.lean"
    },
    ".lake.packages.mathlib.Mathlib.Analysis.Complex.Circle": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Analysis/Complex/Circle.lean"
    },
    ".lake.packages.mathlib.Mathlib.Analysis.Complex.UnitDisc.Basic": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Analysis/Complex/UnitDisc/Basic.lean"
    },
    ".lake.packages.mathlib.Mathlib.Analysis.Complex.ValueDistribution.FirstMainTheorem": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Analysis/Complex/ValueDistribution/FirstMainTheorem.lean"
    },
    ".lake.packages.mathlib.Mathlib.Analysis.Complex.ValueDistribution.CharacteristicFunction": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Analysis/Complex/ValueDistribution/CharacteristicFunction.lean"
    },
    ".lake.packages.mathlib.Mathlib.Analysis.Complex.ValueDistribution.CountingFunction": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Analysis/Complex/ValueDistribution/CountingFunction.lean"
    },
    ".lake.packages.mathlib.Mathlib.Analysis.Complex.ValueDistribution.ProximityFunction": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Analysis/Complex/ValueDistribution/ProximityFunction.lean"
    },
    ".lake.packages.mathlib.Mathlib.Analysis.Complex.UpperHalfPlane.Exp": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Analysis/Complex/UpperHalfPlane/Exp.lean"
    },
    ".lake.packages.mathlib.Mathlib.Analysis.Complex.UpperHalfPlane.Metric": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Analysis/Complex/UpperHalfPlane/Metric.lean"
    },
    ".lake.packages.mathlib.Mathlib.Analysis.Complex.UpperHalfPlane.Topology": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Analysis/Complex/UpperHalfPlane/Topology.lean"
    },
    ".lake.packages.mathlib.Mathlib.Analysis.Complex.UpperHalfPlane.Basic": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Analysis/Complex/UpperHalfPlane/Basic.lean"
    },
    ".lake.packages.mathlib.Mathlib.Analysis.Complex.UpperHalfPlane.FunctionsBoundedAtInfty": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Analysis/Complex/UpperHalfPlane/FunctionsBoundedAtInfty.lean"
    },
    ".lake.packages.mathlib.Mathlib.Analysis.Complex.UpperHalfPlane.MoebiusAction": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Analysis/Complex/UpperHalfPlane/MoebiusAction.lean"
    },
    ".lake.packages.mathlib.Mathlib.Analysis.Complex.UpperHalfPlane.Manifold": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Analysis/Complex/UpperHalfPlane/Manifold.lean"
    },
    ".lake.packages.mathlib.Mathlib.Analysis.Complex.Polynomial.Basic": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Analysis/Complex/Polynomial/Basic.lean"
    },
    ".lake.packages.mathlib.Mathlib.Analysis.Complex.Polynomial.UnitTrinomial": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Analysis/Complex/Polynomial/UnitTrinomial.lean"
    },
    ".lake.packages.mathlib.Mathlib.Analysis.Asymptotics.Theta": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Analysis/Asymptotics/Theta.lean"
    },
    ".lake.packages.mathlib.Mathlib.Analysis.Asymptotics.Lemmas": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Analysis/Asymptotics/Lemmas.lean"
    },
    ".lake.packages.mathlib.Mathlib.Analysis.Asymptotics.AsymptoticEquivalent": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Analysis/Asymptotics/AsymptoticEquivalent.lean"
    },
    ".lake.packages.mathlib.Mathlib.Analysis.Asymptotics.Completion": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Analysis/Asymptotics/Completion.lean"
    },
    ".lake.packages.mathlib.Mathlib.Analysis.Asymptotics.SpecificAsymptotics": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Analysis/Asymptotics/SpecificAsymptotics.lean"
    },
    ".lake.packages.mathlib.Mathlib.Analysis.Asymptotics.Defs": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Analysis/Asymptotics/Defs.lean"
    },
    ".lake.packages.mathlib.Mathlib.Analysis.Asymptotics.LinearGrowth": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Analysis/Asymptotics/LinearGrowth.lean"
    },
    ".lake.packages.mathlib.Mathlib.Analysis.Asymptotics.SuperpolynomialDecay": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Analysis/Asymptotics/SuperpolynomialDecay.lean"
    },
    ".lake.packages.mathlib.Mathlib.Analysis.Asymptotics.ExpGrowth": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Analysis/Asymptotics/ExpGrowth.lean"
    },
    ".lake.packages.mathlib.Mathlib.Analysis.Asymptotics.TVS": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Analysis/Asymptotics/TVS.lean"
    },
    ".lake.packages.mathlib.Mathlib.Analysis.Fourier.AddCircleMulti": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Analysis/Fourier/AddCircleMulti.lean"
    },
    ".lake.packages.mathlib.Mathlib.Analysis.Fourier.BoundedContinuousFunctionChar": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Analysis/Fourier/BoundedContinuousFunctionChar.lean"
    },
    ".lake.packages.mathlib.Mathlib.Analysis.Fourier.AddCircle": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Analysis/Fourier/AddCircle.lean"
    },
    ".lake.packages.mathlib.Mathlib.Analysis.Fourier.FourierTransformDeriv": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Analysis/Fourier/FourierTransformDeriv.lean"
    },
    ".lake.packages.mathlib.Mathlib.Analysis.Fourier.FourierTransform": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Analysis/Fourier/FourierTransform.lean"
    },
    ".lake.packages.mathlib.Mathlib.Analysis.Fourier.PoissonSummation": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Analysis/Fourier/PoissonSummation.lean"
    },
    ".lake.packages.mathlib.Mathlib.Analysis.Fourier.RiemannLebesgueLemma": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Analysis/Fourier/RiemannLebesgueLemma.lean"
    },
    ".lake.packages.mathlib.Mathlib.Analysis.Fourier.ZMod": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Analysis/Fourier/ZMod.lean"
    },
    ".lake.packages.mathlib.Mathlib.Analysis.Fourier.Inversion": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Analysis/Fourier/Inversion.lean"
    },
    ".lake.packages.mathlib.Mathlib.Analysis.Fourier.FiniteAbelian.Orthogonality": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Analysis/Fourier/FiniteAbelian/Orthogonality.lean"
    },
    ".lake.packages.mathlib.Mathlib.Analysis.Fourier.FiniteAbelian.PontryaginDuality": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Analysis/Fourier/FiniteAbelian/PontryaginDuality.lean"
    },
    ".lake.packages.mathlib.Mathlib.Analysis.Distribution.AEEqOfIntegralContDiff": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Analysis/Distribution/AEEqOfIntegralContDiff.lean"
    },
    ".lake.packages.mathlib.Mathlib.Analysis.Distribution.SchwartzSpace": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Analysis/Distribution/SchwartzSpace.lean"
    },
    ".lake.packages.mathlib.Mathlib.Analysis.Distribution.FourierSchwartz": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Analysis/Distribution/FourierSchwartz.lean"
    },
    ".lake.packages.mathlib.Mathlib.Analysis.Convex.StoneSeparation": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Analysis/Convex/StoneSeparation.lean"
    },
    ".lake.packages.mathlib.Mathlib.Analysis.Convex.EGauge": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Analysis/Convex/EGauge.lean"
    },
    ".lake.packages.mathlib.Mathlib.Analysis.Convex.Side": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Analysis/Convex/Side.lean"
    },
    ".lake.packages.mathlib.Mathlib.Analysis.Convex.Birkhoff": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Analysis/Convex/Birkhoff.lean"
    },
    ".lake.packages.mathlib.Mathlib.Analysis.Convex.Caratheodory": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Analysis/Convex/Caratheodory.lean"
    },
    ".lake.packages.mathlib.Mathlib.Analysis.Convex.GaugeRescale": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Analysis/Convex/GaugeRescale.lean"
    },
    ".lake.packages.mathlib.Mathlib.Analysis.Convex.TotallyBounded": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Analysis/Convex/TotallyBounded.lean"
    },
    ".lake.packages.mathlib.Mathlib.Analysis.Convex.Radon": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Analysis/Convex/Radon.lean"
    },
    ".lake.packages.mathlib.Mathlib.Analysis.Convex.Quasiconvex": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Analysis/Convex/Quasiconvex.lean"
    },
    ".lake.packages.mathlib.Mathlib.Analysis.Convex.Uniform": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Analysis/Convex/Uniform.lean"
    },
    ".lake.packages.mathlib.Mathlib.Analysis.Convex.Integral": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Analysis/Convex/Integral.lean"
    },
    ".lake.packages.mathlib.Mathlib.Analysis.Convex.Body": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Analysis/Convex/Body.lean"
    },
    ".lake.packages.mathlib.Mathlib.Analysis.Convex.Piecewise": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Analysis/Convex/Piecewise.lean"
    },
    ".lake.packages.mathlib.Mathlib.Analysis.Convex.Star": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Analysis/Convex/Star.lean"
    },
    ".lake.packages.mathlib.Mathlib.Analysis.Convex.Deriv": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Analysis/Convex/Deriv.lean"
    },
    ".lake.packages.mathlib.Mathlib.Analysis.Convex.Combination": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Analysis/Convex/Combination.lean"
    },
    ".lake.packages.mathlib.Mathlib.Analysis.Convex.Gauge": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Analysis/Convex/Gauge.lean"
    },
    ".lake.packages.mathlib.Mathlib.Analysis.Convex.Extreme": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Analysis/Convex/Extreme.lean"
    },
    ".lake.packages.mathlib.Mathlib.Analysis.Convex.Segment": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Analysis/Convex/Segment.lean"
    },
    ".lake.packages.mathlib.Mathlib.Analysis.Convex.Topology": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Analysis/Convex/Topology.lean"
    },
    ".lake.packages.mathlib.Mathlib.Analysis.Convex.Strong": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Analysis/Convex/Strong.lean"
    },
    ".lake.packages.mathlib.Mathlib.Analysis.Convex.Independent": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Analysis/Convex/Independent.lean"
    },
    ".lake.packages.mathlib.Mathlib.Analysis.Convex.BetweenList": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Analysis/Convex/BetweenList.lean"
    },
    ".lake.packages.mathlib.Mathlib.Analysis.Convex.Mul": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Analysis/Convex/Mul.lean"
    },
    ".lake.packages.mathlib.Mathlib.Analysis.Convex.Join": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Analysis/Convex/Join.lean"
    },
    ".lake.packages.mathlib.Mathlib.Analysis.Convex.Basic": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Analysis/Convex/Basic.lean"
    },
    ".lake.packages.mathlib.Mathlib.Analysis.Convex.Slope": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Analysis/Convex/Slope.lean"
    },
    ".lake.packages.mathlib.Mathlib.Analysis.Convex.Exposed": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Analysis/Convex/Exposed.lean"
    },
    ".lake.packages.mathlib.Mathlib.Analysis.Convex.StrictConvexBetween": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Analysis/Convex/StrictConvexBetween.lean"
    },
    ".lake.packages.mathlib.Mathlib.Analysis.Convex.Visible": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Analysis/Convex/Visible.lean"
    },
    ".lake.packages.mathlib.Mathlib.Analysis.Convex.AmpleSet": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Analysis/Convex/AmpleSet.lean"
    },
    ".lake.packages.mathlib.Mathlib.Analysis.Convex.Hull": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Analysis/Convex/Hull.lean"
    },
    ".lake.packages.mathlib.Mathlib.Analysis.Convex.Between": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Analysis/Convex/Between.lean"
    },
    ".lake.packages.mathlib.Mathlib.Analysis.Convex.PathConnected": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Analysis/Convex/PathConnected.lean"
    },
    ".lake.packages.mathlib.Mathlib.Analysis.Convex.Function": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Analysis/Convex/Function.lean"
    },
    ".lake.packages.mathlib.Mathlib.Analysis.Convex.Contractible": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Analysis/Convex/Contractible.lean"
    },
    ".lake.packages.mathlib.Mathlib.Analysis.Convex.StrictConvexSpace": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Analysis/Convex/StrictConvexSpace.lean"
    },
    ".lake.packages.mathlib.Mathlib.Analysis.Convex.Jensen": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Analysis/Convex/Jensen.lean"
    },
    ".lake.packages.mathlib.Mathlib.Analysis.Convex.Continuous": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Analysis/Convex/Continuous.lean"
    },
    ".lake.packages.mathlib.Mathlib.Analysis.Convex.Extrema": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Analysis/Convex/Extrema.lean"
    },
    ".lake.packages.mathlib.Mathlib.Analysis.Convex.Measure": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Analysis/Convex/Measure.lean"
    },
    ".lake.packages.mathlib.Mathlib.Analysis.Convex.Intrinsic": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Analysis/Convex/Intrinsic.lean"
    },
    ".lake.packages.mathlib.Mathlib.Analysis.Convex.PartitionOfUnity": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Analysis/Convex/PartitionOfUnity.lean"
    },
    ".lake.packages.mathlib.Mathlib.Analysis.Convex.KreinMilman": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Analysis/Convex/KreinMilman.lean"
    },
    ".lake.packages.mathlib.Mathlib.Analysis.Convex.Strict": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Analysis/Convex/Strict.lean"
    },
    ".lake.packages.mathlib.Mathlib.Analysis.Convex.Cone.InnerDual": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Analysis/Convex/Cone/InnerDual.lean"
    },
    ".lake.packages.mathlib.Mathlib.Analysis.Convex.Cone.Closure": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Analysis/Convex/Cone/Closure.lean"
    },
    ".lake.packages.mathlib.Mathlib.Analysis.Convex.Cone.Extension": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Analysis/Convex/Cone/Extension.lean"
    },
    ".lake.packages.mathlib.Mathlib.Analysis.Convex.Cone.Basic": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Analysis/Convex/Cone/Basic.lean"
    },
    ".lake.packages.mathlib.Mathlib.Analysis.Convex.Cone.Dual": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Analysis/Convex/Cone/Dual.lean"
    },
    ".lake.packages.mathlib.Mathlib.Analysis.Convex.SpecificFunctions.Pow": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Analysis/Convex/SpecificFunctions/Pow.lean"
    },
    ".lake.packages.mathlib.Mathlib.Analysis.Convex.SpecificFunctions.Deriv": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Analysis/Convex/SpecificFunctions/Deriv.lean"
    },
    ".lake.packages.mathlib.Mathlib.Analysis.Convex.SpecificFunctions.Basic": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Analysis/Convex/SpecificFunctions/Basic.lean"
    },
    ".lake.packages.mathlib.Mathlib.Analysis.Convex.SimplicialComplex.Basic": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Analysis/Convex/SimplicialComplex/Basic.lean"
    },
    ".lake.packages.mathlib.Mathlib.Analysis.SpecialFunctions.BinaryEntropy": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Analysis/SpecialFunctions/BinaryEntropy.lean"
    },
    ".lake.packages.mathlib.Mathlib.Analysis.SpecialFunctions.Pochhammer": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Analysis/SpecialFunctions/Pochhammer.lean"
    },
    ".lake.packages.mathlib.Mathlib.Analysis.SpecialFunctions.Exp": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Analysis/SpecialFunctions/Exp.lean"
    },
    ".lake.packages.mathlib.Mathlib.Analysis.SpecialFunctions.OrdinaryHypergeometric": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Analysis/SpecialFunctions/OrdinaryHypergeometric.lean"
    },
    ".lake.packages.mathlib.Mathlib.Analysis.SpecialFunctions.Sqrt": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Analysis/SpecialFunctions/Sqrt.lean"
    },
    ".lake.packages.mathlib.Mathlib.Analysis.SpecialFunctions.PolynomialExp": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Analysis/SpecialFunctions/PolynomialExp.lean"
    },
    ".lake.packages.mathlib.Mathlib.Analysis.SpecialFunctions.MulExpNegMulSqIntegral": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Analysis/SpecialFunctions/MulExpNegMulSqIntegral.lean"
    },
    ".lake.packages.mathlib.Mathlib.Analysis.SpecialFunctions.Exponential": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Analysis/SpecialFunctions/Exponential.lean"
    },
    ".lake.packages.mathlib.Mathlib.Analysis.SpecialFunctions.NonIntegrable": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Analysis/SpecialFunctions/NonIntegrable.lean"
    },
    ".lake.packages.mathlib.Mathlib.Analysis.SpecialFunctions.Bernstein": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Analysis/SpecialFunctions/Bernstein.lean"
    },
    ".lake.packages.mathlib.Mathlib.Analysis.SpecialFunctions.MulExpNegMulSq": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Analysis/SpecialFunctions/MulExpNegMulSq.lean"
    },
    ".lake.packages.mathlib.Mathlib.Analysis.SpecialFunctions.JapaneseBracket": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Analysis/SpecialFunctions/JapaneseBracket.lean"
    },
    ".lake.packages.mathlib.Mathlib.Analysis.SpecialFunctions.PolarCoord": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Analysis/SpecialFunctions/PolarCoord.lean"
    },
    ".lake.packages.mathlib.Mathlib.Analysis.SpecialFunctions.CompareExp": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Analysis/SpecialFunctions/CompareExp.lean"
    },
    ".lake.packages.mathlib.Mathlib.Analysis.SpecialFunctions.ExpDeriv": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Analysis/SpecialFunctions/ExpDeriv.lean"
    },
    ".lake.packages.mathlib.Mathlib.Analysis.SpecialFunctions.SmoothTransition": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Analysis/SpecialFunctions/SmoothTransition.lean"
    },
    ".lake.packages.mathlib.Mathlib.Analysis.SpecialFunctions.Arsinh": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Analysis/SpecialFunctions/Arsinh.lean"
    },
    ".lake.packages.mathlib.Mathlib.Analysis.SpecialFunctions.ImproperIntegrals": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Analysis/SpecialFunctions/ImproperIntegrals.lean"
    },
    ".lake.packages.mathlib.Mathlib.Analysis.SpecialFunctions.Stirling": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Analysis/SpecialFunctions/Stirling.lean"
    },
    ".lake.packages.mathlib.Mathlib.Analysis.SpecialFunctions.Choose": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Analysis/SpecialFunctions/Choose.lean"
    },
    ".lake.packages.mathlib.Mathlib.Analysis.SpecialFunctions.Gamma.Deriv": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Analysis/SpecialFunctions/Gamma/Deriv.lean"
    },
    ".lake.packages.mathlib.Mathlib.Analysis.SpecialFunctions.Gamma.Basic": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Analysis/SpecialFunctions/Gamma/Basic.lean"
    },
    ".lake.packages.mathlib.Mathlib.Analysis.SpecialFunctions.Gamma.BohrMollerup": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Analysis/SpecialFunctions/Gamma/BohrMollerup.lean"
    },
    ".lake.packages.mathlib.Mathlib.Analysis.SpecialFunctions.Gamma.Deligne": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Analysis/SpecialFunctions/Gamma/Deligne.lean"
    },
    ".lake.packages.mathlib.Mathlib.Analysis.SpecialFunctions.Gamma.Beta": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Analysis/SpecialFunctions/Gamma/Beta.lean"
    },
    ".lake.packages.mathlib.Mathlib.Analysis.SpecialFunctions.Pow.Asymptotics": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Analysis/SpecialFunctions/Pow/Asymptotics.lean"
    },
    ".lake.packages.mathlib.Mathlib.Analysis.SpecialFunctions.Pow.Integral": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Analysis/SpecialFunctions/Pow/Integral.lean"
    },
    ".lake.packages.mathlib.Mathlib.Analysis.SpecialFunctions.Pow.Deriv": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Analysis/SpecialFunctions/Pow/Deriv.lean"
    },
    ".lake.packages.mathlib.Mathlib.Analysis.SpecialFunctions.Pow.Continuity": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Analysis/SpecialFunctions/Pow/Continuity.lean"
    },
    ".lake.packages.mathlib.Mathlib.Analysis.SpecialFunctions.Pow.Complex": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Analysis/SpecialFunctions/Pow/Complex.lean"
    },
    ".lake.packages.mathlib.Mathlib.Analysis.SpecialFunctions.Pow.NNReal": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Analysis/SpecialFunctions/Pow/NNReal.lean"
    },
    ".lake.packages.mathlib.Mathlib.Analysis.SpecialFunctions.Pow.Real": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Analysis/SpecialFunctions/Pow/Real.lean"
    },
    ".lake.packages.mathlib.Mathlib.Analysis.SpecialFunctions.Gaussian.FourierTransform": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Analysis/SpecialFunctions/Gaussian/FourierTransform.lean"
    },
    ".lake.packages.mathlib.Mathlib.Analysis.SpecialFunctions.Gaussian.PoissonSummation": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Analysis/SpecialFunctions/Gaussian/PoissonSummation.lean"
    },
    ".lake.packages.mathlib.Mathlib.Analysis.SpecialFunctions.Gaussian.GaussianIntegral": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Analysis/SpecialFunctions/Gaussian/GaussianIntegral.lean"
    },
    ".lake.packages.mathlib.Mathlib.Analysis.SpecialFunctions.Trigonometric.Inverse": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Analysis/SpecialFunctions/Trigonometric/Inverse.lean"
    },
    ".lake.packages.mathlib.Mathlib.Analysis.SpecialFunctions.Trigonometric.Arctan": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Analysis/SpecialFunctions/Trigonometric/Arctan.lean"
    },
    ".lake.packages.mathlib.Mathlib.Analysis.SpecialFunctions.Trigonometric.Series": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Analysis/SpecialFunctions/Trigonometric/Series.lean"
    },
    ".lake.packages.mathlib.Mathlib.Analysis.SpecialFunctions.Trigonometric.Angle": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Analysis/SpecialFunctions/Trigonometric/Angle.lean"
    },
    ".lake.packages.mathlib.Mathlib.Analysis.SpecialFunctions.Trigonometric.Deriv": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Analysis/SpecialFunctions/Trigonometric/Deriv.lean"
    },
    ".lake.packages.mathlib.Mathlib.Analysis.SpecialFunctions.Trigonometric.InverseDeriv": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Analysis/SpecialFunctions/Trigonometric/InverseDeriv.lean"
    },
    ".lake.packages.mathlib.Mathlib.Analysis.SpecialFunctions.Trigonometric.Basic": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Analysis/SpecialFunctions/Trigonometric/Basic.lean"
    },
    ".lake.packages.mathlib.Mathlib.Analysis.SpecialFunctions.Trigonometric.Sinc": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Analysis/SpecialFunctions/Trigonometric/Sinc.lean"
    },
    ".lake.packages.mathlib.Mathlib.Analysis.SpecialFunctions.Trigonometric.Complex": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Analysis/SpecialFunctions/Trigonometric/Complex.lean"
    },
    ".lake.packages.mathlib.Mathlib.Analysis.SpecialFunctions.Trigonometric.ArctanDeriv": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Analysis/SpecialFunctions/Trigonometric/ArctanDeriv.lean"
    },
    ".lake.packages.mathlib.Mathlib.Analysis.SpecialFunctions.Trigonometric.Cotangent": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Analysis/SpecialFunctions/Trigonometric/Cotangent.lean"
    },
    ".lake.packages.mathlib.Mathlib.Analysis.SpecialFunctions.Trigonometric.ComplexDeriv": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Analysis/SpecialFunctions/Trigonometric/ComplexDeriv.lean"
    },
    ".lake.packages.mathlib.Mathlib.Analysis.SpecialFunctions.Trigonometric.Chebyshev": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Analysis/SpecialFunctions/Trigonometric/Chebyshev.lean"
    },
    ".lake.packages.mathlib.Mathlib.Analysis.SpecialFunctions.Trigonometric.EulerSineProd": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Analysis/SpecialFunctions/Trigonometric/EulerSineProd.lean"
    },
    ".lake.packages.mathlib.Mathlib.Analysis.SpecialFunctions.Trigonometric.Bounds": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Analysis/SpecialFunctions/Trigonometric/Bounds.lean"
    },
    ".lake.packages.mathlib.Mathlib.Analysis.SpecialFunctions.Complex.Analytic": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Analysis/SpecialFunctions/Complex/Analytic.lean"
    },
    ".lake.packages.mathlib.Mathlib.Analysis.SpecialFunctions.Complex.Arctan": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Analysis/SpecialFunctions/Complex/Arctan.lean"
    },
    ".lake.packages.mathlib.Mathlib.Analysis.SpecialFunctions.Complex.CircleMap": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Analysis/SpecialFunctions/Complex/CircleMap.lean"
    },
    ".lake.packages.mathlib.Mathlib.Analysis.SpecialFunctions.Complex.Arg": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Analysis/SpecialFunctions/Complex/Arg.lean"
    },
    ".lake.packages.mathlib.Mathlib.Analysis.SpecialFunctions.Complex.LogBounds": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Analysis/SpecialFunctions/Complex/LogBounds.lean"
    },
    ".lake.packages.mathlib.Mathlib.Analysis.SpecialFunctions.Complex.CircleAddChar": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Analysis/SpecialFunctions/Complex/CircleAddChar.lean"
    },
    ".lake.packages.mathlib.Mathlib.Analysis.SpecialFunctions.Complex.LogDeriv": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Analysis/SpecialFunctions/Complex/LogDeriv.lean"
    },
    ".lake.packages.mathlib.Mathlib.Analysis.SpecialFunctions.Complex.Log": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Analysis/SpecialFunctions/Complex/Log.lean"
    },
    ".lake.packages.mathlib.Mathlib.Analysis.SpecialFunctions.Complex.Circle": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Analysis/SpecialFunctions/Complex/Circle.lean"
    },
    ".lake.packages.mathlib.Mathlib.Analysis.SpecialFunctions.Integrability.Basic": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Analysis/SpecialFunctions/Integrability/Basic.lean"
    },
    ".lake.packages.mathlib.Mathlib.Analysis.SpecialFunctions.Integrability.LogMeromorphic": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Analysis/SpecialFunctions/Integrability/LogMeromorphic.lean"
    },
    ".lake.packages.mathlib.Mathlib.Analysis.SpecialFunctions.Integrals.PosLogEqCircleAverage": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Analysis/SpecialFunctions/Integrals/PosLogEqCircleAverage.lean"
    },
    ".lake.packages.mathlib.Mathlib.Analysis.SpecialFunctions.Integrals.Basic": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Analysis/SpecialFunctions/Integrals/Basic.lean"
    },
    ".lake.packages.mathlib.Mathlib.Analysis.SpecialFunctions.Integrals.LogTrigonometric": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Analysis/SpecialFunctions/Integrals/LogTrigonometric.lean"
    },
    ".lake.packages.mathlib.Mathlib.Analysis.SpecialFunctions.ContinuousFunctionalCalculus.ExpLog": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Analysis/SpecialFunctions/ContinuousFunctionalCalculus/ExpLog.lean"
    },
    ".lake.packages.mathlib.Mathlib.Analysis.SpecialFunctions.ContinuousFunctionalCalculus.PosPart.Isometric": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Analysis/SpecialFunctions/ContinuousFunctionalCalculus/PosPart/Isometric.lean"
    },
    ".lake.packages.mathlib.Mathlib.Analysis.SpecialFunctions.ContinuousFunctionalCalculus.PosPart.Basic": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Analysis/SpecialFunctions/ContinuousFunctionalCalculus/PosPart/Basic.lean"
    },
    ".lake.packages.mathlib.Mathlib.Analysis.SpecialFunctions.ContinuousFunctionalCalculus.Rpow.Isometric": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Analysis/SpecialFunctions/ContinuousFunctionalCalculus/Rpow/Isometric.lean"
    },
    ".lake.packages.mathlib.Mathlib.Analysis.SpecialFunctions.ContinuousFunctionalCalculus.Rpow.Basic": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Analysis/SpecialFunctions/ContinuousFunctionalCalculus/Rpow/Basic.lean"
    },
    ".lake.packages.mathlib.Mathlib.Analysis.SpecialFunctions.ContinuousFunctionalCalculus.Rpow.IntegralRepresentation": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Analysis/SpecialFunctions/ContinuousFunctionalCalculus/Rpow/IntegralRepresentation.lean"
    },
    ".lake.packages.mathlib.Mathlib.Analysis.SpecialFunctions.Log.Summable": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Analysis/SpecialFunctions/Log/Summable.lean"
    },
    ".lake.packages.mathlib.Mathlib.Analysis.SpecialFunctions.Log.ERealExp": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Analysis/SpecialFunctions/Log/ERealExp.lean"
    },
    ".lake.packages.mathlib.Mathlib.Analysis.SpecialFunctions.Log.Deriv": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Analysis/SpecialFunctions/Log/Deriv.lean"
    },
    ".lake.packages.mathlib.Mathlib.Analysis.SpecialFunctions.Log.Base": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Analysis/SpecialFunctions/Log/Base.lean"
    },
    ".lake.packages.mathlib.Mathlib.Analysis.SpecialFunctions.Log.ENNRealLog": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Analysis/SpecialFunctions/Log/ENNRealLog.lean"
    },
    ".lake.packages.mathlib.Mathlib.Analysis.SpecialFunctions.Log.Basic": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Analysis/SpecialFunctions/Log/Basic.lean"
    },
    ".lake.packages.mathlib.Mathlib.Analysis.SpecialFunctions.Log.ENNRealLogExp": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Analysis/SpecialFunctions/Log/ENNRealLogExp.lean"
    },
    ".lake.packages.mathlib.Mathlib.Analysis.SpecialFunctions.Log.PosLog": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Analysis/SpecialFunctions/Log/PosLog.lean"
    },
    ".lake.packages.mathlib.Mathlib.Analysis.SpecialFunctions.Log.Monotone": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Analysis/SpecialFunctions/Log/Monotone.lean"
    },
    ".lake.packages.mathlib.Mathlib.Analysis.SpecialFunctions.Log.NegMulLog": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Analysis/SpecialFunctions/Log/NegMulLog.lean"
    },
    ".lake.packages.mathlib.Mathlib.Analysis.SpecificLimits.RCLike": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Analysis/SpecificLimits/RCLike.lean"
    },
    ".lake.packages.mathlib.Mathlib.Analysis.SpecificLimits.Normed": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Analysis/SpecificLimits/Normed.lean"
    },
    ".lake.packages.mathlib.Mathlib.Analysis.SpecificLimits.Basic": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Analysis/SpecificLimits/Basic.lean"
    },
    ".lake.packages.mathlib.Mathlib.Analysis.SpecificLimits.FloorPow": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Analysis/SpecificLimits/FloorPow.lean"
    },
    ".lake.packages.mathlib.Mathlib.Analysis.AbsoluteValue.Equivalence": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Analysis/AbsoluteValue/Equivalence.lean"
    },
    ".lake.packages.mathlib.Mathlib.Analysis.ODE.PicardLindelof": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Analysis/ODE/PicardLindelof.lean"
    },
    ".lake.packages.mathlib.Mathlib.Analysis.ODE.Gronwall": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Analysis/ODE/Gronwall.lean"
    },
    ".lake.packages.mathlib.Mathlib.Analysis.BoxIntegral.Integrability": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Analysis/BoxIntegral/Integrability.lean"
    },
    ".lake.packages.mathlib.Mathlib.Analysis.BoxIntegral.UnitPartition": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Analysis/BoxIntegral/UnitPartition.lean"
    },
    ".lake.packages.mathlib.Mathlib.Analysis.BoxIntegral.Basic": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Analysis/BoxIntegral/Basic.lean"
    },
    ".lake.packages.mathlib.Mathlib.Analysis.BoxIntegral.DivergenceTheorem": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Analysis/BoxIntegral/DivergenceTheorem.lean"
    },
    ".lake.packages.mathlib.Mathlib.Analysis.BoxIntegral.Box.Basic": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Analysis/BoxIntegral/Box/Basic.lean"
    },
    ".lake.packages.mathlib.Mathlib.Analysis.BoxIntegral.Box.SubboxInduction": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Analysis/BoxIntegral/Box/SubboxInduction.lean"
    },
    ".lake.packages.mathlib.Mathlib.Analysis.BoxIntegral.Partition.Tagged": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Analysis/BoxIntegral/Partition/Tagged.lean"
    },
    ".lake.packages.mathlib.Mathlib.Analysis.BoxIntegral.Partition.Additive": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Analysis/BoxIntegral/Partition/Additive.lean"
    },
    ".lake.packages.mathlib.Mathlib.Analysis.BoxIntegral.Partition.Split": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Analysis/BoxIntegral/Partition/Split.lean"
    },
    ".lake.packages.mathlib.Mathlib.Analysis.BoxIntegral.Partition.Basic": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Analysis/BoxIntegral/Partition/Basic.lean"
    },
    ".lake.packages.mathlib.Mathlib.Analysis.BoxIntegral.Partition.Filter": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Analysis/BoxIntegral/Partition/Filter.lean"
    },
    ".lake.packages.mathlib.Mathlib.Analysis.BoxIntegral.Partition.SubboxInduction": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Analysis/BoxIntegral/Partition/SubboxInduction.lean"
    },
    ".lake.packages.mathlib.Mathlib.Analysis.BoxIntegral.Partition.Measure": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Analysis/BoxIntegral/Partition/Measure.lean"
    },
    ".lake.packages.mathlib.Mathlib.Analysis.Meromorphic.FactorizedRational": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Analysis/Meromorphic/FactorizedRational.lean"
    },
    ".lake.packages.mathlib.Mathlib.Analysis.Meromorphic.Order": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Analysis/Meromorphic/Order.lean"
    },
    ".lake.packages.mathlib.Mathlib.Analysis.Meromorphic.NormalForm": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Analysis/Meromorphic/NormalForm.lean"
    },
    ".lake.packages.mathlib.Mathlib.Analysis.Meromorphic.Basic": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Analysis/Meromorphic/Basic.lean"
    },
    ".lake.packages.mathlib.Mathlib.Analysis.Meromorphic.TrailingCoefficient": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Analysis/Meromorphic/TrailingCoefficient.lean"
    },
    ".lake.packages.mathlib.Mathlib.Analysis.Meromorphic.Divisor": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Analysis/Meromorphic/Divisor.lean"
    },
    ".lake.packages.mathlib.Mathlib.Analysis.Meromorphic.Complex": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Analysis/Meromorphic/Complex.lean"
    },
    ".lake.packages.mathlib.Mathlib.Analysis.Meromorphic.IsolatedZeros": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Analysis/Meromorphic/IsolatedZeros.lean"
    },
    ".lake.packages.mathlib.Mathlib.Analysis.NormedSpace.RCLike": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Analysis/NormedSpace/RCLike.lean"
    },
    ".lake.packages.mathlib.Mathlib.Analysis.NormedSpace.RieszLemma": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Analysis/NormedSpace/RieszLemma.lean"
    },
    ".lake.packages.mathlib.Mathlib.Analysis.NormedSpace.Int": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Analysis/NormedSpace/Int.lean"
    },
    ".lake.packages.mathlib.Mathlib.Analysis.NormedSpace.Pointwise": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Analysis/NormedSpace/Pointwise.lean"
    },
    ".lake.packages.mathlib.Mathlib.Analysis.NormedSpace.ENormedSpace": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Analysis/NormedSpace/ENormedSpace.lean"
    },
    ".lake.packages.mathlib.Mathlib.Analysis.NormedSpace.HomeomorphBall": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Analysis/NormedSpace/HomeomorphBall.lean"
    },
    ".lake.packages.mathlib.Mathlib.Analysis.NormedSpace.ConformalLinearMap": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Analysis/NormedSpace/ConformalLinearMap.lean"
    },
    ".lake.packages.mathlib.Mathlib.Analysis.NormedSpace.IndicatorFunction": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Analysis/NormedSpace/IndicatorFunction.lean"
    },
    ".lake.packages.mathlib.Mathlib.Analysis.NormedSpace.SphereNormEquiv": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Analysis/NormedSpace/SphereNormEquiv.lean"
    },
    ".lake.packages.mathlib.Mathlib.Analysis.NormedSpace.BallAction": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Analysis/NormedSpace/BallAction.lean"
    },
    ".lake.packages.mathlib.Mathlib.Analysis.NormedSpace.MStructure": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Analysis/NormedSpace/MStructure.lean"
    },
    ".lake.packages.mathlib.Mathlib.Analysis.NormedSpace.Connected": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Analysis/NormedSpace/Connected.lean"
    },
    ".lake.packages.mathlib.Mathlib.Analysis.NormedSpace.FunctionSeries": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Analysis/NormedSpace/FunctionSeries.lean"
    },
    ".lake.packages.mathlib.Mathlib.Analysis.NormedSpace.MultipliableUniformlyOn": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Analysis/NormedSpace/MultipliableUniformlyOn.lean"
    },
    ".lake.packages.mathlib.Mathlib.Analysis.NormedSpace.Extend": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Analysis/NormedSpace/Extend.lean"
    },
    ".lake.packages.mathlib.Mathlib.Analysis.NormedSpace.Extr": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Analysis/NormedSpace/Extr.lean"
    },
    ".lake.packages.mathlib.Mathlib.Analysis.NormedSpace.DualNumber": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Analysis/NormedSpace/DualNumber.lean"
    },
    ".lake.packages.mathlib.Mathlib.Analysis.NormedSpace.Real": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Analysis/NormedSpace/Real.lean"
    },
    ".lake.packages.mathlib.Mathlib.Analysis.NormedSpace.Multilinear.Curry": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Analysis/NormedSpace/Multilinear/Curry.lean"
    },
    ".lake.packages.mathlib.Mathlib.Analysis.NormedSpace.Multilinear.Basic": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Analysis/NormedSpace/Multilinear/Basic.lean"
    },
    ".lake.packages.mathlib.Mathlib.Analysis.NormedSpace.OperatorNorm.Bilinear": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Analysis/NormedSpace/OperatorNorm/Bilinear.lean"
    },
    ".lake.packages.mathlib.Mathlib.Analysis.NormedSpace.OperatorNorm.Asymptotics": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Analysis/NormedSpace/OperatorNorm/Asymptotics.lean"
    },
    ".lake.packages.mathlib.Mathlib.Analysis.NormedSpace.OperatorNorm.Prod": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Analysis/NormedSpace/OperatorNorm/Prod.lean"
    },
    ".lake.packages.mathlib.Mathlib.Analysis.NormedSpace.OperatorNorm.NNNorm": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Analysis/NormedSpace/OperatorNorm/NNNorm.lean"
    },
    ".lake.packages.mathlib.Mathlib.Analysis.NormedSpace.OperatorNorm.Mul": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Analysis/NormedSpace/OperatorNorm/Mul.lean"
    },
    ".lake.packages.mathlib.Mathlib.Analysis.NormedSpace.OperatorNorm.Basic": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Analysis/NormedSpace/OperatorNorm/Basic.lean"
    },
    ".lake.packages.mathlib.Mathlib.Analysis.NormedSpace.OperatorNorm.Completeness": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Analysis/NormedSpace/OperatorNorm/Completeness.lean"
    },
    ".lake.packages.mathlib.Mathlib.Analysis.NormedSpace.OperatorNorm.NormedSpace": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Analysis/NormedSpace/OperatorNorm/NormedSpace.lean"
    },
    ".lake.packages.mathlib.Mathlib.Analysis.NormedSpace.HahnBanach.SeparatingDual": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Analysis/NormedSpace/HahnBanach/SeparatingDual.lean"
    },
    ".lake.packages.mathlib.Mathlib.Analysis.NormedSpace.HahnBanach.Extension": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Analysis/NormedSpace/HahnBanach/Extension.lean"
    },
    ".lake.packages.mathlib.Mathlib.Analysis.NormedSpace.HahnBanach.Separation": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Analysis/NormedSpace/HahnBanach/Separation.lean"
    },
    ".lake.packages.mathlib.Mathlib.Analysis.NormedSpace.PiTensorProduct.ProjectiveSeminorm": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Analysis/NormedSpace/PiTensorProduct/ProjectiveSeminorm.lean"
    },
    ".lake.packages.mathlib.Mathlib.Analysis.NormedSpace.PiTensorProduct.InjectiveSeminorm": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Analysis/NormedSpace/PiTensorProduct/InjectiveSeminorm.lean"
    },
    ".lake.packages.mathlib.Mathlib.Analysis.NormedSpace.Alternating.Curry": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Analysis/NormedSpace/Alternating/Curry.lean"
    },
    ".lake.packages.mathlib.Mathlib.Analysis.NormedSpace.Alternating.Basic": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Analysis/NormedSpace/Alternating/Basic.lean"
    },
    ".lake.packages.mathlib.Mathlib.Analysis.LocallyConvex.AbsConvex": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Analysis/LocallyConvex/AbsConvex.lean"
    },
    ".lake.packages.mathlib.Mathlib.Analysis.LocallyConvex.WeakDual": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Analysis/LocallyConvex/WeakDual.lean"
    },
    ".lake.packages.mathlib.Mathlib.Analysis.LocallyConvex.Polar": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Analysis/LocallyConvex/Polar.lean"
    },
    ".lake.packages.mathlib.Mathlib.Analysis.LocallyConvex.WeakOperatorTopology": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Analysis/LocallyConvex/WeakOperatorTopology.lean"
    },
    ".lake.packages.mathlib.Mathlib.Analysis.LocallyConvex.Barrelled": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Analysis/LocallyConvex/Barrelled.lean"
    },
    ".lake.packages.mathlib.Mathlib.Analysis.LocallyConvex.BalancedCoreHull": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Analysis/LocallyConvex/BalancedCoreHull.lean"
    },
    ".lake.packages.mathlib.Mathlib.Analysis.LocallyConvex.Basic": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Analysis/LocallyConvex/Basic.lean"
    },
    ".lake.packages.mathlib.Mathlib.Analysis.LocallyConvex.StrongTopology": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Analysis/LocallyConvex/StrongTopology.lean"
    },
    ".lake.packages.mathlib.Mathlib.Analysis.LocallyConvex.ContinuousOfBounded": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Analysis/LocallyConvex/ContinuousOfBounded.lean"
    },
    ".lake.packages.mathlib.Mathlib.Analysis.LocallyConvex.AbsConvexOpen": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Analysis/LocallyConvex/AbsConvexOpen.lean"
    },
    ".lake.packages.mathlib.Mathlib.Analysis.LocallyConvex.WithSeminorms": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Analysis/LocallyConvex/WithSeminorms.lean"
    },
    ".lake.packages.mathlib.Mathlib.Analysis.LocallyConvex.Bounded": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Analysis/LocallyConvex/Bounded.lean"
    },
    ".lake.packages.mathlib.Mathlib.Analysis.LocallyConvex.WeakSpace": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Analysis/LocallyConvex/WeakSpace.lean"
    },
    ".lake.packages.mathlib.Mathlib.Analysis.Calculus.Rademacher": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Analysis/Calculus/Rademacher.lean"
    },
    ".lake.packages.mathlib.Mathlib.Analysis.Calculus.UniformLimitsDeriv": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Analysis/Calculus/UniformLimitsDeriv.lean"
    },
    ".lake.packages.mathlib.Mathlib.Analysis.Calculus.Implicit": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Analysis/Calculus/Implicit.lean"
    },
    ".lake.packages.mathlib.Mathlib.Analysis.Calculus.DSlope": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Analysis/Calculus/DSlope.lean"
    },
    ".lake.packages.mathlib.Mathlib.Analysis.Calculus.ParametricIntervalIntegral": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Analysis/Calculus/ParametricIntervalIntegral.lean"
    },
    ".lake.packages.mathlib.Mathlib.Analysis.Calculus.VectorField": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Analysis/Calculus/VectorField.lean"
    },
    ".lake.packages.mathlib.Mathlib.Analysis.Calculus.Taylor": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Analysis/Calculus/Taylor.lean"
    },
    ".lake.packages.mathlib.Mathlib.Analysis.Calculus.LagrangeMultipliers": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Analysis/Calculus/LagrangeMultipliers.lean"
    },
    ".lake.packages.mathlib.Mathlib.Analysis.Calculus.ParametricIntegral": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Analysis/Calculus/ParametricIntegral.lean"
    },
    ".lake.packages.mathlib.Mathlib.Analysis.Calculus.DerivativeTest": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Analysis/Calculus/DerivativeTest.lean"
    },
    ".lake.packages.mathlib.Mathlib.Analysis.Calculus.Darboux": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Analysis/Calculus/Darboux.lean"
    },
    ".lake.packages.mathlib.Mathlib.Analysis.Calculus.LogDeriv": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Analysis/Calculus/LogDeriv.lean"
    },
    ".lake.packages.mathlib.Mathlib.Analysis.Calculus.Monotone": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Analysis/Calculus/Monotone.lean"
    },
    ".lake.packages.mathlib.Mathlib.Analysis.Calculus.MeanValue": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Analysis/Calculus/MeanValue.lean"
    },
    ".lake.packages.mathlib.Mathlib.Analysis.Calculus.SmoothSeries": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Analysis/Calculus/SmoothSeries.lean"
    },
    ".lake.packages.mathlib.Mathlib.Analysis.Calculus.FormalMultilinearSeries": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Analysis/Calculus/FormalMultilinearSeries.lean"
    },
    ".lake.packages.mathlib.Mathlib.Analysis.Calculus.LHopital": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Analysis/Calculus/LHopital.lean"
    },
    ".lake.packages.mathlib.Mathlib.Analysis.Calculus.DiffContOnCl": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Analysis/Calculus/DiffContOnCl.lean"
    },
    ".lake.packages.mathlib.Mathlib.Analysis.Calculus.TangentCone": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Analysis/Calculus/TangentCone.lean"
    },
    ".lake.packages.mathlib.Mathlib.Analysis.Calculus.Gradient.Basic": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Analysis/Calculus/Gradient/Basic.lean"
    },
    ".lake.packages.mathlib.Mathlib.Analysis.Calculus.AddTorsor.AffineMap": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Analysis/Calculus/AddTorsor/AffineMap.lean"
    },
    ".lake.packages.mathlib.Mathlib.Analysis.Calculus.AddTorsor.Coord": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Analysis/Calculus/AddTorsor/Coord.lean"
    },
    ".lake.packages.mathlib.Mathlib.Analysis.Calculus.FDeriv.Pow": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Analysis/Calculus/FDeriv/Pow.lean"
    },
    ".lake.packages.mathlib.Mathlib.Analysis.Calculus.FDeriv.Analytic": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Analysis/Calculus/FDeriv/Analytic.lean"
    },
    ".lake.packages.mathlib.Mathlib.Analysis.Calculus.FDeriv.RestrictScalars": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Analysis/Calculus/FDeriv/RestrictScalars.lean"
    },
    ".lake.packages.mathlib.Mathlib.Analysis.Calculus.FDeriv.Bilinear": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Analysis/Calculus/FDeriv/Bilinear.lean"
    },
    ".lake.packages.mathlib.Mathlib.Analysis.Calculus.FDeriv.Comp": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Analysis/Calculus/FDeriv/Comp.lean"
    },
    ".lake.packages.mathlib.Mathlib.Analysis.Calculus.FDeriv.Add": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Analysis/Calculus/FDeriv/Add.lean"
    },
    ".lake.packages.mathlib.Mathlib.Analysis.Calculus.FDeriv.Star": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Analysis/Calculus/FDeriv/Star.lean"
    },
    ".lake.packages.mathlib.Mathlib.Analysis.Calculus.FDeriv.Norm": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Analysis/Calculus/FDeriv/Norm.lean"
    },
    ".lake.packages.mathlib.Mathlib.Analysis.Calculus.FDeriv.Prod": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Analysis/Calculus/FDeriv/Prod.lean"
    },
    ".lake.packages.mathlib.Mathlib.Analysis.Calculus.FDeriv.Linear": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Analysis/Calculus/FDeriv/Linear.lean"
    },
    ".lake.packages.mathlib.Mathlib.Analysis.Calculus.FDeriv.Pi": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Analysis/Calculus/FDeriv/Pi.lean"
    },
    ".lake.packages.mathlib.Mathlib.Analysis.Calculus.FDeriv.Mul": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Analysis/Calculus/FDeriv/Mul.lean"
    },
    ".lake.packages.mathlib.Mathlib.Analysis.Calculus.FDeriv.Basic": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Analysis/Calculus/FDeriv/Basic.lean"
    },
    ".lake.packages.mathlib.Mathlib.Analysis.Calculus.FDeriv.Congr": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Analysis/Calculus/FDeriv/Congr.lean"
    },
    ".lake.packages.mathlib.Mathlib.Analysis.Calculus.FDeriv.Defs": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Analysis/Calculus/FDeriv/Defs.lean"
    },
    ".lake.packages.mathlib.Mathlib.Analysis.Calculus.FDeriv.Const": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Analysis/Calculus/FDeriv/Const.lean"
    },
    ".lake.packages.mathlib.Mathlib.Analysis.Calculus.FDeriv.Measurable": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Analysis/Calculus/FDeriv/Measurable.lean"
    },
    ".lake.packages.mathlib.Mathlib.Analysis.Calculus.FDeriv.Equiv": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Analysis/Calculus/FDeriv/Equiv.lean"
    },
    ".lake.packages.mathlib.Mathlib.Analysis.Calculus.FDeriv.WithLp": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Analysis/Calculus/FDeriv/WithLp.lean"
    },
    ".lake.packages.mathlib.Mathlib.Analysis.Calculus.FDeriv.Symmetric": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Analysis/Calculus/FDeriv/Symmetric.lean"
    },
    ".lake.packages.mathlib.Mathlib.Analysis.Calculus.FDeriv.Extend": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Analysis/Calculus/FDeriv/Extend.lean"
    },
    ".lake.packages.mathlib.Mathlib.Analysis.Calculus.IteratedDeriv.Lemmas": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Analysis/Calculus/IteratedDeriv/Lemmas.lean"
    },
    ".lake.packages.mathlib.Mathlib.Analysis.Calculus.IteratedDeriv.FaaDiBruno": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Analysis/Calculus/IteratedDeriv/FaaDiBruno.lean"
    },
    ".lake.packages.mathlib.Mathlib.Analysis.Calculus.IteratedDeriv.Defs": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Analysis/Calculus/IteratedDeriv/Defs.lean"
    },
    ".lake.packages.mathlib.Mathlib.Analysis.Calculus.IteratedDeriv.WithinZpow": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Analysis/Calculus/IteratedDeriv/WithinZpow.lean"
    },
    ".lake.packages.mathlib.Mathlib.Analysis.Calculus.ContDiff.FTaylorSeries": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Analysis/Calculus/ContDiff/FTaylorSeries.lean"
    },
    ".lake.packages.mathlib.Mathlib.Analysis.Calculus.ContDiff.RCLike": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Analysis/Calculus/ContDiff/RCLike.lean"
    },
    ".lake.packages.mathlib.Mathlib.Analysis.Calculus.ContDiff.RestrictScalars": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Analysis/Calculus/ContDiff/RestrictScalars.lean"
    },
    ".lake.packages.mathlib.Mathlib.Analysis.Calculus.ContDiff.FaaDiBruno": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Analysis/Calculus/ContDiff/FaaDiBruno.lean"
    },
    ".lake.packages.mathlib.Mathlib.Analysis.Calculus.ContDiff.Basic": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Analysis/Calculus/ContDiff/Basic.lean"
    },
    ".lake.packages.mathlib.Mathlib.Analysis.Calculus.ContDiff.FiniteDimension": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Analysis/Calculus/ContDiff/FiniteDimension.lean"
    },
    ".lake.packages.mathlib.Mathlib.Analysis.Calculus.ContDiff.Operations": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Analysis/Calculus/ContDiff/Operations.lean"
    },
    ".lake.packages.mathlib.Mathlib.Analysis.Calculus.ContDiff.Defs": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Analysis/Calculus/ContDiff/Defs.lean"
    },
    ".lake.packages.mathlib.Mathlib.Analysis.Calculus.ContDiff.WithLp": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Analysis/Calculus/ContDiff/WithLp.lean"
    },
    ".lake.packages.mathlib.Mathlib.Analysis.Calculus.ContDiff.CPolynomial": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Analysis/Calculus/ContDiff/CPolynomial.lean"
    },
    ".lake.packages.mathlib.Mathlib.Analysis.Calculus.ContDiff.Bounds": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Analysis/Calculus/ContDiff/Bounds.lean"
    },
    ".lake.packages.mathlib.Mathlib.Analysis.Calculus.Conformal.InnerProduct": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Analysis/Calculus/Conformal/InnerProduct.lean"
    },
    ".lake.packages.mathlib.Mathlib.Analysis.Calculus.Conformal.NormedSpace": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Analysis/Calculus/Conformal/NormedSpace.lean"
    },
    ".lake.packages.mathlib.Mathlib.Analysis.Calculus.LineDeriv.QuadraticMap": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Analysis/Calculus/LineDeriv/QuadraticMap.lean"
    },
    ".lake.packages.mathlib.Mathlib.Analysis.Calculus.LineDeriv.IntegrationByParts": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Analysis/Calculus/LineDeriv/IntegrationByParts.lean"
    },
    ".lake.packages.mathlib.Mathlib.Analysis.Calculus.LineDeriv.Basic": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Analysis/Calculus/LineDeriv/Basic.lean"
    },
    ".lake.packages.mathlib.Mathlib.Analysis.Calculus.LineDeriv.Measurable": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Analysis/Calculus/LineDeriv/Measurable.lean"
    },
    ".lake.packages.mathlib.Mathlib.Analysis.Calculus.BumpFunction.Normed": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Analysis/Calculus/BumpFunction/Normed.lean"
    },
    ".lake.packages.mathlib.Mathlib.Analysis.Calculus.BumpFunction.Convolution": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Analysis/Calculus/BumpFunction/Convolution.lean"
    },
    ".lake.packages.mathlib.Mathlib.Analysis.Calculus.BumpFunction.Basic": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Analysis/Calculus/BumpFunction/Basic.lean"
    },
    ".lake.packages.mathlib.Mathlib.Analysis.Calculus.BumpFunction.FiniteDimension": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Analysis/Calculus/BumpFunction/FiniteDimension.lean"
    },
    ".lake.packages.mathlib.Mathlib.Analysis.Calculus.BumpFunction.InnerProduct": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Analysis/Calculus/BumpFunction/InnerProduct.lean"
    },
    ".lake.packages.mathlib.Mathlib.Analysis.Calculus.BumpFunction.SmoothApprox": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Analysis/Calculus/BumpFunction/SmoothApprox.lean"
    },
    ".lake.packages.mathlib.Mathlib.Analysis.Calculus.Deriv.Pow": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Analysis/Calculus/Deriv/Pow.lean"
    },
    ".lake.packages.mathlib.Mathlib.Analysis.Calculus.Deriv.Inverse": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Analysis/Calculus/Deriv/Inverse.lean"
    },
    ".lake.packages.mathlib.Mathlib.Analysis.Calculus.Deriv.Comp": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Analysis/Calculus/Deriv/Comp.lean"
    },
    ".lake.packages.mathlib.Mathlib.Analysis.Calculus.Deriv.Support": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Analysis/Calculus/Deriv/Support.lean"
    },
    ".lake.packages.mathlib.Mathlib.Analysis.Calculus.Deriv.Add": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Analysis/Calculus/Deriv/Add.lean"
    },
    ".lake.packages.mathlib.Mathlib.Analysis.Calculus.Deriv.Star": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Analysis/Calculus/Deriv/Star.lean"
    },
    ".lake.packages.mathlib.Mathlib.Analysis.Calculus.Deriv.Prod": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Analysis/Calculus/Deriv/Prod.lean"
    },
    ".lake.packages.mathlib.Mathlib.Analysis.Calculus.Deriv.AffineMap": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Analysis/Calculus/Deriv/AffineMap.lean"
    },
    ".lake.packages.mathlib.Mathlib.Analysis.Calculus.Deriv.Linear": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Analysis/Calculus/Deriv/Linear.lean"
    },
    ".lake.packages.mathlib.Mathlib.Analysis.Calculus.Deriv.Pi": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Analysis/Calculus/Deriv/Pi.lean"
    },
    ".lake.packages.mathlib.Mathlib.Analysis.Calculus.Deriv.Mul": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Analysis/Calculus/Deriv/Mul.lean"
    },
    ".lake.packages.mathlib.Mathlib.Analysis.Calculus.Deriv.Basic": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Analysis/Calculus/Deriv/Basic.lean"
    },
    ".lake.packages.mathlib.Mathlib.Analysis.Calculus.Deriv.Slope": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Analysis/Calculus/Deriv/Slope.lean"
    },
    ".lake.packages.mathlib.Mathlib.Analysis.Calculus.Deriv.ZPow": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Analysis/Calculus/Deriv/ZPow.lean"
    },
    ".lake.packages.mathlib.Mathlib.Analysis.Calculus.Deriv.CompMul": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Analysis/Calculus/Deriv/CompMul.lean"
    },
    ".lake.packages.mathlib.Mathlib.Analysis.Calculus.Deriv.Polynomial": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Analysis/Calculus/Deriv/Polynomial.lean"
    },
    ".lake.packages.mathlib.Mathlib.Analysis.Calculus.Deriv.Shift": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Analysis/Calculus/Deriv/Shift.lean"
    },
    ".lake.packages.mathlib.Mathlib.Analysis.Calculus.Deriv.MeanValue": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Analysis/Calculus/Deriv/MeanValue.lean"
    },
    ".lake.packages.mathlib.Mathlib.Analysis.Calculus.Deriv.Abs": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Analysis/Calculus/Deriv/Abs.lean"
    },
    ".lake.packages.mathlib.Mathlib.Analysis.Calculus.Deriv.Inv": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Analysis/Calculus/Deriv/Inv.lean"
    },
    ".lake.packages.mathlib.Mathlib.Analysis.Calculus.InverseFunctionTheorem.Deriv": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Analysis/Calculus/InverseFunctionTheorem/Deriv.lean"
    },
    ".lake.packages.mathlib.Mathlib.Analysis.Calculus.InverseFunctionTheorem.ContDiff": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Analysis/Calculus/InverseFunctionTheorem/ContDiff.lean"
    },
    ".lake.packages.mathlib.Mathlib.Analysis.Calculus.InverseFunctionTheorem.ApproximatesLinearOn": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Analysis/Calculus/InverseFunctionTheorem/ApproximatesLinearOn.lean"
    },
    ".lake.packages.mathlib.Mathlib.Analysis.Calculus.InverseFunctionTheorem.FDeriv": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Analysis/Calculus/InverseFunctionTheorem/FDeriv.lean"
    },
    ".lake.packages.mathlib.Mathlib.Analysis.Calculus.InverseFunctionTheorem.FiniteDimensional": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Analysis/Calculus/InverseFunctionTheorem/FiniteDimensional.lean"
    },
    ".lake.packages.mathlib.Mathlib.Analysis.Calculus.LocalExtr.LineDeriv": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Analysis/Calculus/LocalExtr/LineDeriv.lean"
    },
    ".lake.packages.mathlib.Mathlib.Analysis.Calculus.LocalExtr.Basic": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Analysis/Calculus/LocalExtr/Basic.lean"
    },
    ".lake.packages.mathlib.Mathlib.Analysis.Calculus.LocalExtr.Polynomial": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Analysis/Calculus/LocalExtr/Polynomial.lean"
    },
    ".lake.packages.mathlib.Mathlib.Analysis.Calculus.LocalExtr.Rolle": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Analysis/Calculus/LocalExtr/Rolle.lean"
    },
    ".lake.packages.mathlib.Mathlib.Analysis.Normed.MulAction": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Analysis/Normed/MulAction.lean"
    },
    ".lake.packages.mathlib.Mathlib.Analysis.Normed.Order.Basic": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Analysis/Normed/Order/Basic.lean"
    },
    ".lake.packages.mathlib.Mathlib.Analysis.Normed.Order.UpperLower": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Analysis/Normed/Order/UpperLower.lean"
    },
    ".lake.packages.mathlib.Mathlib.Analysis.Normed.Order.Lattice": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Analysis/Normed/Order/Lattice.lean"
    },
    ".lake.packages.mathlib.Mathlib.Analysis.Normed.Order.Hom.Ultra": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Analysis/Normed/Order/Hom/Ultra.lean"
    },
    ".lake.packages.mathlib.Mathlib.Analysis.Normed.Order.Hom.Basic": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Analysis/Normed/Order/Hom/Basic.lean"
    },
    ".lake.packages.mathlib.Mathlib.Analysis.Normed.Group.HomCompletion": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Analysis/Normed/Group/HomCompletion.lean"
    },
    ".lake.packages.mathlib.Mathlib.Analysis.Normed.Group.Int": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Analysis/Normed/Group/Int.lean"
    },
    ".lake.packages.mathlib.Mathlib.Analysis.Normed.Group.Uniform": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Analysis/Normed/Group/Uniform.lean"
    },
    ".lake.packages.mathlib.Mathlib.Analysis.Normed.Group.Lemmas": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Analysis/Normed/Group/Lemmas.lean"
    },
    ".lake.packages.mathlib.Mathlib.Analysis.Normed.Group.InfiniteSum": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Analysis/Normed/Group/InfiniteSum.lean"
    },
    ".lake.packages.mathlib.Mathlib.Analysis.Normed.Group.AddCircle": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Analysis/Normed/Group/AddCircle.lean"
    },
    ".lake.packages.mathlib.Mathlib.Analysis.Normed.Group.Rat": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Analysis/Normed/Group/Rat.lean"
    },
    ".lake.packages.mathlib.Mathlib.Analysis.Normed.Group.Ultra": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Analysis/Normed/Group/Ultra.lean"
    },
    ".lake.packages.mathlib.Mathlib.Analysis.Normed.Group.AddTorsor": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Analysis/Normed/Group/AddTorsor.lean"
    },
    ".lake.packages.mathlib.Mathlib.Analysis.Normed.Group.Tannery": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Analysis/Normed/Group/Tannery.lean"
    },
    ".lake.packages.mathlib.Mathlib.Analysis.Normed.Group.Pointwise": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Analysis/Normed/Group/Pointwise.lean"
    },
    ".lake.packages.mathlib.Mathlib.Analysis.Normed.Group.Completion": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Analysis/Normed/Group/Completion.lean"
    },
    ".lake.packages.mathlib.Mathlib.Analysis.Normed.Group.CocompactMap": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Analysis/Normed/Group/CocompactMap.lean"
    },
    ".lake.packages.mathlib.Mathlib.Analysis.Normed.Group.SeparationQuotient": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Analysis/Normed/Group/SeparationQuotient.lean"
    },
    ".lake.packages.mathlib.Mathlib.Analysis.Normed.Group.NullSubmodule": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Analysis/Normed/Group/NullSubmodule.lean"
    },
    ".lake.packages.mathlib.Mathlib.Analysis.Normed.Group.Basic": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Analysis/Normed/Group/Basic.lean"
    },
    ".lake.packages.mathlib.Mathlib.Analysis.Normed.Group.Quotient": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Analysis/Normed/Group/Quotient.lean"
    },
    ".lake.packages.mathlib.Mathlib.Analysis.Normed.Group.Constructions": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Analysis/Normed/Group/Constructions.lean"
    },
    ".lake.packages.mathlib.Mathlib.Analysis.Normed.Group.Continuity": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Analysis/Normed/Group/Continuity.lean"
    },
    ".lake.packages.mathlib.Mathlib.Analysis.Normed.Group.Completeness": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Analysis/Normed/Group/Completeness.lean"
    },
    ".lake.packages.mathlib.Mathlib.Analysis.Normed.Group.Subgroup": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Analysis/Normed/Group/Subgroup.lean"
    },
    ".lake.packages.mathlib.Mathlib.Analysis.Normed.Group.Submodule": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Analysis/Normed/Group/Submodule.lean"
    },
    ".lake.packages.mathlib.Mathlib.Analysis.Normed.Group.Bounded": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Analysis/Normed/Group/Bounded.lean"
    },
    ".lake.packages.mathlib.Mathlib.Analysis.Normed.Group.SemiNormedGrp": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Analysis/Normed/Group/SemiNormedGrp.lean"
    },
    ".lake.packages.mathlib.Mathlib.Analysis.Normed.Group.BallSphere": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Analysis/Normed/Group/BallSphere.lean"
    },
    ".lake.packages.mathlib.Mathlib.Analysis.Normed.Group.Seminorm": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Analysis/Normed/Group/Seminorm.lean"
    },
    ".lake.packages.mathlib.Mathlib.Analysis.Normed.Group.ControlledClosure": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Analysis/Normed/Group/ControlledClosure.lean"
    },
    ".lake.packages.mathlib.Mathlib.Analysis.Normed.Group.ZeroAtInfty": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Analysis/Normed/Group/ZeroAtInfty.lean"
    },
    ".lake.packages.mathlib.Mathlib.Analysis.Normed.Group.Hom": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Analysis/Normed/Group/Hom.lean"
    },
    ".lake.packages.mathlib.Mathlib.Analysis.Normed.Group.SemiNormedGrp.Completion": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Analysis/Normed/Group/SemiNormedGrp/Completion.lean"
    },
    ".lake.packages.mathlib.Mathlib.Analysis.Normed.Group.SemiNormedGrp.Kernels": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Analysis/Normed/Group/SemiNormedGrp/Kernels.lean"
    },
    ".lake.packages.mathlib.Mathlib.Analysis.Normed.Module.WeakDual": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Analysis/Normed/Module/WeakDual.lean"
    },
    ".lake.packages.mathlib.Mathlib.Analysis.Normed.Module.Convex": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Analysis/Normed/Module/Convex.lean"
    },
    ".lake.packages.mathlib.Mathlib.Analysis.Normed.Module.Ray": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Analysis/Normed/Module/Ray.lean"
    },
    ".lake.packages.mathlib.Mathlib.Analysis.Normed.Module.Completion": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Analysis/Normed/Module/Completion.lean"
    },
    ".lake.packages.mathlib.Mathlib.Analysis.Normed.Module.Complemented": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Analysis/Normed/Module/Complemented.lean"
    },
    ".lake.packages.mathlib.Mathlib.Analysis.Normed.Module.Basic": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Analysis/Normed/Module/Basic.lean"
    },
    ".lake.packages.mathlib.Mathlib.Analysis.Normed.Module.FiniteDimension": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Analysis/Normed/Module/FiniteDimension.lean"
    },
    ".lake.packages.mathlib.Mathlib.Analysis.Normed.Module.Span": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Analysis/Normed/Module/Span.lean"
    },
    ".lake.packages.mathlib.Mathlib.Analysis.Normed.Module.Dual": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Analysis/Normed/Module/Dual.lean"
    },
    ".lake.packages.mathlib.Mathlib.Analysis.Normed.Lp.PiLp": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Analysis/Normed/Lp/PiLp.lean"
    },
    ".lake.packages.mathlib.Mathlib.Analysis.Normed.Lp.MeasurableSpace": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Analysis/Normed/Lp/MeasurableSpace.lean"
    },
    ".lake.packages.mathlib.Mathlib.Analysis.Normed.Lp.LpEquiv": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Analysis/Normed/Lp/LpEquiv.lean"
    },
    ".lake.packages.mathlib.Mathlib.Analysis.Normed.Lp.lpSpace": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Analysis/Normed/Lp/lpSpace.lean"
    },
    ".lake.packages.mathlib.Mathlib.Analysis.Normed.Lp.ProdLp": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Analysis/Normed/Lp/ProdLp.lean"
    },
    ".lake.packages.mathlib.Mathlib.Analysis.Normed.Lp.WithLp": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Analysis/Normed/Lp/WithLp.lean"
    },
    ".lake.packages.mathlib.Mathlib.Analysis.Normed.Field.ProperSpace": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Analysis/Normed/Field/ProperSpace.lean"
    },
    ".lake.packages.mathlib.Mathlib.Analysis.Normed.Field.Instances": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Analysis/Normed/Field/Instances.lean"
    },
    ".lake.packages.mathlib.Mathlib.Analysis.Normed.Field.Lemmas": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Analysis/Normed/Field/Lemmas.lean"
    },
    ".lake.packages.mathlib.Mathlib.Analysis.Normed.Field.Ultra": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Analysis/Normed/Field/Ultra.lean"
    },
    ".lake.packages.mathlib.Mathlib.Analysis.Normed.Field.Basic": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Analysis/Normed/Field/Basic.lean"
    },
    ".lake.packages.mathlib.Mathlib.Analysis.Normed.Field.WithAbs": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Analysis/Normed/Field/WithAbs.lean"
    },
    ".lake.packages.mathlib.Mathlib.Analysis.Normed.Field.UnitBall": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Analysis/Normed/Field/UnitBall.lean"
    },
    ".lake.packages.mathlib.Mathlib.Analysis.Normed.Affine.Convex": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Analysis/Normed/Affine/Convex.lean"
    },
    ".lake.packages.mathlib.Mathlib.Analysis.Normed.Affine.AddTorsor": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Analysis/Normed/Affine/AddTorsor.lean"
    },
    ".lake.packages.mathlib.Mathlib.Analysis.Normed.Affine.Simplex": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Analysis/Normed/Affine/Simplex.lean"
    },
    ".lake.packages.mathlib.Mathlib.Analysis.Normed.Affine.Isometry": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Analysis/Normed/Affine/Isometry.lean"
    },
    ".lake.packages.mathlib.Mathlib.Analysis.Normed.Affine.MazurUlam": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Analysis/Normed/Affine/MazurUlam.lean"
    },
    ".lake.packages.mathlib.Mathlib.Analysis.Normed.Affine.AddTorsorBases": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Analysis/Normed/Affine/AddTorsorBases.lean"
    },
    ".lake.packages.mathlib.Mathlib.Analysis.Normed.Affine.ContinuousAffineMap": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Analysis/Normed/Affine/ContinuousAffineMap.lean"
    },
    ".lake.packages.mathlib.Mathlib.Analysis.Normed.Ring.Lemmas": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Analysis/Normed/Ring/Lemmas.lean"
    },
    ".lake.packages.mathlib.Mathlib.Analysis.Normed.Ring.InfiniteSum": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Analysis/Normed/Ring/InfiniteSum.lean"
    },
    ".lake.packages.mathlib.Mathlib.Analysis.Normed.Ring.Ultra": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Analysis/Normed/Ring/Ultra.lean"
    },
    ".lake.packages.mathlib.Mathlib.Analysis.Normed.Ring.Basic": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Analysis/Normed/Ring/Basic.lean"
    },
    ".lake.packages.mathlib.Mathlib.Analysis.Normed.Ring.WithAbs": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Analysis/Normed/Ring/WithAbs.lean"
    },
    ".lake.packages.mathlib.Mathlib.Analysis.Normed.Ring.Units": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Analysis/Normed/Ring/Units.lean"
    },
    ".lake.packages.mathlib.Mathlib.Analysis.Normed.Unbundled.SeminormFromConst": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Analysis/Normed/Unbundled/SeminormFromConst.lean"
    },
    ".lake.packages.mathlib.Mathlib.Analysis.Normed.Unbundled.InvariantExtension": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Analysis/Normed/Unbundled/InvariantExtension.lean"
    },
    ".lake.packages.mathlib.Mathlib.Analysis.Normed.Unbundled.SmoothingSeminorm": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Analysis/Normed/Unbundled/SmoothingSeminorm.lean"
    },
    ".lake.packages.mathlib.Mathlib.Analysis.Normed.Unbundled.IsPowMulFaithful": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Analysis/Normed/Unbundled/IsPowMulFaithful.lean"
    },
    ".lake.packages.mathlib.Mathlib.Analysis.Normed.Unbundled.SpectralNorm": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Analysis/Normed/Unbundled/SpectralNorm.lean"
    },
    ".lake.packages.mathlib.Mathlib.Analysis.Normed.Unbundled.AlgebraNorm": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Analysis/Normed/Unbundled/AlgebraNorm.lean"
    },
    ".lake.packages.mathlib.Mathlib.Analysis.Normed.Unbundled.FiniteExtension": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Analysis/Normed/Unbundled/FiniteExtension.lean"
    },
    ".lake.packages.mathlib.Mathlib.Analysis.Normed.Unbundled.SeminormFromBounded": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Analysis/Normed/Unbundled/SeminormFromBounded.lean"
    },
    ".lake.packages.mathlib.Mathlib.Analysis.Normed.Unbundled.RingSeminorm": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Analysis/Normed/Unbundled/RingSeminorm.lean"
    },
    ".lake.packages.mathlib.Mathlib.Analysis.Normed.Operator.ContinuousLinearMap": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Analysis/Normed/Operator/ContinuousLinearMap.lean"
    },
    ".lake.packages.mathlib.Mathlib.Analysis.Normed.Operator.Compact": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Analysis/Normed/Operator/Compact.lean"
    },
    ".lake.packages.mathlib.Mathlib.Analysis.Normed.Operator.Banach": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Analysis/Normed/Operator/Banach.lean"
    },
    ".lake.packages.mathlib.Mathlib.Analysis.Normed.Operator.BanachSteinhaus": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Analysis/Normed/Operator/BanachSteinhaus.lean"
    },
    ".lake.packages.mathlib.Mathlib.Analysis.Normed.Operator.BoundedLinearMaps": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Analysis/Normed/Operator/BoundedLinearMaps.lean"
    },
    ".lake.packages.mathlib.Mathlib.Analysis.Normed.Operator.LinearIsometry": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Analysis/Normed/Operator/LinearIsometry.lean"
    },
    ".lake.packages.mathlib.Mathlib.Analysis.Normed.Algebra.MatrixExponential": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Analysis/Normed/Algebra/MatrixExponential.lean"
    },
    ".lake.packages.mathlib.Mathlib.Analysis.Normed.Algebra.Ultra": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Analysis/Normed/Algebra/Ultra.lean"
    },
    ".lake.packages.mathlib.Mathlib.Analysis.Normed.Algebra.UnitizationL1": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Analysis/Normed/Algebra/UnitizationL1.lean"
    },
    ".lake.packages.mathlib.Mathlib.Analysis.Normed.Algebra.Exponential": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Analysis/Normed/Algebra/Exponential.lean"
    },
    ".lake.packages.mathlib.Mathlib.Analysis.Normed.Algebra.Basic": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Analysis/Normed/Algebra/Basic.lean"
    },
    ".lake.packages.mathlib.Mathlib.Analysis.Normed.Algebra.QuaternionExponential": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Analysis/Normed/Algebra/QuaternionExponential.lean"
    },
    ".lake.packages.mathlib.Mathlib.Analysis.Normed.Algebra.Unitization": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Analysis/Normed/Algebra/Unitization.lean"
    },
    ".lake.packages.mathlib.Mathlib.Analysis.Normed.Algebra.TrivSqZeroExt": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Analysis/Normed/Algebra/TrivSqZeroExt.lean"
    },
    ".lake.packages.mathlib.Mathlib.Analysis.Normed.Algebra.Spectrum": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Analysis/Normed/Algebra/Spectrum.lean"
    },
    ".lake.packages.mathlib.Mathlib.Analysis.Polynomial.Basic": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Analysis/Polynomial/Basic.lean"
    },
    ".lake.packages.mathlib.Mathlib.Analysis.Polynomial.CauchyBound": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Analysis/Polynomial/CauchyBound.lean"
    },
    ".lake.packages.mathlib.Mathlib.Analysis.Analytic.RadiusLiminf": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Analysis/Analytic/RadiusLiminf.lean"
    },
    ".lake.packages.mathlib.Mathlib.Analysis.Analytic.Inverse": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Analysis/Analytic/Inverse.lean"
    },
    ".lake.packages.mathlib.Mathlib.Analysis.Analytic.Composition": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Analysis/Analytic/Composition.lean"
    },
    ".lake.packages.mathlib.Mathlib.Analysis.Analytic.Linear": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Analysis/Analytic/Linear.lean"
    },
    ".lake.packages.mathlib.Mathlib.Analysis.Analytic.Uniqueness": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Analysis/Analytic/Uniqueness.lean"
    },
    ".lake.packages.mathlib.Mathlib.Analysis.Analytic.Order": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Analysis/Analytic/Order.lean"
    },
    ".lake.packages.mathlib.Mathlib.Analysis.Analytic.Basic": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Analysis/Analytic/Basic.lean"
    },
    ".lake.packages.mathlib.Mathlib.Analysis.Analytic.IteratedFDeriv": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Analysis/Analytic/IteratedFDeriv.lean"
    },
    ".lake.packages.mathlib.Mathlib.Analysis.Analytic.Constructions": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Analysis/Analytic/Constructions.lean"
    },
    ".lake.packages.mathlib.Mathlib.Analysis.Analytic.OfScalars": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Analysis/Analytic/OfScalars.lean"
    },
    ".lake.packages.mathlib.Mathlib.Analysis.Analytic.ChangeOrigin": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Analysis/Analytic/ChangeOrigin.lean"
    },
    ".lake.packages.mathlib.Mathlib.Analysis.Analytic.CPolynomialDef": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Analysis/Analytic/CPolynomialDef.lean"
    },
    ".lake.packages.mathlib.Mathlib.Analysis.Analytic.Polynomial": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Analysis/Analytic/Polynomial.lean"
    },
    ".lake.packages.mathlib.Mathlib.Analysis.Analytic.Within": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Analysis/Analytic/Within.lean"
    },
    ".lake.packages.mathlib.Mathlib.Analysis.Analytic.CPolynomial": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Analysis/Analytic/CPolynomial.lean"
    },
    ".lake.packages.mathlib.Mathlib.Analysis.Analytic.IsolatedZeros": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Analysis/Analytic/IsolatedZeros.lean"
    },
    ".lake.packages.mathlib.Mathlib.Probability.BorelCantelli": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Probability/BorelCantelli.lean"
    },
    ".lake.packages.mathlib.Mathlib.Probability.ProductMeasure": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Probability/ProductMeasure.lean"
    },
    ".lake.packages.mathlib.Mathlib.Probability.Variance": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Probability/Variance.lean"
    },
    ".lake.packages.mathlib.Mathlib.Probability.Integration": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Probability/Integration.lean"
    },
    ".lake.packages.mathlib.Mathlib.Probability.CondVar": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Probability/CondVar.lean"
    },
    ".lake.packages.mathlib.Mathlib.Probability.Density": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Probability/Density.lean"
    },
    ".lake.packages.mathlib.Mathlib.Probability.StrongLaw": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Probability/StrongLaw.lean"
    },
    ".lake.packages.mathlib.Mathlib.Probability.IdentDistrib": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Probability/IdentDistrib.lean"
    },
    ".lake.packages.mathlib.Mathlib.Probability.Notation": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Probability/Notation.lean"
    },
    ".lake.packages.mathlib.Mathlib.Probability.UniformOn": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Probability/UniformOn.lean"
    },
    ".lake.packages.mathlib.Mathlib.Probability.ConditionalProbability": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Probability/ConditionalProbability.lean"
    },
    ".lake.packages.mathlib.Mathlib.Probability.CDF": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Probability/CDF.lean"
    },
    ".lake.packages.mathlib.Mathlib.Probability.ConditionalExpectation": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Probability/ConditionalExpectation.lean"
    },
    ".lake.packages.mathlib.Mathlib.Probability.ProbabilityMassFunction.Integrals": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Probability/ProbabilityMassFunction/Integrals.lean"
    },
    ".lake.packages.mathlib.Mathlib.Probability.ProbabilityMassFunction.Monad": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Probability/ProbabilityMassFunction/Monad.lean"
    },
    ".lake.packages.mathlib.Mathlib.Probability.ProbabilityMassFunction.Basic": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Probability/ProbabilityMassFunction/Basic.lean"
    },
    ".lake.packages.mathlib.Mathlib.Probability.ProbabilityMassFunction.Constructions": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Probability/ProbabilityMassFunction/Constructions.lean"
    },
    ".lake.packages.mathlib.Mathlib.Probability.ProbabilityMassFunction.Binomial": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Probability/ProbabilityMassFunction/Binomial.lean"
    },
    ".lake.packages.mathlib.Mathlib.Probability.Moments.SubGaussian": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Probability/Moments/SubGaussian.lean"
    },
    ".lake.packages.mathlib.Mathlib.Probability.Moments.Tilted": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Probability/Moments/Tilted.lean"
    },
    ".lake.packages.mathlib.Mathlib.Probability.Moments.Variance": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Probability/Moments/Variance.lean"
    },
    ".lake.packages.mathlib.Mathlib.Probability.Moments.MGFAnalytic": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Probability/Moments/MGFAnalytic.lean"
    },
    ".lake.packages.mathlib.Mathlib.Probability.Moments.Basic": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Probability/Moments/Basic.lean"
    },
    ".lake.packages.mathlib.Mathlib.Probability.Moments.ComplexMGF": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Probability/Moments/ComplexMGF.lean"
    },
    ".lake.packages.mathlib.Mathlib.Probability.Moments.Covariance": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Probability/Moments/Covariance.lean"
    },
    ".lake.packages.mathlib.Mathlib.Probability.Moments.IntegrableExpMul": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Probability/Moments/IntegrableExpMul.lean"
    },
    ".lake.packages.mathlib.Mathlib.Probability.Moments.CovarianceBilin": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Probability/Moments/CovarianceBilin.lean"
    },
    ".lake.packages.mathlib.Mathlib.Probability.Independence.ZeroOne": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Probability/Independence/ZeroOne.lean"
    },
    ".lake.packages.mathlib.Mathlib.Probability.Independence.Basic": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Probability/Independence/Basic.lean"
    },
    ".lake.packages.mathlib.Mathlib.Probability.Independence.Conditional": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Probability/Independence/Conditional.lean"
    },
    ".lake.packages.mathlib.Mathlib.Probability.Independence.Kernel": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Probability/Independence/Kernel.lean"
    },
    ".lake.packages.mathlib.Mathlib.Probability.Independence.Integrable": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Probability/Independence/Integrable.lean"
    },
    ".lake.packages.mathlib.Mathlib.Probability.Martingale.OptionalStopping": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Probability/Martingale/OptionalStopping.lean"
    },
    ".lake.packages.mathlib.Mathlib.Probability.Martingale.BorelCantelli": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Probability/Martingale/BorelCantelli.lean"
    },
    ".lake.packages.mathlib.Mathlib.Probability.Martingale.Basic": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Probability/Martingale/Basic.lean"
    },
    ".lake.packages.mathlib.Mathlib.Probability.Martingale.OptionalSampling": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Probability/Martingale/OptionalSampling.lean"
    },
    ".lake.packages.mathlib.Mathlib.Probability.Martingale.Centering": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Probability/Martingale/Centering.lean"
    },
    ".lake.packages.mathlib.Mathlib.Probability.Martingale.Convergence": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Probability/Martingale/Convergence.lean"
    },
    ".lake.packages.mathlib.Mathlib.Probability.Martingale.Upcrossing": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Probability/Martingale/Upcrossing.lean"
    },
    ".lake.packages.mathlib.Mathlib.Probability.Distributions.Gamma": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Probability/Distributions/Gamma.lean"
    },
    ".lake.packages.mathlib.Mathlib.Probability.Distributions.Gaussian": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Probability/Distributions/Gaussian.lean"
    },
    ".lake.packages.mathlib.Mathlib.Probability.Distributions.Uniform": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Probability/Distributions/Uniform.lean"
    },
    ".lake.packages.mathlib.Mathlib.Probability.Distributions.Pareto": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Probability/Distributions/Pareto.lean"
    },
    ".lake.packages.mathlib.Mathlib.Probability.Distributions.Exponential": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Probability/Distributions/Exponential.lean"
    },
    ".lake.packages.mathlib.Mathlib.Probability.Distributions.Geometric": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Probability/Distributions/Geometric.lean"
    },
    ".lake.packages.mathlib.Mathlib.Probability.Distributions.Poisson": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Probability/Distributions/Poisson.lean"
    },
    ".lake.packages.mathlib.Mathlib.Probability.Distributions.Gaussian.Basic": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Probability/Distributions/Gaussian/Basic.lean"
    },
    ".lake.packages.mathlib.Mathlib.Probability.Distributions.Gaussian.Real": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Probability/Distributions/Gaussian/Real.lean"
    },
    ".lake.packages.mathlib.Mathlib.Probability.Kernel.MeasurableIntegral": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Probability/Kernel/MeasurableIntegral.lean"
    },
    ".lake.packages.mathlib.Mathlib.Probability.Kernel.Integral": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Probability/Kernel/Integral.lean"
    },
    ".lake.packages.mathlib.Mathlib.Probability.Kernel.Condexp": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Probability/Kernel/Condexp.lean"
    },
    ".lake.packages.mathlib.Mathlib.Probability.Kernel.CondDistrib": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Probability/Kernel/CondDistrib.lean"
    },
    ".lake.packages.mathlib.Mathlib.Probability.Kernel.SetIntegral": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Probability/Kernel/SetIntegral.lean"
    },
    ".lake.packages.mathlib.Mathlib.Probability.Kernel.MeasurableLIntegral": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Probability/Kernel/MeasurableLIntegral.lean"
    },
    ".lake.packages.mathlib.Mathlib.Probability.Kernel.Basic": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Probability/Kernel/Basic.lean"
    },
    ".lake.packages.mathlib.Mathlib.Probability.Kernel.RadonNikodym": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Probability/Kernel/RadonNikodym.lean"
    },
    ".lake.packages.mathlib.Mathlib.Probability.Kernel.CompProdEqIff": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Probability/Kernel/CompProdEqIff.lean"
    },
    ".lake.packages.mathlib.Mathlib.Probability.Kernel.WithDensity": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Probability/Kernel/WithDensity.lean"
    },
    ".lake.packages.mathlib.Mathlib.Probability.Kernel.Proper": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Probability/Kernel/Proper.lean"
    },
    ".lake.packages.mathlib.Mathlib.Probability.Kernel.Defs": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Probability/Kernel/Defs.lean"
    },
    ".lake.packages.mathlib.Mathlib.Probability.Kernel.Invariance": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Probability/Kernel/Invariance.lean"
    },
    ".lake.packages.mathlib.Mathlib.Probability.Kernel.Posterior": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Probability/Kernel/Posterior.lean"
    },
    ".lake.packages.mathlib.Mathlib.Probability.Kernel.IonescuTulcea.Maps": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Probability/Kernel/IonescuTulcea/Maps.lean"
    },
    ".lake.packages.mathlib.Mathlib.Probability.Kernel.IonescuTulcea.Traj": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Probability/Kernel/IonescuTulcea/Traj.lean"
    },
    ".lake.packages.mathlib.Mathlib.Probability.Kernel.IonescuTulcea.PartialTraj": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Probability/Kernel/IonescuTulcea/PartialTraj.lean"
    },
    ".lake.packages.mathlib.Mathlib.Probability.Kernel.Disintegration.CDFToKernel": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Probability/Kernel/Disintegration/CDFToKernel.lean"
    },
    ".lake.packages.mathlib.Mathlib.Probability.Kernel.Disintegration.MeasurableStieltjes": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Probability/Kernel/Disintegration/MeasurableStieltjes.lean"
    },
    ".lake.packages.mathlib.Mathlib.Probability.Kernel.Disintegration.Integral": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Probability/Kernel/Disintegration/Integral.lean"
    },
    ".lake.packages.mathlib.Mathlib.Probability.Kernel.Disintegration.Density": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Probability/Kernel/Disintegration/Density.lean"
    },
    ".lake.packages.mathlib.Mathlib.Probability.Kernel.Disintegration.Basic": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Probability/Kernel/Disintegration/Basic.lean"
    },
    ".lake.packages.mathlib.Mathlib.Probability.Kernel.Disintegration.Unique": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Probability/Kernel/Disintegration/Unique.lean"
    },
    ".lake.packages.mathlib.Mathlib.Probability.Kernel.Disintegration.CondCDF": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Probability/Kernel/Disintegration/CondCDF.lean"
    },
    ".lake.packages.mathlib.Mathlib.Probability.Kernel.Disintegration.StandardBorel": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Probability/Kernel/Disintegration/StandardBorel.lean"
    },
    ".lake.packages.mathlib.Mathlib.Probability.Kernel.Composition.Comp": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Probability/Kernel/Composition/Comp.lean"
    },
    ".lake.packages.mathlib.Mathlib.Probability.Kernel.Composition.Lemmas": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Probability/Kernel/Composition/Lemmas.lean"
    },
    ".lake.packages.mathlib.Mathlib.Probability.Kernel.Composition.Prod": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Probability/Kernel/Composition/Prod.lean"
    },
    ".lake.packages.mathlib.Mathlib.Probability.Kernel.Composition.MeasureCompProd": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Probability/Kernel/Composition/MeasureCompProd.lean"
    },
    ".lake.packages.mathlib.Mathlib.Probability.Kernel.Composition.MapComap": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Probability/Kernel/Composition/MapComap.lean"
    },
    ".lake.packages.mathlib.Mathlib.Probability.Kernel.Composition.IntegralCompProd": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Probability/Kernel/Composition/IntegralCompProd.lean"
    },
    ".lake.packages.mathlib.Mathlib.Probability.Kernel.Composition.AbsolutelyContinuous": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Probability/Kernel/Composition/AbsolutelyContinuous.lean"
    },
    ".lake.packages.mathlib.Mathlib.Probability.Kernel.Composition.ParallelComp": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Probability/Kernel/Composition/ParallelComp.lean"
    },
    ".lake.packages.mathlib.Mathlib.Probability.Kernel.Composition.CompNotation": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Probability/Kernel/Composition/CompNotation.lean"
    },
    ".lake.packages.mathlib.Mathlib.Probability.Kernel.Composition.CompProd": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Probability/Kernel/Composition/CompProd.lean"
    },
    ".lake.packages.mathlib.Mathlib.Probability.Kernel.Composition.CompMap": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Probability/Kernel/Composition/CompMap.lean"
    },
    ".lake.packages.mathlib.Mathlib.Probability.Kernel.Composition.MeasureComp": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Probability/Kernel/Composition/MeasureComp.lean"
    },
    ".lake.packages.mathlib.Mathlib.Probability.Process.Adapted": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Probability/Process/Adapted.lean"
    },
    ".lake.packages.mathlib.Mathlib.Probability.Process.Filtration": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Probability/Process/Filtration.lean"
    },
    ".lake.packages.mathlib.Mathlib.Probability.Process.Stopping": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Probability/Process/Stopping.lean"
    },
    ".lake.packages.mathlib.Mathlib.Probability.Process.PartitionFiltration": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Probability/Process/PartitionFiltration.lean"
    },
    ".lake.packages.mathlib.Mathlib.Probability.Process.Kolmogorov": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Probability/Process/Kolmogorov.lean"
    },
    ".lake.packages.mathlib.Mathlib.Probability.Process.HittingTime": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Probability/Process/HittingTime.lean"
    },
    ".lake.packages.mathlib.Mathlib.Probability.Process.FiniteDimensionalLaws": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Probability/Process/FiniteDimensionalLaws.lean"
    },
    ".lake.packages.mathlib.Mathlib.Util.WhatsNew": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Util/WhatsNew.lean"
    },
    ".lake.packages.mathlib.Mathlib.Util.FormatTable": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Util/FormatTable.lean"
    },
    ".lake.packages.mathlib.Mathlib.Util.TermReduce": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Util/TermReduce.lean"
    },
    ".lake.packages.mathlib.Mathlib.Util.ParseCommand": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Util/ParseCommand.lean"
    },
    ".lake.packages.mathlib.Mathlib.Util.Qq": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Util/Qq.lean"
    },
    ".lake.packages.mathlib.Mathlib.Util.TransImports": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Util/TransImports.lean"
    },
    ".lake.packages.mathlib.Mathlib.Util.Notation3": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Util/Notation3.lean"
    },
    ".lake.packages.mathlib.Mathlib.Util.PPOptions": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Util/PPOptions.lean"
    },
    ".lake.packages.mathlib.Mathlib.Util.GetAllModules": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Util/GetAllModules.lean"
    },
    ".lake.packages.mathlib.Mathlib.Util.AtomM": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Util/AtomM.lean"
    },
    ".lake.packages.mathlib.Mathlib.Util.SleepHeartbeats": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Util/SleepHeartbeats.lean"
    },
    ".lake.packages.mathlib.Mathlib.Util.WithWeakNamespace": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Util/WithWeakNamespace.lean"
    },
    ".lake.packages.mathlib.Mathlib.Util.CountHeartbeats": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Util/CountHeartbeats.lean"
    },
    ".lake.packages.mathlib.Mathlib.Util.AssertExists": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Util/AssertExists.lean"
    },
    ".lake.packages.mathlib.Mathlib.Util.Superscript": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Util/Superscript.lean"
    },
    ".lake.packages.mathlib.Mathlib.Util.Delaborators": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Util/Delaborators.lean"
    },
    ".lake.packages.mathlib.Mathlib.Util.Simp": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Util/Simp.lean"
    },
    ".lake.packages.mathlib.Mathlib.Util.Tactic": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Util/Tactic.lean"
    },
    ".lake.packages.mathlib.Mathlib.Util.CompileInductive": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Util/CompileInductive.lean"
    },
    ".lake.packages.mathlib.Mathlib.Util.DischargerAsTactic": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Util/DischargerAsTactic.lean"
    },
    ".lake.packages.mathlib.Mathlib.Util.Export": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Util/Export.lean"
    },
    ".lake.packages.mathlib.Mathlib.Util.AssertExistsExt": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Util/AssertExistsExt.lean"
    },
    ".lake.packages.mathlib.Mathlib.Util.AssertNoSorry": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Util/AssertNoSorry.lean"
    },
    ".lake.packages.mathlib.Mathlib.Util.LongNames": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Util/LongNames.lean"
    },
    ".lake.packages.mathlib.Mathlib.Util.SynthesizeUsing": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Util/SynthesizeUsing.lean"
    },
    ".lake.packages.mathlib.Mathlib.Util.AddRelatedDecl": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Util/AddRelatedDecl.lean"
    },
    ".lake.packages.mathlib.Mathlib.Util.MemoFix": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Util/MemoFix.lean"
    },
    ".lake.packages.mathlib.Mathlib.NumberTheory.BernoulliPolynomials": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/NumberTheory/BernoulliPolynomials.lean"
    },
    ".lake.packages.mathlib.Mathlib.NumberTheory.Bertrand": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/NumberTheory/Bertrand.lean"
    },
    ".lake.packages.mathlib.Mathlib.NumberTheory.SiegelsLemma": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/NumberTheory/SiegelsLemma.lean"
    },
    ".lake.packages.mathlib.Mathlib.NumberTheory.ZetaValues": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/NumberTheory/ZetaValues.lean"
    },
    ".lake.packages.mathlib.Mathlib.NumberTheory.SumPrimeReciprocals": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/NumberTheory/SumPrimeReciprocals.lean"
    },
    ".lake.packages.mathlib.Mathlib.NumberTheory.Dioph": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/NumberTheory/Dioph.lean"
    },
    ".lake.packages.mathlib.Mathlib.NumberTheory.Pell": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/NumberTheory/Pell.lean"
    },
    ".lake.packages.mathlib.Mathlib.NumberTheory.MaricaSchoenheim": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/NumberTheory/MaricaSchoenheim.lean"
    },
    ".lake.packages.mathlib.Mathlib.NumberTheory.SumTwoSquares": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/NumberTheory/SumTwoSquares.lean"
    },
    ".lake.packages.mathlib.Mathlib.NumberTheory.Bernoulli": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/NumberTheory/Bernoulli.lean"
    },
    ".lake.packages.mathlib.Mathlib.NumberTheory.Rayleigh": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/NumberTheory/Rayleigh.lean"
    },
    ".lake.packages.mathlib.Mathlib.NumberTheory.SumFourSquares": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/NumberTheory/SumFourSquares.lean"
    },
    ".lake.packages.mathlib.Mathlib.NumberTheory.Modular": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/NumberTheory/Modular.lean"
    },
    ".lake.packages.mathlib.Mathlib.NumberTheory.VonMangoldt": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/NumberTheory/VonMangoldt.lean"
    },
    ".lake.packages.mathlib.Mathlib.NumberTheory.PrimesCongruentOne": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/NumberTheory/PrimesCongruentOne.lean"
    },
    ".lake.packages.mathlib.Mathlib.NumberTheory.Multiplicity": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/NumberTheory/Multiplicity.lean"
    },
    ".lake.packages.mathlib.Mathlib.NumberTheory.LucasPrimality": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/NumberTheory/LucasPrimality.lean"
    },
    ".lake.packages.mathlib.Mathlib.NumberTheory.ArithmeticFunction": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/NumberTheory/ArithmeticFunction.lean"
    },
    ".lake.packages.mathlib.Mathlib.NumberTheory.PrimeCounting": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/NumberTheory/PrimeCounting.lean"
    },
    ".lake.packages.mathlib.Mathlib.NumberTheory.Primorial": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/NumberTheory/Primorial.lean"
    },
    ".lake.packages.mathlib.Mathlib.NumberTheory.KummerDedekind": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/NumberTheory/KummerDedekind.lean"
    },
    ".lake.packages.mathlib.Mathlib.NumberTheory.GaussSum": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/NumberTheory/GaussSum.lean"
    },
    ".lake.packages.mathlib.Mathlib.NumberTheory.Basic": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/NumberTheory/Basic.lean"
    },
    ".lake.packages.mathlib.Mathlib.NumberTheory.Divisors": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/NumberTheory/Divisors.lean"
    },
    ".lake.packages.mathlib.Mathlib.NumberTheory.FactorisationProperties": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/NumberTheory/FactorisationProperties.lean"
    },
    ".lake.packages.mathlib.Mathlib.NumberTheory.Fermat": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/NumberTheory/Fermat.lean"
    },
    ".lake.packages.mathlib.Mathlib.NumberTheory.SelbergSieve": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/NumberTheory/SelbergSieve.lean"
    },
    ".lake.packages.mathlib.Mathlib.NumberTheory.Wilson": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/NumberTheory/Wilson.lean"
    },
    ".lake.packages.mathlib.Mathlib.NumberTheory.FermatPsp": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/NumberTheory/FermatPsp.lean"
    },
    ".lake.packages.mathlib.Mathlib.NumberTheory.EllipticDivisibilitySequence": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/NumberTheory/EllipticDivisibilitySequence.lean"
    },
    ".lake.packages.mathlib.Mathlib.NumberTheory.AbelSummation": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/NumberTheory/AbelSummation.lean"
    },
    ".lake.packages.mathlib.Mathlib.NumberTheory.FrobeniusNumber": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/NumberTheory/FrobeniusNumber.lean"
    },
    ".lake.packages.mathlib.Mathlib.NumberTheory.LucasLehmer": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/NumberTheory/LucasLehmer.lean"
    },
    ".lake.packages.mathlib.Mathlib.NumberTheory.ADEInequality": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/NumberTheory/ADEInequality.lean"
    },
    ".lake.packages.mathlib.Mathlib.NumberTheory.WellApproximable": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/NumberTheory/WellApproximable.lean"
    },
    ".lake.packages.mathlib.Mathlib.NumberTheory.SmoothNumbers": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/NumberTheory/SmoothNumbers.lean"
    },
    ".lake.packages.mathlib.Mathlib.NumberTheory.FunctionField": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/NumberTheory/FunctionField.lean"
    },
    ".lake.packages.mathlib.Mathlib.NumberTheory.PellMatiyasevic": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/NumberTheory/PellMatiyasevic.lean"
    },
    ".lake.packages.mathlib.Mathlib.NumberTheory.Ostrowski": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/NumberTheory/Ostrowski.lean"
    },
    ".lake.packages.mathlib.Mathlib.NumberTheory.PythagoreanTriples": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/NumberTheory/PythagoreanTriples.lean"
    },
    ".lake.packages.mathlib.Mathlib.NumberTheory.Harmonic.Int": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/NumberTheory/Harmonic/Int.lean"
    },
    ".lake.packages.mathlib.Mathlib.NumberTheory.Harmonic.GammaDeriv": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/NumberTheory/Harmonic/GammaDeriv.lean"
    },
    ".lake.packages.mathlib.Mathlib.NumberTheory.Harmonic.Defs": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/NumberTheory/Harmonic/Defs.lean"
    },
    ".lake.packages.mathlib.Mathlib.NumberTheory.Harmonic.ZetaAsymp": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/NumberTheory/Harmonic/ZetaAsymp.lean"
    },
    ".lake.packages.mathlib.Mathlib.NumberTheory.Harmonic.EulerMascheroni": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/NumberTheory/Harmonic/EulerMascheroni.lean"
    },
    ".lake.packages.mathlib.Mathlib.NumberTheory.Harmonic.Bounds": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/NumberTheory/Harmonic/Bounds.lean"
    },
    ".lake.packages.mathlib.Mathlib.NumberTheory.Padics.ProperSpace": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/NumberTheory/Padics/ProperSpace.lean"
    },
    ".lake.packages.mathlib.Mathlib.NumberTheory.Padics.RingHoms": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/NumberTheory/Padics/RingHoms.lean"
    },
    ".lake.packages.mathlib.Mathlib.NumberTheory.Padics.PadicIntegers": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/NumberTheory/Padics/PadicIntegers.lean"
    },
    ".lake.packages.mathlib.Mathlib.NumberTheory.Padics.PadicNorm": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/NumberTheory/Padics/PadicNorm.lean"
    },
    ".lake.packages.mathlib.Mathlib.NumberTheory.Padics.MahlerBasis": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/NumberTheory/Padics/MahlerBasis.lean"
    },
    ".lake.packages.mathlib.Mathlib.NumberTheory.Padics.PadicNumbers": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/NumberTheory/Padics/PadicNumbers.lean"
    },
    ".lake.packages.mathlib.Mathlib.NumberTheory.Padics.Complex": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/NumberTheory/Padics/Complex.lean"
    },
    ".lake.packages.mathlib.Mathlib.NumberTheory.Padics.ValuativeRel": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/NumberTheory/Padics/ValuativeRel.lean"
    },
    ".lake.packages.mathlib.Mathlib.NumberTheory.Padics.AddChar": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/NumberTheory/Padics/AddChar.lean"
    },
    ".lake.packages.mathlib.Mathlib.NumberTheory.Padics.Hensel": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/NumberTheory/Padics/Hensel.lean"
    },
    ".lake.packages.mathlib.Mathlib.NumberTheory.Padics.PadicVal.Basic": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/NumberTheory/Padics/PadicVal/Basic.lean"
    },
    ".lake.packages.mathlib.Mathlib.NumberTheory.Padics.PadicVal.Defs": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/NumberTheory/Padics/PadicVal/Defs.lean"
    },
    ".lake.packages.mathlib.Mathlib.NumberTheory.ModularForms.CongruenceSubgroups": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/NumberTheory/ModularForms/CongruenceSubgroups.lean"
    },
    ".lake.packages.mathlib.Mathlib.NumberTheory.ModularForms.SlashInvariantForms": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/NumberTheory/ModularForms/SlashInvariantForms.lean"
    },
    ".lake.packages.mathlib.Mathlib.NumberTheory.ModularForms.Basic": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/NumberTheory/ModularForms/Basic.lean"
    },
    ".lake.packages.mathlib.Mathlib.NumberTheory.ModularForms.QExpansion": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/NumberTheory/ModularForms/QExpansion.lean"
    },
    ".lake.packages.mathlib.Mathlib.NumberTheory.ModularForms.LevelOne": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/NumberTheory/ModularForms/LevelOne.lean"
    },
    ".lake.packages.mathlib.Mathlib.NumberTheory.ModularForms.Identities": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/NumberTheory/ModularForms/Identities.lean"
    },
    ".lake.packages.mathlib.Mathlib.NumberTheory.ModularForms.SlashActions": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/NumberTheory/ModularForms/SlashActions.lean"
    },
    ".lake.packages.mathlib.Mathlib.NumberTheory.ModularForms.EisensteinSeries.Summable": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/NumberTheory/ModularForms/EisensteinSeries/Summable.lean"
    },
    ".lake.packages.mathlib.Mathlib.NumberTheory.ModularForms.EisensteinSeries.MDifferentiable": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/NumberTheory/ModularForms/EisensteinSeries/MDifferentiable.lean"
    },
    ".lake.packages.mathlib.Mathlib.NumberTheory.ModularForms.EisensteinSeries.Basic": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/NumberTheory/ModularForms/EisensteinSeries/Basic.lean"
    },
    ".lake.packages.mathlib.Mathlib.NumberTheory.ModularForms.EisensteinSeries.UniformConvergence": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/NumberTheory/ModularForms/EisensteinSeries/UniformConvergence.lean"
    },
    ".lake.packages.mathlib.Mathlib.NumberTheory.ModularForms.EisensteinSeries.IsBoundedAtImInfty": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/NumberTheory/ModularForms/EisensteinSeries/IsBoundedAtImInfty.lean"
    },
    ".lake.packages.mathlib.Mathlib.NumberTheory.ModularForms.EisensteinSeries.Defs": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/NumberTheory/ModularForms/EisensteinSeries/Defs.lean"
    },
    ".lake.packages.mathlib.Mathlib.NumberTheory.ModularForms.JacobiTheta.TwoVariable": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/NumberTheory/ModularForms/JacobiTheta/TwoVariable.lean"
    },
    ".lake.packages.mathlib.Mathlib.NumberTheory.ModularForms.JacobiTheta.OneVariable": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/NumberTheory/ModularForms/JacobiTheta/OneVariable.lean"
    },
    ".lake.packages.mathlib.Mathlib.NumberTheory.ModularForms.JacobiTheta.Manifold": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/NumberTheory/ModularForms/JacobiTheta/Manifold.lean"
    },
    ".lake.packages.mathlib.Mathlib.NumberTheory.ModularForms.JacobiTheta.Bounds": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/NumberTheory/ModularForms/JacobiTheta/Bounds.lean"
    },
    ".lake.packages.mathlib.Mathlib.NumberTheory.LSeries.HurwitzZetaValues": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/NumberTheory/LSeries/HurwitzZetaValues.lean"
    },
    ".lake.packages.mathlib.Mathlib.NumberTheory.LSeries.Dirichlet": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/NumberTheory/LSeries/Dirichlet.lean"
    },
    ".lake.packages.mathlib.Mathlib.NumberTheory.LSeries.Convolution": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/NumberTheory/LSeries/Convolution.lean"
    },
    ".lake.packages.mathlib.Mathlib.NumberTheory.LSeries.RiemannZeta": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/NumberTheory/LSeries/RiemannZeta.lean"
    },
    ".lake.packages.mathlib.Mathlib.NumberTheory.LSeries.DirichletContinuation": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/NumberTheory/LSeries/DirichletContinuation.lean"
    },
    ".lake.packages.mathlib.Mathlib.NumberTheory.LSeries.AbstractFuncEq": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/NumberTheory/LSeries/AbstractFuncEq.lean"
    },
    ".lake.packages.mathlib.Mathlib.NumberTheory.LSeries.Deriv": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/NumberTheory/LSeries/Deriv.lean"
    },
    ".lake.packages.mathlib.Mathlib.NumberTheory.LSeries.PrimesInAP": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/NumberTheory/LSeries/PrimesInAP.lean"
    },
    ".lake.packages.mathlib.Mathlib.NumberTheory.LSeries.Basic": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/NumberTheory/LSeries/Basic.lean"
    },
    ".lake.packages.mathlib.Mathlib.NumberTheory.LSeries.HurwitzZetaEven": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/NumberTheory/LSeries/HurwitzZetaEven.lean"
    },
    ".lake.packages.mathlib.Mathlib.NumberTheory.LSeries.MellinEqDirichlet": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/NumberTheory/LSeries/MellinEqDirichlet.lean"
    },
    ".lake.packages.mathlib.Mathlib.NumberTheory.LSeries.Linearity": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/NumberTheory/LSeries/Linearity.lean"
    },
    ".lake.packages.mathlib.Mathlib.NumberTheory.LSeries.SumCoeff": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/NumberTheory/LSeries/SumCoeff.lean"
    },
    ".lake.packages.mathlib.Mathlib.NumberTheory.LSeries.Positivity": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/NumberTheory/LSeries/Positivity.lean"
    },
    ".lake.packages.mathlib.Mathlib.NumberTheory.LSeries.Convergence": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/NumberTheory/LSeries/Convergence.lean"
    },
    ".lake.packages.mathlib.Mathlib.NumberTheory.LSeries.Injectivity": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/NumberTheory/LSeries/Injectivity.lean"
    },
    ".lake.packages.mathlib.Mathlib.NumberTheory.LSeries.HurwitzZetaOdd": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/NumberTheory/LSeries/HurwitzZetaOdd.lean"
    },
    ".lake.packages.mathlib.Mathlib.NumberTheory.LSeries.ZMod": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/NumberTheory/LSeries/ZMod.lean"
    },
    ".lake.packages.mathlib.Mathlib.NumberTheory.LSeries.Nonvanishing": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/NumberTheory/LSeries/Nonvanishing.lean"
    },
    ".lake.packages.mathlib.Mathlib.NumberTheory.LSeries.HurwitzZeta": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/NumberTheory/LSeries/HurwitzZeta.lean"
    },
    ".lake.packages.mathlib.Mathlib.NumberTheory.LegendreSymbol.Basic": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/NumberTheory/LegendreSymbol/Basic.lean"
    },
    ".lake.packages.mathlib.Mathlib.NumberTheory.LegendreSymbol.AddCharacter": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/NumberTheory/LegendreSymbol/AddCharacter.lean"
    },
    ".lake.packages.mathlib.Mathlib.NumberTheory.LegendreSymbol.QuadraticReciprocity": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/NumberTheory/LegendreSymbol/QuadraticReciprocity.lean"
    },
    ".lake.packages.mathlib.Mathlib.NumberTheory.LegendreSymbol.GaussEisensteinLemmas": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/NumberTheory/LegendreSymbol/GaussEisensteinLemmas.lean"
    },
    ".lake.packages.mathlib.Mathlib.NumberTheory.LegendreSymbol.ZModChar": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/NumberTheory/LegendreSymbol/ZModChar.lean"
    },
    ".lake.packages.mathlib.Mathlib.NumberTheory.LegendreSymbol.JacobiSymbol": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/NumberTheory/LegendreSymbol/JacobiSymbol.lean"
    },
    ".lake.packages.mathlib.Mathlib.NumberTheory.LegendreSymbol.QuadraticChar.GaussSum": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/NumberTheory/LegendreSymbol/QuadraticChar/GaussSum.lean"
    },
    ".lake.packages.mathlib.Mathlib.NumberTheory.LegendreSymbol.QuadraticChar.Basic": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/NumberTheory/LegendreSymbol/QuadraticChar/Basic.lean"
    },
    ".lake.packages.mathlib.Mathlib.NumberTheory.DirichletCharacter.Orthogonality": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/NumberTheory/DirichletCharacter/Orthogonality.lean"
    },
    ".lake.packages.mathlib.Mathlib.NumberTheory.DirichletCharacter.GaussSum": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/NumberTheory/DirichletCharacter/GaussSum.lean"
    },
    ".lake.packages.mathlib.Mathlib.NumberTheory.DirichletCharacter.Basic": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/NumberTheory/DirichletCharacter/Basic.lean"
    },
    ".lake.packages.mathlib.Mathlib.NumberTheory.DirichletCharacter.Bounds": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/NumberTheory/DirichletCharacter/Bounds.lean"
    },
    ".lake.packages.mathlib.Mathlib.NumberTheory.Cyclotomic.Rat": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/NumberTheory/Cyclotomic/Rat.lean"
    },
    ".lake.packages.mathlib.Mathlib.NumberTheory.Cyclotomic.PID": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/NumberTheory/Cyclotomic/PID.lean"
    },
    ".lake.packages.mathlib.Mathlib.NumberTheory.Cyclotomic.Discriminant": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/NumberTheory/Cyclotomic/Discriminant.lean"
    },
    ".lake.packages.mathlib.Mathlib.NumberTheory.Cyclotomic.Basic": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/NumberTheory/Cyclotomic/Basic.lean"
    },
    ".lake.packages.mathlib.Mathlib.NumberTheory.Cyclotomic.Gal": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/NumberTheory/Cyclotomic/Gal.lean"
    },
    ".lake.packages.mathlib.Mathlib.NumberTheory.Cyclotomic.Embeddings": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/NumberTheory/Cyclotomic/Embeddings.lean"
    },
    ".lake.packages.mathlib.Mathlib.NumberTheory.Cyclotomic.CyclotomicCharacter": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/NumberTheory/Cyclotomic/CyclotomicCharacter.lean"
    },
    ".lake.packages.mathlib.Mathlib.NumberTheory.Cyclotomic.Three": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/NumberTheory/Cyclotomic/Three.lean"
    },
    ".lake.packages.mathlib.Mathlib.NumberTheory.Cyclotomic.PrimitiveRoots": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/NumberTheory/Cyclotomic/PrimitiveRoots.lean"
    },
    ".lake.packages.mathlib.Mathlib.NumberTheory.ClassNumber.Finite": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/NumberTheory/ClassNumber/Finite.lean"
    },
    ".lake.packages.mathlib.Mathlib.NumberTheory.ClassNumber.AdmissibleAbsoluteValue": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/NumberTheory/ClassNumber/AdmissibleAbsoluteValue.lean"
    },
    ".lake.packages.mathlib.Mathlib.NumberTheory.ClassNumber.AdmissibleAbs": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/NumberTheory/ClassNumber/AdmissibleAbs.lean"
    },
    ".lake.packages.mathlib.Mathlib.NumberTheory.ClassNumber.FunctionField": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/NumberTheory/ClassNumber/FunctionField.lean"
    },
    ".lake.packages.mathlib.Mathlib.NumberTheory.ClassNumber.AdmissibleCardPowDegree": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/NumberTheory/ClassNumber/AdmissibleCardPowDegree.lean"
    },
    ".lake.packages.mathlib.Mathlib.NumberTheory.JacobiSum.Basic": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/NumberTheory/JacobiSum/Basic.lean"
    },
    ".lake.packages.mathlib.Mathlib.NumberTheory.Zsqrtd.ToReal": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/NumberTheory/Zsqrtd/ToReal.lean"
    },
    ".lake.packages.mathlib.Mathlib.NumberTheory.Zsqrtd.GaussianInt": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/NumberTheory/Zsqrtd/GaussianInt.lean"
    },
    ".lake.packages.mathlib.Mathlib.NumberTheory.Zsqrtd.Basic": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/NumberTheory/Zsqrtd/Basic.lean"
    },
    ".lake.packages.mathlib.Mathlib.NumberTheory.Zsqrtd.QuadraticReciprocity": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/NumberTheory/Zsqrtd/QuadraticReciprocity.lean"
    },
    ".lake.packages.mathlib.Mathlib.NumberTheory.FLT.Four": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/NumberTheory/FLT/Four.lean"
    },
    ".lake.packages.mathlib.Mathlib.NumberTheory.FLT.Basic": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/NumberTheory/FLT/Basic.lean"
    },
    ".lake.packages.mathlib.Mathlib.NumberTheory.FLT.MasonStothers": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/NumberTheory/FLT/MasonStothers.lean"
    },
    ".lake.packages.mathlib.Mathlib.NumberTheory.FLT.Three": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/NumberTheory/FLT/Three.lean"
    },
    ".lake.packages.mathlib.Mathlib.NumberTheory.FLT.Polynomial": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/NumberTheory/FLT/Polynomial.lean"
    },
    ".lake.packages.mathlib.Mathlib.NumberTheory.Transcendental.Liouville.Basic": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/NumberTheory/Transcendental/Liouville/Basic.lean"
    },
    ".lake.packages.mathlib.Mathlib.NumberTheory.Transcendental.Liouville.LiouvilleNumber": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/NumberTheory/Transcendental/Liouville/LiouvilleNumber.lean"
    },
    ".lake.packages.mathlib.Mathlib.NumberTheory.Transcendental.Liouville.LiouvilleWith": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/NumberTheory/Transcendental/Liouville/LiouvilleWith.lean"
    },
    ".lake.packages.mathlib.Mathlib.NumberTheory.Transcendental.Liouville.Measure": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/NumberTheory/Transcendental/Liouville/Measure.lean"
    },
    ".lake.packages.mathlib.Mathlib.NumberTheory.Transcendental.Liouville.Residual": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/NumberTheory/Transcendental/Liouville/Residual.lean"
    },
    ".lake.packages.mathlib.Mathlib.NumberTheory.Transcendental.Lindemann.AnalyticalPart": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/NumberTheory/Transcendental/Lindemann/AnalyticalPart.lean"
    },
    ".lake.packages.mathlib.Mathlib.NumberTheory.RamificationInertia.Galois": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/NumberTheory/RamificationInertia/Galois.lean"
    },
    ".lake.packages.mathlib.Mathlib.NumberTheory.RamificationInertia.Unramified": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/NumberTheory/RamificationInertia/Unramified.lean"
    },
    ".lake.packages.mathlib.Mathlib.NumberTheory.RamificationInertia.Basic": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/NumberTheory/RamificationInertia/Basic.lean"
    },
    ".lake.packages.mathlib.Mathlib.NumberTheory.MulChar.Duality": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/NumberTheory/MulChar/Duality.lean"
    },
    ".lake.packages.mathlib.Mathlib.NumberTheory.MulChar.Lemmas": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/NumberTheory/MulChar/Lemmas.lean"
    },
    ".lake.packages.mathlib.Mathlib.NumberTheory.MulChar.Basic": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/NumberTheory/MulChar/Basic.lean"
    },
    ".lake.packages.mathlib.Mathlib.NumberTheory.DiophantineApproximation.ContinuedFractions": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/NumberTheory/DiophantineApproximation/ContinuedFractions.lean"
    },
    ".lake.packages.mathlib.Mathlib.NumberTheory.DiophantineApproximation.Basic": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/NumberTheory/DiophantineApproximation/Basic.lean"
    },
    ".lake.packages.mathlib.Mathlib.NumberTheory.EulerProduct.DirichletLSeries": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/NumberTheory/EulerProduct/DirichletLSeries.lean"
    },
    ".lake.packages.mathlib.Mathlib.NumberTheory.EulerProduct.Basic": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/NumberTheory/EulerProduct/Basic.lean"
    },
    ".lake.packages.mathlib.Mathlib.NumberTheory.EulerProduct.ExpLog": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/NumberTheory/EulerProduct/ExpLog.lean"
    },
    ".lake.packages.mathlib.Mathlib.NumberTheory.NumberField.EquivReindex": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/NumberTheory/NumberField/EquivReindex.lean"
    },
    ".lake.packages.mathlib.Mathlib.NumberTheory.NumberField.DedekindZeta": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/NumberTheory/NumberField/DedekindZeta.lean"
    },
    ".lake.packages.mathlib.Mathlib.NumberTheory.NumberField.CMField": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/NumberTheory/NumberField/CMField.lean"
    },
    ".lake.packages.mathlib.Mathlib.NumberTheory.NumberField.ClassNumber": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/NumberTheory/NumberField/ClassNumber.lean"
    },
    ".lake.packages.mathlib.Mathlib.NumberTheory.NumberField.Norm": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/NumberTheory/NumberField/Norm.lean"
    },
    ".lake.packages.mathlib.Mathlib.NumberTheory.NumberField.ProductFormula": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/NumberTheory/NumberField/ProductFormula.lean"
    },
    ".lake.packages.mathlib.Mathlib.NumberTheory.NumberField.Completion": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/NumberTheory/NumberField/Completion.lean"
    },
    ".lake.packages.mathlib.Mathlib.NumberTheory.NumberField.Basic": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/NumberTheory/NumberField/Basic.lean"
    },
    ".lake.packages.mathlib.Mathlib.NumberTheory.NumberField.Ideal": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/NumberTheory/NumberField/Ideal.lean"
    },
    ".lake.packages.mathlib.Mathlib.NumberTheory.NumberField.FractionalIdeal": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/NumberTheory/NumberField/FractionalIdeal.lean"
    },
    ".lake.packages.mathlib.Mathlib.NumberTheory.NumberField.Embeddings": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/NumberTheory/NumberField/Embeddings.lean"
    },
    ".lake.packages.mathlib.Mathlib.NumberTheory.NumberField.House": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/NumberTheory/NumberField/House.lean"
    },
    ".lake.packages.mathlib.Mathlib.NumberTheory.NumberField.FinitePlaces": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/NumberTheory/NumberField/FinitePlaces.lean"
    },
    ".lake.packages.mathlib.Mathlib.NumberTheory.NumberField.AdeleRing": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/NumberTheory/NumberField/AdeleRing.lean"
    },
    ".lake.packages.mathlib.Mathlib.NumberTheory.NumberField.Ideal.Asymptotics": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/NumberTheory/NumberField/Ideal/Asymptotics.lean"
    },
    ".lake.packages.mathlib.Mathlib.NumberTheory.NumberField.Ideal.KummerDedekind": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/NumberTheory/NumberField/Ideal/KummerDedekind.lean"
    },
    ".lake.packages.mathlib.Mathlib.NumberTheory.NumberField.Ideal.Basic": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/NumberTheory/NumberField/Ideal/Basic.lean"
    },
    ".lake.packages.mathlib.Mathlib.NumberTheory.NumberField.InfinitePlace.Basic": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/NumberTheory/NumberField/InfinitePlace/Basic.lean"
    },
    ".lake.packages.mathlib.Mathlib.NumberTheory.NumberField.InfinitePlace.Embeddings": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/NumberTheory/NumberField/InfinitePlace/Embeddings.lean"
    },
    ".lake.packages.mathlib.Mathlib.NumberTheory.NumberField.InfinitePlace.Ramification": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/NumberTheory/NumberField/InfinitePlace/Ramification.lean"
    },
    ".lake.packages.mathlib.Mathlib.NumberTheory.NumberField.InfinitePlace.TotallyRealComplex": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/NumberTheory/NumberField/InfinitePlace/TotallyRealComplex.lean"
    },
    ".lake.packages.mathlib.Mathlib.NumberTheory.NumberField.Units.Basic": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/NumberTheory/NumberField/Units/Basic.lean"
    },
    ".lake.packages.mathlib.Mathlib.NumberTheory.NumberField.Units.Regulator": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/NumberTheory/NumberField/Units/Regulator.lean"
    },
    ".lake.packages.mathlib.Mathlib.NumberTheory.NumberField.Units.DirichletTheorem": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/NumberTheory/NumberField/Units/DirichletTheorem.lean"
    },
    ".lake.packages.mathlib.Mathlib.NumberTheory.NumberField.Discriminant.Different": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/NumberTheory/NumberField/Discriminant/Different.lean"
    },
    ".lake.packages.mathlib.Mathlib.NumberTheory.NumberField.Discriminant.Basic": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/NumberTheory/NumberField/Discriminant/Basic.lean"
    },
    ".lake.packages.mathlib.Mathlib.NumberTheory.NumberField.Discriminant.Defs": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/NumberTheory/NumberField/Discriminant/Defs.lean"
    },
    ".lake.packages.mathlib.Mathlib.NumberTheory.NumberField.CanonicalEmbedding.NormLeOne": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/NumberTheory/NumberField/CanonicalEmbedding/NormLeOne.lean"
    },
    ".lake.packages.mathlib.Mathlib.NumberTheory.NumberField.CanonicalEmbedding.Basic": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/NumberTheory/NumberField/CanonicalEmbedding/Basic.lean"
    },
    ".lake.packages.mathlib.Mathlib.NumberTheory.NumberField.CanonicalEmbedding.PolarCoord": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/NumberTheory/NumberField/CanonicalEmbedding/PolarCoord.lean"
    },
    ".lake.packages.mathlib.Mathlib.NumberTheory.NumberField.CanonicalEmbedding.ConvexBody": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/NumberTheory/NumberField/CanonicalEmbedding/ConvexBody.lean"
    },
    ".lake.packages.mathlib.Mathlib.NumberTheory.NumberField.CanonicalEmbedding.FundamentalCone": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/NumberTheory/NumberField/CanonicalEmbedding/FundamentalCone.lean"
    },
    ".lake.packages.mathlib.Mathlib.FieldTheory.AbsoluteGaloisGroup": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/FieldTheory/AbsoluteGaloisGroup.lean"
    },
    ".lake.packages.mathlib.Mathlib.FieldTheory.AbelRuffini": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/FieldTheory/AbelRuffini.lean"
    },
    ".lake.packages.mathlib.Mathlib.FieldTheory.AxGrothendieck": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/FieldTheory/AxGrothendieck.lean"
    },
    ".lake.packages.mathlib.Mathlib.FieldTheory.JacobsonNoether": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/FieldTheory/JacobsonNoether.lean"
    },
    ".lake.packages.mathlib.Mathlib.FieldTheory.Laurent": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/FieldTheory/Laurent.lean"
    },
    ".lake.packages.mathlib.Mathlib.FieldTheory.SeparableDegree": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/FieldTheory/SeparableDegree.lean"
    },
    ".lake.packages.mathlib.Mathlib.FieldTheory.Perfect": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/FieldTheory/Perfect.lean"
    },
    ".lake.packages.mathlib.Mathlib.FieldTheory.IsPerfectClosure": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/FieldTheory/IsPerfectClosure.lean"
    },
    ".lake.packages.mathlib.Mathlib.FieldTheory.PolynomialGaloisGroup": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/FieldTheory/PolynomialGaloisGroup.lean"
    },
    ".lake.packages.mathlib.Mathlib.FieldTheory.KummerPolynomial": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/FieldTheory/KummerPolynomial.lean"
    },
    ".lake.packages.mathlib.Mathlib.FieldTheory.Tower": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/FieldTheory/Tower.lean"
    },
    ".lake.packages.mathlib.Mathlib.FieldTheory.AlgebraicClosure": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/FieldTheory/AlgebraicClosure.lean"
    },
    ".lake.packages.mathlib.Mathlib.FieldTheory.Extension": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/FieldTheory/Extension.lean"
    },
    ".lake.packages.mathlib.Mathlib.FieldTheory.Cardinality": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/FieldTheory/Cardinality.lean"
    },
    ".lake.packages.mathlib.Mathlib.FieldTheory.ChevalleyWarning": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/FieldTheory/ChevalleyWarning.lean"
    },
    ".lake.packages.mathlib.Mathlib.FieldTheory.IsSepClosed": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/FieldTheory/IsSepClosed.lean"
    },
    ".lake.packages.mathlib.Mathlib.FieldTheory.KummerExtension": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/FieldTheory/KummerExtension.lean"
    },
    ".lake.packages.mathlib.Mathlib.FieldTheory.NormalizedTrace": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/FieldTheory/NormalizedTrace.lean"
    },
    ".lake.packages.mathlib.Mathlib.FieldTheory.SeparableClosure": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/FieldTheory/SeparableClosure.lean"
    },
    ".lake.packages.mathlib.Mathlib.FieldTheory.Relrank": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/FieldTheory/Relrank.lean"
    },
    ".lake.packages.mathlib.Mathlib.FieldTheory.Isaacs": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/FieldTheory/Isaacs.lean"
    },
    ".lake.packages.mathlib.Mathlib.FieldTheory.CardinalEmb": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/FieldTheory/CardinalEmb.lean"
    },
    ".lake.packages.mathlib.Mathlib.FieldTheory.PrimitiveElement": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/FieldTheory/PrimitiveElement.lean"
    },
    ".lake.packages.mathlib.Mathlib.FieldTheory.LinearDisjoint": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/FieldTheory/LinearDisjoint.lean"
    },
    ".lake.packages.mathlib.Mathlib.FieldTheory.KrullTopology": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/FieldTheory/KrullTopology.lean"
    },
    ".lake.packages.mathlib.Mathlib.FieldTheory.Separable": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/FieldTheory/Separable.lean"
    },
    ".lake.packages.mathlib.Mathlib.FieldTheory.Fixed": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/FieldTheory/Fixed.lean"
    },
    ".lake.packages.mathlib.Mathlib.FieldTheory.PerfectClosure": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/FieldTheory/PerfectClosure.lean"
    },
    ".lake.packages.mathlib.Mathlib.FieldTheory.Finiteness": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/FieldTheory/Finiteness.lean"
    },
    ".lake.packages.mathlib.Mathlib.FieldTheory.Differential.Basic": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/FieldTheory/Differential/Basic.lean"
    },
    ".lake.packages.mathlib.Mathlib.FieldTheory.Differential.Liouville": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/FieldTheory/Differential/Liouville.lean"
    },
    ".lake.packages.mathlib.Mathlib.FieldTheory.PurelyInseparable.Tower": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/FieldTheory/PurelyInseparable/Tower.lean"
    },
    ".lake.packages.mathlib.Mathlib.FieldTheory.PurelyInseparable.Basic": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/FieldTheory/PurelyInseparable/Basic.lean"
    },
    ".lake.packages.mathlib.Mathlib.FieldTheory.PurelyInseparable.Exponent": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/FieldTheory/PurelyInseparable/Exponent.lean"
    },
    ".lake.packages.mathlib.Mathlib.FieldTheory.PurelyInseparable.PerfectClosure": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/FieldTheory/PurelyInseparable/PerfectClosure.lean"
    },
    ".lake.packages.mathlib.Mathlib.FieldTheory.Finite.GaloisField": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/FieldTheory/Finite/GaloisField.lean"
    },
    ".lake.packages.mathlib.Mathlib.FieldTheory.Finite.Basic": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/FieldTheory/Finite/Basic.lean"
    },
    ".lake.packages.mathlib.Mathlib.FieldTheory.Finite.Trace": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/FieldTheory/Finite/Trace.lean"
    },
    ".lake.packages.mathlib.Mathlib.FieldTheory.Finite.Polynomial": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/FieldTheory/Finite/Polynomial.lean"
    },
    ".lake.packages.mathlib.Mathlib.FieldTheory.SplittingField.Construction": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/FieldTheory/SplittingField/Construction.lean"
    },
    ".lake.packages.mathlib.Mathlib.FieldTheory.SplittingField.IsSplittingField": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/FieldTheory/SplittingField/IsSplittingField.lean"
    },
    ".lake.packages.mathlib.Mathlib.FieldTheory.MvRatFunc.Rank": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/FieldTheory/MvRatFunc/Rank.lean"
    },
    ".lake.packages.mathlib.Mathlib.FieldTheory.IsAlgClosed.Classification": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/FieldTheory/IsAlgClosed/Classification.lean"
    },
    ".lake.packages.mathlib.Mathlib.FieldTheory.IsAlgClosed.AlgebraicClosure": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/FieldTheory/IsAlgClosed/AlgebraicClosure.lean"
    },
    ".lake.packages.mathlib.Mathlib.FieldTheory.IsAlgClosed.Basic": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/FieldTheory/IsAlgClosed/Basic.lean"
    },
    ".lake.packages.mathlib.Mathlib.FieldTheory.IsAlgClosed.Spectrum": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/FieldTheory/IsAlgClosed/Spectrum.lean"
    },
    ".lake.packages.mathlib.Mathlib.FieldTheory.Minpoly.MinpolyDiv": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/FieldTheory/Minpoly/MinpolyDiv.lean"
    },
    ".lake.packages.mathlib.Mathlib.FieldTheory.Minpoly.IsIntegrallyClosed": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/FieldTheory/Minpoly/IsIntegrallyClosed.lean"
    },
    ".lake.packages.mathlib.Mathlib.FieldTheory.Minpoly.Basic": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/FieldTheory/Minpoly/Basic.lean"
    },
    ".lake.packages.mathlib.Mathlib.FieldTheory.Minpoly.Field": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/FieldTheory/Minpoly/Field.lean"
    },
    ".lake.packages.mathlib.Mathlib.FieldTheory.Minpoly.IsConjRoot": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/FieldTheory/Minpoly/IsConjRoot.lean"
    },
    ".lake.packages.mathlib.Mathlib.FieldTheory.Normal.Closure": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/FieldTheory/Normal/Closure.lean"
    },
    ".lake.packages.mathlib.Mathlib.FieldTheory.Normal.Basic": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/FieldTheory/Normal/Basic.lean"
    },
    ".lake.packages.mathlib.Mathlib.FieldTheory.Normal.Defs": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/FieldTheory/Normal/Defs.lean"
    },
    ".lake.packages.mathlib.Mathlib.FieldTheory.Galois.Basic": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/FieldTheory/Galois/Basic.lean"
    },
    ".lake.packages.mathlib.Mathlib.FieldTheory.Galois.Profinite": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/FieldTheory/Galois/Profinite.lean"
    },
    ".lake.packages.mathlib.Mathlib.FieldTheory.Galois.IsGaloisGroup": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/FieldTheory/Galois/IsGaloisGroup.lean"
    },
    ".lake.packages.mathlib.Mathlib.FieldTheory.Galois.Infinite": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/FieldTheory/Galois/Infinite.lean"
    },
    ".lake.packages.mathlib.Mathlib.FieldTheory.Galois.GaloisClosure": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/FieldTheory/Galois/GaloisClosure.lean"
    },
    ".lake.packages.mathlib.Mathlib.FieldTheory.RatFunc.AsPolynomial": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/FieldTheory/RatFunc/AsPolynomial.lean"
    },
    ".lake.packages.mathlib.Mathlib.FieldTheory.RatFunc.Basic": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/FieldTheory/RatFunc/Basic.lean"
    },
    ".lake.packages.mathlib.Mathlib.FieldTheory.RatFunc.Defs": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/FieldTheory/RatFunc/Defs.lean"
    },
    ".lake.packages.mathlib.Mathlib.FieldTheory.RatFunc.Degree": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/FieldTheory/RatFunc/Degree.lean"
    },
    ".lake.packages.mathlib.Mathlib.FieldTheory.IntermediateField.Algebraic": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/FieldTheory/IntermediateField/Algebraic.lean"
    },
    ".lake.packages.mathlib.Mathlib.FieldTheory.IntermediateField.Basic": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/FieldTheory/IntermediateField/Basic.lean"
    },
    ".lake.packages.mathlib.Mathlib.FieldTheory.IntermediateField.Adjoin.Basic": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/FieldTheory/IntermediateField/Adjoin/Basic.lean"
    },
    ".lake.packages.mathlib.Mathlib.FieldTheory.IntermediateField.Adjoin.Defs": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/FieldTheory/IntermediateField/Adjoin/Defs.lean"
    },
    ".lake.packages.mathlib.Mathlib.FieldTheory.IntermediateField.Adjoin.Algebra": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/FieldTheory/IntermediateField/Adjoin/Algebra.lean"
    },
    ".lake.packages.mathlib.Mathlib.AlgebraicGeometry.AffineScheme": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/AlgebraicGeometry/AffineScheme.lean"
    },
    ".lake.packages.mathlib.Mathlib.AlgebraicGeometry.Fiber": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/AlgebraicGeometry/Fiber.lean"
    },
    ".lake.packages.mathlib.Mathlib.AlgebraicGeometry.SpreadingOut": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/AlgebraicGeometry/SpreadingOut.lean"
    },
    ".lake.packages.mathlib.Mathlib.AlgebraicGeometry.Stalk": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/AlgebraicGeometry/Stalk.lean"
    },
    ".lake.packages.mathlib.Mathlib.AlgebraicGeometry.OpenImmersion": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/AlgebraicGeometry/OpenImmersion.lean"
    },
    ".lake.packages.mathlib.Mathlib.AlgebraicGeometry.IdealSheaf": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/AlgebraicGeometry/IdealSheaf.lean"
    },
    ".lake.packages.mathlib.Mathlib.AlgebraicGeometry.Over": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/AlgebraicGeometry/Over.lean"
    },
    ".lake.packages.mathlib.Mathlib.AlgebraicGeometry.PointsPi": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/AlgebraicGeometry/PointsPi.lean"
    },
    ".lake.packages.mathlib.Mathlib.AlgebraicGeometry.Restrict": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/AlgebraicGeometry/Restrict.lean"
    },
    ".lake.packages.mathlib.Mathlib.AlgebraicGeometry.StructureSheaf": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/AlgebraicGeometry/StructureSheaf.lean"
    },
    ".lake.packages.mathlib.Mathlib.AlgebraicGeometry.PullbackCarrier": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/AlgebraicGeometry/PullbackCarrier.lean"
    },
    ".lake.packages.mathlib.Mathlib.AlgebraicGeometry.ValuativeCriterion": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/AlgebraicGeometry/ValuativeCriterion.lean"
    },
    ".lake.packages.mathlib.Mathlib.AlgebraicGeometry.Gluing": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/AlgebraicGeometry/Gluing.lean"
    },
    ".lake.packages.mathlib.Mathlib.AlgebraicGeometry.Spec": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/AlgebraicGeometry/Spec.lean"
    },
    ".lake.packages.mathlib.Mathlib.AlgebraicGeometry.Scheme": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/AlgebraicGeometry/Scheme.lean"
    },
    ".lake.packages.mathlib.Mathlib.AlgebraicGeometry.AffineTransitionLimit": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/AlgebraicGeometry/AffineTransitionLimit.lean"
    },
    ".lake.packages.mathlib.Mathlib.AlgebraicGeometry.RationalMap": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/AlgebraicGeometry/RationalMap.lean"
    },
    ".lake.packages.mathlib.Mathlib.AlgebraicGeometry.GluingOneHypercover": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/AlgebraicGeometry/GluingOneHypercover.lean"
    },
    ".lake.packages.mathlib.Mathlib.AlgebraicGeometry.FunctionField": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/AlgebraicGeometry/FunctionField.lean"
    },
    ".lake.packages.mathlib.Mathlib.AlgebraicGeometry.ResidueField": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/AlgebraicGeometry/ResidueField.lean"
    },
    ".lake.packages.mathlib.Mathlib.AlgebraicGeometry.Limits": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/AlgebraicGeometry/Limits.lean"
    },
    ".lake.packages.mathlib.Mathlib.AlgebraicGeometry.AffineSpace": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/AlgebraicGeometry/AffineSpace.lean"
    },
    ".lake.packages.mathlib.Mathlib.AlgebraicGeometry.GammaSpecAdjunction": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/AlgebraicGeometry/GammaSpecAdjunction.lean"
    },
    ".lake.packages.mathlib.Mathlib.AlgebraicGeometry.Properties": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/AlgebraicGeometry/Properties.lean"
    },
    ".lake.packages.mathlib.Mathlib.AlgebraicGeometry.Pullbacks": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/AlgebraicGeometry/Pullbacks.lean"
    },
    ".lake.packages.mathlib.Mathlib.AlgebraicGeometry.Noetherian": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/AlgebraicGeometry/Noetherian.lean"
    },
    ".lake.packages.mathlib.Mathlib.AlgebraicGeometry.Morphisms.Finite": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/AlgebraicGeometry/Morphisms/Finite.lean"
    },
    ".lake.packages.mathlib.Mathlib.AlgebraicGeometry.Morphisms.SurjectiveOnStalks": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/AlgebraicGeometry/Morphisms/SurjectiveOnStalks.lean"
    },
    ".lake.packages.mathlib.Mathlib.AlgebraicGeometry.Morphisms.Flat": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/AlgebraicGeometry/Morphisms/Flat.lean"
    },
    ".lake.packages.mathlib.Mathlib.AlgebraicGeometry.Morphisms.UniversallyOpen": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/AlgebraicGeometry/Morphisms/UniversallyOpen.lean"
    },
    ".lake.packages.mathlib.Mathlib.AlgebraicGeometry.Morphisms.Integral": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/AlgebraicGeometry/Morphisms/Integral.lean"
    },
    ".lake.packages.mathlib.Mathlib.AlgebraicGeometry.Morphisms.OpenImmersion": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/AlgebraicGeometry/Morphisms/OpenImmersion.lean"
    },
    ".lake.packages.mathlib.Mathlib.AlgebraicGeometry.Morphisms.Separated": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/AlgebraicGeometry/Morphisms/Separated.lean"
    },
    ".lake.packages.mathlib.Mathlib.AlgebraicGeometry.Morphisms.QuasiCompact": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/AlgebraicGeometry/Morphisms/QuasiCompact.lean"
    },
    ".lake.packages.mathlib.Mathlib.AlgebraicGeometry.Morphisms.LocalClosure": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/AlgebraicGeometry/Morphisms/LocalClosure.lean"
    },
    ".lake.packages.mathlib.Mathlib.AlgebraicGeometry.Morphisms.LocalIso": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/AlgebraicGeometry/Morphisms/LocalIso.lean"
    },
    ".lake.packages.mathlib.Mathlib.AlgebraicGeometry.Morphisms.UnderlyingMap": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/AlgebraicGeometry/Morphisms/UnderlyingMap.lean"
    },
    ".lake.packages.mathlib.Mathlib.AlgebraicGeometry.Morphisms.Descent": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/AlgebraicGeometry/Morphisms/Descent.lean"
    },
    ".lake.packages.mathlib.Mathlib.AlgebraicGeometry.Morphisms.Basic": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/AlgebraicGeometry/Morphisms/Basic.lean"
    },
    ".lake.packages.mathlib.Mathlib.AlgebraicGeometry.Morphisms.ClosedImmersion": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/AlgebraicGeometry/Morphisms/ClosedImmersion.lean"
    },
    ".lake.packages.mathlib.Mathlib.AlgebraicGeometry.Morphisms.Etale": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/AlgebraicGeometry/Morphisms/Etale.lean"
    },
    ".lake.packages.mathlib.Mathlib.AlgebraicGeometry.Morphisms.IsIso": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/AlgebraicGeometry/Morphisms/IsIso.lean"
    },
    ".lake.packages.mathlib.Mathlib.AlgebraicGeometry.Morphisms.Proper": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/AlgebraicGeometry/Morphisms/Proper.lean"
    },
    ".lake.packages.mathlib.Mathlib.AlgebraicGeometry.Morphisms.FiniteType": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/AlgebraicGeometry/Morphisms/FiniteType.lean"
    },
    ".lake.packages.mathlib.Mathlib.AlgebraicGeometry.Morphisms.UniversallyInjective": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/AlgebraicGeometry/Morphisms/UniversallyInjective.lean"
    },
    ".lake.packages.mathlib.Mathlib.AlgebraicGeometry.Morphisms.UniversallyClosed": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/AlgebraicGeometry/Morphisms/UniversallyClosed.lean"
    },
    ".lake.packages.mathlib.Mathlib.AlgebraicGeometry.Morphisms.Smooth": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/AlgebraicGeometry/Morphisms/Smooth.lean"
    },
    ".lake.packages.mathlib.Mathlib.AlgebraicGeometry.Morphisms.Immersion": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/AlgebraicGeometry/Morphisms/Immersion.lean"
    },
    ".lake.packages.mathlib.Mathlib.AlgebraicGeometry.Morphisms.RingHomProperties": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/AlgebraicGeometry/Morphisms/RingHomProperties.lean"
    },
    ".lake.packages.mathlib.Mathlib.AlgebraicGeometry.Morphisms.Constructors": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/AlgebraicGeometry/Morphisms/Constructors.lean"
    },
    ".lake.packages.mathlib.Mathlib.AlgebraicGeometry.Morphisms.FinitePresentation": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/AlgebraicGeometry/Morphisms/FinitePresentation.lean"
    },
    ".lake.packages.mathlib.Mathlib.AlgebraicGeometry.Morphisms.Preimmersion": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/AlgebraicGeometry/Morphisms/Preimmersion.lean"
    },
    ".lake.packages.mathlib.Mathlib.AlgebraicGeometry.Morphisms.FormallyUnramified": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/AlgebraicGeometry/Morphisms/FormallyUnramified.lean"
    },
    ".lake.packages.mathlib.Mathlib.AlgebraicGeometry.Morphisms.AffineAnd": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/AlgebraicGeometry/Morphisms/AffineAnd.lean"
    },
    ".lake.packages.mathlib.Mathlib.AlgebraicGeometry.Morphisms.QuasiSeparated": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/AlgebraicGeometry/Morphisms/QuasiSeparated.lean"
    },
    ".lake.packages.mathlib.Mathlib.AlgebraicGeometry.Morphisms.Affine": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/AlgebraicGeometry/Morphisms/Affine.lean"
    },
    ".lake.packages.mathlib.Mathlib.AlgebraicGeometry.EllipticCurve.NormalForms": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/AlgebraicGeometry/EllipticCurve/NormalForms.lean"
    },
    ".lake.packages.mathlib.Mathlib.AlgebraicGeometry.EllipticCurve.Weierstrass": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/AlgebraicGeometry/EllipticCurve/Weierstrass.lean"
    },
    ".lake.packages.mathlib.Mathlib.AlgebraicGeometry.EllipticCurve.Group": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/AlgebraicGeometry/EllipticCurve/Group.lean"
    },
    ".lake.packages.mathlib.Mathlib.AlgebraicGeometry.EllipticCurve.ModelsWithJ": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/AlgebraicGeometry/EllipticCurve/ModelsWithJ.lean"
    },
    ".lake.packages.mathlib.Mathlib.AlgebraicGeometry.EllipticCurve.IsomOfJ": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/AlgebraicGeometry/EllipticCurve/IsomOfJ.lean"
    },
    ".lake.packages.mathlib.Mathlib.AlgebraicGeometry.EllipticCurve.VariableChange": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/AlgebraicGeometry/EllipticCurve/VariableChange.lean"
    },
    ".lake.packages.mathlib.Mathlib.AlgebraicGeometry.EllipticCurve.Affine": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/AlgebraicGeometry/EllipticCurve/Affine.lean"
    },
    ".lake.packages.mathlib.Mathlib.AlgebraicGeometry.EllipticCurve.Jacobian.Point": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/AlgebraicGeometry/EllipticCurve/Jacobian/Point.lean"
    },
    ".lake.packages.mathlib.Mathlib.AlgebraicGeometry.EllipticCurve.Jacobian.Basic": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/AlgebraicGeometry/EllipticCurve/Jacobian/Basic.lean"
    },
    ".lake.packages.mathlib.Mathlib.AlgebraicGeometry.EllipticCurve.Jacobian.Formula": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/AlgebraicGeometry/EllipticCurve/Jacobian/Formula.lean"
    },
    ".lake.packages.mathlib.Mathlib.AlgebraicGeometry.EllipticCurve.DivisionPolynomial.Basic": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/AlgebraicGeometry/EllipticCurve/DivisionPolynomial/Basic.lean"
    },
    ".lake.packages.mathlib.Mathlib.AlgebraicGeometry.EllipticCurve.DivisionPolynomial.Degree": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/AlgebraicGeometry/EllipticCurve/DivisionPolynomial/Degree.lean"
    },
    ".lake.packages.mathlib.Mathlib.AlgebraicGeometry.EllipticCurve.Affine.Point": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/AlgebraicGeometry/EllipticCurve/Affine/Point.lean"
    },
    ".lake.packages.mathlib.Mathlib.AlgebraicGeometry.EllipticCurve.Affine.Basic": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/AlgebraicGeometry/EllipticCurve/Affine/Basic.lean"
    },
    ".lake.packages.mathlib.Mathlib.AlgebraicGeometry.EllipticCurve.Affine.Formula": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/AlgebraicGeometry/EllipticCurve/Affine/Formula.lean"
    },
    ".lake.packages.mathlib.Mathlib.AlgebraicGeometry.EllipticCurve.Projective.Point": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/AlgebraicGeometry/EllipticCurve/Projective/Point.lean"
    },
    ".lake.packages.mathlib.Mathlib.AlgebraicGeometry.EllipticCurve.Projective.Basic": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/AlgebraicGeometry/EllipticCurve/Projective/Basic.lean"
    },
    ".lake.packages.mathlib.Mathlib.AlgebraicGeometry.EllipticCurve.Projective.Formula": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/AlgebraicGeometry/EllipticCurve/Projective/Formula.lean"
    },
    ".lake.packages.mathlib.Mathlib.AlgebraicGeometry.IdealSheaf.Subscheme": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/AlgebraicGeometry/IdealSheaf/Subscheme.lean"
    },
    ".lake.packages.mathlib.Mathlib.AlgebraicGeometry.IdealSheaf.Basic": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/AlgebraicGeometry/IdealSheaf/Basic.lean"
    },
    ".lake.packages.mathlib.Mathlib.AlgebraicGeometry.IdealSheaf.Functorial": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/AlgebraicGeometry/IdealSheaf/Functorial.lean"
    },
    ".lake.packages.mathlib.Mathlib.AlgebraicGeometry.Sites.Representability": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/AlgebraicGeometry/Sites/Representability.lean"
    },
    ".lake.packages.mathlib.Mathlib.AlgebraicGeometry.Sites.BigZariski": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/AlgebraicGeometry/Sites/BigZariski.lean"
    },
    ".lake.packages.mathlib.Mathlib.AlgebraicGeometry.Sites.Etale": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/AlgebraicGeometry/Sites/Etale.lean"
    },
    ".lake.packages.mathlib.Mathlib.AlgebraicGeometry.Sites.Small": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/AlgebraicGeometry/Sites/Small.lean"
    },
    ".lake.packages.mathlib.Mathlib.AlgebraicGeometry.Sites.MorphismProperty": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/AlgebraicGeometry/Sites/MorphismProperty.lean"
    },
    ".lake.packages.mathlib.Mathlib.AlgebraicGeometry.Sites.SmallAffineZariski": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/AlgebraicGeometry/Sites/SmallAffineZariski.lean"
    },
    ".lake.packages.mathlib.Mathlib.AlgebraicGeometry.ProjectiveSpectrum.Topology": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/AlgebraicGeometry/ProjectiveSpectrum/Topology.lean"
    },
    ".lake.packages.mathlib.Mathlib.AlgebraicGeometry.ProjectiveSpectrum.Basic": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/AlgebraicGeometry/ProjectiveSpectrum/Basic.lean"
    },
    ".lake.packages.mathlib.Mathlib.AlgebraicGeometry.ProjectiveSpectrum.StructureSheaf": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/AlgebraicGeometry/ProjectiveSpectrum/StructureSheaf.lean"
    },
    ".lake.packages.mathlib.Mathlib.AlgebraicGeometry.ProjectiveSpectrum.Proper": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/AlgebraicGeometry/ProjectiveSpectrum/Proper.lean"
    },
    ".lake.packages.mathlib.Mathlib.AlgebraicGeometry.ProjectiveSpectrum.Scheme": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/AlgebraicGeometry/ProjectiveSpectrum/Scheme.lean"
    },
    ".lake.packages.mathlib.Mathlib.AlgebraicGeometry.Modules.Presheaf": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/AlgebraicGeometry/Modules/Presheaf.lean"
    },
    ".lake.packages.mathlib.Mathlib.AlgebraicGeometry.Modules.Sheaf": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/AlgebraicGeometry/Modules/Sheaf.lean"
    },
    ".lake.packages.mathlib.Mathlib.AlgebraicGeometry.Modules.Tilde": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/AlgebraicGeometry/Modules/Tilde.lean"
    },
    ".lake.packages.mathlib.Mathlib.AlgebraicGeometry.Cover.Sigma": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/AlgebraicGeometry/Cover/Sigma.lean"
    },
    ".lake.packages.mathlib.Mathlib.AlgebraicGeometry.Cover.Over": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/AlgebraicGeometry/Cover/Over.lean"
    },
    ".lake.packages.mathlib.Mathlib.AlgebraicGeometry.Cover.Open": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/AlgebraicGeometry/Cover/Open.lean"
    },
    ".lake.packages.mathlib.Mathlib.AlgebraicGeometry.Cover.MorphismProperty": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/AlgebraicGeometry/Cover/MorphismProperty.lean"
    },
    ".lake.packages.mathlib.Mathlib.RepresentationTheory.Maschke": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/RepresentationTheory/Maschke.lean"
    },
    ".lake.packages.mathlib.Mathlib.RepresentationTheory.Coinduced": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/RepresentationTheory/Coinduced.lean"
    },
    ".lake.packages.mathlib.Mathlib.RepresentationTheory.FDRep": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/RepresentationTheory/FDRep.lean"
    },
    ".lake.packages.mathlib.Mathlib.RepresentationTheory.Coinvariants": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/RepresentationTheory/Coinvariants.lean"
    },
    ".lake.packages.mathlib.Mathlib.RepresentationTheory.Tannaka": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/RepresentationTheory/Tannaka.lean"
    },
    ".lake.packages.mathlib.Mathlib.RepresentationTheory.Basic": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/RepresentationTheory/Basic.lean"
    },
    ".lake.packages.mathlib.Mathlib.RepresentationTheory.Rep": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/RepresentationTheory/Rep.lean"
    },
    ".lake.packages.mathlib.Mathlib.RepresentationTheory.FiniteIndex": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/RepresentationTheory/FiniteIndex.lean"
    },
    ".lake.packages.mathlib.Mathlib.RepresentationTheory.Submodule": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/RepresentationTheory/Submodule.lean"
    },
    ".lake.packages.mathlib.Mathlib.RepresentationTheory.Invariants": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/RepresentationTheory/Invariants.lean"
    },
    ".lake.packages.mathlib.Mathlib.RepresentationTheory.Character": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/RepresentationTheory/Character.lean"
    },
    ".lake.packages.mathlib.Mathlib.RepresentationTheory.Induced": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/RepresentationTheory/Induced.lean"
    },
    ".lake.packages.mathlib.Mathlib.RepresentationTheory.GroupCohomology.Functoriality": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/RepresentationTheory/GroupCohomology/Functoriality.lean"
    },
    ".lake.packages.mathlib.Mathlib.RepresentationTheory.GroupCohomology.Basic": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/RepresentationTheory/GroupCohomology/Basic.lean"
    },
    ".lake.packages.mathlib.Mathlib.RepresentationTheory.GroupCohomology.Hilbert90": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/RepresentationTheory/GroupCohomology/Hilbert90.lean"
    },
    ".lake.packages.mathlib.Mathlib.RepresentationTheory.GroupCohomology.Resolution": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/RepresentationTheory/GroupCohomology/Resolution.lean"
    },
    ".lake.packages.mathlib.Mathlib.RepresentationTheory.GroupCohomology.LowDegree": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/RepresentationTheory/GroupCohomology/LowDegree.lean"
    },
    ".lake.packages.mathlib.Mathlib.RepresentationTheory.Homological.Resolution": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/RepresentationTheory/Homological/Resolution.lean"
    },
    ".lake.packages.mathlib.Mathlib.RepresentationTheory.Homological.GroupHomology.LongExactSequence": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/RepresentationTheory/Homological/GroupHomology/LongExactSequence.lean"
    },
    ".lake.packages.mathlib.Mathlib.RepresentationTheory.Homological.GroupHomology.Functoriality": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/RepresentationTheory/Homological/GroupHomology/Functoriality.lean"
    },
    ".lake.packages.mathlib.Mathlib.RepresentationTheory.Homological.GroupHomology.Basic": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/RepresentationTheory/Homological/GroupHomology/Basic.lean"
    },
    ".lake.packages.mathlib.Mathlib.RepresentationTheory.Homological.GroupHomology.Shapiro": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/RepresentationTheory/Homological/GroupHomology/Shapiro.lean"
    },
    ".lake.packages.mathlib.Mathlib.RepresentationTheory.Homological.GroupHomology.LowDegree": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/RepresentationTheory/Homological/GroupHomology/LowDegree.lean"
    },
    ".lake.packages.mathlib.Mathlib.RepresentationTheory.Homological.GroupCohomology.LongExactSequence": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/RepresentationTheory/Homological/GroupCohomology/LongExactSequence.lean"
    },
    ".lake.packages.mathlib.Mathlib.RepresentationTheory.Homological.GroupCohomology.Functoriality": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/RepresentationTheory/Homological/GroupCohomology/Functoriality.lean"
    },
    ".lake.packages.mathlib.Mathlib.RepresentationTheory.Homological.GroupCohomology.Basic": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/RepresentationTheory/Homological/GroupCohomology/Basic.lean"
    },
    ".lake.packages.mathlib.Mathlib.RepresentationTheory.Homological.GroupCohomology.Hilbert90": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/RepresentationTheory/Homological/GroupCohomology/Hilbert90.lean"
    },
    ".lake.packages.mathlib.Mathlib.RepresentationTheory.Homological.GroupCohomology.Shapiro": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/RepresentationTheory/Homological/GroupCohomology/Shapiro.lean"
    },
    ".lake.packages.mathlib.Mathlib.RepresentationTheory.Homological.GroupCohomology.LowDegree": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/RepresentationTheory/Homological/GroupCohomology/LowDegree.lean"
    },
    ".lake.packages.mathlib.Mathlib.Logic.Lemmas": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Logic/Lemmas.lean"
    },
    ".lake.packages.mathlib.Mathlib.Logic.Pairwise": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Logic/Pairwise.lean"
    },
    ".lake.packages.mathlib.Mathlib.Logic.ExistsUnique": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Logic/ExistsUnique.lean"
    },
    ".lake.packages.mathlib.Mathlib.Logic.IsEmpty": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Logic/IsEmpty.lean"
    },
    ".lake.packages.mathlib.Mathlib.Logic.UnivLE": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Logic/UnivLE.lean"
    },
    ".lake.packages.mathlib.Mathlib.Logic.Denumerable": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Logic/Denumerable.lean"
    },
    ".lake.packages.mathlib.Mathlib.Logic.Nonempty": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Logic/Nonempty.lean"
    },
    ".lake.packages.mathlib.Mathlib.Logic.Basic": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Logic/Basic.lean"
    },
    ".lake.packages.mathlib.Mathlib.Logic.Unique": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Logic/Unique.lean"
    },
    ".lake.packages.mathlib.Mathlib.Logic.Relation": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Logic/Relation.lean"
    },
    ".lake.packages.mathlib.Mathlib.Logic.OpClass": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Logic/OpClass.lean"
    },
    ".lake.packages.mathlib.Mathlib.Logic.Hydra": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Logic/Hydra.lean"
    },
    ".lake.packages.mathlib.Mathlib.Logic.Relator": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Logic/Relator.lean"
    },
    ".lake.packages.mathlib.Mathlib.Logic.Nontrivial.Basic": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Logic/Nontrivial/Basic.lean"
    },
    ".lake.packages.mathlib.Mathlib.Logic.Nontrivial.Defs": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Logic/Nontrivial/Defs.lean"
    },
    ".lake.packages.mathlib.Mathlib.Logic.Equiv.Sum": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Logic/Equiv/Sum.lean"
    },
    ".lake.packages.mathlib.Mathlib.Logic.Equiv.Fintype": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Logic/Equiv/Fintype.lean"
    },
    ".lake.packages.mathlib.Mathlib.Logic.Equiv.PartialEquiv": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Logic/Equiv/PartialEquiv.lean"
    },
    ".lake.packages.mathlib.Mathlib.Logic.Equiv.Option": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Logic/Equiv/Option.lean"
    },
    ".lake.packages.mathlib.Mathlib.Logic.Equiv.Pairwise": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Logic/Equiv/Pairwise.lean"
    },
    ".lake.packages.mathlib.Mathlib.Logic.Equiv.List": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Logic/Equiv/List.lean"
    },
    ".lake.packages.mathlib.Mathlib.Logic.Equiv.Prod": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Logic/Equiv/Prod.lean"
    },
    ".lake.packages.mathlib.Mathlib.Logic.Equiv.Nat": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Logic/Equiv/Nat.lean"
    },
    ".lake.packages.mathlib.Mathlib.Logic.Equiv.Finset": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Logic/Equiv/Finset.lean"
    },
    ".lake.packages.mathlib.Mathlib.Logic.Equiv.Basic": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Logic/Equiv/Basic.lean"
    },
    ".lake.packages.mathlib.Mathlib.Logic.Equiv.Multiset": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Logic/Equiv/Multiset.lean"
    },
    ".lake.packages.mathlib.Mathlib.Logic.Equiv.Defs": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Logic/Equiv/Defs.lean"
    },
    ".lake.packages.mathlib.Mathlib.Logic.Equiv.Set": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Logic/Equiv/Set.lean"
    },
    ".lake.packages.mathlib.Mathlib.Logic.Equiv.Functor": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Logic/Equiv/Functor.lean"
    },
    ".lake.packages.mathlib.Mathlib.Logic.Equiv.Embedding": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Logic/Equiv/Embedding.lean"
    },
    ".lake.packages.mathlib.Mathlib.Logic.Equiv.Array": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Logic/Equiv/Array.lean"
    },
    ".lake.packages.mathlib.Mathlib.Logic.Equiv.Fin.Basic": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Logic/Equiv/Fin/Basic.lean"
    },
    ".lake.packages.mathlib.Mathlib.Logic.Equiv.Fin.Rotate": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Logic/Equiv/Fin/Rotate.lean"
    },
    ".lake.packages.mathlib.Mathlib.Logic.Embedding.Basic": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Logic/Embedding/Basic.lean"
    },
    ".lake.packages.mathlib.Mathlib.Logic.Embedding.Set": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Logic/Embedding/Set.lean"
    },
    ".lake.packages.mathlib.Mathlib.Logic.Function.Iterate": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Logic/Function/Iterate.lean"
    },
    ".lake.packages.mathlib.Mathlib.Logic.Function.Conjugate": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Logic/Function/Conjugate.lean"
    },
    ".lake.packages.mathlib.Mathlib.Logic.Function.FiberPartition": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Logic/Function/FiberPartition.lean"
    },
    ".lake.packages.mathlib.Mathlib.Logic.Function.DependsOn": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Logic/Function/DependsOn.lean"
    },
    ".lake.packages.mathlib.Mathlib.Logic.Function.FromTypes": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Logic/Function/FromTypes.lean"
    },
    ".lake.packages.mathlib.Mathlib.Logic.Function.Basic": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Logic/Function/Basic.lean"
    },
    ".lake.packages.mathlib.Mathlib.Logic.Function.ULift": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Logic/Function/ULift.lean"
    },
    ".lake.packages.mathlib.Mathlib.Logic.Function.Defs": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Logic/Function/Defs.lean"
    },
    ".lake.packages.mathlib.Mathlib.Logic.Function.OfArity": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Logic/Function/OfArity.lean"
    },
    ".lake.packages.mathlib.Mathlib.Logic.Function.Coequalizer": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Logic/Function/Coequalizer.lean"
    },
    ".lake.packages.mathlib.Mathlib.Logic.Function.CompTypeclasses": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Logic/Function/CompTypeclasses.lean"
    },
    ".lake.packages.mathlib.Mathlib.Logic.Encodable.Pi": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Logic/Encodable/Pi.lean"
    },
    ".lake.packages.mathlib.Mathlib.Logic.Encodable.Basic": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Logic/Encodable/Basic.lean"
    },
    ".lake.packages.mathlib.Mathlib.Logic.Encodable.Lattice": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Logic/Encodable/Lattice.lean"
    },
    ".lake.packages.mathlib.Mathlib.Logic.Small.List": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Logic/Small/List.lean"
    },
    ".lake.packages.mathlib.Mathlib.Logic.Small.Basic": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Logic/Small/Basic.lean"
    },
    ".lake.packages.mathlib.Mathlib.Logic.Small.Defs": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Logic/Small/Defs.lean"
    },
    ".lake.packages.mathlib.Mathlib.Logic.Small.Set": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Logic/Small/Set.lean"
    },
    ".lake.packages.mathlib.Mathlib.Logic.Godel.GodelBetaFunction": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Logic/Godel/GodelBetaFunction.lean"
    },
    ".lake.packages.mathlib.Mathlib.Std.Data.HashMap": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Std/Data/HashMap.lean"
    },
    ".lake.packages.mathlib.Mathlib.CategoryTheory.Yoneda": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/CategoryTheory/Yoneda.lean"
    },
    ".lake.packages.mathlib.Mathlib.CategoryTheory.CatCommSq": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/CategoryTheory/CatCommSq.lean"
    },
    ".lake.packages.mathlib.Mathlib.CategoryTheory.Extensive": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/CategoryTheory/Extensive.lean"
    },
    ".lake.packages.mathlib.Mathlib.CategoryTheory.Skeletal": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/CategoryTheory/Skeletal.lean"
    },
    ".lake.packages.mathlib.Mathlib.CategoryTheory.EssentiallySmall": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/CategoryTheory/EssentiallySmall.lean"
    },
    ".lake.packages.mathlib.Mathlib.CategoryTheory.Core": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/CategoryTheory/Core.lean"
    },
    ".lake.packages.mathlib.Mathlib.CategoryTheory.LocallyDirected": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/CategoryTheory/LocallyDirected.lean"
    },
    ".lake.packages.mathlib.Mathlib.CategoryTheory.IsomorphismClasses": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/CategoryTheory/IsomorphismClasses.lean"
    },
    ".lake.packages.mathlib.Mathlib.CategoryTheory.HomCongr": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/CategoryTheory/HomCongr.lean"
    },
    ".lake.packages.mathlib.Mathlib.CategoryTheory.EpiMono": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/CategoryTheory/EpiMono.lean"
    },
    ".lake.packages.mathlib.Mathlib.CategoryTheory.Retract": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/CategoryTheory/Retract.lean"
    },
    ".lake.packages.mathlib.Mathlib.CategoryTheory.CofilteredSystem": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/CategoryTheory/CofilteredSystem.lean"
    },
    ".lake.packages.mathlib.Mathlib.CategoryTheory.Balanced": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/CategoryTheory/Balanced.lean"
    },
    ".lake.packages.mathlib.Mathlib.CategoryTheory.GradedObject": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/CategoryTheory/GradedObject.lean"
    },
    ".lake.packages.mathlib.Mathlib.CategoryTheory.PUnit": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/CategoryTheory/PUnit.lean"
    },
    ".lake.packages.mathlib.Mathlib.CategoryTheory.NatTrans": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/CategoryTheory/NatTrans.lean"
    },
    ".lake.packages.mathlib.Mathlib.CategoryTheory.Subterminal": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/CategoryTheory/Subterminal.lean"
    },
    ".lake.packages.mathlib.Mathlib.CategoryTheory.Elementwise": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/CategoryTheory/Elementwise.lean"
    },
    ".lake.packages.mathlib.Mathlib.CategoryTheory.UnivLE": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/CategoryTheory/UnivLE.lean"
    },
    ".lake.packages.mathlib.Mathlib.CategoryTheory.CodiscreteCategory": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/CategoryTheory/CodiscreteCategory.lean"
    },
    ".lake.packages.mathlib.Mathlib.CategoryTheory.FullSubcategory": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/CategoryTheory/FullSubcategory.lean"
    },
    ".lake.packages.mathlib.Mathlib.CategoryTheory.Groupoid": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/CategoryTheory/Groupoid.lean"
    },
    ".lake.packages.mathlib.Mathlib.CategoryTheory.Quotient": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/CategoryTheory/Quotient.lean"
    },
    ".lake.packages.mathlib.Mathlib.CategoryTheory.Simple": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/CategoryTheory/Simple.lean"
    },
    ".lake.packages.mathlib.Mathlib.CategoryTheory.Conj": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/CategoryTheory/Conj.lean"
    },
    ".lake.packages.mathlib.Mathlib.CategoryTheory.Adhesive": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/CategoryTheory/Adhesive.lean"
    },
    ".lake.packages.mathlib.Mathlib.CategoryTheory.ChosenFiniteProducts": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/CategoryTheory/ChosenFiniteProducts.lean"
    },
    ".lake.packages.mathlib.Mathlib.CategoryTheory.GlueData": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/CategoryTheory/GlueData.lean"
    },
    ".lake.packages.mathlib.Mathlib.CategoryTheory.ConnectedComponents": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/CategoryTheory/ConnectedComponents.lean"
    },
    ".lake.packages.mathlib.Mathlib.CategoryTheory.Square": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/CategoryTheory/Square.lean"
    },
    ".lake.packages.mathlib.Mathlib.CategoryTheory.Endomorphism": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/CategoryTheory/Endomorphism.lean"
    },
    ".lake.packages.mathlib.Mathlib.CategoryTheory.ComposableArrows": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/CategoryTheory/ComposableArrows.lean"
    },
    ".lake.packages.mathlib.Mathlib.CategoryTheory.DinatTrans": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/CategoryTheory/DinatTrans.lean"
    },
    ".lake.packages.mathlib.Mathlib.CategoryTheory.WithTerminal": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/CategoryTheory/WithTerminal.lean"
    },
    ".lake.packages.mathlib.Mathlib.CategoryTheory.Action": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/CategoryTheory/Action.lean"
    },
    ".lake.packages.mathlib.Mathlib.CategoryTheory.EssentialImage": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/CategoryTheory/EssentialImage.lean"
    },
    ".lake.packages.mathlib.Mathlib.CategoryTheory.InducedCategory": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/CategoryTheory/InducedCategory.lean"
    },
    ".lake.packages.mathlib.Mathlib.CategoryTheory.SingleObj": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/CategoryTheory/SingleObj.lean"
    },
    ".lake.packages.mathlib.Mathlib.CategoryTheory.Opposites": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/CategoryTheory/Opposites.lean"
    },
    ".lake.packages.mathlib.Mathlib.CategoryTheory.Thin": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/CategoryTheory/Thin.lean"
    },
    ".lake.packages.mathlib.Mathlib.CategoryTheory.Grothendieck": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/CategoryTheory/Grothendieck.lean"
    },
    ".lake.packages.mathlib.Mathlib.CategoryTheory.Widesubcategory": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/CategoryTheory/Widesubcategory.lean"
    },
    ".lake.packages.mathlib.Mathlib.CategoryTheory.Types": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/CategoryTheory/Types.lean"
    },
    ".lake.packages.mathlib.Mathlib.CategoryTheory.PEmpty": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/CategoryTheory/PEmpty.lean"
    },
    ".lake.packages.mathlib.Mathlib.CategoryTheory.EqToHom": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/CategoryTheory/EqToHom.lean"
    },
    ".lake.packages.mathlib.Mathlib.CategoryTheory.Whiskering": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/CategoryTheory/Whiskering.lean"
    },
    ".lake.packages.mathlib.Mathlib.CategoryTheory.Iso": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/CategoryTheory/Iso.lean"
    },
    ".lake.packages.mathlib.Mathlib.CategoryTheory.NatIso": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/CategoryTheory/NatIso.lean"
    },
    ".lake.packages.mathlib.Mathlib.CategoryTheory.Equivalence": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/CategoryTheory/Equivalence.lean"
    },
    ".lake.packages.mathlib.Mathlib.CategoryTheory.IsConnected": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/CategoryTheory/IsConnected.lean"
    },
    ".lake.packages.mathlib.Mathlib.CategoryTheory.Elements": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/CategoryTheory/Elements.lean"
    },
    ".lake.packages.mathlib.Mathlib.CategoryTheory.DifferentialObject": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/CategoryTheory/DifferentialObject.lean"
    },
    ".lake.packages.mathlib.Mathlib.CategoryTheory.Noetherian": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/CategoryTheory/Noetherian.lean"
    },
    ".lake.packages.mathlib.Mathlib.CategoryTheory.Countable": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/CategoryTheory/Countable.lean"
    },
    ".lake.packages.mathlib.Mathlib.CategoryTheory.FintypeCat": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/CategoryTheory/FintypeCat.lean"
    },
    ".lake.packages.mathlib.Mathlib.CategoryTheory.CommSq": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/CategoryTheory/CommSq.lean"
    },
    ".lake.packages.mathlib.Mathlib.CategoryTheory.Subpresheaf.Finite": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/CategoryTheory/Subpresheaf/Finite.lean"
    },
    ".lake.packages.mathlib.Mathlib.CategoryTheory.Subpresheaf.OfSection": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/CategoryTheory/Subpresheaf/OfSection.lean"
    },
    ".lake.packages.mathlib.Mathlib.CategoryTheory.Subpresheaf.Image": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/CategoryTheory/Subpresheaf/Image.lean"
    },
    ".lake.packages.mathlib.Mathlib.CategoryTheory.Subpresheaf.Basic": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/CategoryTheory/Subpresheaf/Basic.lean"
    },
    ".lake.packages.mathlib.Mathlib.CategoryTheory.Subpresheaf.Subobject": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/CategoryTheory/Subpresheaf/Subobject.lean"
    },
    ".lake.packages.mathlib.Mathlib.CategoryTheory.Subpresheaf.Sieves": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/CategoryTheory/Subpresheaf/Sieves.lean"
    },
    ".lake.packages.mathlib.Mathlib.CategoryTheory.Subpresheaf.Equalizer": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/CategoryTheory/Subpresheaf/Equalizer.lean"
    },
    ".lake.packages.mathlib.Mathlib.CategoryTheory.Functor.Flat": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/CategoryTheory/Functor/Flat.lean"
    },
    ".lake.packages.mathlib.Mathlib.CategoryTheory.Functor.EpiMono": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/CategoryTheory/Functor/EpiMono.lean"
    },
    ".lake.packages.mathlib.Mathlib.CategoryTheory.Functor.Category": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/CategoryTheory/Functor/Category.lean"
    },
    ".lake.packages.mathlib.Mathlib.CategoryTheory.Functor.CurryingThree": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/CategoryTheory/Functor/CurryingThree.lean"
    },
    ".lake.packages.mathlib.Mathlib.CategoryTheory.Functor.Basic": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/CategoryTheory/Functor/Basic.lean"
    },
    ".lake.packages.mathlib.Mathlib.CategoryTheory.Functor.OfSequence": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/CategoryTheory/Functor/OfSequence.lean"
    },
    ".lake.packages.mathlib.Mathlib.CategoryTheory.Functor.Const": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/CategoryTheory/Functor/Const.lean"
    },
    ".lake.packages.mathlib.Mathlib.CategoryTheory.Functor.Trifunctor": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/CategoryTheory/Functor/Trifunctor.lean"
    },
    ".lake.packages.mathlib.Mathlib.CategoryTheory.Functor.Functorial": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/CategoryTheory/Functor/Functorial.lean"
    },
    ".lake.packages.mathlib.Mathlib.CategoryTheory.Functor.FullyFaithful": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/CategoryTheory/Functor/FullyFaithful.lean"
    },
    ".lake.packages.mathlib.Mathlib.CategoryTheory.Functor.TwoSquare": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/CategoryTheory/Functor/TwoSquare.lean"
    },
    ".lake.packages.mathlib.Mathlib.CategoryTheory.Functor.Currying": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/CategoryTheory/Functor/Currying.lean"
    },
    ".lake.packages.mathlib.Mathlib.CategoryTheory.Functor.FunctorHom": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/CategoryTheory/Functor/FunctorHom.lean"
    },
    ".lake.packages.mathlib.Mathlib.CategoryTheory.Functor.Hom": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/CategoryTheory/Functor/Hom.lean"
    },
    ".lake.packages.mathlib.Mathlib.CategoryTheory.Functor.Derived.RightDerived": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/CategoryTheory/Functor/Derived/RightDerived.lean"
    },
    ".lake.packages.mathlib.Mathlib.CategoryTheory.Functor.Derived.LeftDerived": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/CategoryTheory/Functor/Derived/LeftDerived.lean"
    },
    ".lake.packages.mathlib.Mathlib.CategoryTheory.Functor.Derived.Adjunction": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/CategoryTheory/Functor/Derived/Adjunction.lean"
    },
    ".lake.packages.mathlib.Mathlib.CategoryTheory.Functor.KanExtension.Preserves": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/CategoryTheory/Functor/KanExtension/Preserves.lean"
    },
    ".lake.packages.mathlib.Mathlib.CategoryTheory.Functor.KanExtension.Pointwise": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/CategoryTheory/Functor/KanExtension/Pointwise.lean"
    },
    ".lake.packages.mathlib.Mathlib.CategoryTheory.Functor.KanExtension.Basic": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/CategoryTheory/Functor/KanExtension/Basic.lean"
    },
    ".lake.packages.mathlib.Mathlib.CategoryTheory.Functor.KanExtension.Adjunction": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/CategoryTheory/Functor/KanExtension/Adjunction.lean"
    },
    ".lake.packages.mathlib.Mathlib.CategoryTheory.Functor.ReflectsIso.Balanced": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/CategoryTheory/Functor/ReflectsIso/Balanced.lean"
    },
    ".lake.packages.mathlib.Mathlib.CategoryTheory.Functor.ReflectsIso.Basic": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/CategoryTheory/Functor/ReflectsIso/Basic.lean"
    },
    ".lake.packages.mathlib.Mathlib.CategoryTheory.GradedObject.Monoidal": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/CategoryTheory/GradedObject/Monoidal.lean"
    },
    ".lake.packages.mathlib.Mathlib.CategoryTheory.GradedObject.Bifunctor": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/CategoryTheory/GradedObject/Bifunctor.lean"
    },
    ".lake.packages.mathlib.Mathlib.CategoryTheory.GradedObject.Single": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/CategoryTheory/GradedObject/Single.lean"
    },
    ".lake.packages.mathlib.Mathlib.CategoryTheory.GradedObject.Trifunctor": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/CategoryTheory/GradedObject/Trifunctor.lean"
    },
    ".lake.packages.mathlib.Mathlib.CategoryTheory.GradedObject.Associator": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/CategoryTheory/GradedObject/Associator.lean"
    },
    ".lake.packages.mathlib.Mathlib.CategoryTheory.GradedObject.Unitor": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/CategoryTheory/GradedObject/Unitor.lean"
    },
    ".lake.packages.mathlib.Mathlib.CategoryTheory.GradedObject.Braiding": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/CategoryTheory/GradedObject/Braiding.lean"
    },
    ".lake.packages.mathlib.Mathlib.CategoryTheory.ChosenFiniteProducts.Over": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/CategoryTheory/ChosenFiniteProducts/Over.lean"
    },
    ".lake.packages.mathlib.Mathlib.CategoryTheory.ChosenFiniteProducts.InfSemilattice": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/CategoryTheory/ChosenFiniteProducts/InfSemilattice.lean"
    },
    ".lake.packages.mathlib.Mathlib.CategoryTheory.ChosenFiniteProducts.Cat": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/CategoryTheory/ChosenFiniteProducts/Cat.lean"
    },
    ".lake.packages.mathlib.Mathlib.CategoryTheory.ChosenFiniteProducts.FunctorCategory": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/CategoryTheory/ChosenFiniteProducts/FunctorCategory.lean"
    },
    ".lake.packages.mathlib.Mathlib.CategoryTheory.ObjectProperty.Extensions": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/CategoryTheory/ObjectProperty/Extensions.lean"
    },
    ".lake.packages.mathlib.Mathlib.CategoryTheory.ObjectProperty.EpiMono": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/CategoryTheory/ObjectProperty/EpiMono.lean"
    },
    ".lake.packages.mathlib.Mathlib.CategoryTheory.ObjectProperty.FullSubcategory": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/CategoryTheory/ObjectProperty/FullSubcategory.lean"
    },
    ".lake.packages.mathlib.Mathlib.CategoryTheory.ObjectProperty.Basic": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/CategoryTheory/ObjectProperty/Basic.lean"
    },
    ".lake.packages.mathlib.Mathlib.CategoryTheory.ObjectProperty.ContainsZero": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/CategoryTheory/ObjectProperty/ContainsZero.lean"
    },
    ".lake.packages.mathlib.Mathlib.CategoryTheory.ObjectProperty.ClosedUnderIsomorphisms": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/CategoryTheory/ObjectProperty/ClosedUnderIsomorphisms.lean"
    },
    ".lake.packages.mathlib.Mathlib.CategoryTheory.ObjectProperty.Shift": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/CategoryTheory/ObjectProperty/Shift.lean"
    },
    ".lake.packages.mathlib.Mathlib.CategoryTheory.Preadditive.Biproducts": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/CategoryTheory/Preadditive/Biproducts.lean"
    },
    ".lake.packages.mathlib.Mathlib.CategoryTheory.Preadditive.AdditiveFunctor": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/CategoryTheory/Preadditive/AdditiveFunctor.lean"
    },
    ".lake.packages.mathlib.Mathlib.CategoryTheory.Preadditive.OfBiproducts": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/CategoryTheory/Preadditive/OfBiproducts.lean"
    },
    ".lake.packages.mathlib.Mathlib.CategoryTheory.Preadditive.Opposite": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/CategoryTheory/Preadditive/Opposite.lean"
    },
    ".lake.packages.mathlib.Mathlib.CategoryTheory.Preadditive.LeftExact": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/CategoryTheory/Preadditive/LeftExact.lean"
    },
    ".lake.packages.mathlib.Mathlib.CategoryTheory.Preadditive.Indization": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/CategoryTheory/Preadditive/Indization.lean"
    },
    ".lake.packages.mathlib.Mathlib.CategoryTheory.Preadditive.CommGrp_": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/CategoryTheory/Preadditive/CommGrp_.lean"
    },
    ".lake.packages.mathlib.Mathlib.CategoryTheory.Preadditive.Basic": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/CategoryTheory/Preadditive/Basic.lean"
    },
    ".lake.packages.mathlib.Mathlib.CategoryTheory.Preadditive.Schur": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/CategoryTheory/Preadditive/Schur.lean"
    },
    ".lake.packages.mathlib.Mathlib.CategoryTheory.Preadditive.LiftToFinset": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/CategoryTheory/Preadditive/LiftToFinset.lean"
    },
    ".lake.packages.mathlib.Mathlib.CategoryTheory.Preadditive.SingleObj": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/CategoryTheory/Preadditive/SingleObj.lean"
    },
    ".lake.packages.mathlib.Mathlib.CategoryTheory.Preadditive.EndoFunctor": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/CategoryTheory/Preadditive/EndoFunctor.lean"
    },
    ".lake.packages.mathlib.Mathlib.CategoryTheory.Preadditive.Transfer": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/CategoryTheory/Preadditive/Transfer.lean"
    },
    ".lake.packages.mathlib.Mathlib.CategoryTheory.Preadditive.HomOrthogonal": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/CategoryTheory/Preadditive/HomOrthogonal.lean"
    },
    ".lake.packages.mathlib.Mathlib.CategoryTheory.Preadditive.FunctorCategory": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/CategoryTheory/Preadditive/FunctorCategory.lean"
    },
    ".lake.packages.mathlib.Mathlib.CategoryTheory.Preadditive.Mat": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/CategoryTheory/Preadditive/Mat.lean"
    },
    ".lake.packages.mathlib.Mathlib.CategoryTheory.Preadditive.EilenbergMoore": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/CategoryTheory/Preadditive/EilenbergMoore.lean"
    },
    ".lake.packages.mathlib.Mathlib.CategoryTheory.Preadditive.Projective.Preserves": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/CategoryTheory/Preadditive/Projective/Preserves.lean"
    },
    ".lake.packages.mathlib.Mathlib.CategoryTheory.Preadditive.Projective.LiftingProperties": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/CategoryTheory/Preadditive/Projective/LiftingProperties.lean"
    },
    ".lake.packages.mathlib.Mathlib.CategoryTheory.Preadditive.Projective.Basic": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/CategoryTheory/Preadditive/Projective/Basic.lean"
    },
    ".lake.packages.mathlib.Mathlib.CategoryTheory.Preadditive.Projective.Resolution": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/CategoryTheory/Preadditive/Projective/Resolution.lean"
    },
    ".lake.packages.mathlib.Mathlib.CategoryTheory.Preadditive.Injective.Preserves": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/CategoryTheory/Preadditive/Injective/Preserves.lean"
    },
    ".lake.packages.mathlib.Mathlib.CategoryTheory.Preadditive.Injective.LiftingProperties": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/CategoryTheory/Preadditive/Injective/LiftingProperties.lean"
    },
    ".lake.packages.mathlib.Mathlib.CategoryTheory.Preadditive.Injective.Basic": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/CategoryTheory/Preadditive/Injective/Basic.lean"
    },
    ".lake.packages.mathlib.Mathlib.CategoryTheory.Preadditive.Injective.Resolution": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/CategoryTheory/Preadditive/Injective/Resolution.lean"
    },
    ".lake.packages.mathlib.Mathlib.CategoryTheory.Preadditive.Yoneda.Basic": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/CategoryTheory/Preadditive/Yoneda/Basic.lean"
    },
    ".lake.packages.mathlib.Mathlib.CategoryTheory.Preadditive.Yoneda.Injective": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/CategoryTheory/Preadditive/Yoneda/Injective.lean"
    },
    ".lake.packages.mathlib.Mathlib.CategoryTheory.Preadditive.Yoneda.Projective": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/CategoryTheory/Preadditive/Yoneda/Projective.lean"
    },
    ".lake.packages.mathlib.Mathlib.CategoryTheory.Preadditive.Yoneda.Limits": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/CategoryTheory/Preadditive/Yoneda/Limits.lean"
    },
    ".lake.packages.mathlib.Mathlib.CategoryTheory.Presentable.Finite": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/CategoryTheory/Presentable/Finite.lean"
    },
    ".lake.packages.mathlib.Mathlib.CategoryTheory.Presentable.Basic": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/CategoryTheory/Presentable/Basic.lean"
    },
    ".lake.packages.mathlib.Mathlib.CategoryTheory.Presentable.IsCardinalFiltered": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/CategoryTheory/Presentable/IsCardinalFiltered.lean"
    },
    ".lake.packages.mathlib.Mathlib.CategoryTheory.Presentable.Limits": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/CategoryTheory/Presentable/Limits.lean"
    },
    ".lake.packages.mathlib.Mathlib.CategoryTheory.Products.Bifunctor": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/CategoryTheory/Products/Bifunctor.lean"
    },
    ".lake.packages.mathlib.Mathlib.CategoryTheory.Products.Basic": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/CategoryTheory/Products/Basic.lean"
    },
    ".lake.packages.mathlib.Mathlib.CategoryTheory.Products.Associator": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/CategoryTheory/Products/Associator.lean"
    },
    ".lake.packages.mathlib.Mathlib.CategoryTheory.Products.Unitor": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/CategoryTheory/Products/Unitor.lean"
    },
    ".lake.packages.mathlib.Mathlib.CategoryTheory.Join.Sum": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/CategoryTheory/Join/Sum.lean"
    },
    ".lake.packages.mathlib.Mathlib.CategoryTheory.Join.Pseudofunctor": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/CategoryTheory/Join/Pseudofunctor.lean"
    },
    ".lake.packages.mathlib.Mathlib.CategoryTheory.Join.Final": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/CategoryTheory/Join/Final.lean"
    },
    ".lake.packages.mathlib.Mathlib.CategoryTheory.Join.Basic": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/CategoryTheory/Join/Basic.lean"
    },
    ".lake.packages.mathlib.Mathlib.CategoryTheory.Join.Opposites": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/CategoryTheory/Join/Opposites.lean"
    },
    ".lake.packages.mathlib.Mathlib.CategoryTheory.Category.Grpd": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/CategoryTheory/Category/Grpd.lean"
    },
    ".lake.packages.mathlib.Mathlib.CategoryTheory.Category.GaloisConnection": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/CategoryTheory/Category/GaloisConnection.lean"
    },
    ".lake.packages.mathlib.Mathlib.CategoryTheory.Category.ReflQuiv": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/CategoryTheory/Category/ReflQuiv.lean"
    },
    ".lake.packages.mathlib.Mathlib.CategoryTheory.Category.Factorisation": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/CategoryTheory/Category/Factorisation.lean"
    },
    ".lake.packages.mathlib.Mathlib.CategoryTheory.Category.Pairwise": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/CategoryTheory/Category/Pairwise.lean"
    },
    ".lake.packages.mathlib.Mathlib.CategoryTheory.Category.Bipointed": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/CategoryTheory/Category/Bipointed.lean"
    },
    ".lake.packages.mathlib.Mathlib.CategoryTheory.Category.Init": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/CategoryTheory/Category/Init.lean"
    },
    ".lake.packages.mathlib.Mathlib.CategoryTheory.Category.TwoP": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/CategoryTheory/Category/TwoP.lean"
    },
    ".lake.packages.mathlib.Mathlib.CategoryTheory.Category.RelCat": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/CategoryTheory/Category/RelCat.lean"
    },
    ".lake.packages.mathlib.Mathlib.CategoryTheory.Category.KleisliCat": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/CategoryTheory/Category/KleisliCat.lean"
    },
    ".lake.packages.mathlib.Mathlib.CategoryTheory.Category.Basic": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/CategoryTheory/Category/Basic.lean"
    },
    ".lake.packages.mathlib.Mathlib.CategoryTheory.Category.ULift": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/CategoryTheory/Category/ULift.lean"
    },
    ".lake.packages.mathlib.Mathlib.CategoryTheory.Category.PartialFun": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/CategoryTheory/Category/PartialFun.lean"
    },
    ".lake.packages.mathlib.Mathlib.CategoryTheory.Category.Pointed": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/CategoryTheory/Category/Pointed.lean"
    },
    ".lake.packages.mathlib.Mathlib.CategoryTheory.Category.Cat": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/CategoryTheory/Category/Cat.lean"
    },
    ".lake.packages.mathlib.Mathlib.CategoryTheory.Category.Quiv": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/CategoryTheory/Category/Quiv.lean"
    },
    ".lake.packages.mathlib.Mathlib.CategoryTheory.Category.Preorder": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/CategoryTheory/Category/Preorder.lean"
    },
    ".lake.packages.mathlib.Mathlib.CategoryTheory.Category.Cat.Colimit": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/CategoryTheory/Category/Cat/Colimit.lean"
    },
    ".lake.packages.mathlib.Mathlib.CategoryTheory.Category.Cat.Limit": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/CategoryTheory/Category/Cat/Limit.lean"
    },
    ".lake.packages.mathlib.Mathlib.CategoryTheory.Category.Cat.AsSmall": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/CategoryTheory/Category/Cat/AsSmall.lean"
    },
    ".lake.packages.mathlib.Mathlib.CategoryTheory.Category.Cat.Terminal": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/CategoryTheory/Category/Cat/Terminal.lean"
    },
    ".lake.packages.mathlib.Mathlib.CategoryTheory.Category.Cat.Op": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/CategoryTheory/Category/Cat/Op.lean"
    },
    ".lake.packages.mathlib.Mathlib.CategoryTheory.Category.Cat.CartesianClosed": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/CategoryTheory/Category/Cat/CartesianClosed.lean"
    },
    ".lake.packages.mathlib.Mathlib.CategoryTheory.Category.Cat.Adjunction": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/CategoryTheory/Category/Cat/Adjunction.lean"
    },
    ".lake.packages.mathlib.Mathlib.CategoryTheory.Groupoid.Discrete": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/CategoryTheory/Groupoid/Discrete.lean"
    },
    ".lake.packages.mathlib.Mathlib.CategoryTheory.Groupoid.VertexGroup": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/CategoryTheory/Groupoid/VertexGroup.lean"
    },
    ".lake.packages.mathlib.Mathlib.CategoryTheory.Groupoid.Subgroupoid": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/CategoryTheory/Groupoid/Subgroupoid.lean"
    },
    ".lake.packages.mathlib.Mathlib.CategoryTheory.Groupoid.Basic": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/CategoryTheory/Groupoid/Basic.lean"
    },
    ".lake.packages.mathlib.Mathlib.CategoryTheory.Groupoid.FreeGroupoid": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/CategoryTheory/Groupoid/FreeGroupoid.lean"
    },
    ".lake.packages.mathlib.Mathlib.CategoryTheory.Distributive.Monoidal": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/CategoryTheory/Distributive/Monoidal.lean"
    },
    ".lake.packages.mathlib.Mathlib.CategoryTheory.Distributive.Cartesian": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/CategoryTheory/Distributive/Cartesian.lean"
    },
    ".lake.packages.mathlib.Mathlib.CategoryTheory.GuitartExact.Opposite": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/CategoryTheory/GuitartExact/Opposite.lean"
    },
    ".lake.packages.mathlib.Mathlib.CategoryTheory.GuitartExact.VerticalComposition": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/CategoryTheory/GuitartExact/VerticalComposition.lean"
    },
    ".lake.packages.mathlib.Mathlib.CategoryTheory.GuitartExact.Basic": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/CategoryTheory/GuitartExact/Basic.lean"
    },
    ".lake.packages.mathlib.Mathlib.CategoryTheory.FiberedCategory.Fiber": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/CategoryTheory/FiberedCategory/Fiber.lean"
    },
    ".lake.packages.mathlib.Mathlib.CategoryTheory.FiberedCategory.Cocartesian": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/CategoryTheory/FiberedCategory/Cocartesian.lean"
    },
    ".lake.packages.mathlib.Mathlib.CategoryTheory.FiberedCategory.Cartesian": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/CategoryTheory/FiberedCategory/Cartesian.lean"
    },
    ".lake.packages.mathlib.Mathlib.CategoryTheory.FiberedCategory.BasedCategory": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/CategoryTheory/FiberedCategory/BasedCategory.lean"
    },
    ".lake.packages.mathlib.Mathlib.CategoryTheory.FiberedCategory.Fibered": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/CategoryTheory/FiberedCategory/Fibered.lean"
    },
    ".lake.packages.mathlib.Mathlib.CategoryTheory.FiberedCategory.Grothendieck": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/CategoryTheory/FiberedCategory/Grothendieck.lean"
    },
    ".lake.packages.mathlib.Mathlib.CategoryTheory.FiberedCategory.HasFibers": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/CategoryTheory/FiberedCategory/HasFibers.lean"
    },
    ".lake.packages.mathlib.Mathlib.CategoryTheory.FiberedCategory.HomLift": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/CategoryTheory/FiberedCategory/HomLift.lean"
    },
    ".lake.packages.mathlib.Mathlib.CategoryTheory.Center.Linear": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/CategoryTheory/Center/Linear.lean"
    },
    ".lake.packages.mathlib.Mathlib.CategoryTheory.Center.Basic": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/CategoryTheory/Center/Basic.lean"
    },
    ".lake.packages.mathlib.Mathlib.CategoryTheory.Center.Localization": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/CategoryTheory/Center/Localization.lean"
    },
    ".lake.packages.mathlib.Mathlib.CategoryTheory.Linear.Yoneda": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/CategoryTheory/Linear/Yoneda.lean"
    },
    ".lake.packages.mathlib.Mathlib.CategoryTheory.Linear.LinearFunctor": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/CategoryTheory/Linear/LinearFunctor.lean"
    },
    ".lake.packages.mathlib.Mathlib.CategoryTheory.Linear.Basic": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/CategoryTheory/Linear/Basic.lean"
    },
    ".lake.packages.mathlib.Mathlib.CategoryTheory.Linear.FunctorCategory": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/CategoryTheory/Linear/FunctorCategory.lean"
    },
    ".lake.packages.mathlib.Mathlib.CategoryTheory.Discrete.Basic": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/CategoryTheory/Discrete/Basic.lean"
    },
    ".lake.packages.mathlib.Mathlib.CategoryTheory.Discrete.SumsProducts": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/CategoryTheory/Discrete/SumsProducts.lean"
    },
    ".lake.packages.mathlib.Mathlib.CategoryTheory.Idempotents.Biproducts": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/CategoryTheory/Idempotents/Biproducts.lean"
    },
    ".lake.packages.mathlib.Mathlib.CategoryTheory.Idempotents.HomologicalComplex": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/CategoryTheory/Idempotents/HomologicalComplex.lean"
    },
    ".lake.packages.mathlib.Mathlib.CategoryTheory.Idempotents.SimplicialObject": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/CategoryTheory/Idempotents/SimplicialObject.lean"
    },
    ".lake.packages.mathlib.Mathlib.CategoryTheory.Idempotents.FunctorExtension": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/CategoryTheory/Idempotents/FunctorExtension.lean"
    },
    ".lake.packages.mathlib.Mathlib.CategoryTheory.Idempotents.Karoubi": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/CategoryTheory/Idempotents/Karoubi.lean"
    },
    ".lake.packages.mathlib.Mathlib.CategoryTheory.Idempotents.Basic": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/CategoryTheory/Idempotents/Basic.lean"
    },
    ".lake.packages.mathlib.Mathlib.CategoryTheory.Idempotents.FunctorCategories": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/CategoryTheory/Idempotents/FunctorCategories.lean"
    },
    ".lake.packages.mathlib.Mathlib.CategoryTheory.Idempotents.KaroubiKaroubi": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/CategoryTheory/Idempotents/KaroubiKaroubi.lean"
    },
    ".lake.packages.mathlib.Mathlib.CategoryTheory.Shift.Opposite": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/CategoryTheory/Shift/Opposite.lean"
    },
    ".lake.packages.mathlib.Mathlib.CategoryTheory.Shift.CommShift": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/CategoryTheory/Shift/CommShift.lean"
    },
    ".lake.packages.mathlib.Mathlib.CategoryTheory.Shift.ShiftedHomOpposite": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/CategoryTheory/Shift/ShiftedHomOpposite.lean"
    },
    ".lake.packages.mathlib.Mathlib.CategoryTheory.Shift.SingleFunctors": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/CategoryTheory/Shift/SingleFunctors.lean"
    },
    ".lake.packages.mathlib.Mathlib.CategoryTheory.Shift.Linear": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/CategoryTheory/Shift/Linear.lean"
    },
    ".lake.packages.mathlib.Mathlib.CategoryTheory.Shift.Basic": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/CategoryTheory/Shift/Basic.lean"
    },
    ".lake.packages.mathlib.Mathlib.CategoryTheory.Shift.Quotient": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/CategoryTheory/Shift/Quotient.lean"
    },
    ".lake.packages.mathlib.Mathlib.CategoryTheory.Shift.ShiftSequence": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/CategoryTheory/Shift/ShiftSequence.lean"
    },
    ".lake.packages.mathlib.Mathlib.CategoryTheory.Shift.Localization": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/CategoryTheory/Shift/Localization.lean"
    },
    ".lake.packages.mathlib.Mathlib.CategoryTheory.Shift.Pullback": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/CategoryTheory/Shift/Pullback.lean"
    },
    ".lake.packages.mathlib.Mathlib.CategoryTheory.Shift.ShiftedHom": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/CategoryTheory/Shift/ShiftedHom.lean"
    },
    ".lake.packages.mathlib.Mathlib.CategoryTheory.Shift.Adjunction": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/CategoryTheory/Shift/Adjunction.lean"
    },
    ".lake.packages.mathlib.Mathlib.CategoryTheory.Shift.InducedShiftSequence": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/CategoryTheory/Shift/InducedShiftSequence.lean"
    },
    ".lake.packages.mathlib.Mathlib.CategoryTheory.Shift.Induced": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/CategoryTheory/Shift/Induced.lean"
    },
    ".lake.packages.mathlib.Mathlib.CategoryTheory.MorphismProperty.LiftingProperty": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/CategoryTheory/MorphismProperty/LiftingProperty.lean"
    },
    ".lake.packages.mathlib.Mathlib.CategoryTheory.MorphismProperty.IsInvertedBy": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/CategoryTheory/MorphismProperty/IsInvertedBy.lean"
    },
    ".lake.packages.mathlib.Mathlib.CategoryTheory.MorphismProperty.Retract": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/CategoryTheory/MorphismProperty/Retract.lean"
    },
    ".lake.packages.mathlib.Mathlib.CategoryTheory.MorphismProperty.Composition": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/CategoryTheory/MorphismProperty/Composition.lean"
    },
    ".lake.packages.mathlib.Mathlib.CategoryTheory.MorphismProperty.Comma": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/CategoryTheory/MorphismProperty/Comma.lean"
    },
    ".lake.packages.mathlib.Mathlib.CategoryTheory.MorphismProperty.Descent": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/CategoryTheory/MorphismProperty/Descent.lean"
    },
    ".lake.packages.mathlib.Mathlib.CategoryTheory.MorphismProperty.IsSmall": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/CategoryTheory/MorphismProperty/IsSmall.lean"
    },
    ".lake.packages.mathlib.Mathlib.CategoryTheory.MorphismProperty.Basic": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/CategoryTheory/MorphismProperty/Basic.lean"
    },
    ".lake.packages.mathlib.Mathlib.CategoryTheory.MorphismProperty.RetractArgument": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/CategoryTheory/MorphismProperty/RetractArgument.lean"
    },
    ".lake.packages.mathlib.Mathlib.CategoryTheory.MorphismProperty.Factorization": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/CategoryTheory/MorphismProperty/Factorization.lean"
    },
    ".lake.packages.mathlib.Mathlib.CategoryTheory.MorphismProperty.WeakFactorizationSystem": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/CategoryTheory/MorphismProperty/WeakFactorizationSystem.lean"
    },
    ".lake.packages.mathlib.Mathlib.CategoryTheory.MorphismProperty.Representable": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/CategoryTheory/MorphismProperty/Representable.lean"
    },
    ".lake.packages.mathlib.Mathlib.CategoryTheory.MorphismProperty.Limits": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/CategoryTheory/MorphismProperty/Limits.lean"
    },
    ".lake.packages.mathlib.Mathlib.CategoryTheory.MorphismProperty.TransfiniteComposition": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/CategoryTheory/MorphismProperty/TransfiniteComposition.lean"
    },
    ".lake.packages.mathlib.Mathlib.CategoryTheory.MorphismProperty.Concrete": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/CategoryTheory/MorphismProperty/Concrete.lean"
    },
    ".lake.packages.mathlib.Mathlib.CategoryTheory.MorphismProperty.FunctorCategory": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/CategoryTheory/MorphismProperty/FunctorCategory.lean"
    },
    ".lake.packages.mathlib.Mathlib.CategoryTheory.MorphismProperty.OverAdjunction": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/CategoryTheory/MorphismProperty/OverAdjunction.lean"
    },
    ".lake.packages.mathlib.Mathlib.CategoryTheory.SmallObject.TransfiniteCompositionLifting": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/CategoryTheory/SmallObject/TransfiniteCompositionLifting.lean"
    },
    ".lake.packages.mathlib.Mathlib.CategoryTheory.SmallObject.TransfiniteIteration": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/CategoryTheory/SmallObject/TransfiniteIteration.lean"
    },
    ".lake.packages.mathlib.Mathlib.CategoryTheory.SmallObject.Construction": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/CategoryTheory/SmallObject/Construction.lean"
    },
    ".lake.packages.mathlib.Mathlib.CategoryTheory.SmallObject.WellOrderInductionData": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/CategoryTheory/SmallObject/WellOrderInductionData.lean"
    },
    ".lake.packages.mathlib.Mathlib.CategoryTheory.SmallObject.Basic": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/CategoryTheory/SmallObject/Basic.lean"
    },
    ".lake.packages.mathlib.Mathlib.CategoryTheory.SmallObject.IsCardinalForSmallObjectArgument": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/CategoryTheory/SmallObject/IsCardinalForSmallObjectArgument.lean"
    },
    ".lake.packages.mathlib.Mathlib.CategoryTheory.SmallObject.Iteration.FunctorOfCocone": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/CategoryTheory/SmallObject/Iteration/FunctorOfCocone.lean"
    },
    ".lake.packages.mathlib.Mathlib.CategoryTheory.SmallObject.Iteration.Nonempty": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/CategoryTheory/SmallObject/Iteration/Nonempty.lean"
    },
    ".lake.packages.mathlib.Mathlib.CategoryTheory.SmallObject.Iteration.Basic": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/CategoryTheory/SmallObject/Iteration/Basic.lean"
    },
    ".lake.packages.mathlib.Mathlib.CategoryTheory.SmallObject.Iteration.ExtendToSucc": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/CategoryTheory/SmallObject/Iteration/ExtendToSucc.lean"
    },
    ".lake.packages.mathlib.Mathlib.CategoryTheory.EffectiveEpi.Extensive": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/CategoryTheory/EffectiveEpi/Extensive.lean"
    },
    ".lake.packages.mathlib.Mathlib.CategoryTheory.EffectiveEpi.Enough": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/CategoryTheory/EffectiveEpi/Enough.lean"
    },
    ".lake.packages.mathlib.Mathlib.CategoryTheory.EffectiveEpi.Comp": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/CategoryTheory/EffectiveEpi/Comp.lean"
    },
    ".lake.packages.mathlib.Mathlib.CategoryTheory.EffectiveEpi.Preserves": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/CategoryTheory/EffectiveEpi/Preserves.lean"
    },
    ".lake.packages.mathlib.Mathlib.CategoryTheory.EffectiveEpi.Basic": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/CategoryTheory/EffectiveEpi/Basic.lean"
    },
    ".lake.packages.mathlib.Mathlib.CategoryTheory.EffectiveEpi.RegularEpi": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/CategoryTheory/EffectiveEpi/RegularEpi.lean"
    },
    ".lake.packages.mathlib.Mathlib.CategoryTheory.EffectiveEpi.Coproduct": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/CategoryTheory/EffectiveEpi/Coproduct.lean"
    },
    ".lake.packages.mathlib.Mathlib.CategoryTheory.Limits.Yoneda": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/CategoryTheory/Limits/Yoneda.lean"
    },
    ".lake.packages.mathlib.Mathlib.CategoryTheory.Limits.FunctorToTypes": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/CategoryTheory/Limits/FunctorToTypes.lean"
    },
    ".lake.packages.mathlib.Mathlib.CategoryTheory.Limits.HasLimits": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/CategoryTheory/Limits/HasLimits.lean"
    },
    ".lake.packages.mathlib.Mathlib.CategoryTheory.Limits.ColimitLimit": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/CategoryTheory/Limits/ColimitLimit.lean"
    },
    ".lake.packages.mathlib.Mathlib.CategoryTheory.Limits.EssentiallySmall": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/CategoryTheory/Limits/EssentiallySmall.lean"
    },
    ".lake.packages.mathlib.Mathlib.CategoryTheory.Limits.FormalCoproducts": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/CategoryTheory/Limits/FormalCoproducts.lean"
    },
    ".lake.packages.mathlib.Mathlib.CategoryTheory.Limits.EpiMono": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/CategoryTheory/Limits/EpiMono.lean"
    },
    ".lake.packages.mathlib.Mathlib.CategoryTheory.Limits.Fubini": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/CategoryTheory/Limits/Fubini.lean"
    },
    ".lake.packages.mathlib.Mathlib.CategoryTheory.Limits.IndYoneda": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/CategoryTheory/Limits/IndYoneda.lean"
    },
    ".lake.packages.mathlib.Mathlib.CategoryTheory.Limits.Sifted": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/CategoryTheory/Limits/Sifted.lean"
    },
    ".lake.packages.mathlib.Mathlib.CategoryTheory.Limits.Filtered": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/CategoryTheory/Limits/Filtered.lean"
    },
    ".lake.packages.mathlib.Mathlib.CategoryTheory.Limits.Unit": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/CategoryTheory/Limits/Unit.lean"
    },
    ".lake.packages.mathlib.Mathlib.CategoryTheory.Limits.Presheaf": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/CategoryTheory/Limits/Presheaf.lean"
    },
    ".lake.packages.mathlib.Mathlib.CategoryTheory.Limits.FilteredColimitCommutesFiniteLimit": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/CategoryTheory/Limits/FilteredColimitCommutesFiniteLimit.lean"
    },
    ".lake.packages.mathlib.Mathlib.CategoryTheory.Limits.Cones": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/CategoryTheory/Limits/Cones.lean"
    },
    ".lake.packages.mathlib.Mathlib.CategoryTheory.Limits.Final": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/CategoryTheory/Limits/Final.lean"
    },
    ".lake.packages.mathlib.Mathlib.CategoryTheory.Limits.Comma": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/CategoryTheory/Limits/Comma.lean"
    },
    ".lake.packages.mathlib.Mathlib.CategoryTheory.Limits.Over": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/CategoryTheory/Limits/Over.lean"
    },
    ".lake.packages.mathlib.Mathlib.CategoryTheory.Limits.SmallComplete": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/CategoryTheory/Limits/SmallComplete.lean"
    },
    ".lake.packages.mathlib.Mathlib.CategoryTheory.Limits.MonoCoprod": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/CategoryTheory/Limits/MonoCoprod.lean"
    },
    ".lake.packages.mathlib.Mathlib.CategoryTheory.Limits.Pi": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/CategoryTheory/Limits/Pi.lean"
    },
    ".lake.packages.mathlib.Mathlib.CategoryTheory.Limits.ConeCategory": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/CategoryTheory/Limits/ConeCategory.lean"
    },
    ".lake.packages.mathlib.Mathlib.CategoryTheory.Limits.FullSubcategory": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/CategoryTheory/Limits/FullSubcategory.lean"
    },
    ".lake.packages.mathlib.Mathlib.CategoryTheory.Limits.Creates": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/CategoryTheory/Limits/Creates.lean"
    },
    ".lake.packages.mathlib.Mathlib.CategoryTheory.Limits.ExactFunctor": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/CategoryTheory/Limits/ExactFunctor.lean"
    },
    ".lake.packages.mathlib.Mathlib.CategoryTheory.Limits.Set": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/CategoryTheory/Limits/Set.lean"
    },
    ".lake.packages.mathlib.Mathlib.CategoryTheory.Limits.FinallySmall": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/CategoryTheory/Limits/FinallySmall.lean"
    },
    ".lake.packages.mathlib.Mathlib.CategoryTheory.Limits.MorphismProperty": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/CategoryTheory/Limits/MorphismProperty.lean"
    },
    ".lake.packages.mathlib.Mathlib.CategoryTheory.Limits.Opposites": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/CategoryTheory/Limits/Opposites.lean"
    },
    ".lake.packages.mathlib.Mathlib.CategoryTheory.Limits.Connected": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/CategoryTheory/Limits/Connected.lean"
    },
    ".lake.packages.mathlib.Mathlib.CategoryTheory.Limits.IsLimit": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/CategoryTheory/Limits/IsLimit.lean"
    },
    ".lake.packages.mathlib.Mathlib.CategoryTheory.Limits.VanKampen": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/CategoryTheory/Limits/VanKampen.lean"
    },
    ".lake.packages.mathlib.Mathlib.CategoryTheory.Limits.Bicones": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/CategoryTheory/Limits/Bicones.lean"
    },
    ".lake.packages.mathlib.Mathlib.CategoryTheory.Limits.Lattice": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/CategoryTheory/Limits/Lattice.lean"
    },
    ".lake.packages.mathlib.Mathlib.CategoryTheory.Limits.IsConnected": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/CategoryTheory/Limits/IsConnected.lean"
    },
    ".lake.packages.mathlib.Mathlib.CategoryTheory.Limits.Preorder": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/CategoryTheory/Limits/Preorder.lean"
    },
    ".lake.packages.mathlib.Mathlib.CategoryTheory.Limits.FilteredColimitCommutesProduct": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/CategoryTheory/Limits/FilteredColimitCommutesProduct.lean"
    },
    ".lake.packages.mathlib.Mathlib.CategoryTheory.Limits.Elements": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/CategoryTheory/Limits/Elements.lean"
    },
    ".lake.packages.mathlib.Mathlib.CategoryTheory.Limits.FintypeCat": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/CategoryTheory/Limits/FintypeCat.lean"
    },
    ".lake.packages.mathlib.Mathlib.CategoryTheory.Limits.FunctorCategory.Finite": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/CategoryTheory/Limits/FunctorCategory/Finite.lean"
    },
    ".lake.packages.mathlib.Mathlib.CategoryTheory.Limits.FunctorCategory.EpiMono": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/CategoryTheory/Limits/FunctorCategory/EpiMono.lean"
    },
    ".lake.packages.mathlib.Mathlib.CategoryTheory.Limits.FunctorCategory.Filtered": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/CategoryTheory/Limits/FunctorCategory/Filtered.lean"
    },
    ".lake.packages.mathlib.Mathlib.CategoryTheory.Limits.FunctorCategory.Basic": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/CategoryTheory/Limits/FunctorCategory/Basic.lean"
    },
    ".lake.packages.mathlib.Mathlib.CategoryTheory.Limits.FunctorCategory.Shapes.Products": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/CategoryTheory/Limits/FunctorCategory/Shapes/Products.lean"
    },
    ".lake.packages.mathlib.Mathlib.CategoryTheory.Limits.FunctorCategory.Shapes.Pullbacks": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/CategoryTheory/Limits/FunctorCategory/Shapes/Pullbacks.lean"
    },
    ".lake.packages.mathlib.Mathlib.CategoryTheory.Limits.Types.Shapes": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/CategoryTheory/Limits/Types/Shapes.lean"
    },
    ".lake.packages.mathlib.Mathlib.CategoryTheory.Limits.Types.Yoneda": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/CategoryTheory/Limits/Types/Yoneda.lean"
    },
    ".lake.packages.mathlib.Mathlib.CategoryTheory.Limits.Types.Filtered": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/CategoryTheory/Limits/Types/Filtered.lean"
    },
    ".lake.packages.mathlib.Mathlib.CategoryTheory.Limits.Types.ColimitType": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/CategoryTheory/Limits/Types/ColimitType.lean"
    },
    ".lake.packages.mathlib.Mathlib.CategoryTheory.Limits.Types.Colimits": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/CategoryTheory/Limits/Types/Colimits.lean"
    },
    ".lake.packages.mathlib.Mathlib.CategoryTheory.Limits.Types.Limits": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/CategoryTheory/Limits/Types/Limits.lean"
    },
    ".lake.packages.mathlib.Mathlib.CategoryTheory.Limits.Types.Images": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/CategoryTheory/Limits/Types/Images.lean"
    },
    ".lake.packages.mathlib.Mathlib.CategoryTheory.Limits.Constructions.FiniteProductsOfBinaryProducts": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/CategoryTheory/Limits/Constructions/FiniteProductsOfBinaryProducts.lean"
    },
    ".lake.packages.mathlib.Mathlib.CategoryTheory.Limits.Constructions.EpiMono": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/CategoryTheory/Limits/Constructions/EpiMono.lean"
    },
    ".lake.packages.mathlib.Mathlib.CategoryTheory.Limits.Constructions.EventuallyConstant": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/CategoryTheory/Limits/Constructions/EventuallyConstant.lean"
    },
    ".lake.packages.mathlib.Mathlib.CategoryTheory.Limits.Constructions.Filtered": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/CategoryTheory/Limits/Constructions/Filtered.lean"
    },
    ".lake.packages.mathlib.Mathlib.CategoryTheory.Limits.Constructions.LimitsOfProductsAndEqualizers": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/CategoryTheory/Limits/Constructions/LimitsOfProductsAndEqualizers.lean"
    },
    ".lake.packages.mathlib.Mathlib.CategoryTheory.Limits.Constructions.Equalizers": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/CategoryTheory/Limits/Constructions/Equalizers.lean"
    },
    ".lake.packages.mathlib.Mathlib.CategoryTheory.Limits.Constructions.ZeroObjects": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/CategoryTheory/Limits/Constructions/ZeroObjects.lean"
    },
    ".lake.packages.mathlib.Mathlib.CategoryTheory.Limits.Constructions.WeaklyInitial": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/CategoryTheory/Limits/Constructions/WeaklyInitial.lean"
    },
    ".lake.packages.mathlib.Mathlib.CategoryTheory.Limits.Constructions.BinaryProducts": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/CategoryTheory/Limits/Constructions/BinaryProducts.lean"
    },
    ".lake.packages.mathlib.Mathlib.CategoryTheory.Limits.Constructions.Pullbacks": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/CategoryTheory/Limits/Constructions/Pullbacks.lean"
    },
    ".lake.packages.mathlib.Mathlib.CategoryTheory.Limits.Constructions.Over.Products": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/CategoryTheory/Limits/Constructions/Over/Products.lean"
    },
    ".lake.packages.mathlib.Mathlib.CategoryTheory.Limits.Constructions.Over.Basic": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/CategoryTheory/Limits/Constructions/Over/Basic.lean"
    },
    ".lake.packages.mathlib.Mathlib.CategoryTheory.Limits.Constructions.Over.Connected": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/CategoryTheory/Limits/Constructions/Over/Connected.lean"
    },
    ".lake.packages.mathlib.Mathlib.CategoryTheory.Limits.Indization.IndObject": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/CategoryTheory/Limits/Indization/IndObject.lean"
    },
    ".lake.packages.mathlib.Mathlib.CategoryTheory.Limits.Indization.Category": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/CategoryTheory/Limits/Indization/Category.lean"
    },
    ".lake.packages.mathlib.Mathlib.CategoryTheory.Limits.Indization.LocallySmall": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/CategoryTheory/Limits/Indization/LocallySmall.lean"
    },
    ".lake.packages.mathlib.Mathlib.CategoryTheory.Limits.Indization.Products": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/CategoryTheory/Limits/Indization/Products.lean"
    },
    ".lake.packages.mathlib.Mathlib.CategoryTheory.Limits.Indization.Equalizers": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/CategoryTheory/Limits/Indization/Equalizers.lean"
    },
    ".lake.packages.mathlib.Mathlib.CategoryTheory.Limits.Indization.FilteredColimits": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/CategoryTheory/Limits/Indization/FilteredColimits.lean"
    },
    ".lake.packages.mathlib.Mathlib.CategoryTheory.Limits.Indization.ParallelPair": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/CategoryTheory/Limits/Indization/ParallelPair.lean"
    },
    ".lake.packages.mathlib.Mathlib.CategoryTheory.Limits.Shapes.Biproducts": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/CategoryTheory/Limits/Shapes/Biproducts.lean"
    },
    ".lake.packages.mathlib.Mathlib.CategoryTheory.Limits.Shapes.FunctorToTypes": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/CategoryTheory/Limits/Shapes/FunctorToTypes.lean"
    },
    ".lake.packages.mathlib.Mathlib.CategoryTheory.Limits.Shapes.IsTerminal": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/CategoryTheory/Limits/Shapes/IsTerminal.lean"
    },
    ".lake.packages.mathlib.Mathlib.CategoryTheory.Limits.Shapes.StrictInitial": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/CategoryTheory/Limits/Shapes/StrictInitial.lean"
    },
    ".lake.packages.mathlib.Mathlib.CategoryTheory.Limits.Shapes.Reflexive": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/CategoryTheory/Limits/Shapes/Reflexive.lean"
    },
    ".lake.packages.mathlib.Mathlib.CategoryTheory.Limits.Shapes.SequentialProduct": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/CategoryTheory/Limits/Shapes/SequentialProduct.lean"
    },
    ".lake.packages.mathlib.Mathlib.CategoryTheory.Limits.Shapes.StrongEpi": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/CategoryTheory/Limits/Shapes/StrongEpi.lean"
    },
    ".lake.packages.mathlib.Mathlib.CategoryTheory.Limits.Shapes.PiProd": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/CategoryTheory/Limits/Shapes/PiProd.lean"
    },
    ".lake.packages.mathlib.Mathlib.CategoryTheory.Limits.Shapes.Diagonal": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/CategoryTheory/Limits/Shapes/Diagonal.lean"
    },
    ".lake.packages.mathlib.Mathlib.CategoryTheory.Limits.Shapes.Products": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/CategoryTheory/Limits/Shapes/Products.lean"
    },
    ".lake.packages.mathlib.Mathlib.CategoryTheory.Limits.Shapes.RegularMono": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/CategoryTheory/Limits/Shapes/RegularMono.lean"
    },
    ".lake.packages.mathlib.Mathlib.CategoryTheory.Limits.Shapes.Terminal": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/CategoryTheory/Limits/Shapes/Terminal.lean"
    },
    ".lake.packages.mathlib.Mathlib.CategoryTheory.Limits.Shapes.SplitCoequalizer": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/CategoryTheory/Limits/Shapes/SplitCoequalizer.lean"
    },
    ".lake.packages.mathlib.Mathlib.CategoryTheory.Limits.Shapes.ZeroMorphisms": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/CategoryTheory/Limits/Shapes/ZeroMorphisms.lean"
    },
    ".lake.packages.mathlib.Mathlib.CategoryTheory.Limits.Shapes.Equalizers": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/CategoryTheory/Limits/Shapes/Equalizers.lean"
    },
    ".lake.packages.mathlib.Mathlib.CategoryTheory.Limits.Shapes.WidePullbacks": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/CategoryTheory/Limits/Shapes/WidePullbacks.lean"
    },
    ".lake.packages.mathlib.Mathlib.CategoryTheory.Limits.Shapes.End": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/CategoryTheory/Limits/Shapes/End.lean"
    },
    ".lake.packages.mathlib.Mathlib.CategoryTheory.Limits.Shapes.BinaryBiproducts": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/CategoryTheory/Limits/Shapes/BinaryBiproducts.lean"
    },
    ".lake.packages.mathlib.Mathlib.CategoryTheory.Limits.Shapes.Kernels": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/CategoryTheory/Limits/Shapes/Kernels.lean"
    },
    ".lake.packages.mathlib.Mathlib.CategoryTheory.Limits.Shapes.KernelPair": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/CategoryTheory/Limits/Shapes/KernelPair.lean"
    },
    ".lake.packages.mathlib.Mathlib.CategoryTheory.Limits.Shapes.ZeroObjects": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/CategoryTheory/Limits/Shapes/ZeroObjects.lean"
    },
    ".lake.packages.mathlib.Mathlib.CategoryTheory.Limits.Shapes.MultiequalizerPullback": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/CategoryTheory/Limits/Shapes/MultiequalizerPullback.lean"
    },
    ".lake.packages.mathlib.Mathlib.CategoryTheory.Limits.Shapes.SingleObj": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/CategoryTheory/Limits/Shapes/SingleObj.lean"
    },
    ".lake.packages.mathlib.Mathlib.CategoryTheory.Limits.Shapes.FiniteLimits": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/CategoryTheory/Limits/Shapes/FiniteLimits.lean"
    },
    ".lake.packages.mathlib.Mathlib.CategoryTheory.Limits.Shapes.Grothendieck": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/CategoryTheory/Limits/Shapes/Grothendieck.lean"
    },
    ".lake.packages.mathlib.Mathlib.CategoryTheory.Limits.Shapes.Connected": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/CategoryTheory/Limits/Shapes/Connected.lean"
    },
    ".lake.packages.mathlib.Mathlib.CategoryTheory.Limits.Shapes.SplitEqualizer": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/CategoryTheory/Limits/Shapes/SplitEqualizer.lean"
    },
    ".lake.packages.mathlib.Mathlib.CategoryTheory.Limits.Shapes.Multiequalizer": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/CategoryTheory/Limits/Shapes/Multiequalizer.lean"
    },
    ".lake.packages.mathlib.Mathlib.CategoryTheory.Limits.Shapes.CombinedProducts": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/CategoryTheory/Limits/Shapes/CombinedProducts.lean"
    },
    ".lake.packages.mathlib.Mathlib.CategoryTheory.Limits.Shapes.FiniteProducts": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/CategoryTheory/Limits/Shapes/FiniteProducts.lean"
    },
    ".lake.packages.mathlib.Mathlib.CategoryTheory.Limits.Shapes.Equivalence": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/CategoryTheory/Limits/Shapes/Equivalence.lean"
    },
    ".lake.packages.mathlib.Mathlib.CategoryTheory.Limits.Shapes.WideEqualizers": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/CategoryTheory/Limits/Shapes/WideEqualizers.lean"
    },
    ".lake.packages.mathlib.Mathlib.CategoryTheory.Limits.Shapes.Images": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/CategoryTheory/Limits/Shapes/Images.lean"
    },
    ".lake.packages.mathlib.Mathlib.CategoryTheory.Limits.Shapes.BinaryProducts": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/CategoryTheory/Limits/Shapes/BinaryProducts.lean"
    },
    ".lake.packages.mathlib.Mathlib.CategoryTheory.Limits.Shapes.DisjointCoproduct": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/CategoryTheory/Limits/Shapes/DisjointCoproduct.lean"
    },
    ".lake.packages.mathlib.Mathlib.CategoryTheory.Limits.Shapes.ConcreteCategory": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/CategoryTheory/Limits/Shapes/ConcreteCategory.lean"
    },
    ".lake.packages.mathlib.Mathlib.CategoryTheory.Limits.Shapes.FiniteMultiequalizer": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/CategoryTheory/Limits/Shapes/FiniteMultiequalizer.lean"
    },
    ".lake.packages.mathlib.Mathlib.CategoryTheory.Limits.Shapes.Countable": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/CategoryTheory/Limits/Shapes/Countable.lean"
    },
    ".lake.packages.mathlib.Mathlib.CategoryTheory.Limits.Shapes.Preorder.Fin": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/CategoryTheory/Limits/Shapes/Preorder/Fin.lean"
    },
    ".lake.packages.mathlib.Mathlib.CategoryTheory.Limits.Shapes.Preorder.PrincipalSeg": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/CategoryTheory/Limits/Shapes/Preorder/PrincipalSeg.lean"
    },
    ".lake.packages.mathlib.Mathlib.CategoryTheory.Limits.Shapes.Preorder.Basic": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/CategoryTheory/Limits/Shapes/Preorder/Basic.lean"
    },
    ".lake.packages.mathlib.Mathlib.CategoryTheory.Limits.Shapes.Preorder.TransfiniteCompositionOfShape": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/CategoryTheory/Limits/Shapes/Preorder/TransfiniteCompositionOfShape.lean"
    },
    ".lake.packages.mathlib.Mathlib.CategoryTheory.Limits.Shapes.Preorder.HasIterationOfShape": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/CategoryTheory/Limits/Shapes/Preorder/HasIterationOfShape.lean"
    },
    ".lake.packages.mathlib.Mathlib.CategoryTheory.Limits.Shapes.Preorder.WellOrderContinuous": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/CategoryTheory/Limits/Shapes/Preorder/WellOrderContinuous.lean"
    },
    ".lake.packages.mathlib.Mathlib.CategoryTheory.Limits.Shapes.NormalMono.Basic": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/CategoryTheory/Limits/Shapes/NormalMono/Basic.lean"
    },
    ".lake.packages.mathlib.Mathlib.CategoryTheory.Limits.Shapes.NormalMono.Equalizers": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/CategoryTheory/Limits/Shapes/NormalMono/Equalizers.lean"
    },
    ".lake.packages.mathlib.Mathlib.CategoryTheory.Limits.Shapes.Pullback.HasPullback": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/CategoryTheory/Limits/Shapes/Pullback/HasPullback.lean"
    },
    ".lake.packages.mathlib.Mathlib.CategoryTheory.Limits.Shapes.Pullback.Assoc": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/CategoryTheory/Limits/Shapes/Pullback/Assoc.lean"
    },
    ".lake.packages.mathlib.Mathlib.CategoryTheory.Limits.Shapes.Pullback.PullbackCone": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/CategoryTheory/Limits/Shapes/Pullback/PullbackCone.lean"
    },
    ".lake.packages.mathlib.Mathlib.CategoryTheory.Limits.Shapes.Pullback.Square": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/CategoryTheory/Limits/Shapes/Pullback/Square.lean"
    },
    ".lake.packages.mathlib.Mathlib.CategoryTheory.Limits.Shapes.Pullback.Pasting": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/CategoryTheory/Limits/Shapes/Pullback/Pasting.lean"
    },
    ".lake.packages.mathlib.Mathlib.CategoryTheory.Limits.Shapes.Pullback.Mono": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/CategoryTheory/Limits/Shapes/Pullback/Mono.lean"
    },
    ".lake.packages.mathlib.Mathlib.CategoryTheory.Limits.Shapes.Pullback.Cospan": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/CategoryTheory/Limits/Shapes/Pullback/Cospan.lean"
    },
    ".lake.packages.mathlib.Mathlib.CategoryTheory.Limits.Shapes.Pullback.Iso": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/CategoryTheory/Limits/Shapes/Pullback/Iso.lean"
    },
    ".lake.packages.mathlib.Mathlib.CategoryTheory.Limits.Shapes.Pullback.Equalizer": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/CategoryTheory/Limits/Shapes/Pullback/Equalizer.lean"
    },
    ".lake.packages.mathlib.Mathlib.CategoryTheory.Limits.Shapes.Pullback.CommSq": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/CategoryTheory/Limits/Shapes/Pullback/CommSq.lean"
    },
    ".lake.packages.mathlib.Mathlib.CategoryTheory.Limits.Shapes.Pullback.Categorical.Basic": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/CategoryTheory/Limits/Shapes/Pullback/Categorical/Basic.lean"
    },
    ".lake.packages.mathlib.Mathlib.CategoryTheory.Limits.Shapes.Pullback.Categorical.CatCospanTransform": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/CategoryTheory/Limits/Shapes/Pullback/Categorical/CatCospanTransform.lean"
    },
    ".lake.packages.mathlib.Mathlib.CategoryTheory.Limits.ConcreteCategory.WithAlgebraicStructures": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/CategoryTheory/Limits/ConcreteCategory/WithAlgebraicStructures.lean"
    },
    ".lake.packages.mathlib.Mathlib.CategoryTheory.Limits.ConcreteCategory.Basic": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/CategoryTheory/Limits/ConcreteCategory/Basic.lean"
    },
    ".lake.packages.mathlib.Mathlib.CategoryTheory.Limits.Final.ParallelPair": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/CategoryTheory/Limits/Final/ParallelPair.lean"
    },
    ".lake.packages.mathlib.Mathlib.CategoryTheory.Limits.Preserves.Yoneda": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/CategoryTheory/Limits/Preserves/Yoneda.lean"
    },
    ".lake.packages.mathlib.Mathlib.CategoryTheory.Limits.Preserves.Finite": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/CategoryTheory/Limits/Preserves/Finite.lean"
    },
    ".lake.packages.mathlib.Mathlib.CategoryTheory.Limits.Preserves.Filtered": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/CategoryTheory/Limits/Preserves/Filtered.lean"
    },
    ".lake.packages.mathlib.Mathlib.CategoryTheory.Limits.Preserves.Presheaf": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/CategoryTheory/Limits/Preserves/Presheaf.lean"
    },
    ".lake.packages.mathlib.Mathlib.CategoryTheory.Limits.Preserves.Over": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/CategoryTheory/Limits/Preserves/Over.lean"
    },
    ".lake.packages.mathlib.Mathlib.CategoryTheory.Limits.Preserves.Bifunctor": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/CategoryTheory/Limits/Preserves/Bifunctor.lean"
    },
    ".lake.packages.mathlib.Mathlib.CategoryTheory.Limits.Preserves.Basic": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/CategoryTheory/Limits/Preserves/Basic.lean"
    },
    ".lake.packages.mathlib.Mathlib.CategoryTheory.Limits.Preserves.Ulift": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/CategoryTheory/Limits/Preserves/Ulift.lean"
    },
    ".lake.packages.mathlib.Mathlib.CategoryTheory.Limits.Preserves.Opposites": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/CategoryTheory/Limits/Preserves/Opposites.lean"
    },
    ".lake.packages.mathlib.Mathlib.CategoryTheory.Limits.Preserves.Grothendieck": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/CategoryTheory/Limits/Preserves/Grothendieck.lean"
    },
    ".lake.packages.mathlib.Mathlib.CategoryTheory.Limits.Preserves.Limits": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/CategoryTheory/Limits/Preserves/Limits.lean"
    },
    ".lake.packages.mathlib.Mathlib.CategoryTheory.Limits.Preserves.FunctorCategory": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/CategoryTheory/Limits/Preserves/FunctorCategory.lean"
    },
    ".lake.packages.mathlib.Mathlib.CategoryTheory.Limits.Preserves.Creates.Finite": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/CategoryTheory/Limits/Preserves/Creates/Finite.lean"
    },
    ".lake.packages.mathlib.Mathlib.CategoryTheory.Limits.Preserves.Shapes.Biproducts": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/CategoryTheory/Limits/Preserves/Shapes/Biproducts.lean"
    },
    ".lake.packages.mathlib.Mathlib.CategoryTheory.Limits.Preserves.Shapes.Products": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/CategoryTheory/Limits/Preserves/Shapes/Products.lean"
    },
    ".lake.packages.mathlib.Mathlib.CategoryTheory.Limits.Preserves.Shapes.Terminal": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/CategoryTheory/Limits/Preserves/Shapes/Terminal.lean"
    },
    ".lake.packages.mathlib.Mathlib.CategoryTheory.Limits.Preserves.Shapes.Equalizers": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/CategoryTheory/Limits/Preserves/Shapes/Equalizers.lean"
    },
    ".lake.packages.mathlib.Mathlib.CategoryTheory.Limits.Preserves.Shapes.Kernels": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/CategoryTheory/Limits/Preserves/Shapes/Kernels.lean"
    },
    ".lake.packages.mathlib.Mathlib.CategoryTheory.Limits.Preserves.Shapes.Square": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/CategoryTheory/Limits/Preserves/Shapes/Square.lean"
    },
    ".lake.packages.mathlib.Mathlib.CategoryTheory.Limits.Preserves.Shapes.Multiequalizer": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/CategoryTheory/Limits/Preserves/Shapes/Multiequalizer.lean"
    },
    ".lake.packages.mathlib.Mathlib.CategoryTheory.Limits.Preserves.Shapes.Preorder": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/CategoryTheory/Limits/Preserves/Shapes/Preorder.lean"
    },
    ".lake.packages.mathlib.Mathlib.CategoryTheory.Limits.Preserves.Shapes.Images": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/CategoryTheory/Limits/Preserves/Shapes/Images.lean"
    },
    ".lake.packages.mathlib.Mathlib.CategoryTheory.Limits.Preserves.Shapes.AbelianImages": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/CategoryTheory/Limits/Preserves/Shapes/AbelianImages.lean"
    },
    ".lake.packages.mathlib.Mathlib.CategoryTheory.Limits.Preserves.Shapes.BinaryProducts": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/CategoryTheory/Limits/Preserves/Shapes/BinaryProducts.lean"
    },
    ".lake.packages.mathlib.Mathlib.CategoryTheory.Limits.Preserves.Shapes.Zero": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/CategoryTheory/Limits/Preserves/Shapes/Zero.lean"
    },
    ".lake.packages.mathlib.Mathlib.CategoryTheory.Limits.Preserves.Shapes.Pullbacks": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/CategoryTheory/Limits/Preserves/Shapes/Pullbacks.lean"
    },
    ".lake.packages.mathlib.Mathlib.CategoryTheory.Comma.CardinalArrow": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/CategoryTheory/Comma/CardinalArrow.lean"
    },
    ".lake.packages.mathlib.Mathlib.CategoryTheory.Comma.LocallySmall": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/CategoryTheory/Comma/LocallySmall.lean"
    },
    ".lake.packages.mathlib.Mathlib.CategoryTheory.Comma.Final": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/CategoryTheory/Comma/Final.lean"
    },
    ".lake.packages.mathlib.Mathlib.CategoryTheory.Comma.Basic": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/CategoryTheory/Comma/Basic.lean"
    },
    ".lake.packages.mathlib.Mathlib.CategoryTheory.Comma.Arrow": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/CategoryTheory/Comma/Arrow.lean"
    },
    ".lake.packages.mathlib.Mathlib.CategoryTheory.Comma.StructuredArrow.Final": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/CategoryTheory/Comma/StructuredArrow/Final.lean"
    },
    ".lake.packages.mathlib.Mathlib.CategoryTheory.Comma.StructuredArrow.Basic": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/CategoryTheory/Comma/StructuredArrow/Basic.lean"
    },
    ".lake.packages.mathlib.Mathlib.CategoryTheory.Comma.StructuredArrow.Functor": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/CategoryTheory/Comma/StructuredArrow/Functor.lean"
    },
    ".lake.packages.mathlib.Mathlib.CategoryTheory.Comma.StructuredArrow.Small": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/CategoryTheory/Comma/StructuredArrow/Small.lean"
    },
    ".lake.packages.mathlib.Mathlib.CategoryTheory.Comma.StructuredArrow.CommaMap": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/CategoryTheory/Comma/StructuredArrow/CommaMap.lean"
    },
    ".lake.packages.mathlib.Mathlib.CategoryTheory.Comma.Over.Basic": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/CategoryTheory/Comma/Over/Basic.lean"
    },
    ".lake.packages.mathlib.Mathlib.CategoryTheory.Comma.Over.OverClass": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/CategoryTheory/Comma/Over/OverClass.lean"
    },
    ".lake.packages.mathlib.Mathlib.CategoryTheory.Comma.Over.Pullback": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/CategoryTheory/Comma/Over/Pullback.lean"
    },
    ".lake.packages.mathlib.Mathlib.CategoryTheory.Comma.Presheaf.Colimit": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/CategoryTheory/Comma/Presheaf/Colimit.lean"
    },
    ".lake.packages.mathlib.Mathlib.CategoryTheory.Comma.Presheaf.Basic": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/CategoryTheory/Comma/Presheaf/Basic.lean"
    },
    ".lake.packages.mathlib.Mathlib.CategoryTheory.ConcreteCategory.EpiMono": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/CategoryTheory/ConcreteCategory/EpiMono.lean"
    },
    ".lake.packages.mathlib.Mathlib.CategoryTheory.ConcreteCategory.ReflectsIso": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/CategoryTheory/ConcreteCategory/ReflectsIso.lean"
    },
    ".lake.packages.mathlib.Mathlib.CategoryTheory.ConcreteCategory.Elementwise": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/CategoryTheory/ConcreteCategory/Elementwise.lean"
    },
    ".lake.packages.mathlib.Mathlib.CategoryTheory.ConcreteCategory.Basic": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/CategoryTheory/ConcreteCategory/Basic.lean"
    },
    ".lake.packages.mathlib.Mathlib.CategoryTheory.ConcreteCategory.Bundled": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/CategoryTheory/ConcreteCategory/Bundled.lean"
    },
    ".lake.packages.mathlib.Mathlib.CategoryTheory.ConcreteCategory.UnbundledHom": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/CategoryTheory/ConcreteCategory/UnbundledHom.lean"
    },
    ".lake.packages.mathlib.Mathlib.CategoryTheory.ConcreteCategory.BundledHom": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/CategoryTheory/ConcreteCategory/BundledHom.lean"
    },
    ".lake.packages.mathlib.Mathlib.CategoryTheory.Closed.FunctorToTypes": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/CategoryTheory/Closed/FunctorToTypes.lean"
    },
    ".lake.packages.mathlib.Mathlib.CategoryTheory.Closed.Monoidal": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/CategoryTheory/Closed/Monoidal.lean"
    },
    ".lake.packages.mathlib.Mathlib.CategoryTheory.Closed.Enrichment": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/CategoryTheory/Closed/Enrichment.lean"
    },
    ".lake.packages.mathlib.Mathlib.CategoryTheory.Closed.Cartesian": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/CategoryTheory/Closed/Cartesian.lean"
    },
    ".lake.packages.mathlib.Mathlib.CategoryTheory.Closed.Ideal": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/CategoryTheory/Closed/Ideal.lean"
    },
    ".lake.packages.mathlib.Mathlib.CategoryTheory.Closed.Functor": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/CategoryTheory/Closed/Functor.lean"
    },
    ".lake.packages.mathlib.Mathlib.CategoryTheory.Closed.Types": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/CategoryTheory/Closed/Types.lean"
    },
    ".lake.packages.mathlib.Mathlib.CategoryTheory.Closed.Zero": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/CategoryTheory/Closed/Zero.lean"
    },
    ".lake.packages.mathlib.Mathlib.CategoryTheory.Closed.FunctorCategory.Complete": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/CategoryTheory/Closed/FunctorCategory/Complete.lean"
    },
    ".lake.packages.mathlib.Mathlib.CategoryTheory.Closed.FunctorCategory.Groupoid": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/CategoryTheory/Closed/FunctorCategory/Groupoid.lean"
    },
    ".lake.packages.mathlib.Mathlib.CategoryTheory.Closed.FunctorCategory.Basic": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/CategoryTheory/Closed/FunctorCategory/Basic.lean"
    },
    ".lake.packages.mathlib.Mathlib.CategoryTheory.Topos.Classifier": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/CategoryTheory/Topos/Classifier.lean"
    },
    ".lake.packages.mathlib.Mathlib.CategoryTheory.WithTerminal.Cone": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/CategoryTheory/WithTerminal/Cone.lean"
    },
    ".lake.packages.mathlib.Mathlib.CategoryTheory.WithTerminal.Basic": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/CategoryTheory/WithTerminal/Basic.lean"
    },
    ".lake.packages.mathlib.Mathlib.CategoryTheory.WithTerminal.FinCategory": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/CategoryTheory/WithTerminal/FinCategory.lean"
    },
    ".lake.packages.mathlib.Mathlib.CategoryTheory.Filtered.Flat": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/CategoryTheory/Filtered/Flat.lean"
    },
    ".lake.packages.mathlib.Mathlib.CategoryTheory.Filtered.Final": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/CategoryTheory/Filtered/Final.lean"
    },
    ".lake.packages.mathlib.Mathlib.CategoryTheory.Filtered.OfColimitCommutesFiniteLimit": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/CategoryTheory/Filtered/OfColimitCommutesFiniteLimit.lean"
    },
    ".lake.packages.mathlib.Mathlib.CategoryTheory.Filtered.Basic": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/CategoryTheory/Filtered/Basic.lean"
    },
    ".lake.packages.mathlib.Mathlib.CategoryTheory.Filtered.Small": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/CategoryTheory/Filtered/Small.lean"
    },
    ".lake.packages.mathlib.Mathlib.CategoryTheory.Filtered.Grothendieck": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/CategoryTheory/Filtered/Grothendieck.lean"
    },
    ".lake.packages.mathlib.Mathlib.CategoryTheory.Filtered.Connected": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/CategoryTheory/Filtered/Connected.lean"
    },
    ".lake.packages.mathlib.Mathlib.CategoryTheory.Filtered.CostructuredArrow": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/CategoryTheory/Filtered/CostructuredArrow.lean"
    },
    ".lake.packages.mathlib.Mathlib.CategoryTheory.Sigma.Basic": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/CategoryTheory/Sigma/Basic.lean"
    },
    ".lake.packages.mathlib.Mathlib.CategoryTheory.Generator.HomologicalComplex": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/CategoryTheory/Generator/HomologicalComplex.lean"
    },
    ".lake.packages.mathlib.Mathlib.CategoryTheory.Generator.Abelian": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/CategoryTheory/Generator/Abelian.lean"
    },
    ".lake.packages.mathlib.Mathlib.CategoryTheory.Generator.Presheaf": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/CategoryTheory/Generator/Presheaf.lean"
    },
    ".lake.packages.mathlib.Mathlib.CategoryTheory.Generator.Indization": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/CategoryTheory/Generator/Indization.lean"
    },
    ".lake.packages.mathlib.Mathlib.CategoryTheory.Generator.Preadditive": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/CategoryTheory/Generator/Preadditive.lean"
    },
    ".lake.packages.mathlib.Mathlib.CategoryTheory.Generator.Basic": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/CategoryTheory/Generator/Basic.lean"
    },
    ".lake.packages.mathlib.Mathlib.CategoryTheory.Generator.Sheaf": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/CategoryTheory/Generator/Sheaf.lean"
    },
    ".lake.packages.mathlib.Mathlib.CategoryTheory.Sites.LocallyFullyFaithful": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/CategoryTheory/Sites/LocallyFullyFaithful.lean"
    },
    ".lake.packages.mathlib.Mathlib.CategoryTheory.Sites.CartesianMonoidal": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/CategoryTheory/Sites/CartesianMonoidal.lean"
    },
    ".lake.packages.mathlib.Mathlib.CategoryTheory.Sites.LocallySurjective": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/CategoryTheory/Sites/LocallySurjective.lean"
    },
    ".lake.packages.mathlib.Mathlib.CategoryTheory.Sites.GlobalSections": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/CategoryTheory/Sites/GlobalSections.lean"
    },
    ".lake.packages.mathlib.Mathlib.CategoryTheory.Sites.EffectiveEpimorphic": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/CategoryTheory/Sites/EffectiveEpimorphic.lean"
    },
    ".lake.packages.mathlib.Mathlib.CategoryTheory.Sites.LeftExact": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/CategoryTheory/Sites/LeftExact.lean"
    },
    ".lake.packages.mathlib.Mathlib.CategoryTheory.Sites.EpiMono": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/CategoryTheory/Sites/EpiMono.lean"
    },
    ".lake.packages.mathlib.Mathlib.CategoryTheory.Sites.CoverPreserving": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/CategoryTheory/Sites/CoverPreserving.lean"
    },
    ".lake.packages.mathlib.Mathlib.CategoryTheory.Sites.Canonical": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/CategoryTheory/Sites/Canonical.lean"
    },
    ".lake.packages.mathlib.Mathlib.CategoryTheory.Sites.Subsheaf": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/CategoryTheory/Sites/Subsheaf.lean"
    },
    ".lake.packages.mathlib.Mathlib.CategoryTheory.Sites.LocallyBijective": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/CategoryTheory/Sites/LocallyBijective.lean"
    },
    ".lake.packages.mathlib.Mathlib.CategoryTheory.Sites.Coverage": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/CategoryTheory/Sites/Coverage.lean"
    },
    ".lake.packages.mathlib.Mathlib.CategoryTheory.Sites.Monoidal": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/CategoryTheory/Sites/Monoidal.lean"
    },
    ".lake.packages.mathlib.Mathlib.CategoryTheory.Sites.Pretopology": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/CategoryTheory/Sites/Pretopology.lean"
    },
    ".lake.packages.mathlib.Mathlib.CategoryTheory.Sites.EqualizerSheafCondition": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/CategoryTheory/Sites/EqualizerSheafCondition.lean"
    },
    ".lake.packages.mathlib.Mathlib.CategoryTheory.Sites.Abelian": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/CategoryTheory/Sites/Abelian.lean"
    },
    ".lake.packages.mathlib.Mathlib.CategoryTheory.Sites.IsSheafFor": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/CategoryTheory/Sites/IsSheafFor.lean"
    },
    ".lake.packages.mathlib.Mathlib.CategoryTheory.Sites.Preserves": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/CategoryTheory/Sites/Preserves.lean"
    },
    ".lake.packages.mathlib.Mathlib.CategoryTheory.Sites.ZeroHypercover": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/CategoryTheory/Sites/ZeroHypercover.lean"
    },
    ".lake.packages.mathlib.Mathlib.CategoryTheory.Sites.Over": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/CategoryTheory/Sites/Over.lean"
    },
    ".lake.packages.mathlib.Mathlib.CategoryTheory.Sites.PreservesLocallyBijective": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/CategoryTheory/Sites/PreservesLocallyBijective.lean"
    },
    ".lake.packages.mathlib.Mathlib.CategoryTheory.Sites.SheafHom": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/CategoryTheory/Sites/SheafHom.lean"
    },
    ".lake.packages.mathlib.Mathlib.CategoryTheory.Sites.IsSheafOneHypercover": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/CategoryTheory/Sites/IsSheafOneHypercover.lean"
    },
    ".lake.packages.mathlib.Mathlib.CategoryTheory.Sites.CoverLifting": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/CategoryTheory/Sites/CoverLifting.lean"
    },
    ".lake.packages.mathlib.Mathlib.CategoryTheory.Sites.SheafOfTypes": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/CategoryTheory/Sites/SheafOfTypes.lean"
    },
    ".lake.packages.mathlib.Mathlib.CategoryTheory.Sites.ChosenFiniteProducts": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/CategoryTheory/Sites/ChosenFiniteProducts.lean"
    },
    ".lake.packages.mathlib.Mathlib.CategoryTheory.Sites.Spaces": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/CategoryTheory/Sites/Spaces.lean"
    },
    ".lake.packages.mathlib.Mathlib.CategoryTheory.Sites.Sieves": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/CategoryTheory/Sites/Sieves.lean"
    },
    ".lake.packages.mathlib.Mathlib.CategoryTheory.Sites.Plus": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/CategoryTheory/Sites/Plus.lean"
    },
    ".lake.packages.mathlib.Mathlib.CategoryTheory.Sites.LocallyInjective": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/CategoryTheory/Sites/LocallyInjective.lean"
    },
    ".lake.packages.mathlib.Mathlib.CategoryTheory.Sites.CompatiblePlus": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/CategoryTheory/Sites/CompatiblePlus.lean"
    },
    ".lake.packages.mathlib.Mathlib.CategoryTheory.Sites.Localization": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/CategoryTheory/Sites/Localization.lean"
    },
    ".lake.packages.mathlib.Mathlib.CategoryTheory.Sites.Sheafification": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/CategoryTheory/Sites/Sheafification.lean"
    },
    ".lake.packages.mathlib.Mathlib.CategoryTheory.Sites.CartesianClosed": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/CategoryTheory/Sites/CartesianClosed.lean"
    },
    ".lake.packages.mathlib.Mathlib.CategoryTheory.Sites.ConstantSheaf": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/CategoryTheory/Sites/ConstantSheaf.lean"
    },
    ".lake.packages.mathlib.Mathlib.CategoryTheory.Sites.Pullback": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/CategoryTheory/Sites/Pullback.lean"
    },
    ".lake.packages.mathlib.Mathlib.CategoryTheory.Sites.CoversTop": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/CategoryTheory/Sites/CoversTop.lean"
    },
    ".lake.packages.mathlib.Mathlib.CategoryTheory.Sites.MorphismProperty": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/CategoryTheory/Sites/MorphismProperty.lean"
    },
    ".lake.packages.mathlib.Mathlib.CategoryTheory.Sites.Adjunction": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/CategoryTheory/Sites/Adjunction.lean"
    },
    ".lake.packages.mathlib.Mathlib.CategoryTheory.Sites.Continuous": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/CategoryTheory/Sites/Continuous.lean"
    },
    ".lake.packages.mathlib.Mathlib.CategoryTheory.Sites.PreservesSheafification": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/CategoryTheory/Sites/PreservesSheafification.lean"
    },
    ".lake.packages.mathlib.Mathlib.CategoryTheory.Sites.Sheaf": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/CategoryTheory/Sites/Sheaf.lean"
    },
    ".lake.packages.mathlib.Mathlib.CategoryTheory.Sites.Grothendieck": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/CategoryTheory/Sites/Grothendieck.lean"
    },
    ".lake.packages.mathlib.Mathlib.CategoryTheory.Sites.Types": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/CategoryTheory/Sites/Types.lean"
    },
    ".lake.packages.mathlib.Mathlib.CategoryTheory.Sites.OneHypercover": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/CategoryTheory/Sites/OneHypercover.lean"
    },
    ".lake.packages.mathlib.Mathlib.CategoryTheory.Sites.Whiskering": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/CategoryTheory/Sites/Whiskering.lean"
    },
    ".lake.packages.mathlib.Mathlib.CategoryTheory.Sites.Limits": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/CategoryTheory/Sites/Limits.lean"
    },
    ".lake.packages.mathlib.Mathlib.CategoryTheory.Sites.Closed": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/CategoryTheory/Sites/Closed.lean"
    },
    ".lake.packages.mathlib.Mathlib.CategoryTheory.Sites.Subcanonical": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/CategoryTheory/Sites/Subcanonical.lean"
    },
    ".lake.packages.mathlib.Mathlib.CategoryTheory.Sites.MayerVietorisSquare": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/CategoryTheory/Sites/MayerVietorisSquare.lean"
    },
    ".lake.packages.mathlib.Mathlib.CategoryTheory.Sites.Equivalence": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/CategoryTheory/Sites/Equivalence.lean"
    },
    ".lake.packages.mathlib.Mathlib.CategoryTheory.Sites.CompatibleSheafification": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/CategoryTheory/Sites/CompatibleSheafification.lean"
    },
    ".lake.packages.mathlib.Mathlib.CategoryTheory.Sites.ConcreteSheafification": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/CategoryTheory/Sites/ConcreteSheafification.lean"
    },
    ".lake.packages.mathlib.Mathlib.CategoryTheory.Sites.Coherent.LocallySurjective": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/CategoryTheory/Sites/Coherent/LocallySurjective.lean"
    },
    ".lake.packages.mathlib.Mathlib.CategoryTheory.Sites.Coherent.SheafComparison": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/CategoryTheory/Sites/Coherent/SheafComparison.lean"
    },
    ".lake.packages.mathlib.Mathlib.CategoryTheory.Sites.Coherent.ExtensiveColimits": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/CategoryTheory/Sites/Coherent/ExtensiveColimits.lean"
    },
    ".lake.packages.mathlib.Mathlib.CategoryTheory.Sites.Coherent.SequentialLimit": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/CategoryTheory/Sites/Coherent/SequentialLimit.lean"
    },
    ".lake.packages.mathlib.Mathlib.CategoryTheory.Sites.Coherent.ReflectsPreregular": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/CategoryTheory/Sites/Coherent/ReflectsPreregular.lean"
    },
    ".lake.packages.mathlib.Mathlib.CategoryTheory.Sites.Coherent.CoherentTopology": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/CategoryTheory/Sites/Coherent/CoherentTopology.lean"
    },
    ".lake.packages.mathlib.Mathlib.CategoryTheory.Sites.Coherent.ReflectsPrecoherent": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/CategoryTheory/Sites/Coherent/ReflectsPrecoherent.lean"
    },
    ".lake.packages.mathlib.Mathlib.CategoryTheory.Sites.Coherent.Basic": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/CategoryTheory/Sites/Coherent/Basic.lean"
    },
    ".lake.packages.mathlib.Mathlib.CategoryTheory.Sites.Coherent.ExtensiveSheaves": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/CategoryTheory/Sites/Coherent/ExtensiveSheaves.lean"
    },
    ".lake.packages.mathlib.Mathlib.CategoryTheory.Sites.Coherent.ExtensiveTopology": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/CategoryTheory/Sites/Coherent/ExtensiveTopology.lean"
    },
    ".lake.packages.mathlib.Mathlib.CategoryTheory.Sites.Coherent.CoherentSheaves": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/CategoryTheory/Sites/Coherent/CoherentSheaves.lean"
    },
    ".lake.packages.mathlib.Mathlib.CategoryTheory.Sites.Coherent.Equivalence": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/CategoryTheory/Sites/Coherent/Equivalence.lean"
    },
    ".lake.packages.mathlib.Mathlib.CategoryTheory.Sites.Coherent.RegularSheaves": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/CategoryTheory/Sites/Coherent/RegularSheaves.lean"
    },
    ".lake.packages.mathlib.Mathlib.CategoryTheory.Sites.Coherent.Comparison": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/CategoryTheory/Sites/Coherent/Comparison.lean"
    },
    ".lake.packages.mathlib.Mathlib.CategoryTheory.Sites.Coherent.RegularTopology": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/CategoryTheory/Sites/Coherent/RegularTopology.lean"
    },
    ".lake.packages.mathlib.Mathlib.CategoryTheory.Sites.DenseSubsite.Basic": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/CategoryTheory/Sites/DenseSubsite/Basic.lean"
    },
    ".lake.packages.mathlib.Mathlib.CategoryTheory.Sites.DenseSubsite.SheafEquiv": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/CategoryTheory/Sites/DenseSubsite/SheafEquiv.lean"
    },
    ".lake.packages.mathlib.Mathlib.CategoryTheory.Sites.DenseSubsite.InducedTopology": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/CategoryTheory/Sites/DenseSubsite/InducedTopology.lean"
    },
    ".lake.packages.mathlib.Mathlib.CategoryTheory.Sites.SheafCohomology.Basic": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/CategoryTheory/Sites/SheafCohomology/Basic.lean"
    },
    ".lake.packages.mathlib.Mathlib.CategoryTheory.Sites.NonabelianCohomology.H1": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/CategoryTheory/Sites/NonabelianCohomology/H1.lean"
    },
    ".lake.packages.mathlib.Mathlib.CategoryTheory.Abelian.Yoneda": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/CategoryTheory/Abelian/Yoneda.lean"
    },
    ".lake.packages.mathlib.Mathlib.CategoryTheory.Abelian.FreydMitchell": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/CategoryTheory/Abelian/FreydMitchell.lean"
    },
    ".lake.packages.mathlib.Mathlib.CategoryTheory.Abelian.Opposite": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/CategoryTheory/Abelian/Opposite.lean"
    },
    ".lake.packages.mathlib.Mathlib.CategoryTheory.Abelian.RightDerived": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/CategoryTheory/Abelian/RightDerived.lean"
    },
    ".lake.packages.mathlib.Mathlib.CategoryTheory.Abelian.Indization": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/CategoryTheory/Abelian/Indization.lean"
    },
    ".lake.packages.mathlib.Mathlib.CategoryTheory.Abelian.Pseudoelements": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/CategoryTheory/Abelian/Pseudoelements.lean"
    },
    ".lake.packages.mathlib.Mathlib.CategoryTheory.Abelian.Basic": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/CategoryTheory/Abelian/Basic.lean"
    },
    ".lake.packages.mathlib.Mathlib.CategoryTheory.Abelian.LeftDerived": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/CategoryTheory/Abelian/LeftDerived.lean"
    },
    ".lake.packages.mathlib.Mathlib.CategoryTheory.Abelian.Subobject": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/CategoryTheory/Abelian/Subobject.lean"
    },
    ".lake.packages.mathlib.Mathlib.CategoryTheory.Abelian.Ext": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/CategoryTheory/Abelian/Ext.lean"
    },
    ".lake.packages.mathlib.Mathlib.CategoryTheory.Abelian.Refinements": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/CategoryTheory/Abelian/Refinements.lean"
    },
    ".lake.packages.mathlib.Mathlib.CategoryTheory.Abelian.Exact": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/CategoryTheory/Abelian/Exact.lean"
    },
    ".lake.packages.mathlib.Mathlib.CategoryTheory.Abelian.Monomorphisms": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/CategoryTheory/Abelian/Monomorphisms.lean"
    },
    ".lake.packages.mathlib.Mathlib.CategoryTheory.Abelian.Transfer": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/CategoryTheory/Abelian/Transfer.lean"
    },
    ".lake.packages.mathlib.Mathlib.CategoryTheory.Abelian.EpiWithInjectiveKernel": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/CategoryTheory/Abelian/EpiWithInjectiveKernel.lean"
    },
    ".lake.packages.mathlib.Mathlib.CategoryTheory.Abelian.Images": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/CategoryTheory/Abelian/Images.lean"
    },
    ".lake.packages.mathlib.Mathlib.CategoryTheory.Abelian.FunctorCategory": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/CategoryTheory/Abelian/FunctorCategory.lean"
    },
    ".lake.packages.mathlib.Mathlib.CategoryTheory.Abelian.NonPreadditive": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/CategoryTheory/Abelian/NonPreadditive.lean"
    },
    ".lake.packages.mathlib.Mathlib.CategoryTheory.Abelian.CommSq": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/CategoryTheory/Abelian/CommSq.lean"
    },
    ".lake.packages.mathlib.Mathlib.CategoryTheory.Abelian.DiagramLemmas.Four": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/CategoryTheory/Abelian/DiagramLemmas/Four.lean"
    },
    ".lake.packages.mathlib.Mathlib.CategoryTheory.Abelian.DiagramLemmas.KernelCokernelComp": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/CategoryTheory/Abelian/DiagramLemmas/KernelCokernelComp.lean"
    },
    ".lake.packages.mathlib.Mathlib.CategoryTheory.Abelian.SerreClass.Basic": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/CategoryTheory/Abelian/SerreClass/Basic.lean"
    },
    ".lake.packages.mathlib.Mathlib.CategoryTheory.Abelian.SerreClass.Bousfield": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/CategoryTheory/Abelian/SerreClass/Bousfield.lean"
    },
    ".lake.packages.mathlib.Mathlib.CategoryTheory.Abelian.SerreClass.MorphismProperty": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/CategoryTheory/Abelian/SerreClass/MorphismProperty.lean"
    },
    ".lake.packages.mathlib.Mathlib.CategoryTheory.Abelian.GrothendieckCategory.ColimCoyoneda": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/CategoryTheory/Abelian/GrothendieckCategory/ColimCoyoneda.lean"
    },
    ".lake.packages.mathlib.Mathlib.CategoryTheory.Abelian.GrothendieckCategory.EnoughInjectives": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/CategoryTheory/Abelian/GrothendieckCategory/EnoughInjectives.lean"
    },
    ".lake.packages.mathlib.Mathlib.CategoryTheory.Abelian.GrothendieckCategory.Coseparator": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/CategoryTheory/Abelian/GrothendieckCategory/Coseparator.lean"
    },
    ".lake.packages.mathlib.Mathlib.CategoryTheory.Abelian.GrothendieckCategory.Basic": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/CategoryTheory/Abelian/GrothendieckCategory/Basic.lean"
    },
    ".lake.packages.mathlib.Mathlib.CategoryTheory.Abelian.GrothendieckCategory.Subobject": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/CategoryTheory/Abelian/GrothendieckCategory/Subobject.lean"
    },
    ".lake.packages.mathlib.Mathlib.CategoryTheory.Abelian.GrothendieckCategory.Monomorphisms": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/CategoryTheory/Abelian/GrothendieckCategory/Monomorphisms.lean"
    },
    ".lake.packages.mathlib.Mathlib.CategoryTheory.Abelian.GrothendieckCategory.ModuleEmbedding.Opposite": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/CategoryTheory/Abelian/GrothendieckCategory/ModuleEmbedding/Opposite.lean"
    },
    ".lake.packages.mathlib.Mathlib.CategoryTheory.Abelian.GrothendieckCategory.ModuleEmbedding.GabrielPopescu": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/CategoryTheory/Abelian/GrothendieckCategory/ModuleEmbedding/GabrielPopescu.lean"
    },
    ".lake.packages.mathlib.Mathlib.CategoryTheory.Abelian.GrothendieckAxioms.Indization": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/CategoryTheory/Abelian/GrothendieckAxioms/Indization.lean"
    },
    ".lake.packages.mathlib.Mathlib.CategoryTheory.Abelian.GrothendieckAxioms.Basic": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/CategoryTheory/Abelian/GrothendieckAxioms/Basic.lean"
    },
    ".lake.packages.mathlib.Mathlib.CategoryTheory.Abelian.GrothendieckAxioms.Sheaf": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/CategoryTheory/Abelian/GrothendieckAxioms/Sheaf.lean"
    },
    ".lake.packages.mathlib.Mathlib.CategoryTheory.Abelian.GrothendieckAxioms.Connected": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/CategoryTheory/Abelian/GrothendieckAxioms/Connected.lean"
    },
    ".lake.packages.mathlib.Mathlib.CategoryTheory.Abelian.GrothendieckAxioms.Types": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/CategoryTheory/Abelian/GrothendieckAxioms/Types.lean"
    },
    ".lake.packages.mathlib.Mathlib.CategoryTheory.Abelian.GrothendieckAxioms.FunctorCategory": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/CategoryTheory/Abelian/GrothendieckAxioms/FunctorCategory.lean"
    },
    ".lake.packages.mathlib.Mathlib.CategoryTheory.Abelian.GrothendieckAxioms.Colim": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/CategoryTheory/Abelian/GrothendieckAxioms/Colim.lean"
    },
    ".lake.packages.mathlib.Mathlib.CategoryTheory.Abelian.Projective.Basic": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/CategoryTheory/Abelian/Projective/Basic.lean"
    },
    ".lake.packages.mathlib.Mathlib.CategoryTheory.Abelian.Projective.Dimension": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/CategoryTheory/Abelian/Projective/Dimension.lean"
    },
    ".lake.packages.mathlib.Mathlib.CategoryTheory.Abelian.Projective.Resolution": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/CategoryTheory/Abelian/Projective/Resolution.lean"
    },
    ".lake.packages.mathlib.Mathlib.CategoryTheory.Abelian.Injective.Basic": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/CategoryTheory/Abelian/Injective/Basic.lean"
    },
    ".lake.packages.mathlib.Mathlib.CategoryTheory.Abelian.Injective.Resolution": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/CategoryTheory/Abelian/Injective/Resolution.lean"
    },
    ".lake.packages.mathlib.Mathlib.CategoryTheory.Monoidal.Yoneda": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/CategoryTheory/Monoidal/Yoneda.lean"
    },
    ".lake.packages.mathlib.Mathlib.CategoryTheory.Monoidal.NaturalTransformation": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/CategoryTheory/Monoidal/NaturalTransformation.lean"
    },
    ".lake.packages.mathlib.Mathlib.CategoryTheory.Monoidal.ExternalProduct": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/CategoryTheory/Monoidal/ExternalProduct.lean"
    },
    ".lake.packages.mathlib.Mathlib.CategoryTheory.Monoidal.Transport": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/CategoryTheory/Monoidal/Transport.lean"
    },
    ".lake.packages.mathlib.Mathlib.CategoryTheory.Monoidal.Opposite": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/CategoryTheory/Monoidal/Opposite.lean"
    },
    ".lake.packages.mathlib.Mathlib.CategoryTheory.Monoidal.Category": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/CategoryTheory/Monoidal/Category.lean"
    },
    ".lake.packages.mathlib.Mathlib.CategoryTheory.Monoidal.Discrete": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/CategoryTheory/Monoidal/Discrete.lean"
    },
    ".lake.packages.mathlib.Mathlib.CategoryTheory.Monoidal.Grp_": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/CategoryTheory/Monoidal/Grp_.lean"
    },
    ".lake.packages.mathlib.Mathlib.CategoryTheory.Monoidal.Subcategory": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/CategoryTheory/Monoidal/Subcategory.lean"
    },
    ".lake.packages.mathlib.Mathlib.CategoryTheory.Monoidal.Conv": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/CategoryTheory/Monoidal/Conv.lean"
    },
    ".lake.packages.mathlib.Mathlib.CategoryTheory.Monoidal.Skeleton": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/CategoryTheory/Monoidal/Skeleton.lean"
    },
    ".lake.packages.mathlib.Mathlib.CategoryTheory.Monoidal.OfHasFiniteProducts": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/CategoryTheory/Monoidal/OfHasFiniteProducts.lean"
    },
    ".lake.packages.mathlib.Mathlib.CategoryTheory.Monoidal.Mod_": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/CategoryTheory/Monoidal/Mod_.lean"
    },
    ".lake.packages.mathlib.Mathlib.CategoryTheory.Monoidal.Bimod": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/CategoryTheory/Monoidal/Bimod.lean"
    },
    ".lake.packages.mathlib.Mathlib.CategoryTheory.Monoidal.Linear": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/CategoryTheory/Monoidal/Linear.lean"
    },
    ".lake.packages.mathlib.Mathlib.CategoryTheory.Monoidal.Preadditive": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/CategoryTheory/Monoidal/Preadditive.lean"
    },
    ".lake.packages.mathlib.Mathlib.CategoryTheory.Monoidal.Center": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/CategoryTheory/Monoidal/Center.lean"
    },
    ".lake.packages.mathlib.Mathlib.CategoryTheory.Monoidal.CommGrp_": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/CategoryTheory/Monoidal/CommGrp_.lean"
    },
    ".lake.packages.mathlib.Mathlib.CategoryTheory.Monoidal.End": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/CategoryTheory/Monoidal/End.lean"
    },
    ".lake.packages.mathlib.Mathlib.CategoryTheory.Monoidal.CoherenceLemmas": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/CategoryTheory/Monoidal/CoherenceLemmas.lean"
    },
    ".lake.packages.mathlib.Mathlib.CategoryTheory.Monoidal.DayConvolution": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/CategoryTheory/Monoidal/DayConvolution.lean"
    },
    ".lake.packages.mathlib.Mathlib.CategoryTheory.Monoidal.Hopf_": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/CategoryTheory/Monoidal/Hopf_.lean"
    },
    ".lake.packages.mathlib.Mathlib.CategoryTheory.Monoidal.CommMon_": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/CategoryTheory/Monoidal/CommMon_.lean"
    },
    ".lake.packages.mathlib.Mathlib.CategoryTheory.Monoidal.Functor": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/CategoryTheory/Monoidal/Functor.lean"
    },
    ".lake.packages.mathlib.Mathlib.CategoryTheory.Monoidal.Limits": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/CategoryTheory/Monoidal/Limits.lean"
    },
    ".lake.packages.mathlib.Mathlib.CategoryTheory.Monoidal.Comon_": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/CategoryTheory/Monoidal/Comon_.lean"
    },
    ".lake.packages.mathlib.Mathlib.CategoryTheory.Monoidal.Tor": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/CategoryTheory/Monoidal/Tor.lean"
    },
    ".lake.packages.mathlib.Mathlib.CategoryTheory.Monoidal.Mon_": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/CategoryTheory/Monoidal/Mon_.lean"
    },
    ".lake.packages.mathlib.Mathlib.CategoryTheory.Monoidal.FunctorCategory": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/CategoryTheory/Monoidal/FunctorCategory.lean"
    },
    ".lake.packages.mathlib.Mathlib.CategoryTheory.Monoidal.Bimon_": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/CategoryTheory/Monoidal/Bimon_.lean"
    },
    ".lake.packages.mathlib.Mathlib.CategoryTheory.Monoidal.Cartesian.Grp_": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/CategoryTheory/Monoidal/Cartesian/Grp_.lean"
    },
    ".lake.packages.mathlib.Mathlib.CategoryTheory.Monoidal.Cartesian.Mod_": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/CategoryTheory/Monoidal/Cartesian/Mod_.lean"
    },
    ".lake.packages.mathlib.Mathlib.CategoryTheory.Monoidal.Cartesian.Over": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/CategoryTheory/Monoidal/Cartesian/Over.lean"
    },
    ".lake.packages.mathlib.Mathlib.CategoryTheory.Monoidal.Cartesian.CommGrp_": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/CategoryTheory/Monoidal/Cartesian/CommGrp_.lean"
    },
    ".lake.packages.mathlib.Mathlib.CategoryTheory.Monoidal.Cartesian.Basic": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/CategoryTheory/Monoidal/Cartesian/Basic.lean"
    },
    ".lake.packages.mathlib.Mathlib.CategoryTheory.Monoidal.Cartesian.CommMon_": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/CategoryTheory/Monoidal/Cartesian/CommMon_.lean"
    },
    ".lake.packages.mathlib.Mathlib.CategoryTheory.Monoidal.Cartesian.InfSemilattice": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/CategoryTheory/Monoidal/Cartesian/InfSemilattice.lean"
    },
    ".lake.packages.mathlib.Mathlib.CategoryTheory.Monoidal.Cartesian.Cat": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/CategoryTheory/Monoidal/Cartesian/Cat.lean"
    },
    ".lake.packages.mathlib.Mathlib.CategoryTheory.Monoidal.Cartesian.Comon_": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/CategoryTheory/Monoidal/Cartesian/Comon_.lean"
    },
    ".lake.packages.mathlib.Mathlib.CategoryTheory.Monoidal.Cartesian.Mon_": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/CategoryTheory/Monoidal/Cartesian/Mon_.lean"
    },
    ".lake.packages.mathlib.Mathlib.CategoryTheory.Monoidal.Cartesian.FunctorCategory": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/CategoryTheory/Monoidal/Cartesian/FunctorCategory.lean"
    },
    ".lake.packages.mathlib.Mathlib.CategoryTheory.Monoidal.DayConvolution.Braided": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/CategoryTheory/Monoidal/DayConvolution/Braided.lean"
    },
    ".lake.packages.mathlib.Mathlib.CategoryTheory.Monoidal.DayConvolution.Closed": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/CategoryTheory/Monoidal/DayConvolution/Closed.lean"
    },
    ".lake.packages.mathlib.Mathlib.CategoryTheory.Monoidal.Types.Coyoneda": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/CategoryTheory/Monoidal/Types/Coyoneda.lean"
    },
    ".lake.packages.mathlib.Mathlib.CategoryTheory.Monoidal.Types.Basic": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/CategoryTheory/Monoidal/Types/Basic.lean"
    },
    ".lake.packages.mathlib.Mathlib.CategoryTheory.Monoidal.ExternalProduct.KanExtension": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/CategoryTheory/Monoidal/ExternalProduct/KanExtension.lean"
    },
    ".lake.packages.mathlib.Mathlib.CategoryTheory.Monoidal.ExternalProduct.Basic": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/CategoryTheory/Monoidal/ExternalProduct/Basic.lean"
    },
    ".lake.packages.mathlib.Mathlib.CategoryTheory.Monoidal.Opposite.Mon_": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/CategoryTheory/Monoidal/Opposite/Mon_.lean"
    },
    ".lake.packages.mathlib.Mathlib.CategoryTheory.Monoidal.Free.Coherence": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/CategoryTheory/Monoidal/Free/Coherence.lean"
    },
    ".lake.packages.mathlib.Mathlib.CategoryTheory.Monoidal.Free.Basic": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/CategoryTheory/Monoidal/Free/Basic.lean"
    },
    ".lake.packages.mathlib.Mathlib.CategoryTheory.Monoidal.Rigid.OfEquivalence": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/CategoryTheory/Monoidal/Rigid/OfEquivalence.lean"
    },
    ".lake.packages.mathlib.Mathlib.CategoryTheory.Monoidal.Rigid.Basic": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/CategoryTheory/Monoidal/Rigid/Basic.lean"
    },
    ".lake.packages.mathlib.Mathlib.CategoryTheory.Monoidal.Rigid.Braided": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/CategoryTheory/Monoidal/Rigid/Braided.lean"
    },
    ".lake.packages.mathlib.Mathlib.CategoryTheory.Monoidal.Rigid.FunctorCategory": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/CategoryTheory/Monoidal/Rigid/FunctorCategory.lean"
    },
    ".lake.packages.mathlib.Mathlib.CategoryTheory.Monoidal.Internal.Module": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/CategoryTheory/Monoidal/Internal/Module.lean"
    },
    ".lake.packages.mathlib.Mathlib.CategoryTheory.Monoidal.Internal.Limits": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/CategoryTheory/Monoidal/Internal/Limits.lean"
    },
    ".lake.packages.mathlib.Mathlib.CategoryTheory.Monoidal.Internal.FunctorCategory": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/CategoryTheory/Monoidal/Internal/FunctorCategory.lean"
    },
    ".lake.packages.mathlib.Mathlib.CategoryTheory.Monoidal.Internal.Types.Grp_": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/CategoryTheory/Monoidal/Internal/Types/Grp_.lean"
    },
    ".lake.packages.mathlib.Mathlib.CategoryTheory.Monoidal.Internal.Types.CommGrp_": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/CategoryTheory/Monoidal/Internal/Types/CommGrp_.lean"
    },
    ".lake.packages.mathlib.Mathlib.CategoryTheory.Monoidal.Internal.Types.Basic": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/CategoryTheory/Monoidal/Internal/Types/Basic.lean"
    },
    ".lake.packages.mathlib.Mathlib.CategoryTheory.Monoidal.Action.LinearFunctor": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/CategoryTheory/Monoidal/Action/LinearFunctor.lean"
    },
    ".lake.packages.mathlib.Mathlib.CategoryTheory.Monoidal.Action.Basic": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/CategoryTheory/Monoidal/Action/Basic.lean"
    },
    ".lake.packages.mathlib.Mathlib.CategoryTheory.Monoidal.Action.Opposites": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/CategoryTheory/Monoidal/Action/Opposites.lean"
    },
    ".lake.packages.mathlib.Mathlib.CategoryTheory.Monoidal.OfChosenFiniteProducts.Basic": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/CategoryTheory/Monoidal/OfChosenFiniteProducts/Basic.lean"
    },
    ".lake.packages.mathlib.Mathlib.CategoryTheory.Monoidal.OfChosenFiniteProducts.Symmetric": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/CategoryTheory/Monoidal/OfChosenFiniteProducts/Symmetric.lean"
    },
    ".lake.packages.mathlib.Mathlib.CategoryTheory.Monoidal.Braided.Opposite": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/CategoryTheory/Monoidal/Braided/Opposite.lean"
    },
    ".lake.packages.mathlib.Mathlib.CategoryTheory.Monoidal.Braided.Reflection": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/CategoryTheory/Monoidal/Braided/Reflection.lean"
    },
    ".lake.packages.mathlib.Mathlib.CategoryTheory.Monoidal.Braided.Basic": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/CategoryTheory/Monoidal/Braided/Basic.lean"
    },
    ".lake.packages.mathlib.Mathlib.CategoryTheory.Pi.Basic": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/CategoryTheory/Pi/Basic.lean"
    },
    ".lake.packages.mathlib.Mathlib.CategoryTheory.Action.Monoidal": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/CategoryTheory/Action/Monoidal.lean"
    },
    ".lake.packages.mathlib.Mathlib.CategoryTheory.Action.Basic": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/CategoryTheory/Action/Basic.lean"
    },
    ".lake.packages.mathlib.Mathlib.CategoryTheory.Action.Continuous": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/CategoryTheory/Action/Continuous.lean"
    },
    ".lake.packages.mathlib.Mathlib.CategoryTheory.Action.Limits": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/CategoryTheory/Action/Limits.lean"
    },
    ".lake.packages.mathlib.Mathlib.CategoryTheory.Action.Concrete": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/CategoryTheory/Action/Concrete.lean"
    },
    ".lake.packages.mathlib.Mathlib.CategoryTheory.Equivalence.Symmetry": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/CategoryTheory/Equivalence/Symmetry.lean"
    },
    ".lake.packages.mathlib.Mathlib.CategoryTheory.Enriched.Opposite": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/CategoryTheory/Enriched/Opposite.lean"
    },
    ".lake.packages.mathlib.Mathlib.CategoryTheory.Enriched.HomCongr": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/CategoryTheory/Enriched/HomCongr.lean"
    },
    ".lake.packages.mathlib.Mathlib.CategoryTheory.Enriched.Basic": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/CategoryTheory/Enriched/Basic.lean"
    },
    ".lake.packages.mathlib.Mathlib.CategoryTheory.Enriched.FunctorCategory": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/CategoryTheory/Enriched/FunctorCategory.lean"
    },
    ".lake.packages.mathlib.Mathlib.CategoryTheory.Enriched.Ordinary.Basic": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/CategoryTheory/Enriched/Ordinary/Basic.lean"
    },
    ".lake.packages.mathlib.Mathlib.CategoryTheory.Enriched.Limits.HasConicalProducts": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/CategoryTheory/Enriched/Limits/HasConicalProducts.lean"
    },
    ".lake.packages.mathlib.Mathlib.CategoryTheory.Enriched.Limits.HasConicalPullbacks": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/CategoryTheory/Enriched/Limits/HasConicalPullbacks.lean"
    },
    ".lake.packages.mathlib.Mathlib.CategoryTheory.Enriched.Limits.HasConicalTerminal": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/CategoryTheory/Enriched/Limits/HasConicalTerminal.lean"
    },
    ".lake.packages.mathlib.Mathlib.CategoryTheory.Enriched.Limits.HasConicalLimits": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/CategoryTheory/Enriched/Limits/HasConicalLimits.lean"
    },
    ".lake.packages.mathlib.Mathlib.CategoryTheory.PathCategory.Basic": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/CategoryTheory/PathCategory/Basic.lean"
    },
    ".lake.packages.mathlib.Mathlib.CategoryTheory.PathCategory.MorphismProperty": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/CategoryTheory/PathCategory/MorphismProperty.lean"
    },
    ".lake.packages.mathlib.Mathlib.CategoryTheory.Quotient.Linear": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/CategoryTheory/Quotient/Linear.lean"
    },
    ".lake.packages.mathlib.Mathlib.CategoryTheory.Quotient.Preadditive": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/CategoryTheory/Quotient/Preadditive.lean"
    },
    ".lake.packages.mathlib.Mathlib.CategoryTheory.Sums.Products": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/CategoryTheory/Sums/Products.lean"
    },
    ".lake.packages.mathlib.Mathlib.CategoryTheory.Sums.Basic": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/CategoryTheory/Sums/Basic.lean"
    },
    ".lake.packages.mathlib.Mathlib.CategoryTheory.Sums.Associator": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/CategoryTheory/Sums/Associator.lean"
    },
    ".lake.packages.mathlib.Mathlib.CategoryTheory.Dialectica.Monoidal": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/CategoryTheory/Dialectica/Monoidal.lean"
    },
    ".lake.packages.mathlib.Mathlib.CategoryTheory.Dialectica.Basic": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/CategoryTheory/Dialectica/Basic.lean"
    },
    ".lake.packages.mathlib.Mathlib.CategoryTheory.Galois.Full": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/CategoryTheory/Galois/Full.lean"
    },
    ".lake.packages.mathlib.Mathlib.CategoryTheory.Galois.Decomposition": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/CategoryTheory/Galois/Decomposition.lean"
    },
    ".lake.packages.mathlib.Mathlib.CategoryTheory.Galois.Topology": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/CategoryTheory/Galois/Topology.lean"
    },
    ".lake.packages.mathlib.Mathlib.CategoryTheory.Galois.Basic": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/CategoryTheory/Galois/Basic.lean"
    },
    ".lake.packages.mathlib.Mathlib.CategoryTheory.Galois.Prorepresentability": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/CategoryTheory/Galois/Prorepresentability.lean"
    },
    ".lake.packages.mathlib.Mathlib.CategoryTheory.Galois.EssSurj": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/CategoryTheory/Galois/EssSurj.lean"
    },
    ".lake.packages.mathlib.Mathlib.CategoryTheory.Galois.Action": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/CategoryTheory/Galois/Action.lean"
    },
    ".lake.packages.mathlib.Mathlib.CategoryTheory.Galois.IsFundamentalgroup": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/CategoryTheory/Galois/IsFundamentalgroup.lean"
    },
    ".lake.packages.mathlib.Mathlib.CategoryTheory.Galois.Examples": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/CategoryTheory/Galois/Examples.lean"
    },
    ".lake.packages.mathlib.Mathlib.CategoryTheory.Galois.Equivalence": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/CategoryTheory/Galois/Equivalence.lean"
    },
    ".lake.packages.mathlib.Mathlib.CategoryTheory.Galois.GaloisObjects": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/CategoryTheory/Galois/GaloisObjects.lean"
    },
    ".lake.packages.mathlib.Mathlib.CategoryTheory.Bicategory.Coherence": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/CategoryTheory/Bicategory/Coherence.lean"
    },
    ".lake.packages.mathlib.Mathlib.CategoryTheory.Bicategory.Extension": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/CategoryTheory/Bicategory/Extension.lean"
    },
    ".lake.packages.mathlib.Mathlib.CategoryTheory.Bicategory.Basic": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/CategoryTheory/Bicategory/Basic.lean"
    },
    ".lake.packages.mathlib.Mathlib.CategoryTheory.Bicategory.End": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/CategoryTheory/Bicategory/End.lean"
    },
    ".lake.packages.mathlib.Mathlib.CategoryTheory.Bicategory.SingleObj": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/CategoryTheory/Bicategory/SingleObj.lean"
    },
    ".lake.packages.mathlib.Mathlib.CategoryTheory.Bicategory.Grothendieck": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/CategoryTheory/Bicategory/Grothendieck.lean"
    },
    ".lake.packages.mathlib.Mathlib.CategoryTheory.Bicategory.Free": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/CategoryTheory/Bicategory/Free.lean"
    },
    ".lake.packages.mathlib.Mathlib.CategoryTheory.Bicategory.LocallyDiscrete": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/CategoryTheory/Bicategory/LocallyDiscrete.lean"
    },
    ".lake.packages.mathlib.Mathlib.CategoryTheory.Bicategory.CatEnriched": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/CategoryTheory/Bicategory/CatEnriched.lean"
    },
    ".lake.packages.mathlib.Mathlib.CategoryTheory.Bicategory.Strict": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/CategoryTheory/Bicategory/Strict.lean"
    },
    ".lake.packages.mathlib.Mathlib.CategoryTheory.Bicategory.Functor.Oplax": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/CategoryTheory/Bicategory/Functor/Oplax.lean"
    },
    ".lake.packages.mathlib.Mathlib.CategoryTheory.Bicategory.Functor.Pseudofunctor": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/CategoryTheory/Bicategory/Functor/Pseudofunctor.lean"
    },
    ".lake.packages.mathlib.Mathlib.CategoryTheory.Bicategory.Functor.Lax": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/CategoryTheory/Bicategory/Functor/Lax.lean"
    },
    ".lake.packages.mathlib.Mathlib.CategoryTheory.Bicategory.Functor.Prelax": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/CategoryTheory/Bicategory/Functor/Prelax.lean"
    },
    ".lake.packages.mathlib.Mathlib.CategoryTheory.Bicategory.Functor.LocallyDiscrete": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/CategoryTheory/Bicategory/Functor/LocallyDiscrete.lean"
    },
    ".lake.packages.mathlib.Mathlib.CategoryTheory.Bicategory.Functor.Strict": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/CategoryTheory/Bicategory/Functor/Strict.lean"
    },
    ".lake.packages.mathlib.Mathlib.CategoryTheory.Bicategory.NaturalTransformation.Oplax": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/CategoryTheory/Bicategory/NaturalTransformation/Oplax.lean"
    },
    ".lake.packages.mathlib.Mathlib.CategoryTheory.Bicategory.NaturalTransformation.Strong": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/CategoryTheory/Bicategory/NaturalTransformation/Strong.lean"
    },
    ".lake.packages.mathlib.Mathlib.CategoryTheory.Bicategory.NaturalTransformation.Pseudo": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/CategoryTheory/Bicategory/NaturalTransformation/Pseudo.lean"
    },
    ".lake.packages.mathlib.Mathlib.CategoryTheory.Bicategory.Modification.Oplax": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/CategoryTheory/Bicategory/Modification/Oplax.lean"
    },
    ".lake.packages.mathlib.Mathlib.CategoryTheory.Bicategory.Kan.IsKan": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/CategoryTheory/Bicategory/Kan/IsKan.lean"
    },
    ".lake.packages.mathlib.Mathlib.CategoryTheory.Bicategory.Kan.Adjunction": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/CategoryTheory/Bicategory/Kan/Adjunction.lean"
    },
    ".lake.packages.mathlib.Mathlib.CategoryTheory.Bicategory.Kan.HasKan": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/CategoryTheory/Bicategory/Kan/HasKan.lean"
    },
    ".lake.packages.mathlib.Mathlib.CategoryTheory.Bicategory.Monad.Basic": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/CategoryTheory/Bicategory/Monad/Basic.lean"
    },
    ".lake.packages.mathlib.Mathlib.CategoryTheory.Bicategory.Adjunction.Basic": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/CategoryTheory/Bicategory/Adjunction/Basic.lean"
    },
    ".lake.packages.mathlib.Mathlib.CategoryTheory.Bicategory.Adjunction.Mate": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/CategoryTheory/Bicategory/Adjunction/Mate.lean"
    },
    ".lake.packages.mathlib.Mathlib.CategoryTheory.Bicategory.Adjunction.Adj": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/CategoryTheory/Bicategory/Adjunction/Adj.lean"
    },
    ".lake.packages.mathlib.Mathlib.CategoryTheory.Bicategory.FunctorBicategory.Oplax": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/CategoryTheory/Bicategory/FunctorBicategory/Oplax.lean"
    },
    ".lake.packages.mathlib.Mathlib.CategoryTheory.Monad.Monadicity": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/CategoryTheory/Monad/Monadicity.lean"
    },
    ".lake.packages.mathlib.Mathlib.CategoryTheory.Monad.Products": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/CategoryTheory/Monad/Products.lean"
    },
    ".lake.packages.mathlib.Mathlib.CategoryTheory.Monad.Basic": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/CategoryTheory/Monad/Basic.lean"
    },
    ".lake.packages.mathlib.Mathlib.CategoryTheory.Monad.Comonadicity": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/CategoryTheory/Monad/Comonadicity.lean"
    },
    ".lake.packages.mathlib.Mathlib.CategoryTheory.Monad.EquivMon": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/CategoryTheory/Monad/EquivMon.lean"
    },
    ".lake.packages.mathlib.Mathlib.CategoryTheory.Monad.Adjunction": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/CategoryTheory/Monad/Adjunction.lean"
    },
    ".lake.packages.mathlib.Mathlib.CategoryTheory.Monad.Types": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/CategoryTheory/Monad/Types.lean"
    },
    ".lake.packages.mathlib.Mathlib.CategoryTheory.Monad.Limits": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/CategoryTheory/Monad/Limits.lean"
    },
    ".lake.packages.mathlib.Mathlib.CategoryTheory.Monad.Algebra": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/CategoryTheory/Monad/Algebra.lean"
    },
    ".lake.packages.mathlib.Mathlib.CategoryTheory.Monad.Coequalizer": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/CategoryTheory/Monad/Coequalizer.lean"
    },
    ".lake.packages.mathlib.Mathlib.CategoryTheory.Monad.Equalizer": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/CategoryTheory/Monad/Equalizer.lean"
    },
    ".lake.packages.mathlib.Mathlib.CategoryTheory.Monad.Kleisli": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/CategoryTheory/Monad/Kleisli.lean"
    },
    ".lake.packages.mathlib.Mathlib.CategoryTheory.Triangulated.Yoneda": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/CategoryTheory/Triangulated/Yoneda.lean"
    },
    ".lake.packages.mathlib.Mathlib.CategoryTheory.Triangulated.HomologicalFunctor": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/CategoryTheory/Triangulated/HomologicalFunctor.lean"
    },
    ".lake.packages.mathlib.Mathlib.CategoryTheory.Triangulated.TriangleShift": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/CategoryTheory/Triangulated/TriangleShift.lean"
    },
    ".lake.packages.mathlib.Mathlib.CategoryTheory.Triangulated.Subcategory": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/CategoryTheory/Triangulated/Subcategory.lean"
    },
    ".lake.packages.mathlib.Mathlib.CategoryTheory.Triangulated.Triangulated": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/CategoryTheory/Triangulated/Triangulated.lean"
    },
    ".lake.packages.mathlib.Mathlib.CategoryTheory.Triangulated.Basic": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/CategoryTheory/Triangulated/Basic.lean"
    },
    ".lake.packages.mathlib.Mathlib.CategoryTheory.Triangulated.Functor": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/CategoryTheory/Triangulated/Functor.lean"
    },
    ".lake.packages.mathlib.Mathlib.CategoryTheory.Triangulated.Adjunction": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/CategoryTheory/Triangulated/Adjunction.lean"
    },
    ".lake.packages.mathlib.Mathlib.CategoryTheory.Triangulated.Pretriangulated": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/CategoryTheory/Triangulated/Pretriangulated.lean"
    },
    ".lake.packages.mathlib.Mathlib.CategoryTheory.Triangulated.Rotate": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/CategoryTheory/Triangulated/Rotate.lean"
    },
    ".lake.packages.mathlib.Mathlib.CategoryTheory.Triangulated.Opposite.Triangle": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/CategoryTheory/Triangulated/Opposite/Triangle.lean"
    },
    ".lake.packages.mathlib.Mathlib.CategoryTheory.Triangulated.Opposite.Basic": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/CategoryTheory/Triangulated/Opposite/Basic.lean"
    },
    ".lake.packages.mathlib.Mathlib.CategoryTheory.Triangulated.Opposite.Functor": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/CategoryTheory/Triangulated/Opposite/Functor.lean"
    },
    ".lake.packages.mathlib.Mathlib.CategoryTheory.Triangulated.Opposite.Pretriangulated": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/CategoryTheory/Triangulated/Opposite/Pretriangulated.lean"
    },
    ".lake.packages.mathlib.Mathlib.CategoryTheory.Triangulated.TStructure.Basic": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/CategoryTheory/Triangulated/TStructure/Basic.lean"
    },
    ".lake.packages.mathlib.Mathlib.CategoryTheory.Subobject.NoetherianObject": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/CategoryTheory/Subobject/NoetherianObject.lean"
    },
    ".lake.packages.mathlib.Mathlib.CategoryTheory.Subobject.Presheaf": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/CategoryTheory/Subobject/Presheaf.lean"
    },
    ".lake.packages.mathlib.Mathlib.CategoryTheory.Subobject.WellPowered": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/CategoryTheory/Subobject/WellPowered.lean"
    },
    ".lake.packages.mathlib.Mathlib.CategoryTheory.Subobject.Comma": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/CategoryTheory/Subobject/Comma.lean"
    },
    ".lake.packages.mathlib.Mathlib.CategoryTheory.Subobject.Basic": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/CategoryTheory/Subobject/Basic.lean"
    },
    ".lake.packages.mathlib.Mathlib.CategoryTheory.Subobject.FactorThru": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/CategoryTheory/Subobject/FactorThru.lean"
    },
    ".lake.packages.mathlib.Mathlib.CategoryTheory.Subobject.MonoOver": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/CategoryTheory/Subobject/MonoOver.lean"
    },
    ".lake.packages.mathlib.Mathlib.CategoryTheory.Subobject.HasCardinalLT": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/CategoryTheory/Subobject/HasCardinalLT.lean"
    },
    ".lake.packages.mathlib.Mathlib.CategoryTheory.Subobject.Types": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/CategoryTheory/Subobject/Types.lean"
    },
    ".lake.packages.mathlib.Mathlib.CategoryTheory.Subobject.Limits": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/CategoryTheory/Subobject/Limits.lean"
    },
    ".lake.packages.mathlib.Mathlib.CategoryTheory.Subobject.Lattice": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/CategoryTheory/Subobject/Lattice.lean"
    },
    ".lake.packages.mathlib.Mathlib.CategoryTheory.FinCategory.AsType": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/CategoryTheory/FinCategory/AsType.lean"
    },
    ".lake.packages.mathlib.Mathlib.CategoryTheory.FinCategory.Basic": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/CategoryTheory/FinCategory/Basic.lean"
    },
    ".lake.packages.mathlib.Mathlib.CategoryTheory.Adjunction.Parametrized": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/CategoryTheory/Adjunction/Parametrized.lean"
    },
    ".lake.packages.mathlib.Mathlib.CategoryTheory.Adjunction.Mates": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/CategoryTheory/Adjunction/Mates.lean"
    },
    ".lake.packages.mathlib.Mathlib.CategoryTheory.Adjunction.Reflective": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/CategoryTheory/Adjunction/Reflective.lean"
    },
    ".lake.packages.mathlib.Mathlib.CategoryTheory.Adjunction.Additive": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/CategoryTheory/Adjunction/Additive.lean"
    },
    ".lake.packages.mathlib.Mathlib.CategoryTheory.Adjunction.AdjointFunctorTheorems": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/CategoryTheory/Adjunction/AdjointFunctorTheorems.lean"
    },
    ".lake.packages.mathlib.Mathlib.CategoryTheory.Adjunction.Comma": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/CategoryTheory/Adjunction/Comma.lean"
    },
    ".lake.packages.mathlib.Mathlib.CategoryTheory.Adjunction.Evaluation": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/CategoryTheory/Adjunction/Evaluation.lean"
    },
    ".lake.packages.mathlib.Mathlib.CategoryTheory.Adjunction.Restrict": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/CategoryTheory/Adjunction/Restrict.lean"
    },
    ".lake.packages.mathlib.Mathlib.CategoryTheory.Adjunction.Basic": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/CategoryTheory/Adjunction/Basic.lean"
    },
    ".lake.packages.mathlib.Mathlib.CategoryTheory.Adjunction.PartialAdjoint": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/CategoryTheory/Adjunction/PartialAdjoint.lean"
    },
    ".lake.packages.mathlib.Mathlib.CategoryTheory.Adjunction.Unique": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/CategoryTheory/Adjunction/Unique.lean"
    },
    ".lake.packages.mathlib.Mathlib.CategoryTheory.Adjunction.Opposites": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/CategoryTheory/Adjunction/Opposites.lean"
    },
    ".lake.packages.mathlib.Mathlib.CategoryTheory.Adjunction.FullyFaithful": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/CategoryTheory/Adjunction/FullyFaithful.lean"
    },
    ".lake.packages.mathlib.Mathlib.CategoryTheory.Adjunction.Triple": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/CategoryTheory/Adjunction/Triple.lean"
    },
    ".lake.packages.mathlib.Mathlib.CategoryTheory.Adjunction.Whiskering": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/CategoryTheory/Adjunction/Whiskering.lean"
    },
    ".lake.packages.mathlib.Mathlib.CategoryTheory.Adjunction.Limits": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/CategoryTheory/Adjunction/Limits.lean"
    },
    ".lake.packages.mathlib.Mathlib.CategoryTheory.Adjunction.Lifting.Right": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/CategoryTheory/Adjunction/Lifting/Right.lean"
    },
    ".lake.packages.mathlib.Mathlib.CategoryTheory.Adjunction.Lifting.Left": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/CategoryTheory/Adjunction/Lifting/Left.lean"
    },
    ".lake.packages.mathlib.Mathlib.CategoryTheory.LiftingProperties.Basic": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/CategoryTheory/LiftingProperties/Basic.lean"
    },
    ".lake.packages.mathlib.Mathlib.CategoryTheory.LiftingProperties.ParametrizedAdjunction": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/CategoryTheory/LiftingProperties/ParametrizedAdjunction.lean"
    },
    ".lake.packages.mathlib.Mathlib.CategoryTheory.LiftingProperties.Adjunction": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/CategoryTheory/LiftingProperties/Adjunction.lean"
    },
    ".lake.packages.mathlib.Mathlib.CategoryTheory.LiftingProperties.Limits": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/CategoryTheory/LiftingProperties/Limits.lean"
    },
    ".lake.packages.mathlib.Mathlib.CategoryTheory.Endofunctor.Algebra": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/CategoryTheory/Endofunctor/Algebra.lean"
    },
    ".lake.packages.mathlib.Mathlib.CategoryTheory.Localization.CalculusOfFractions": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/CategoryTheory/Localization/CalculusOfFractions.lean"
    },
    ".lake.packages.mathlib.Mathlib.CategoryTheory.Localization.Opposite": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/CategoryTheory/Localization/Opposite.lean"
    },
    ".lake.packages.mathlib.Mathlib.CategoryTheory.Localization.LocallySmall": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/CategoryTheory/Localization/LocallySmall.lean"
    },
    ".lake.packages.mathlib.Mathlib.CategoryTheory.Localization.Monoidal": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/CategoryTheory/Localization/Monoidal.lean"
    },
    ".lake.packages.mathlib.Mathlib.CategoryTheory.Localization.Construction": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/CategoryTheory/Localization/Construction.lean"
    },
    ".lake.packages.mathlib.Mathlib.CategoryTheory.Localization.Triangulated": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/CategoryTheory/Localization/Triangulated.lean"
    },
    ".lake.packages.mathlib.Mathlib.CategoryTheory.Localization.Prod": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/CategoryTheory/Localization/Prod.lean"
    },
    ".lake.packages.mathlib.Mathlib.CategoryTheory.Localization.Composition": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/CategoryTheory/Localization/Composition.lean"
    },
    ".lake.packages.mathlib.Mathlib.CategoryTheory.Localization.Linear": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/CategoryTheory/Localization/Linear.lean"
    },
    ".lake.packages.mathlib.Mathlib.CategoryTheory.Localization.Preadditive": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/CategoryTheory/Localization/Preadditive.lean"
    },
    ".lake.packages.mathlib.Mathlib.CategoryTheory.Localization.Pi": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/CategoryTheory/Localization/Pi.lean"
    },
    ".lake.packages.mathlib.Mathlib.CategoryTheory.Localization.Bifunctor": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/CategoryTheory/Localization/Bifunctor.lean"
    },
    ".lake.packages.mathlib.Mathlib.CategoryTheory.Localization.Quotient": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/CategoryTheory/Localization/Quotient.lean"
    },
    ".lake.packages.mathlib.Mathlib.CategoryTheory.Localization.Trifunctor": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/CategoryTheory/Localization/Trifunctor.lean"
    },
    ".lake.packages.mathlib.Mathlib.CategoryTheory.Localization.LocalizerMorphism": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/CategoryTheory/Localization/LocalizerMorphism.lean"
    },
    ".lake.packages.mathlib.Mathlib.CategoryTheory.Localization.Bousfield": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/CategoryTheory/Localization/Bousfield.lean"
    },
    ".lake.packages.mathlib.Mathlib.CategoryTheory.Localization.HasLocalization": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/CategoryTheory/Localization/HasLocalization.lean"
    },
    ".lake.packages.mathlib.Mathlib.CategoryTheory.Localization.Adjunction": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/CategoryTheory/Localization/Adjunction.lean"
    },
    ".lake.packages.mathlib.Mathlib.CategoryTheory.Localization.SmallHom": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/CategoryTheory/Localization/SmallHom.lean"
    },
    ".lake.packages.mathlib.Mathlib.CategoryTheory.Localization.HomEquiv": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/CategoryTheory/Localization/HomEquiv.lean"
    },
    ".lake.packages.mathlib.Mathlib.CategoryTheory.Localization.FiniteProducts": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/CategoryTheory/Localization/FiniteProducts.lean"
    },
    ".lake.packages.mathlib.Mathlib.CategoryTheory.Localization.Equivalence": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/CategoryTheory/Localization/Equivalence.lean"
    },
    ".lake.packages.mathlib.Mathlib.CategoryTheory.Localization.SmallShiftedHom": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/CategoryTheory/Localization/SmallShiftedHom.lean"
    },
    ".lake.packages.mathlib.Mathlib.CategoryTheory.Localization.StructuredArrow": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/CategoryTheory/Localization/StructuredArrow.lean"
    },
    ".lake.packages.mathlib.Mathlib.CategoryTheory.Localization.Resolution": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/CategoryTheory/Localization/Resolution.lean"
    },
    ".lake.packages.mathlib.Mathlib.CategoryTheory.Localization.Predicate": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/CategoryTheory/Localization/Predicate.lean"
    },
    ".lake.packages.mathlib.Mathlib.CategoryTheory.Localization.CalculusOfFractions.Preadditive": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/CategoryTheory/Localization/CalculusOfFractions/Preadditive.lean"
    },
    ".lake.packages.mathlib.Mathlib.CategoryTheory.Localization.CalculusOfFractions.ComposableArrows": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/CategoryTheory/Localization/CalculusOfFractions/ComposableArrows.lean"
    },
    ".lake.packages.mathlib.Mathlib.CategoryTheory.Localization.CalculusOfFractions.OfAdjunction": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/CategoryTheory/Localization/CalculusOfFractions/OfAdjunction.lean"
    },
    ".lake.packages.mathlib.Mathlib.CategoryTheory.Localization.CalculusOfFractions.Fractions": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/CategoryTheory/Localization/CalculusOfFractions/Fractions.lean"
    },
    ".lake.packages.mathlib.Mathlib.CategoryTheory.Localization.DerivabilityStructure.Constructor": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/CategoryTheory/Localization/DerivabilityStructure/Constructor.lean"
    },
    ".lake.packages.mathlib.Mathlib.CategoryTheory.Localization.DerivabilityStructure.Basic": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/CategoryTheory/Localization/DerivabilityStructure/Basic.lean"
    },
    ".lake.packages.mathlib.Mathlib.CategoryTheory.Localization.DerivabilityStructure.OfFunctorialResolutions": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/CategoryTheory/Localization/DerivabilityStructure/OfFunctorialResolutions.lean"
    },
    ".lake.packages.mathlib.Mathlib.GroupTheory.ArchimedeanDensely": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/GroupTheory/ArchimedeanDensely.lean"
    },
    ".lake.packages.mathlib.Mathlib.GroupTheory.PGroup": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/GroupTheory/PGroup.lean"
    },
    ".lake.packages.mathlib.Mathlib.GroupTheory.NoncommPiCoprod": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/GroupTheory/NoncommPiCoprod.lean"
    },
    ".lake.packages.mathlib.Mathlib.GroupTheory.CoprodI": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/GroupTheory/CoprodI.lean"
    },
    ".lake.packages.mathlib.Mathlib.GroupTheory.Nilpotent": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/GroupTheory/Nilpotent.lean"
    },
    ".lake.packages.mathlib.Mathlib.GroupTheory.FreeAbelianGroup": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/GroupTheory/FreeAbelianGroup.lean"
    },
    ".lake.packages.mathlib.Mathlib.GroupTheory.Solvable": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/GroupTheory/Solvable.lean"
    },
    ".lake.packages.mathlib.Mathlib.GroupTheory.Complement": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/GroupTheory/Complement.lean"
    },
    ".lake.packages.mathlib.Mathlib.GroupTheory.Rank": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/GroupTheory/Rank.lean"
    },
    ".lake.packages.mathlib.Mathlib.GroupTheory.FixedPointFree": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/GroupTheory/FixedPointFree.lean"
    },
    ".lake.packages.mathlib.Mathlib.GroupTheory.ClassEquation": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/GroupTheory/ClassEquation.lean"
    },
    ".lake.packages.mathlib.Mathlib.GroupTheory.CosetCover": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/GroupTheory/CosetCover.lean"
    },
    ".lake.packages.mathlib.Mathlib.GroupTheory.Index": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/GroupTheory/Index.lean"
    },
    ".lake.packages.mathlib.Mathlib.GroupTheory.Archimedean": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/GroupTheory/Archimedean.lean"
    },
    ".lake.packages.mathlib.Mathlib.GroupTheory.EckmannHilton": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/GroupTheory/EckmannHilton.lean"
    },
    ".lake.packages.mathlib.Mathlib.GroupTheory.Divisible": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/GroupTheory/Divisible.lean"
    },
    ".lake.packages.mathlib.Mathlib.GroupTheory.DoubleCoset": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/GroupTheory/DoubleCoset.lean"
    },
    ".lake.packages.mathlib.Mathlib.GroupTheory.SchurZassenhaus": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/GroupTheory/SchurZassenhaus.lean"
    },
    ".lake.packages.mathlib.Mathlib.GroupTheory.PresentedGroup": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/GroupTheory/PresentedGroup.lean"
    },
    ".lake.packages.mathlib.Mathlib.GroupTheory.CommutingProbability": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/GroupTheory/CommutingProbability.lean"
    },
    ".lake.packages.mathlib.Mathlib.GroupTheory.Sylow": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/GroupTheory/Sylow.lean"
    },
    ".lake.packages.mathlib.Mathlib.GroupTheory.Torsion": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/GroupTheory/Torsion.lean"
    },
    ".lake.packages.mathlib.Mathlib.GroupTheory.HNNExtension": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/GroupTheory/HNNExtension.lean"
    },
    ".lake.packages.mathlib.Mathlib.GroupTheory.Schreier": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/GroupTheory/Schreier.lean"
    },
    ".lake.packages.mathlib.Mathlib.GroupTheory.NoncommCoprod": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/GroupTheory/NoncommCoprod.lean"
    },
    ".lake.packages.mathlib.Mathlib.GroupTheory.RegularWreathProduct": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/GroupTheory/RegularWreathProduct.lean"
    },
    ".lake.packages.mathlib.Mathlib.GroupTheory.Exponent": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/GroupTheory/Exponent.lean"
    },
    ".lake.packages.mathlib.Mathlib.GroupTheory.Commensurable": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/GroupTheory/Commensurable.lean"
    },
    ".lake.packages.mathlib.Mathlib.GroupTheory.Transfer": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/GroupTheory/Transfer.lean"
    },
    ".lake.packages.mathlib.Mathlib.GroupTheory.Goursat": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/GroupTheory/Goursat.lean"
    },
    ".lake.packages.mathlib.Mathlib.GroupTheory.Frattini": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/GroupTheory/Frattini.lean"
    },
    ".lake.packages.mathlib.Mathlib.GroupTheory.IndexNormal": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/GroupTheory/IndexNormal.lean"
    },
    ".lake.packages.mathlib.Mathlib.GroupTheory.PushoutI": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/GroupTheory/PushoutI.lean"
    },
    ".lake.packages.mathlib.Mathlib.GroupTheory.Finiteness": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/GroupTheory/Finiteness.lean"
    },
    ".lake.packages.mathlib.Mathlib.GroupTheory.SemidirectProduct": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/GroupTheory/SemidirectProduct.lean"
    },
    ".lake.packages.mathlib.Mathlib.GroupTheory.OrderOfElement": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/GroupTheory/OrderOfElement.lean"
    },
    ".lake.packages.mathlib.Mathlib.GroupTheory.Order.Min": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/GroupTheory/Order/Min.lean"
    },
    ".lake.packages.mathlib.Mathlib.GroupTheory.Coset.Card": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/GroupTheory/Coset/Card.lean"
    },
    ".lake.packages.mathlib.Mathlib.GroupTheory.Coset.Basic": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/GroupTheory/Coset/Basic.lean"
    },
    ".lake.packages.mathlib.Mathlib.GroupTheory.Coset.Defs": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/GroupTheory/Coset/Defs.lean"
    },
    ".lake.packages.mathlib.Mathlib.GroupTheory.Commutator.Finite": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/GroupTheory/Commutator/Finite.lean"
    },
    ".lake.packages.mathlib.Mathlib.GroupTheory.Commutator.Basic": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/GroupTheory/Commutator/Basic.lean"
    },
    ".lake.packages.mathlib.Mathlib.GroupTheory.QuotientGroup.Finite": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/GroupTheory/QuotientGroup/Finite.lean"
    },
    ".lake.packages.mathlib.Mathlib.GroupTheory.QuotientGroup.Basic": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/GroupTheory/QuotientGroup/Basic.lean"
    },
    ".lake.packages.mathlib.Mathlib.GroupTheory.QuotientGroup.Defs": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/GroupTheory/QuotientGroup/Defs.lean"
    },
    ".lake.packages.mathlib.Mathlib.GroupTheory.Perm.Finite": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/GroupTheory/Perm/Finite.lean"
    },
    ".lake.packages.mathlib.Mathlib.GroupTheory.Perm.ClosureSwap": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/GroupTheory/Perm/ClosureSwap.lean"
    },
    ".lake.packages.mathlib.Mathlib.GroupTheory.Perm.Fin": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/GroupTheory/Perm/Fin.lean"
    },
    ".lake.packages.mathlib.Mathlib.GroupTheory.Perm.Sign": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/GroupTheory/Perm/Sign.lean"
    },
    ".lake.packages.mathlib.Mathlib.GroupTheory.Perm.Option": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/GroupTheory/Perm/Option.lean"
    },
    ".lake.packages.mathlib.Mathlib.GroupTheory.Perm.Support": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/GroupTheory/Perm/Support.lean"
    },
    ".lake.packages.mathlib.Mathlib.GroupTheory.Perm.ConjAct": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/GroupTheory/Perm/ConjAct.lean"
    },
    ".lake.packages.mathlib.Mathlib.GroupTheory.Perm.List": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/GroupTheory/Perm/List.lean"
    },
    ".lake.packages.mathlib.Mathlib.GroupTheory.Perm.Closure": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/GroupTheory/Perm/Closure.lean"
    },
    ".lake.packages.mathlib.Mathlib.GroupTheory.Perm.Basic": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/GroupTheory/Perm/Basic.lean"
    },
    ".lake.packages.mathlib.Mathlib.GroupTheory.Perm.ViaEmbedding": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/GroupTheory/Perm/ViaEmbedding.lean"
    },
    ".lake.packages.mathlib.Mathlib.GroupTheory.Perm.Subgroup": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/GroupTheory/Perm/Subgroup.lean"
    },
    ".lake.packages.mathlib.Mathlib.GroupTheory.Perm.DomMulAct": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/GroupTheory/Perm/DomMulAct.lean"
    },
    ".lake.packages.mathlib.Mathlib.GroupTheory.Perm.Centralizer": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/GroupTheory/Perm/Centralizer.lean"
    },
    ".lake.packages.mathlib.Mathlib.GroupTheory.Perm.Cycle.Factors": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/GroupTheory/Perm/Cycle/Factors.lean"
    },
    ".lake.packages.mathlib.Mathlib.GroupTheory.Perm.Cycle.Type": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/GroupTheory/Perm/Cycle/Type.lean"
    },
    ".lake.packages.mathlib.Mathlib.GroupTheory.Perm.Cycle.Basic": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/GroupTheory/Perm/Cycle/Basic.lean"
    },
    ".lake.packages.mathlib.Mathlib.GroupTheory.Perm.Cycle.Concrete": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/GroupTheory/Perm/Cycle/Concrete.lean"
    },
    ".lake.packages.mathlib.Mathlib.GroupTheory.Perm.Cycle.PossibleTypes": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/GroupTheory/Perm/Cycle/PossibleTypes.lean"
    },
    ".lake.packages.mathlib.Mathlib.GroupTheory.Coxeter.Length": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/GroupTheory/Coxeter/Length.lean"
    },
    ".lake.packages.mathlib.Mathlib.GroupTheory.Coxeter.Matrix": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/GroupTheory/Coxeter/Matrix.lean"
    },
    ".lake.packages.mathlib.Mathlib.GroupTheory.Coxeter.Basic": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/GroupTheory/Coxeter/Basic.lean"
    },
    ".lake.packages.mathlib.Mathlib.GroupTheory.Coxeter.Inversion": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/GroupTheory/Coxeter/Inversion.lean"
    },
    ".lake.packages.mathlib.Mathlib.GroupTheory.GroupAction.SubMulAction": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/GroupTheory/GroupAction/SubMulAction.lean"
    },
    ".lake.packages.mathlib.Mathlib.GroupTheory.GroupAction.MultiplePrimitivity": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/GroupTheory/GroupAction/MultiplePrimitivity.lean"
    },
    ".lake.packages.mathlib.Mathlib.GroupTheory.GroupAction.MultipleTransitivity": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/GroupTheory/GroupAction/MultipleTransitivity.lean"
    },
    ".lake.packages.mathlib.Mathlib.GroupTheory.GroupAction.Transitive": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/GroupTheory/GroupAction/Transitive.lean"
    },
    ".lake.packages.mathlib.Mathlib.GroupTheory.GroupAction.Support": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/GroupTheory/GroupAction/Support.lean"
    },
    ".lake.packages.mathlib.Mathlib.GroupTheory.GroupAction.Ring": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/GroupTheory/GroupAction/Ring.lean"
    },
    ".lake.packages.mathlib.Mathlib.GroupTheory.GroupAction.ConjAct": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/GroupTheory/GroupAction/ConjAct.lean"
    },
    ".lake.packages.mathlib.Mathlib.GroupTheory.GroupAction.Pointwise": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/GroupTheory/GroupAction/Pointwise.lean"
    },
    ".lake.packages.mathlib.Mathlib.GroupTheory.GroupAction.Basic": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/GroupTheory/GroupAction/Basic.lean"
    },
    ".lake.packages.mathlib.Mathlib.GroupTheory.GroupAction.IterateAct": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/GroupTheory/GroupAction/IterateAct.lean"
    },
    ".lake.packages.mathlib.Mathlib.GroupTheory.GroupAction.Quotient": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/GroupTheory/GroupAction/Quotient.lean"
    },
    ".lake.packages.mathlib.Mathlib.GroupTheory.GroupAction.FixingSubgroup": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/GroupTheory/GroupAction/FixingSubgroup.lean"
    },
    ".lake.packages.mathlib.Mathlib.GroupTheory.GroupAction.Defs": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/GroupTheory/GroupAction/Defs.lean"
    },
    ".lake.packages.mathlib.Mathlib.GroupTheory.GroupAction.Period": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/GroupTheory/GroupAction/Period.lean"
    },
    ".lake.packages.mathlib.Mathlib.GroupTheory.GroupAction.Embedding": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/GroupTheory/GroupAction/Embedding.lean"
    },
    ".lake.packages.mathlib.Mathlib.GroupTheory.GroupAction.CardCommute": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/GroupTheory/GroupAction/CardCommute.lean"
    },
    ".lake.packages.mathlib.Mathlib.GroupTheory.GroupAction.Blocks": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/GroupTheory/GroupAction/Blocks.lean"
    },
    ".lake.packages.mathlib.Mathlib.GroupTheory.GroupAction.Iwasawa": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/GroupTheory/GroupAction/Iwasawa.lean"
    },
    ".lake.packages.mathlib.Mathlib.GroupTheory.GroupAction.FixedPoints": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/GroupTheory/GroupAction/FixedPoints.lean"
    },
    ".lake.packages.mathlib.Mathlib.GroupTheory.GroupAction.Primitive": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/GroupTheory/GroupAction/Primitive.lean"
    },
    ".lake.packages.mathlib.Mathlib.GroupTheory.GroupAction.Hom": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/GroupTheory/GroupAction/Hom.lean"
    },
    ".lake.packages.mathlib.Mathlib.GroupTheory.GroupAction.SubMulAction.OfStabilizer": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/GroupTheory/GroupAction/SubMulAction/OfStabilizer.lean"
    },
    ".lake.packages.mathlib.Mathlib.GroupTheory.GroupAction.SubMulAction.Pointwise": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/GroupTheory/GroupAction/SubMulAction/Pointwise.lean"
    },
    ".lake.packages.mathlib.Mathlib.GroupTheory.GroupAction.SubMulAction.OfFixingSubgroup": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/GroupTheory/GroupAction/SubMulAction/OfFixingSubgroup.lean"
    },
    ".lake.packages.mathlib.Mathlib.GroupTheory.GroupAction.DomAct.ActionHom": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/GroupTheory/GroupAction/DomAct/ActionHom.lean"
    },
    ".lake.packages.mathlib.Mathlib.GroupTheory.GroupAction.DomAct.Basic": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/GroupTheory/GroupAction/DomAct/Basic.lean"
    },
    ".lake.packages.mathlib.Mathlib.GroupTheory.Coprod.Basic": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/GroupTheory/Coprod/Basic.lean"
    },
    ".lake.packages.mathlib.Mathlib.GroupTheory.Abelianization.Finite": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/GroupTheory/Abelianization/Finite.lean"
    },
    ".lake.packages.mathlib.Mathlib.GroupTheory.Abelianization.Defs": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/GroupTheory/Abelianization/Defs.lean"
    },
    ".lake.packages.mathlib.Mathlib.GroupTheory.Submonoid.Inverses": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/GroupTheory/Submonoid/Inverses.lean"
    },
    ".lake.packages.mathlib.Mathlib.GroupTheory.Submonoid.Center": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/GroupTheory/Submonoid/Center.lean"
    },
    ".lake.packages.mathlib.Mathlib.GroupTheory.Submonoid.Centralizer": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/GroupTheory/Submonoid/Centralizer.lean"
    },
    ".lake.packages.mathlib.Mathlib.GroupTheory.FiniteAbelian.Duality": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/GroupTheory/FiniteAbelian/Duality.lean"
    },
    ".lake.packages.mathlib.Mathlib.GroupTheory.FiniteAbelian.Basic": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/GroupTheory/FiniteAbelian/Basic.lean"
    },
    ".lake.packages.mathlib.Mathlib.GroupTheory.Congruence.Opposite": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/GroupTheory/Congruence/Opposite.lean"
    },
    ".lake.packages.mathlib.Mathlib.GroupTheory.Congruence.Basic": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/GroupTheory/Congruence/Basic.lean"
    },
    ".lake.packages.mathlib.Mathlib.GroupTheory.Congruence.Defs": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/GroupTheory/Congruence/Defs.lean"
    },
    ".lake.packages.mathlib.Mathlib.GroupTheory.Congruence.BigOperators": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/GroupTheory/Congruence/BigOperators.lean"
    },
    ".lake.packages.mathlib.Mathlib.GroupTheory.Congruence.Hom": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/GroupTheory/Congruence/Hom.lean"
    },
    ".lake.packages.mathlib.Mathlib.GroupTheory.SpecificGroups.Alternating": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/GroupTheory/SpecificGroups/Alternating.lean"
    },
    ".lake.packages.mathlib.Mathlib.GroupTheory.SpecificGroups.Dihedral": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/GroupTheory/SpecificGroups/Dihedral.lean"
    },
    ".lake.packages.mathlib.Mathlib.GroupTheory.SpecificGroups.Cyclic": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/GroupTheory/SpecificGroups/Cyclic.lean"
    },
    ".lake.packages.mathlib.Mathlib.GroupTheory.SpecificGroups.ZGroup": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/GroupTheory/SpecificGroups/ZGroup.lean"
    },
    ".lake.packages.mathlib.Mathlib.GroupTheory.SpecificGroups.Quaternion": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/GroupTheory/SpecificGroups/Quaternion.lean"
    },
    ".lake.packages.mathlib.Mathlib.GroupTheory.SpecificGroups.KleinFour": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/GroupTheory/SpecificGroups/KleinFour.lean"
    },
    ".lake.packages.mathlib.Mathlib.GroupTheory.SpecificGroups.Alternating.KleinFour": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/GroupTheory/SpecificGroups/Alternating/KleinFour.lean"
    },
    ".lake.packages.mathlib.Mathlib.GroupTheory.SpecificGroups.Alternating.Centralizer": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/GroupTheory/SpecificGroups/Alternating/Centralizer.lean"
    },
    ".lake.packages.mathlib.Mathlib.GroupTheory.OreLocalization.OreSet": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/GroupTheory/OreLocalization/OreSet.lean"
    },
    ".lake.packages.mathlib.Mathlib.GroupTheory.OreLocalization.Basic": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/GroupTheory/OreLocalization/Basic.lean"
    },
    ".lake.packages.mathlib.Mathlib.GroupTheory.OreLocalization.Cardinality": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/GroupTheory/OreLocalization/Cardinality.lean"
    },
    ".lake.packages.mathlib.Mathlib.GroupTheory.MonoidLocalization.Finite": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/GroupTheory/MonoidLocalization/Finite.lean"
    },
    ".lake.packages.mathlib.Mathlib.GroupTheory.MonoidLocalization.Away": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/GroupTheory/MonoidLocalization/Away.lean"
    },
    ".lake.packages.mathlib.Mathlib.GroupTheory.MonoidLocalization.GrothendieckGroup": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/GroupTheory/MonoidLocalization/GrothendieckGroup.lean"
    },
    ".lake.packages.mathlib.Mathlib.GroupTheory.MonoidLocalization.Order": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/GroupTheory/MonoidLocalization/Order.lean"
    },
    ".lake.packages.mathlib.Mathlib.GroupTheory.MonoidLocalization.MonoidWithZero": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/GroupTheory/MonoidLocalization/MonoidWithZero.lean"
    },
    ".lake.packages.mathlib.Mathlib.GroupTheory.MonoidLocalization.Basic": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/GroupTheory/MonoidLocalization/Basic.lean"
    },
    ".lake.packages.mathlib.Mathlib.GroupTheory.MonoidLocalization.Cardinality": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/GroupTheory/MonoidLocalization/Cardinality.lean"
    },
    ".lake.packages.mathlib.Mathlib.GroupTheory.MonoidLocalization.DivPairs": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/GroupTheory/MonoidLocalization/DivPairs.lean"
    },
    ".lake.packages.mathlib.Mathlib.GroupTheory.GroupExtension.Basic": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/GroupTheory/GroupExtension/Basic.lean"
    },
    ".lake.packages.mathlib.Mathlib.GroupTheory.GroupExtension.Defs": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/GroupTheory/GroupExtension/Defs.lean"
    },
    ".lake.packages.mathlib.Mathlib.GroupTheory.FreeGroup.IsFreeGroup": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/GroupTheory/FreeGroup/IsFreeGroup.lean"
    },
    ".lake.packages.mathlib.Mathlib.GroupTheory.FreeGroup.Basic": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/GroupTheory/FreeGroup/Basic.lean"
    },
    ".lake.packages.mathlib.Mathlib.GroupTheory.FreeGroup.GeneratorEquiv": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/GroupTheory/FreeGroup/GeneratorEquiv.lean"
    },
    ".lake.packages.mathlib.Mathlib.GroupTheory.FreeGroup.NielsenSchreier": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/GroupTheory/FreeGroup/NielsenSchreier.lean"
    },
    ".lake.packages.mathlib.Mathlib.GroupTheory.FreeGroup.Reduce": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/GroupTheory/FreeGroup/Reduce.lean"
    },
    ".lake.packages.mathlib.Mathlib.GroupTheory.Subgroup.Saturated": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/GroupTheory/Subgroup/Saturated.lean"
    },
    ".lake.packages.mathlib.Mathlib.GroupTheory.Subgroup.Center": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/GroupTheory/Subgroup/Center.lean"
    },
    ".lake.packages.mathlib.Mathlib.GroupTheory.Subgroup.Simple": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/GroupTheory/Subgroup/Simple.lean"
    },
    ".lake.packages.mathlib.Mathlib.GroupTheory.Subgroup.Centralizer": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/GroupTheory/Subgroup/Centralizer.lean"
    },
    ".lake.packages.mathlib.Mathlib.GroupTheory.Subsemigroup.Center": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/GroupTheory/Subsemigroup/Center.lean"
    },
    ".lake.packages.mathlib.Mathlib.GroupTheory.Subsemigroup.Centralizer": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/GroupTheory/Subsemigroup/Centralizer.lean"
    },
    ".lake.packages.mathlib.Mathlib.AlgebraicTopology.MooreComplex": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/AlgebraicTopology/MooreComplex.lean"
    },
    ".lake.packages.mathlib.Mathlib.AlgebraicTopology.TopologicalSimplex": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/AlgebraicTopology/TopologicalSimplex.lean"
    },
    ".lake.packages.mathlib.Mathlib.AlgebraicTopology.AlternatingFaceMapComplex": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/AlgebraicTopology/AlternatingFaceMapComplex.lean"
    },
    ".lake.packages.mathlib.Mathlib.AlgebraicTopology.ExtraDegeneracy": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/AlgebraicTopology/ExtraDegeneracy.lean"
    },
    ".lake.packages.mathlib.Mathlib.AlgebraicTopology.SimplicialNerve": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/AlgebraicTopology/SimplicialNerve.lean"
    },
    ".lake.packages.mathlib.Mathlib.AlgebraicTopology.CechNerve": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/AlgebraicTopology/CechNerve.lean"
    },
    ".lake.packages.mathlib.Mathlib.AlgebraicTopology.SingularSet": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/AlgebraicTopology/SingularSet.lean"
    },
    ".lake.packages.mathlib.Mathlib.AlgebraicTopology.RelativeCellComplex.AttachCells": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/AlgebraicTopology/RelativeCellComplex/AttachCells.lean"
    },
    ".lake.packages.mathlib.Mathlib.AlgebraicTopology.RelativeCellComplex.Basic": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/AlgebraicTopology/RelativeCellComplex/Basic.lean"
    },
    ".lake.packages.mathlib.Mathlib.AlgebraicTopology.DoldKan.Normalized": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/AlgebraicTopology/DoldKan/Normalized.lean"
    },
    ".lake.packages.mathlib.Mathlib.AlgebraicTopology.DoldKan.Decomposition": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/AlgebraicTopology/DoldKan/Decomposition.lean"
    },
    ".lake.packages.mathlib.Mathlib.AlgebraicTopology.DoldKan.FunctorGamma": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/AlgebraicTopology/DoldKan/FunctorGamma.lean"
    },
    ".lake.packages.mathlib.Mathlib.AlgebraicTopology.DoldKan.HomotopyEquivalence": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/AlgebraicTopology/DoldKan/HomotopyEquivalence.lean"
    },
    ".lake.packages.mathlib.Mathlib.AlgebraicTopology.DoldKan.SplitSimplicialObject": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/AlgebraicTopology/DoldKan/SplitSimplicialObject.lean"
    },
    ".lake.packages.mathlib.Mathlib.AlgebraicTopology.DoldKan.NReflectsIso": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/AlgebraicTopology/DoldKan/NReflectsIso.lean"
    },
    ".lake.packages.mathlib.Mathlib.AlgebraicTopology.DoldKan.Projections": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/AlgebraicTopology/DoldKan/Projections.lean"
    },
    ".lake.packages.mathlib.Mathlib.AlgebraicTopology.DoldKan.Faces": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/AlgebraicTopology/DoldKan/Faces.lean"
    },
    ".lake.packages.mathlib.Mathlib.AlgebraicTopology.DoldKan.GammaCompN": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/AlgebraicTopology/DoldKan/GammaCompN.lean"
    },
    ".lake.packages.mathlib.Mathlib.AlgebraicTopology.DoldKan.Degeneracies": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/AlgebraicTopology/DoldKan/Degeneracies.lean"
    },
    ".lake.packages.mathlib.Mathlib.AlgebraicTopology.DoldKan.Homotopies": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/AlgebraicTopology/DoldKan/Homotopies.lean"
    },
    ".lake.packages.mathlib.Mathlib.AlgebraicTopology.DoldKan.NCompGamma": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/AlgebraicTopology/DoldKan/NCompGamma.lean"
    },
    ".lake.packages.mathlib.Mathlib.AlgebraicTopology.DoldKan.PInfty": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/AlgebraicTopology/DoldKan/PInfty.lean"
    },
    ".lake.packages.mathlib.Mathlib.AlgebraicTopology.DoldKan.EquivalencePseudoabelian": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/AlgebraicTopology/DoldKan/EquivalencePseudoabelian.lean"
    },
    ".lake.packages.mathlib.Mathlib.AlgebraicTopology.DoldKan.Equivalence": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/AlgebraicTopology/DoldKan/Equivalence.lean"
    },
    ".lake.packages.mathlib.Mathlib.AlgebraicTopology.DoldKan.EquivalenceAdditive": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/AlgebraicTopology/DoldKan/EquivalenceAdditive.lean"
    },
    ".lake.packages.mathlib.Mathlib.AlgebraicTopology.DoldKan.Notations": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/AlgebraicTopology/DoldKan/Notations.lean"
    },
    ".lake.packages.mathlib.Mathlib.AlgebraicTopology.DoldKan.FunctorN": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/AlgebraicTopology/DoldKan/FunctorN.lean"
    },
    ".lake.packages.mathlib.Mathlib.AlgebraicTopology.DoldKan.Compatibility": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/AlgebraicTopology/DoldKan/Compatibility.lean"
    },
    ".lake.packages.mathlib.Mathlib.AlgebraicTopology.FundamentalGroupoid.SimplyConnected": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/AlgebraicTopology/FundamentalGroupoid/SimplyConnected.lean"
    },
    ".lake.packages.mathlib.Mathlib.AlgebraicTopology.FundamentalGroupoid.PUnit": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/AlgebraicTopology/FundamentalGroupoid/PUnit.lean"
    },
    ".lake.packages.mathlib.Mathlib.AlgebraicTopology.FundamentalGroupoid.Product": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/AlgebraicTopology/FundamentalGroupoid/Product.lean"
    },
    ".lake.packages.mathlib.Mathlib.AlgebraicTopology.FundamentalGroupoid.Basic": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/AlgebraicTopology/FundamentalGroupoid/Basic.lean"
    },
    ".lake.packages.mathlib.Mathlib.AlgebraicTopology.FundamentalGroupoid.InducedMaps": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/AlgebraicTopology/FundamentalGroupoid/InducedMaps.lean"
    },
    ".lake.packages.mathlib.Mathlib.AlgebraicTopology.FundamentalGroupoid.FundamentalGroup": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/AlgebraicTopology/FundamentalGroupoid/FundamentalGroup.lean"
    },
    ".lake.packages.mathlib.Mathlib.AlgebraicTopology.SimplicialCategory.SimplicialObject": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/AlgebraicTopology/SimplicialCategory/SimplicialObject.lean"
    },
    ".lake.packages.mathlib.Mathlib.AlgebraicTopology.SimplicialCategory.Basic": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/AlgebraicTopology/SimplicialCategory/Basic.lean"
    },
    ".lake.packages.mathlib.Mathlib.AlgebraicTopology.SimplicialObject.Split": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/AlgebraicTopology/SimplicialObject/Split.lean"
    },
    ".lake.packages.mathlib.Mathlib.AlgebraicTopology.SimplicialObject.Basic": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/AlgebraicTopology/SimplicialObject/Basic.lean"
    },
    ".lake.packages.mathlib.Mathlib.AlgebraicTopology.SimplicialObject.Coskeletal": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/AlgebraicTopology/SimplicialObject/Coskeletal.lean"
    },
    ".lake.packages.mathlib.Mathlib.AlgebraicTopology.ModelCategory.CategoryWithCofibrations": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/AlgebraicTopology/ModelCategory/CategoryWithCofibrations.lean"
    },
    ".lake.packages.mathlib.Mathlib.AlgebraicTopology.ModelCategory.Instances": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/AlgebraicTopology/ModelCategory/Instances.lean"
    },
    ".lake.packages.mathlib.Mathlib.AlgebraicTopology.ModelCategory.Basic": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/AlgebraicTopology/ModelCategory/Basic.lean"
    },
    ".lake.packages.mathlib.Mathlib.AlgebraicTopology.ModelCategory.JoyalTrick": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/AlgebraicTopology/ModelCategory/JoyalTrick.lean"
    },
    ".lake.packages.mathlib.Mathlib.AlgebraicTopology.ModelCategory.IsCofibrant": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/AlgebraicTopology/ModelCategory/IsCofibrant.lean"
    },
    ".lake.packages.mathlib.Mathlib.AlgebraicTopology.ModelCategory.Cylinder": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/AlgebraicTopology/ModelCategory/Cylinder.lean"
    },
    ".lake.packages.mathlib.Mathlib.AlgebraicTopology.SimplicialSet.NerveAdjunction": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/AlgebraicTopology/SimplicialSet/NerveAdjunction.lean"
    },
    ".lake.packages.mathlib.Mathlib.AlgebraicTopology.SimplicialSet.Horn": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/AlgebraicTopology/SimplicialSet/Horn.lean"
    },
    ".lake.packages.mathlib.Mathlib.AlgebraicTopology.SimplicialSet.CategoryWithFibrations": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/AlgebraicTopology/SimplicialSet/CategoryWithFibrations.lean"
    },
    ".lake.packages.mathlib.Mathlib.AlgebraicTopology.SimplicialSet.StrictSegal": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/AlgebraicTopology/SimplicialSet/StrictSegal.lean"
    },
    ".lake.packages.mathlib.Mathlib.AlgebraicTopology.SimplicialSet.Monoidal": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/AlgebraicTopology/SimplicialSet/Monoidal.lean"
    },
    ".lake.packages.mathlib.Mathlib.AlgebraicTopology.SimplicialSet.Nerve": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/AlgebraicTopology/SimplicialSet/Nerve.lean"
    },
    ".lake.packages.mathlib.Mathlib.AlgebraicTopology.SimplicialSet.HomotopyCat": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/AlgebraicTopology/SimplicialSet/HomotopyCat.lean"
    },
    ".lake.packages.mathlib.Mathlib.AlgebraicTopology.SimplicialSet.Boundary": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/AlgebraicTopology/SimplicialSet/Boundary.lean"
    },
    ".lake.packages.mathlib.Mathlib.AlgebraicTopology.SimplicialSet.Subcomplex": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/AlgebraicTopology/SimplicialSet/Subcomplex.lean"
    },
    ".lake.packages.mathlib.Mathlib.AlgebraicTopology.SimplicialSet.KanComplex": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/AlgebraicTopology/SimplicialSet/KanComplex.lean"
    },
    ".lake.packages.mathlib.Mathlib.AlgebraicTopology.SimplicialSet.Basic": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/AlgebraicTopology/SimplicialSet/Basic.lean"
    },
    ".lake.packages.mathlib.Mathlib.AlgebraicTopology.SimplicialSet.Path": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/AlgebraicTopology/SimplicialSet/Path.lean"
    },
    ".lake.packages.mathlib.Mathlib.AlgebraicTopology.SimplicialSet.Degenerate": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/AlgebraicTopology/SimplicialSet/Degenerate.lean"
    },
    ".lake.packages.mathlib.Mathlib.AlgebraicTopology.SimplicialSet.StdSimplex": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/AlgebraicTopology/SimplicialSet/StdSimplex.lean"
    },
    ".lake.packages.mathlib.Mathlib.AlgebraicTopology.SimplicialSet.Coskeletal": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/AlgebraicTopology/SimplicialSet/Coskeletal.lean"
    },
    ".lake.packages.mathlib.Mathlib.AlgebraicTopology.SingularHomology.Basic": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/AlgebraicTopology/SingularHomology/Basic.lean"
    },
    ".lake.packages.mathlib.Mathlib.AlgebraicTopology.Quasicategory.StrictSegal": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/AlgebraicTopology/Quasicategory/StrictSegal.lean"
    },
    ".lake.packages.mathlib.Mathlib.AlgebraicTopology.Quasicategory.Nerve": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/AlgebraicTopology/Quasicategory/Nerve.lean"
    },
    ".lake.packages.mathlib.Mathlib.AlgebraicTopology.Quasicategory.Basic": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/AlgebraicTopology/Quasicategory/Basic.lean"
    },
    ".lake.packages.mathlib.Mathlib.AlgebraicTopology.SimplexCategory.Basic": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/AlgebraicTopology/SimplexCategory/Basic.lean"
    },
    ".lake.packages.mathlib.Mathlib.AlgebraicTopology.SimplexCategory.Augmented": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/AlgebraicTopology/SimplexCategory/Augmented.lean"
    },
    ".lake.packages.mathlib.Mathlib.AlgebraicTopology.SimplexCategory.Defs": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/AlgebraicTopology/SimplexCategory/Defs.lean"
    },
    ".lake.packages.mathlib.Mathlib.AlgebraicTopology.SimplexCategory.Truncated": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/AlgebraicTopology/SimplexCategory/Truncated.lean"
    },
    ".lake.packages.mathlib.Mathlib.AlgebraicTopology.SimplexCategory.MorphismProperty": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/AlgebraicTopology/SimplexCategory/MorphismProperty.lean"
    },
    ".lake.packages.mathlib.Mathlib.AlgebraicTopology.SimplexCategory.GeneratorsRelations.NormalForms": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/AlgebraicTopology/SimplexCategory/GeneratorsRelations/NormalForms.lean"
    },
    ".lake.packages.mathlib.Mathlib.AlgebraicTopology.SimplexCategory.GeneratorsRelations.EpiMono": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/AlgebraicTopology/SimplexCategory/GeneratorsRelations/EpiMono.lean"
    },
    ".lake.packages.mathlib.Mathlib.AlgebraicTopology.SimplexCategory.GeneratorsRelations.Basic": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/AlgebraicTopology/SimplexCategory/GeneratorsRelations/Basic.lean"
    },
    ".lake.packages.mathlib.Mathlib.Testing.Plausible.Functions": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Testing/Plausible/Functions.lean"
    },
    ".lake.packages.mathlib.Mathlib.Testing.Plausible.Testable": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Testing/Plausible/Testable.lean"
    },
    ".lake.packages.mathlib.Mathlib.Testing.Plausible.Sampleable": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Testing/Plausible/Sampleable.lean"
    },
    ".lake.packages.mathlib.Mathlib.Condensed.Module": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Condensed/Module.lean"
    },
    ".lake.packages.mathlib.Mathlib.Condensed.Functors": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Condensed/Functors.lean"
    },
    ".lake.packages.mathlib.Mathlib.Condensed.Basic": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Condensed/Basic.lean"
    },
    ".lake.packages.mathlib.Mathlib.Condensed.TopComparison": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Condensed/TopComparison.lean"
    },
    ".lake.packages.mathlib.Mathlib.Condensed.CartesianClosed": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Condensed/CartesianClosed.lean"
    },
    ".lake.packages.mathlib.Mathlib.Condensed.Solid": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Condensed/Solid.lean"
    },
    ".lake.packages.mathlib.Mathlib.Condensed.Explicit": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Condensed/Explicit.lean"
    },
    ".lake.packages.mathlib.Mathlib.Condensed.TopCatAdjunction": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Condensed/TopCatAdjunction.lean"
    },
    ".lake.packages.mathlib.Mathlib.Condensed.Epi": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Condensed/Epi.lean"
    },
    ".lake.packages.mathlib.Mathlib.Condensed.AB": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Condensed/AB.lean"
    },
    ".lake.packages.mathlib.Mathlib.Condensed.Limits": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Condensed/Limits.lean"
    },
    ".lake.packages.mathlib.Mathlib.Condensed.Equivalence": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Condensed/Equivalence.lean"
    },
    ".lake.packages.mathlib.Mathlib.Condensed.Discrete.Colimit": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Condensed/Discrete/Colimit.lean"
    },
    ".lake.packages.mathlib.Mathlib.Condensed.Discrete.Characterization": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Condensed/Discrete/Characterization.lean"
    },
    ".lake.packages.mathlib.Mathlib.Condensed.Discrete.Module": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Condensed/Discrete/Module.lean"
    },
    ".lake.packages.mathlib.Mathlib.Condensed.Discrete.Basic": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Condensed/Discrete/Basic.lean"
    },
    ".lake.packages.mathlib.Mathlib.Condensed.Discrete.LocallyConstant": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Condensed/Discrete/LocallyConstant.lean"
    },
    ".lake.packages.mathlib.Mathlib.Condensed.Light.Module": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Condensed/Light/Module.lean"
    },
    ".lake.packages.mathlib.Mathlib.Condensed.Light.Functors": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Condensed/Light/Functors.lean"
    },
    ".lake.packages.mathlib.Mathlib.Condensed.Light.Basic": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Condensed/Light/Basic.lean"
    },
    ".lake.packages.mathlib.Mathlib.Condensed.Light.TopComparison": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Condensed/Light/TopComparison.lean"
    },
    ".lake.packages.mathlib.Mathlib.Condensed.Light.CartesianClosed": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Condensed/Light/CartesianClosed.lean"
    },
    ".lake.packages.mathlib.Mathlib.Condensed.Light.Explicit": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Condensed/Light/Explicit.lean"
    },
    ".lake.packages.mathlib.Mathlib.Condensed.Light.TopCatAdjunction": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Condensed/Light/TopCatAdjunction.lean"
    },
    ".lake.packages.mathlib.Mathlib.Condensed.Light.Epi": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Condensed/Light/Epi.lean"
    },
    ".lake.packages.mathlib.Mathlib.Condensed.Light.AB": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Condensed/Light/AB.lean"
    },
    ".lake.packages.mathlib.Mathlib.Condensed.Light.Limits": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Condensed/Light/Limits.lean"
    },
    ".lake.packages.mathlib.Mathlib.RingTheory.FiniteStability": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/RingTheory/FiniteStability.lean"
    },
    ".lake.packages.mathlib.Mathlib.RingTheory.FiniteLength": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/RingTheory/FiniteLength.lean"
    },
    ".lake.packages.mathlib.Mathlib.RingTheory.Fintype": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/RingTheory/Fintype.lean"
    },
    ".lake.packages.mathlib.Mathlib.RingTheory.RingInvo": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/RingTheory/RingInvo.lean"
    },
    ".lake.packages.mathlib.Mathlib.RingTheory.Length": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/RingTheory/Length.lean"
    },
    ".lake.packages.mathlib.Mathlib.RingTheory.SurjectiveOnStalks": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/RingTheory/SurjectiveOnStalks.lean"
    },
    ".lake.packages.mathlib.Mathlib.RingTheory.Presentation": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/RingTheory/Presentation.lean"
    },
    ".lake.packages.mathlib.Mathlib.RingTheory.IsTensorProduct": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/RingTheory/IsTensorProduct.lean"
    },
    ".lake.packages.mathlib.Mathlib.RingTheory.PiTensorProduct": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/RingTheory/PiTensorProduct.lean"
    },
    ".lake.packages.mathlib.Mathlib.RingTheory.Perfection": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/RingTheory/Perfection.lean"
    },
    ".lake.packages.mathlib.Mathlib.RingTheory.Invariant": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/RingTheory/Invariant.lean"
    },
    ".lake.packages.mathlib.Mathlib.RingTheory.HopkinsLevitzki": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/RingTheory/HopkinsLevitzki.lean"
    },
    ".lake.packages.mathlib.Mathlib.RingTheory.Support": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/RingTheory/Support.lean"
    },
    ".lake.packages.mathlib.Mathlib.RingTheory.Henselian": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/RingTheory/Henselian.lean"
    },
    ".lake.packages.mathlib.Mathlib.RingTheory.NoetherNormalization": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/RingTheory/NoetherNormalization.lean"
    },
    ".lake.packages.mathlib.Mathlib.RingTheory.OrderOfVanishing": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/RingTheory/OrderOfVanishing.lean"
    },
    ".lake.packages.mathlib.Mathlib.RingTheory.IntegralDomain": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/RingTheory/IntegralDomain.lean"
    },
    ".lake.packages.mathlib.Mathlib.RingTheory.MatrixPolynomialAlgebra": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/RingTheory/MatrixPolynomialAlgebra.lean"
    },
    ".lake.packages.mathlib.Mathlib.RingTheory.EisensteinCriterion": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/RingTheory/EisensteinCriterion.lean"
    },
    ".lake.packages.mathlib.Mathlib.RingTheory.Nakayama": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/RingTheory/Nakayama.lean"
    },
    ".lake.packages.mathlib.Mathlib.RingTheory.Multiplicity": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/RingTheory/Multiplicity.lean"
    },
    ".lake.packages.mathlib.Mathlib.RingTheory.AlgebraTower": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/RingTheory/AlgebraTower.lean"
    },
    ".lake.packages.mathlib.Mathlib.RingTheory.AdjoinRoot": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/RingTheory/AdjoinRoot.lean"
    },
    ".lake.packages.mathlib.Mathlib.RingTheory.LittleWedderburn": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/RingTheory/LittleWedderburn.lean"
    },
    ".lake.packages.mathlib.Mathlib.RingTheory.IsPrimary": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/RingTheory/IsPrimary.lean"
    },
    ".lake.packages.mathlib.Mathlib.RingTheory.Filtration": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/RingTheory/Filtration.lean"
    },
    ".lake.packages.mathlib.Mathlib.RingTheory.Extension": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/RingTheory/Extension.lean"
    },
    ".lake.packages.mathlib.Mathlib.RingTheory.Discriminant": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/RingTheory/Discriminant.lean"
    },
    ".lake.packages.mathlib.Mathlib.RingTheory.ClassGroup": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/RingTheory/ClassGroup.lean"
    },
    ".lake.packages.mathlib.Mathlib.RingTheory.EuclideanDomain": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/RingTheory/EuclideanDomain.lean"
    },
    ".lake.packages.mathlib.Mathlib.RingTheory.PrincipalIdealDomain": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/RingTheory/PrincipalIdealDomain.lean"
    },
    ".lake.packages.mathlib.Mathlib.RingTheory.Frobenius": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/RingTheory/Frobenius.lean"
    },
    ".lake.packages.mathlib.Mathlib.RingTheory.Bezout": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/RingTheory/Bezout.lean"
    },
    ".lake.packages.mathlib.Mathlib.RingTheory.CotangentLocalizationAway": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/RingTheory/CotangentLocalizationAway.lean"
    },
    ".lake.packages.mathlib.Mathlib.RingTheory.NormTrace": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/RingTheory/NormTrace.lean"
    },
    ".lake.packages.mathlib.Mathlib.RingTheory.PolynomialAlgebra": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/RingTheory/PolynomialAlgebra.lean"
    },
    ".lake.packages.mathlib.Mathlib.RingTheory.FreeCommRing": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/RingTheory/FreeCommRing.lean"
    },
    ".lake.packages.mathlib.Mathlib.RingTheory.PowerBasis": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/RingTheory/PowerBasis.lean"
    },
    ".lake.packages.mathlib.Mathlib.RingTheory.FiniteType": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/RingTheory/FiniteType.lean"
    },
    ".lake.packages.mathlib.Mathlib.RingTheory.Complex": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/RingTheory/Complex.lean"
    },
    ".lake.packages.mathlib.Mathlib.RingTheory.MvPolynomial": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/RingTheory/MvPolynomial.lean"
    },
    ".lake.packages.mathlib.Mathlib.RingTheory.Generators": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/RingTheory/Generators.lean"
    },
    ".lake.packages.mathlib.Mathlib.RingTheory.Grassmannian": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/RingTheory/Grassmannian.lean"
    },
    ".lake.packages.mathlib.Mathlib.RingTheory.RingHomProperties": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/RingTheory/RingHomProperties.lean"
    },
    ".lake.packages.mathlib.Mathlib.RingTheory.LinearDisjoint": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/RingTheory/LinearDisjoint.lean"
    },
    ".lake.packages.mathlib.Mathlib.RingTheory.IsAdjoinRoot": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/RingTheory/IsAdjoinRoot.lean"
    },
    ".lake.packages.mathlib.Mathlib.RingTheory.QuotSMulTop": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/RingTheory/QuotSMulTop.lean"
    },
    ".lake.packages.mathlib.Mathlib.RingTheory.ChainOfDivisors": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/RingTheory/ChainOfDivisors.lean"
    },
    ".lake.packages.mathlib.Mathlib.RingTheory.Prime": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/RingTheory/Prime.lean"
    },
    ".lake.packages.mathlib.Mathlib.RingTheory.FinitePresentation": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/RingTheory/FinitePresentation.lean"
    },
    ".lake.packages.mathlib.Mathlib.RingTheory.ReesAlgebra": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/RingTheory/ReesAlgebra.lean"
    },
    ".lake.packages.mathlib.Mathlib.RingTheory.Lasker": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/RingTheory/Lasker.lean"
    },
    ".lake.packages.mathlib.Mathlib.RingTheory.ZMod": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/RingTheory/ZMod.lean"
    },
    ".lake.packages.mathlib.Mathlib.RingTheory.Binomial": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/RingTheory/Binomial.lean"
    },
    ".lake.packages.mathlib.Mathlib.RingTheory.OrzechProperty": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/RingTheory/OrzechProperty.lean"
    },
    ".lake.packages.mathlib.Mathlib.RingTheory.MatrixAlgebra": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/RingTheory/MatrixAlgebra.lean"
    },
    ".lake.packages.mathlib.Mathlib.RingTheory.LaurentSeries": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/RingTheory/LaurentSeries.lean"
    },
    ".lake.packages.mathlib.Mathlib.RingTheory.PrincipalIdealDomainOfPrime": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/RingTheory/PrincipalIdealDomainOfPrime.lean"
    },
    ".lake.packages.mathlib.Mathlib.RingTheory.Idempotents": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/RingTheory/Idempotents.lean"
    },
    ".lake.packages.mathlib.Mathlib.RingTheory.Nullstellensatz": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/RingTheory/Nullstellensatz.lean"
    },
    ".lake.packages.mathlib.Mathlib.RingTheory.DualNumber": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/RingTheory/DualNumber.lean"
    },
    ".lake.packages.mathlib.Mathlib.RingTheory.FreeRing": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/RingTheory/FreeRing.lean"
    },
    ".lake.packages.mathlib.Mathlib.RingTheory.EssentialFiniteness": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/RingTheory/EssentialFiniteness.lean"
    },
    ".lake.packages.mathlib.Mathlib.RingTheory.Radical": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/RingTheory/Radical.lean"
    },
    ".lake.packages.mathlib.Mathlib.RingTheory.SimpleRing.Matrix": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/RingTheory/SimpleRing/Matrix.lean"
    },
    ".lake.packages.mathlib.Mathlib.RingTheory.SimpleRing.Basic": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/RingTheory/SimpleRing/Basic.lean"
    },
    ".lake.packages.mathlib.Mathlib.RingTheory.SimpleRing.Congr": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/RingTheory/SimpleRing/Congr.lean"
    },
    ".lake.packages.mathlib.Mathlib.RingTheory.SimpleRing.Defs": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/RingTheory/SimpleRing/Defs.lean"
    },
    ".lake.packages.mathlib.Mathlib.RingTheory.SimpleRing.Field": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/RingTheory/SimpleRing/Field.lean"
    },
    ".lake.packages.mathlib.Mathlib.RingTheory.NonUnitalSubring.Basic": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/RingTheory/NonUnitalSubring/Basic.lean"
    },
    ".lake.packages.mathlib.Mathlib.RingTheory.NonUnitalSubring.Defs": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/RingTheory/NonUnitalSubring/Defs.lean"
    },
    ".lake.packages.mathlib.Mathlib.RingTheory.Flat.EquationalCriterion": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/RingTheory/Flat/EquationalCriterion.lean"
    },
    ".lake.packages.mathlib.Mathlib.RingTheory.Flat.Basic": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/RingTheory/Flat/Basic.lean"
    },
    ".lake.packages.mathlib.Mathlib.RingTheory.Flat.Domain": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/RingTheory/Flat/Domain.lean"
    },
    ".lake.packages.mathlib.Mathlib.RingTheory.Flat.Localization": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/RingTheory/Flat/Localization.lean"
    },
    ".lake.packages.mathlib.Mathlib.RingTheory.Flat.Stability": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/RingTheory/Flat/Stability.lean"
    },
    ".lake.packages.mathlib.Mathlib.RingTheory.Flat.CategoryTheory": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/RingTheory/Flat/CategoryTheory.lean"
    },
    ".lake.packages.mathlib.Mathlib.RingTheory.Flat.Equalizer": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/RingTheory/Flat/Equalizer.lean"
    },
    ".lake.packages.mathlib.Mathlib.RingTheory.Flat.FaithfullyFlat.Basic": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/RingTheory/Flat/FaithfullyFlat/Basic.lean"
    },
    ".lake.packages.mathlib.Mathlib.RingTheory.Flat.FaithfullyFlat.Algebra": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/RingTheory/Flat/FaithfullyFlat/Algebra.lean"
    },
    ".lake.packages.mathlib.Mathlib.RingTheory.KrullDimension.Module": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/RingTheory/KrullDimension/Module.lean"
    },
    ".lake.packages.mathlib.Mathlib.RingTheory.KrullDimension.PID": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/RingTheory/KrullDimension/PID.lean"
    },
    ".lake.packages.mathlib.Mathlib.RingTheory.KrullDimension.Basic": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/RingTheory/KrullDimension/Basic.lean"
    },
    ".lake.packages.mathlib.Mathlib.RingTheory.KrullDimension.NonZeroDivisors": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/RingTheory/KrullDimension/NonZeroDivisors.lean"
    },
    ".lake.packages.mathlib.Mathlib.RingTheory.KrullDimension.Field": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/RingTheory/KrullDimension/Field.lean"
    },
    ".lake.packages.mathlib.Mathlib.RingTheory.KrullDimension.Polynomial": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/RingTheory/KrullDimension/Polynomial.lean"
    },
    ".lake.packages.mathlib.Mathlib.RingTheory.KrullDimension.Zero": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/RingTheory/KrullDimension/Zero.lean"
    },
    ".lake.packages.mathlib.Mathlib.RingTheory.Kaehler.JacobiZariski": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/RingTheory/Kaehler/JacobiZariski.lean"
    },
    ".lake.packages.mathlib.Mathlib.RingTheory.Kaehler.TensorProduct": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/RingTheory/Kaehler/TensorProduct.lean"
    },
    ".lake.packages.mathlib.Mathlib.RingTheory.Kaehler.Basic": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/RingTheory/Kaehler/Basic.lean"
    },
    ".lake.packages.mathlib.Mathlib.RingTheory.Kaehler.CotangentComplex": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/RingTheory/Kaehler/CotangentComplex.lean"
    },
    ".lake.packages.mathlib.Mathlib.RingTheory.Kaehler.Polynomial": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/RingTheory/Kaehler/Polynomial.lean"
    },
    ".lake.packages.mathlib.Mathlib.RingTheory.Perfectoid.Untilt": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/RingTheory/Perfectoid/Untilt.lean"
    },
    ".lake.packages.mathlib.Mathlib.RingTheory.Invariant.Basic": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/RingTheory/Invariant/Basic.lean"
    },
    ".lake.packages.mathlib.Mathlib.RingTheory.Invariant.Defs": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/RingTheory/Invariant/Defs.lean"
    },
    ".lake.packages.mathlib.Mathlib.RingTheory.Invariant.Profinite": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/RingTheory/Invariant/Profinite.lean"
    },
    ".lake.packages.mathlib.Mathlib.RingTheory.LocalRing.Module": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/RingTheory/LocalRing/Module.lean"
    },
    ".lake.packages.mathlib.Mathlib.RingTheory.LocalRing.LocalSubring": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/RingTheory/LocalRing/LocalSubring.lean"
    },
    ".lake.packages.mathlib.Mathlib.RingTheory.LocalRing.Subring": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/RingTheory/LocalRing/Subring.lean"
    },
    ".lake.packages.mathlib.Mathlib.RingTheory.LocalRing.Basic": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/RingTheory/LocalRing/Basic.lean"
    },
    ".lake.packages.mathlib.Mathlib.RingTheory.LocalRing.Quotient": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/RingTheory/LocalRing/Quotient.lean"
    },
    ".lake.packages.mathlib.Mathlib.RingTheory.LocalRing.NonLocalRing": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/RingTheory/LocalRing/NonLocalRing.lean"
    },
    ".lake.packages.mathlib.Mathlib.RingTheory.LocalRing.Defs": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/RingTheory/LocalRing/Defs.lean"
    },
    ".lake.packages.mathlib.Mathlib.RingTheory.LocalRing.ResidueField.Fiber": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/RingTheory/LocalRing/ResidueField/Fiber.lean"
    },
    ".lake.packages.mathlib.Mathlib.RingTheory.LocalRing.ResidueField.Instances": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/RingTheory/LocalRing/ResidueField/Instances.lean"
    },
    ".lake.packages.mathlib.Mathlib.RingTheory.LocalRing.ResidueField.Algebraic": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/RingTheory/LocalRing/ResidueField/Algebraic.lean"
    },
    ".lake.packages.mathlib.Mathlib.RingTheory.LocalRing.ResidueField.Basic": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/RingTheory/LocalRing/ResidueField/Basic.lean"
    },
    ".lake.packages.mathlib.Mathlib.RingTheory.LocalRing.ResidueField.Ideal": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/RingTheory/LocalRing/ResidueField/Ideal.lean"
    },
    ".lake.packages.mathlib.Mathlib.RingTheory.LocalRing.ResidueField.Defs": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/RingTheory/LocalRing/ResidueField/Defs.lean"
    },
    ".lake.packages.mathlib.Mathlib.RingTheory.LocalRing.RingHom.Basic": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/RingTheory/LocalRing/RingHom/Basic.lean"
    },
    ".lake.packages.mathlib.Mathlib.RingTheory.LocalRing.MaximalIdeal.Basic": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/RingTheory/LocalRing/MaximalIdeal/Basic.lean"
    },
    ".lake.packages.mathlib.Mathlib.RingTheory.LocalRing.MaximalIdeal.Defs": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/RingTheory/LocalRing/MaximalIdeal/Defs.lean"
    },
    ".lake.packages.mathlib.Mathlib.RingTheory.Trace.Basic": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/RingTheory/Trace/Basic.lean"
    },
    ".lake.packages.mathlib.Mathlib.RingTheory.Trace.Quotient": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/RingTheory/Trace/Quotient.lean"
    },
    ".lake.packages.mathlib.Mathlib.RingTheory.Trace.Defs": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/RingTheory/Trace/Defs.lean"
    },
    ".lake.packages.mathlib.Mathlib.RingTheory.Extension.Basic": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/RingTheory/Extension/Basic.lean"
    },
    ".lake.packages.mathlib.Mathlib.RingTheory.Extension.Generators": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/RingTheory/Extension/Generators.lean"
    },
    ".lake.packages.mathlib.Mathlib.RingTheory.Extension.Cotangent.Basic": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/RingTheory/Extension/Cotangent/Basic.lean"
    },
    ".lake.packages.mathlib.Mathlib.RingTheory.Extension.Cotangent.LocalizationAway": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/RingTheory/Extension/Cotangent/LocalizationAway.lean"
    },
    ".lake.packages.mathlib.Mathlib.RingTheory.Extension.Presentation.Basic": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/RingTheory/Extension/Presentation/Basic.lean"
    },
    ".lake.packages.mathlib.Mathlib.RingTheory.DividedPowers.SubDPIdeal": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/RingTheory/DividedPowers/SubDPIdeal.lean"
    },
    ".lake.packages.mathlib.Mathlib.RingTheory.DividedPowers.DPMorphism": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/RingTheory/DividedPowers/DPMorphism.lean"
    },
    ".lake.packages.mathlib.Mathlib.RingTheory.DividedPowers.Basic": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/RingTheory/DividedPowers/Basic.lean"
    },
    ".lake.packages.mathlib.Mathlib.RingTheory.FilteredAlgebra.Basic": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/RingTheory/FilteredAlgebra/Basic.lean"
    },
    ".lake.packages.mathlib.Mathlib.RingTheory.WittVector.Complete": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/RingTheory/WittVector/Complete.lean"
    },
    ".lake.packages.mathlib.Mathlib.RingTheory.WittVector.StructurePolynomial": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/RingTheory/WittVector/StructurePolynomial.lean"
    },
    ".lake.packages.mathlib.Mathlib.RingTheory.WittVector.WittPolynomial": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/RingTheory/WittVector/WittPolynomial.lean"
    },
    ".lake.packages.mathlib.Mathlib.RingTheory.WittVector.DiscreteValuationRing": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/RingTheory/WittVector/DiscreteValuationRing.lean"
    },
    ".lake.packages.mathlib.Mathlib.RingTheory.WittVector.MulCoeff": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/RingTheory/WittVector/MulCoeff.lean"
    },
    ".lake.packages.mathlib.Mathlib.RingTheory.WittVector.Verschiebung": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/RingTheory/WittVector/Verschiebung.lean"
    },
    ".lake.packages.mathlib.Mathlib.RingTheory.WittVector.Basic": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/RingTheory/WittVector/Basic.lean"
    },
    ".lake.packages.mathlib.Mathlib.RingTheory.WittVector.Frobenius": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/RingTheory/WittVector/Frobenius.lean"
    },
    ".lake.packages.mathlib.Mathlib.RingTheory.WittVector.Compare": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/RingTheory/WittVector/Compare.lean"
    },
    ".lake.packages.mathlib.Mathlib.RingTheory.WittVector.InitTail": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/RingTheory/WittVector/InitTail.lean"
    },
    ".lake.packages.mathlib.Mathlib.RingTheory.WittVector.Domain": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/RingTheory/WittVector/Domain.lean"
    },
    ".lake.packages.mathlib.Mathlib.RingTheory.WittVector.Defs": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/RingTheory/WittVector/Defs.lean"
    },
    ".lake.packages.mathlib.Mathlib.RingTheory.WittVector.IsPoly": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/RingTheory/WittVector/IsPoly.lean"
    },
    ".lake.packages.mathlib.Mathlib.RingTheory.WittVector.Truncated": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/RingTheory/WittVector/Truncated.lean"
    },
    ".lake.packages.mathlib.Mathlib.RingTheory.WittVector.FrobeniusFractionField": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/RingTheory/WittVector/FrobeniusFractionField.lean"
    },
    ".lake.packages.mathlib.Mathlib.RingTheory.WittVector.MulP": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/RingTheory/WittVector/MulP.lean"
    },
    ".lake.packages.mathlib.Mathlib.RingTheory.WittVector.Identities": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/RingTheory/WittVector/Identities.lean"
    },
    ".lake.packages.mathlib.Mathlib.RingTheory.WittVector.Isocrystal": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/RingTheory/WittVector/Isocrystal.lean"
    },
    ".lake.packages.mathlib.Mathlib.RingTheory.WittVector.Teichmuller": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/RingTheory/WittVector/Teichmuller.lean"
    },
    ".lake.packages.mathlib.Mathlib.RingTheory.GradedAlgebra.Basic": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/RingTheory/GradedAlgebra/Basic.lean"
    },
    ".lake.packages.mathlib.Mathlib.RingTheory.GradedAlgebra.HomogeneousLocalization": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/RingTheory/GradedAlgebra/HomogeneousLocalization.lean"
    },
    ".lake.packages.mathlib.Mathlib.RingTheory.GradedAlgebra.FiniteType": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/RingTheory/GradedAlgebra/FiniteType.lean"
    },
    ".lake.packages.mathlib.Mathlib.RingTheory.GradedAlgebra.Noetherian": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/RingTheory/GradedAlgebra/Noetherian.lean"
    },
    ".lake.packages.mathlib.Mathlib.RingTheory.GradedAlgebra.Radical": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/RingTheory/GradedAlgebra/Radical.lean"
    },
    ".lake.packages.mathlib.Mathlib.RingTheory.GradedAlgebra.Homogeneous.Ideal": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/RingTheory/GradedAlgebra/Homogeneous/Ideal.lean"
    },
    ".lake.packages.mathlib.Mathlib.RingTheory.GradedAlgebra.Homogeneous.Submodule": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/RingTheory/GradedAlgebra/Homogeneous/Submodule.lean"
    },
    ".lake.packages.mathlib.Mathlib.RingTheory.UniqueFactorizationDomain.Finite": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/RingTheory/UniqueFactorizationDomain/Finite.lean"
    },
    ".lake.packages.mathlib.Mathlib.RingTheory.UniqueFactorizationDomain.GCDMonoid": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/RingTheory/UniqueFactorizationDomain/GCDMonoid.lean"
    },
    ".lake.packages.mathlib.Mathlib.RingTheory.UniqueFactorizationDomain.Multiplicative": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/RingTheory/UniqueFactorizationDomain/Multiplicative.lean"
    },
    ".lake.packages.mathlib.Mathlib.RingTheory.UniqueFactorizationDomain.Nat": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/RingTheory/UniqueFactorizationDomain/Nat.lean"
    },
    ".lake.packages.mathlib.Mathlib.RingTheory.UniqueFactorizationDomain.Multiplicity": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/RingTheory/UniqueFactorizationDomain/Multiplicity.lean"
    },
    ".lake.packages.mathlib.Mathlib.RingTheory.UniqueFactorizationDomain.Basic": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/RingTheory/UniqueFactorizationDomain/Basic.lean"
    },
    ".lake.packages.mathlib.Mathlib.RingTheory.UniqueFactorizationDomain.NormalizedFactors": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/RingTheory/UniqueFactorizationDomain/NormalizedFactors.lean"
    },
    ".lake.packages.mathlib.Mathlib.RingTheory.UniqueFactorizationDomain.Ideal": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/RingTheory/UniqueFactorizationDomain/Ideal.lean"
    },
    ".lake.packages.mathlib.Mathlib.RingTheory.UniqueFactorizationDomain.Defs": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/RingTheory/UniqueFactorizationDomain/Defs.lean"
    },
    ".lake.packages.mathlib.Mathlib.RingTheory.UniqueFactorizationDomain.Finsupp": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/RingTheory/UniqueFactorizationDomain/Finsupp.lean"
    },
    ".lake.packages.mathlib.Mathlib.RingTheory.UniqueFactorizationDomain.FactorSet": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/RingTheory/UniqueFactorizationDomain/FactorSet.lean"
    },
    ".lake.packages.mathlib.Mathlib.RingTheory.ZMod.UnitsCyclic": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/RingTheory/ZMod/UnitsCyclic.lean"
    },
    ".lake.packages.mathlib.Mathlib.RingTheory.MvPolynomial.EulerIdentity": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/RingTheory/MvPolynomial/EulerIdentity.lean"
    },
    ".lake.packages.mathlib.Mathlib.RingTheory.MvPolynomial.Tower": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/RingTheory/MvPolynomial/Tower.lean"
    },
    ".lake.packages.mathlib.Mathlib.RingTheory.MvPolynomial.Basic": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/RingTheory/MvPolynomial/Basic.lean"
    },
    ".lake.packages.mathlib.Mathlib.RingTheory.MvPolynomial.Ideal": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/RingTheory/MvPolynomial/Ideal.lean"
    },
    ".lake.packages.mathlib.Mathlib.RingTheory.MvPolynomial.Groebner": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/RingTheory/MvPolynomial/Groebner.lean"
    },
    ".lake.packages.mathlib.Mathlib.RingTheory.MvPolynomial.FreeCommRing": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/RingTheory/MvPolynomial/FreeCommRing.lean"
    },
    ".lake.packages.mathlib.Mathlib.RingTheory.MvPolynomial.Localization": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/RingTheory/MvPolynomial/Localization.lean"
    },
    ".lake.packages.mathlib.Mathlib.RingTheory.MvPolynomial.Homogeneous": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/RingTheory/MvPolynomial/Homogeneous.lean"
    },
    ".lake.packages.mathlib.Mathlib.RingTheory.MvPolynomial.WeightedHomogeneous": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/RingTheory/MvPolynomial/WeightedHomogeneous.lean"
    },
    ".lake.packages.mathlib.Mathlib.RingTheory.MvPolynomial.MonomialOrder": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/RingTheory/MvPolynomial/MonomialOrder.lean"
    },
    ".lake.packages.mathlib.Mathlib.RingTheory.MvPolynomial.MonomialOrder.DegLex": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/RingTheory/MvPolynomial/MonomialOrder/DegLex.lean"
    },
    ".lake.packages.mathlib.Mathlib.RingTheory.MvPolynomial.Symmetric.FundamentalTheorem": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/RingTheory/MvPolynomial/Symmetric/FundamentalTheorem.lean"
    },
    ".lake.packages.mathlib.Mathlib.RingTheory.MvPolynomial.Symmetric.NewtonIdentities": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/RingTheory/MvPolynomial/Symmetric/NewtonIdentities.lean"
    },
    ".lake.packages.mathlib.Mathlib.RingTheory.MvPolynomial.Symmetric.Defs": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/RingTheory/MvPolynomial/Symmetric/Defs.lean"
    },
    ".lake.packages.mathlib.Mathlib.RingTheory.Derivation.Lie": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/RingTheory/Derivation/Lie.lean"
    },
    ".lake.packages.mathlib.Mathlib.RingTheory.Derivation.DifferentialRing": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/RingTheory/Derivation/DifferentialRing.lean"
    },
    ".lake.packages.mathlib.Mathlib.RingTheory.Derivation.Basic": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/RingTheory/Derivation/Basic.lean"
    },
    ".lake.packages.mathlib.Mathlib.RingTheory.Derivation.MapCoeffs": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/RingTheory/Derivation/MapCoeffs.lean"
    },
    ".lake.packages.mathlib.Mathlib.RingTheory.Derivation.ToSquareZero": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/RingTheory/Derivation/ToSquareZero.lean"
    },
    ".lake.packages.mathlib.Mathlib.RingTheory.Etale.Kaehler": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/RingTheory/Etale/Kaehler.lean"
    },
    ".lake.packages.mathlib.Mathlib.RingTheory.Etale.Pi": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/RingTheory/Etale/Pi.lean"
    },
    ".lake.packages.mathlib.Mathlib.RingTheory.Etale.Basic": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/RingTheory/Etale/Basic.lean"
    },
    ".lake.packages.mathlib.Mathlib.RingTheory.Etale.Field": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/RingTheory/Etale/Field.lean"
    },
    ".lake.packages.mathlib.Mathlib.RingTheory.Smooth.StandardSmooth": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/RingTheory/Smooth/StandardSmooth.lean"
    },
    ".lake.packages.mathlib.Mathlib.RingTheory.Smooth.Kaehler": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/RingTheory/Smooth/Kaehler.lean"
    },
    ".lake.packages.mathlib.Mathlib.RingTheory.Smooth.Pi": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/RingTheory/Smooth/Pi.lean"
    },
    ".lake.packages.mathlib.Mathlib.RingTheory.Smooth.Basic": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/RingTheory/Smooth/Basic.lean"
    },
    ".lake.packages.mathlib.Mathlib.RingTheory.Smooth.Local": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/RingTheory/Smooth/Local.lean"
    },
    ".lake.packages.mathlib.Mathlib.RingTheory.Smooth.Locus": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/RingTheory/Smooth/Locus.lean"
    },
    ".lake.packages.mathlib.Mathlib.RingTheory.Smooth.StandardSmoothCotangent": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/RingTheory/Smooth/StandardSmoothCotangent.lean"
    },
    ".lake.packages.mathlib.Mathlib.RingTheory.Ideal.Nonunits": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/RingTheory/Ideal/Nonunits.lean"
    },
    ".lake.packages.mathlib.Mathlib.RingTheory.Ideal.Int": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/RingTheory/Ideal/Int.lean"
    },
    ".lake.packages.mathlib.Mathlib.RingTheory.Ideal.GoingDown": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/RingTheory/Ideal/GoingDown.lean"
    },
    ".lake.packages.mathlib.Mathlib.RingTheory.Ideal.NatInt": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/RingTheory/Ideal/NatInt.lean"
    },
    ".lake.packages.mathlib.Mathlib.RingTheory.Ideal.AssociatedPrime": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/RingTheory/Ideal/AssociatedPrime.lean"
    },
    ".lake.packages.mathlib.Mathlib.RingTheory.Ideal.Colon": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/RingTheory/Ideal/Colon.lean"
    },
    ".lake.packages.mathlib.Mathlib.RingTheory.Ideal.KrullsHeightTheorem": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/RingTheory/Ideal/KrullsHeightTheorem.lean"
    },
    ".lake.packages.mathlib.Mathlib.RingTheory.Ideal.Maps": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/RingTheory/Ideal/Maps.lean"
    },
    ".lake.packages.mathlib.Mathlib.RingTheory.Ideal.Prod": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/RingTheory/Ideal/Prod.lean"
    },
    ".lake.packages.mathlib.Mathlib.RingTheory.Ideal.Pointwise": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/RingTheory/Ideal/Pointwise.lean"
    },
    ".lake.packages.mathlib.Mathlib.RingTheory.Ideal.Over": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/RingTheory/Ideal/Over.lean"
    },
    ".lake.packages.mathlib.Mathlib.RingTheory.Ideal.IsPrimary": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/RingTheory/Ideal/IsPrimary.lean"
    },
    ".lake.packages.mathlib.Mathlib.RingTheory.Ideal.IdempotentFG": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/RingTheory/Ideal/IdempotentFG.lean"
    },
    ".lake.packages.mathlib.Mathlib.RingTheory.Ideal.GoingUp": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/RingTheory/Ideal/GoingUp.lean"
    },
    ".lake.packages.mathlib.Mathlib.RingTheory.Ideal.Basic": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/RingTheory/Ideal/Basic.lean"
    },
    ".lake.packages.mathlib.Mathlib.RingTheory.Ideal.Operations": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/RingTheory/Ideal/Operations.lean"
    },
    ".lake.packages.mathlib.Mathlib.RingTheory.Ideal.IsPrincipalPowQuotient": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/RingTheory/Ideal/IsPrincipalPowQuotient.lean"
    },
    ".lake.packages.mathlib.Mathlib.RingTheory.Ideal.Defs": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/RingTheory/Ideal/Defs.lean"
    },
    ".lake.packages.mathlib.Mathlib.RingTheory.Ideal.Span": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/RingTheory/Ideal/Span.lean"
    },
    ".lake.packages.mathlib.Mathlib.RingTheory.Ideal.BigOperators": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/RingTheory/Ideal/BigOperators.lean"
    },
    ".lake.packages.mathlib.Mathlib.RingTheory.Ideal.Prime": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/RingTheory/Ideal/Prime.lean"
    },
    ".lake.packages.mathlib.Mathlib.RingTheory.Ideal.Cotangent": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/RingTheory/Ideal/Cotangent.lean"
    },
    ".lake.packages.mathlib.Mathlib.RingTheory.Ideal.Basis": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/RingTheory/Ideal/Basis.lean"
    },
    ".lake.packages.mathlib.Mathlib.RingTheory.Ideal.Lattice": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/RingTheory/Ideal/Lattice.lean"
    },
    ".lake.packages.mathlib.Mathlib.RingTheory.Ideal.Height": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/RingTheory/Ideal/Height.lean"
    },
    ".lake.packages.mathlib.Mathlib.RingTheory.Ideal.Maximal": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/RingTheory/Ideal/Maximal.lean"
    },
    ".lake.packages.mathlib.Mathlib.RingTheory.Ideal.IsPrincipal": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/RingTheory/Ideal/IsPrincipal.lean"
    },
    ".lake.packages.mathlib.Mathlib.RingTheory.Ideal.MinimalPrime.Basic": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/RingTheory/Ideal/MinimalPrime/Basic.lean"
    },
    ".lake.packages.mathlib.Mathlib.RingTheory.Ideal.MinimalPrime.Localization": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/RingTheory/Ideal/MinimalPrime/Localization.lean"
    },
    ".lake.packages.mathlib.Mathlib.RingTheory.Ideal.AssociatedPrime.Basic": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/RingTheory/Ideal/AssociatedPrime/Basic.lean"
    },
    ".lake.packages.mathlib.Mathlib.RingTheory.Ideal.AssociatedPrime.Localization": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/RingTheory/Ideal/AssociatedPrime/Localization.lean"
    },
    ".lake.packages.mathlib.Mathlib.RingTheory.Ideal.AssociatedPrime.Finiteness": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/RingTheory/Ideal/AssociatedPrime/Finiteness.lean"
    },
    ".lake.packages.mathlib.Mathlib.RingTheory.Ideal.Norm.RelNorm": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/RingTheory/Ideal/Norm/RelNorm.lean"
    },
    ".lake.packages.mathlib.Mathlib.RingTheory.Ideal.Norm.AbsNorm": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/RingTheory/Ideal/Norm/AbsNorm.lean"
    },
    ".lake.packages.mathlib.Mathlib.RingTheory.Ideal.Quotient.Nilpotent": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/RingTheory/Ideal/Quotient/Nilpotent.lean"
    },
    ".lake.packages.mathlib.Mathlib.RingTheory.Ideal.Quotient.PowTransition": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/RingTheory/Ideal/Quotient/PowTransition.lean"
    },
    ".lake.packages.mathlib.Mathlib.RingTheory.Ideal.Quotient.Index": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/RingTheory/Ideal/Quotient/Index.lean"
    },
    ".lake.packages.mathlib.Mathlib.RingTheory.Ideal.Quotient.Basic": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/RingTheory/Ideal/Quotient/Basic.lean"
    },
    ".lake.packages.mathlib.Mathlib.RingTheory.Ideal.Quotient.Operations": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/RingTheory/Ideal/Quotient/Operations.lean"
    },
    ".lake.packages.mathlib.Mathlib.RingTheory.Ideal.Quotient.Defs": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/RingTheory/Ideal/Quotient/Defs.lean"
    },
    ".lake.packages.mathlib.Mathlib.RingTheory.Ideal.Quotient.Noetherian": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/RingTheory/Ideal/Quotient/Noetherian.lean"
    },
    ".lake.packages.mathlib.Mathlib.RingTheory.Artinian.Instances": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/RingTheory/Artinian/Instances.lean"
    },
    ".lake.packages.mathlib.Mathlib.RingTheory.Artinian.Module": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/RingTheory/Artinian/Module.lean"
    },
    ".lake.packages.mathlib.Mathlib.RingTheory.Artinian.Ring": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/RingTheory/Artinian/Ring.lean"
    },
    ".lake.packages.mathlib.Mathlib.RingTheory.Artinian.Algebra": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/RingTheory/Artinian/Algebra.lean"
    },
    ".lake.packages.mathlib.Mathlib.RingTheory.TensorProduct.Finite": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/RingTheory/TensorProduct/Finite.lean"
    },
    ".lake.packages.mathlib.Mathlib.RingTheory.TensorProduct.DirectLimitFG": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/RingTheory/TensorProduct/DirectLimitFG.lean"
    },
    ".lake.packages.mathlib.Mathlib.RingTheory.TensorProduct.Pi": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/RingTheory/TensorProduct/Pi.lean"
    },
    ".lake.packages.mathlib.Mathlib.RingTheory.TensorProduct.Basic": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/RingTheory/TensorProduct/Basic.lean"
    },
    ".lake.packages.mathlib.Mathlib.RingTheory.TensorProduct.Quotient": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/RingTheory/TensorProduct/Quotient.lean"
    },
    ".lake.packages.mathlib.Mathlib.RingTheory.TensorProduct.MvPolynomial": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/RingTheory/TensorProduct/MvPolynomial.lean"
    },
    ".lake.packages.mathlib.Mathlib.RingTheory.TensorProduct.Nontrivial": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/RingTheory/TensorProduct/Nontrivial.lean"
    },
    ".lake.packages.mathlib.Mathlib.RingTheory.TensorProduct.IsBaseChangePi": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/RingTheory/TensorProduct/IsBaseChangePi.lean"
    },
    ".lake.packages.mathlib.Mathlib.RingTheory.TensorProduct.Free": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/RingTheory/TensorProduct/Free.lean"
    },
    ".lake.packages.mathlib.Mathlib.RingTheory.Nilpotent.Exp": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/RingTheory/Nilpotent/Exp.lean"
    },
    ".lake.packages.mathlib.Mathlib.RingTheory.Nilpotent.Lemmas": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/RingTheory/Nilpotent/Lemmas.lean"
    },
    ".lake.packages.mathlib.Mathlib.RingTheory.Nilpotent.Basic": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/RingTheory/Nilpotent/Basic.lean"
    },
    ".lake.packages.mathlib.Mathlib.RingTheory.Nilpotent.Defs": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/RingTheory/Nilpotent/Defs.lean"
    },
    ".lake.packages.mathlib.Mathlib.RingTheory.Noetherian.Nilpotent": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/RingTheory/Noetherian/Nilpotent.lean"
    },
    ".lake.packages.mathlib.Mathlib.RingTheory.Noetherian.Basic": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/RingTheory/Noetherian/Basic.lean"
    },
    ".lake.packages.mathlib.Mathlib.RingTheory.Noetherian.Filter": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/RingTheory/Noetherian/Filter.lean"
    },
    ".lake.packages.mathlib.Mathlib.RingTheory.Noetherian.Defs": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/RingTheory/Noetherian/Defs.lean"
    },
    ".lake.packages.mathlib.Mathlib.RingTheory.Noetherian.UniqueFactorizationDomain": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/RingTheory/Noetherian/UniqueFactorizationDomain.lean"
    },
    ".lake.packages.mathlib.Mathlib.RingTheory.Noetherian.Orzech": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/RingTheory/Noetherian/Orzech.lean"
    },
    ".lake.packages.mathlib.Mathlib.RingTheory.Coprime.Lemmas": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/RingTheory/Coprime/Lemmas.lean"
    },
    ".lake.packages.mathlib.Mathlib.RingTheory.Coprime.Basic": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/RingTheory/Coprime/Basic.lean"
    },
    ".lake.packages.mathlib.Mathlib.RingTheory.Coprime.Ideal": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/RingTheory/Coprime/Ideal.lean"
    },
    ".lake.packages.mathlib.Mathlib.RingTheory.DiscreteValuationRing.TFAE": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/RingTheory/DiscreteValuationRing/TFAE.lean"
    },
    ".lake.packages.mathlib.Mathlib.RingTheory.DiscreteValuationRing.Basic": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/RingTheory/DiscreteValuationRing/Basic.lean"
    },
    ".lake.packages.mathlib.Mathlib.RingTheory.FractionalIdeal.Norm": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/RingTheory/FractionalIdeal/Norm.lean"
    },
    ".lake.packages.mathlib.Mathlib.RingTheory.FractionalIdeal.Basic": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/RingTheory/FractionalIdeal/Basic.lean"
    },
    ".lake.packages.mathlib.Mathlib.RingTheory.FractionalIdeal.Operations": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/RingTheory/FractionalIdeal/Operations.lean"
    },
    ".lake.packages.mathlib.Mathlib.RingTheory.FractionalIdeal.Extended": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/RingTheory/FractionalIdeal/Extended.lean"
    },
    ".lake.packages.mathlib.Mathlib.RingTheory.PowerSeries.Substitution": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/RingTheory/PowerSeries/Substitution.lean"
    },
    ".lake.packages.mathlib.Mathlib.RingTheory.PowerSeries.Inverse": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/RingTheory/PowerSeries/Inverse.lean"
    },
    ".lake.packages.mathlib.Mathlib.RingTheory.PowerSeries.PiTopology": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/RingTheory/PowerSeries/PiTopology.lean"
    },
    ".lake.packages.mathlib.Mathlib.RingTheory.PowerSeries.WellKnown": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/RingTheory/PowerSeries/WellKnown.lean"
    },
    ".lake.packages.mathlib.Mathlib.RingTheory.PowerSeries.Order": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/RingTheory/PowerSeries/Order.lean"
    },
    ".lake.packages.mathlib.Mathlib.RingTheory.PowerSeries.Evaluation": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/RingTheory/PowerSeries/Evaluation.lean"
    },
    ".lake.packages.mathlib.Mathlib.RingTheory.PowerSeries.Trunc": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/RingTheory/PowerSeries/Trunc.lean"
    },
    ".lake.packages.mathlib.Mathlib.RingTheory.PowerSeries.NoZeroDivisors": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/RingTheory/PowerSeries/NoZeroDivisors.lean"
    },
    ".lake.packages.mathlib.Mathlib.RingTheory.PowerSeries.Basic": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/RingTheory/PowerSeries/Basic.lean"
    },
    ".lake.packages.mathlib.Mathlib.RingTheory.PowerSeries.WeierstrassPreparation": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/RingTheory/PowerSeries/WeierstrassPreparation.lean"
    },
    ".lake.packages.mathlib.Mathlib.RingTheory.PowerSeries.Derivative": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/RingTheory/PowerSeries/Derivative.lean"
    },
    ".lake.packages.mathlib.Mathlib.RingTheory.PowerSeries.CoeffMulMem": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/RingTheory/PowerSeries/CoeffMulMem.lean"
    },
    ".lake.packages.mathlib.Mathlib.RingTheory.PowerSeries.GaussNorm": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/RingTheory/PowerSeries/GaussNorm.lean"
    },
    ".lake.packages.mathlib.Mathlib.RingTheory.PowerSeries.Binomial": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/RingTheory/PowerSeries/Binomial.lean"
    },
    ".lake.packages.mathlib.Mathlib.RingTheory.Adjoin.FG": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/RingTheory/Adjoin/FG.lean"
    },
    ".lake.packages.mathlib.Mathlib.RingTheory.Adjoin.Tower": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/RingTheory/Adjoin/Tower.lean"
    },
    ".lake.packages.mathlib.Mathlib.RingTheory.Adjoin.Basic": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/RingTheory/Adjoin/Basic.lean"
    },
    ".lake.packages.mathlib.Mathlib.RingTheory.Adjoin.PowerBasis": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/RingTheory/Adjoin/PowerBasis.lean"
    },
    ".lake.packages.mathlib.Mathlib.RingTheory.Adjoin.Field": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/RingTheory/Adjoin/Field.lean"
    },
    ".lake.packages.mathlib.Mathlib.RingTheory.Adjoin.Polynomial": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/RingTheory/Adjoin/Polynomial.lean"
    },
    ".lake.packages.mathlib.Mathlib.RingTheory.Adjoin.Dimension": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/RingTheory/Adjoin/Dimension.lean"
    },
    ".lake.packages.mathlib.Mathlib.RingTheory.Algebraic.Integral": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/RingTheory/Algebraic/Integral.lean"
    },
    ".lake.packages.mathlib.Mathlib.RingTheory.Algebraic.Pi": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/RingTheory/Algebraic/Pi.lean"
    },
    ".lake.packages.mathlib.Mathlib.RingTheory.Algebraic.Basic": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/RingTheory/Algebraic/Basic.lean"
    },
    ".lake.packages.mathlib.Mathlib.RingTheory.Algebraic.Cardinality": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/RingTheory/Algebraic/Cardinality.lean"
    },
    ".lake.packages.mathlib.Mathlib.RingTheory.Algebraic.Defs": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/RingTheory/Algebraic/Defs.lean"
    },
    ".lake.packages.mathlib.Mathlib.RingTheory.Algebraic.MvPolynomial": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/RingTheory/Algebraic/MvPolynomial.lean"
    },
    ".lake.packages.mathlib.Mathlib.RingTheory.Algebraic.LinearIndependent": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/RingTheory/Algebraic/LinearIndependent.lean"
    },
    ".lake.packages.mathlib.Mathlib.RingTheory.Morita.Basic": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/RingTheory/Morita/Basic.lean"
    },
    ".lake.packages.mathlib.Mathlib.RingTheory.Coalgebra.TensorProduct": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/RingTheory/Coalgebra/TensorProduct.lean"
    },
    ".lake.packages.mathlib.Mathlib.RingTheory.Coalgebra.Basic": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/RingTheory/Coalgebra/Basic.lean"
    },
    ".lake.packages.mathlib.Mathlib.RingTheory.Coalgebra.MonoidAlgebra": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/RingTheory/Coalgebra/MonoidAlgebra.lean"
    },
    ".lake.packages.mathlib.Mathlib.RingTheory.Coalgebra.Equiv": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/RingTheory/Coalgebra/Equiv.lean"
    },
    ".lake.packages.mathlib.Mathlib.RingTheory.Coalgebra.Hom": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/RingTheory/Coalgebra/Hom.lean"
    },
    ".lake.packages.mathlib.Mathlib.RingTheory.SimpleModule.Rank": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/RingTheory/SimpleModule/Rank.lean"
    },
    ".lake.packages.mathlib.Mathlib.RingTheory.SimpleModule.IsAlgClosed": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/RingTheory/SimpleModule/IsAlgClosed.lean"
    },
    ".lake.packages.mathlib.Mathlib.RingTheory.SimpleModule.Basic": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/RingTheory/SimpleModule/Basic.lean"
    },
    ".lake.packages.mathlib.Mathlib.RingTheory.SimpleModule.Isotypic": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/RingTheory/SimpleModule/Isotypic.lean"
    },
    ".lake.packages.mathlib.Mathlib.RingTheory.SimpleModule.WedderburnArtin": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/RingTheory/SimpleModule/WedderburnArtin.lean"
    },
    ".lake.packages.mathlib.Mathlib.RingTheory.SimpleModule.InjectiveProjective": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/RingTheory/SimpleModule/InjectiveProjective.lean"
    },
    ".lake.packages.mathlib.Mathlib.RingTheory.Int.Basic": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/RingTheory/Int/Basic.lean"
    },
    ".lake.packages.mathlib.Mathlib.RingTheory.Norm.Transitivity": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/RingTheory/Norm/Transitivity.lean"
    },
    ".lake.packages.mathlib.Mathlib.RingTheory.Norm.Basic": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/RingTheory/Norm/Basic.lean"
    },
    ".lake.packages.mathlib.Mathlib.RingTheory.Norm.Defs": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/RingTheory/Norm/Defs.lean"
    },
    ".lake.packages.mathlib.Mathlib.RingTheory.Congruence.Opposite": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/RingTheory/Congruence/Opposite.lean"
    },
    ".lake.packages.mathlib.Mathlib.RingTheory.Congruence.Basic": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/RingTheory/Congruence/Basic.lean"
    },
    ".lake.packages.mathlib.Mathlib.RingTheory.Congruence.Defs": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/RingTheory/Congruence/Defs.lean"
    },
    ".lake.packages.mathlib.Mathlib.RingTheory.Congruence.BigOperators": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/RingTheory/Congruence/BigOperators.lean"
    },
    ".lake.packages.mathlib.Mathlib.RingTheory.OreLocalization.Ring": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/RingTheory/OreLocalization/Ring.lean"
    },
    ".lake.packages.mathlib.Mathlib.RingTheory.OreLocalization.OreSet": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/RingTheory/OreLocalization/OreSet.lean"
    },
    ".lake.packages.mathlib.Mathlib.RingTheory.OreLocalization.Basic": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/RingTheory/OreLocalization/Basic.lean"
    },
    ".lake.packages.mathlib.Mathlib.RingTheory.OreLocalization.Cardinality": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/RingTheory/OreLocalization/Cardinality.lean"
    },
    ".lake.packages.mathlib.Mathlib.RingTheory.Finiteness.Subalgebra": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/RingTheory/Finiteness/Subalgebra.lean"
    },
    ".lake.packages.mathlib.Mathlib.RingTheory.Finiteness.Bilinear": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/RingTheory/Finiteness/Bilinear.lean"
    },
    ".lake.packages.mathlib.Mathlib.RingTheory.Finiteness.Nilpotent": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/RingTheory/Finiteness/Nilpotent.lean"
    },
    ".lake.packages.mathlib.Mathlib.RingTheory.Finiteness.Nakayama": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/RingTheory/Finiteness/Nakayama.lean"
    },
    ".lake.packages.mathlib.Mathlib.RingTheory.Finiteness.Prod": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/RingTheory/Finiteness/Prod.lean"
    },
    ".lake.packages.mathlib.Mathlib.RingTheory.Finiteness.Basic": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/RingTheory/Finiteness/Basic.lean"
    },
    ".lake.packages.mathlib.Mathlib.RingTheory.Finiteness.Cardinality": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/RingTheory/Finiteness/Cardinality.lean"
    },
    ".lake.packages.mathlib.Mathlib.RingTheory.Finiteness.Quotient": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/RingTheory/Finiteness/Quotient.lean"
    },
    ".lake.packages.mathlib.Mathlib.RingTheory.Finiteness.Ideal": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/RingTheory/Finiteness/Ideal.lean"
    },
    ".lake.packages.mathlib.Mathlib.RingTheory.Finiteness.Defs": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/RingTheory/Finiteness/Defs.lean"
    },
    ".lake.packages.mathlib.Mathlib.RingTheory.Finiteness.Finsupp": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/RingTheory/Finiteness/Finsupp.lean"
    },
    ".lake.packages.mathlib.Mathlib.RingTheory.Finiteness.Projective": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/RingTheory/Finiteness/Projective.lean"
    },
    ".lake.packages.mathlib.Mathlib.RingTheory.Finiteness.Small": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/RingTheory/Finiteness/Small.lean"
    },
    ".lake.packages.mathlib.Mathlib.RingTheory.Finiteness.Lattice": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/RingTheory/Finiteness/Lattice.lean"
    },
    ".lake.packages.mathlib.Mathlib.RingTheory.RootsOfUnity.EnoughRootsOfUnity": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/RingTheory/RootsOfUnity/EnoughRootsOfUnity.lean"
    },
    ".lake.packages.mathlib.Mathlib.RingTheory.RootsOfUnity.Lemmas": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/RingTheory/RootsOfUnity/Lemmas.lean"
    },
    ".lake.packages.mathlib.Mathlib.RingTheory.RootsOfUnity.AlgebraicallyClosed": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/RingTheory/RootsOfUnity/AlgebraicallyClosed.lean"
    },
    ".lake.packages.mathlib.Mathlib.RingTheory.RootsOfUnity.Basic": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/RingTheory/RootsOfUnity/Basic.lean"
    },
    ".lake.packages.mathlib.Mathlib.RingTheory.RootsOfUnity.Complex": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/RingTheory/RootsOfUnity/Complex.lean"
    },
    ".lake.packages.mathlib.Mathlib.RingTheory.RootsOfUnity.PrimitiveRoots": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/RingTheory/RootsOfUnity/PrimitiveRoots.lean"
    },
    ".lake.packages.mathlib.Mathlib.RingTheory.RootsOfUnity.Minpoly": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/RingTheory/RootsOfUnity/Minpoly.lean"
    },
    ".lake.packages.mathlib.Mathlib.RingTheory.RingHom.Finite": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/RingTheory/RingHom/Finite.lean"
    },
    ".lake.packages.mathlib.Mathlib.RingTheory.RingHom.Unramified": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/RingTheory/RingHom/Unramified.lean"
    },
    ".lake.packages.mathlib.Mathlib.RingTheory.RingHom.Flat": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/RingTheory/RingHom/Flat.lean"
    },
    ".lake.packages.mathlib.Mathlib.RingTheory.RingHom.Integral": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/RingTheory/RingHom/Integral.lean"
    },
    ".lake.packages.mathlib.Mathlib.RingTheory.RingHom.StandardSmooth": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/RingTheory/RingHom/StandardSmooth.lean"
    },
    ".lake.packages.mathlib.Mathlib.RingTheory.RingHom.Surjective": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/RingTheory/RingHom/Surjective.lean"
    },
    ".lake.packages.mathlib.Mathlib.RingTheory.RingHom.Locally": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/RingTheory/RingHom/Locally.lean"
    },
    ".lake.packages.mathlib.Mathlib.RingTheory.RingHom.Etale": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/RingTheory/RingHom/Etale.lean"
    },
    ".lake.packages.mathlib.Mathlib.RingTheory.RingHom.FiniteType": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/RingTheory/RingHom/FiniteType.lean"
    },
    ".lake.packages.mathlib.Mathlib.RingTheory.RingHom.Smooth": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/RingTheory/RingHom/Smooth.lean"
    },
    ".lake.packages.mathlib.Mathlib.RingTheory.RingHom.Injective": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/RingTheory/RingHom/Injective.lean"
    },
    ".lake.packages.mathlib.Mathlib.RingTheory.RingHom.FinitePresentation": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/RingTheory/RingHom/FinitePresentation.lean"
    },
    ".lake.packages.mathlib.Mathlib.RingTheory.Spectrum.Prime.ChevalleyComplexity": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/RingTheory/Spectrum/Prime/ChevalleyComplexity.lean"
    },
    ".lake.packages.mathlib.Mathlib.RingTheory.Spectrum.Prime.Chevalley": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/RingTheory/Spectrum/Prime/Chevalley.lean"
    },
    ".lake.packages.mathlib.Mathlib.RingTheory.Spectrum.Prime.Homeomorph": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/RingTheory/Spectrum/Prime/Homeomorph.lean"
    },
    ".lake.packages.mathlib.Mathlib.RingTheory.Spectrum.Prime.Module": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/RingTheory/Spectrum/Prime/Module.lean"
    },
    ".lake.packages.mathlib.Mathlib.RingTheory.Spectrum.Prime.LTSeries": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/RingTheory/Spectrum/Prime/LTSeries.lean"
    },
    ".lake.packages.mathlib.Mathlib.RingTheory.Spectrum.Prime.TensorProduct": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/RingTheory/Spectrum/Prime/TensorProduct.lean"
    },
    ".lake.packages.mathlib.Mathlib.RingTheory.Spectrum.Prime.Topology": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/RingTheory/Spectrum/Prime/Topology.lean"
    },
    ".lake.packages.mathlib.Mathlib.RingTheory.Spectrum.Prime.Basic": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/RingTheory/Spectrum/Prime/Basic.lean"
    },
    ".lake.packages.mathlib.Mathlib.RingTheory.Spectrum.Prime.RingHom": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/RingTheory/Spectrum/Prime/RingHom.lean"
    },
    ".lake.packages.mathlib.Mathlib.RingTheory.Spectrum.Prime.Defs": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/RingTheory/Spectrum/Prime/Defs.lean"
    },
    ".lake.packages.mathlib.Mathlib.RingTheory.Spectrum.Prime.FreeLocus": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/RingTheory/Spectrum/Prime/FreeLocus.lean"
    },
    ".lake.packages.mathlib.Mathlib.RingTheory.Spectrum.Prime.ConstructibleSet": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/RingTheory/Spectrum/Prime/ConstructibleSet.lean"
    },
    ".lake.packages.mathlib.Mathlib.RingTheory.Spectrum.Prime.Polynomial": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/RingTheory/Spectrum/Prime/Polynomial.lean"
    },
    ".lake.packages.mathlib.Mathlib.RingTheory.Spectrum.Prime.Jacobson": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/RingTheory/Spectrum/Prime/Jacobson.lean"
    },
    ".lake.packages.mathlib.Mathlib.RingTheory.Spectrum.Prime.Noetherian": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/RingTheory/Spectrum/Prime/Noetherian.lean"
    },
    ".lake.packages.mathlib.Mathlib.RingTheory.Spectrum.Prime.IsOpenComapC": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/RingTheory/Spectrum/Prime/IsOpenComapC.lean"
    },
    ".lake.packages.mathlib.Mathlib.RingTheory.Spectrum.Maximal.Topology": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/RingTheory/Spectrum/Maximal/Topology.lean"
    },
    ".lake.packages.mathlib.Mathlib.RingTheory.Spectrum.Maximal.Basic": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/RingTheory/Spectrum/Maximal/Basic.lean"
    },
    ".lake.packages.mathlib.Mathlib.RingTheory.Spectrum.Maximal.Defs": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/RingTheory/Spectrum/Maximal/Defs.lean"
    },
    ".lake.packages.mathlib.Mathlib.RingTheory.Spectrum.Maximal.Localization": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/RingTheory/Spectrum/Maximal/Localization.lean"
    },
    ".lake.packages.mathlib.Mathlib.RingTheory.AdicCompletion.LocalRing": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/RingTheory/AdicCompletion/LocalRing.lean"
    },
    ".lake.packages.mathlib.Mathlib.RingTheory.AdicCompletion.Functoriality": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/RingTheory/AdicCompletion/Functoriality.lean"
    },
    ".lake.packages.mathlib.Mathlib.RingTheory.AdicCompletion.AsTensorProduct": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/RingTheory/AdicCompletion/AsTensorProduct.lean"
    },
    ".lake.packages.mathlib.Mathlib.RingTheory.AdicCompletion.Basic": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/RingTheory/AdicCompletion/Basic.lean"
    },
    ".lake.packages.mathlib.Mathlib.RingTheory.AdicCompletion.Exactness": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/RingTheory/AdicCompletion/Exactness.lean"
    },
    ".lake.packages.mathlib.Mathlib.RingTheory.AdicCompletion.Algebra": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/RingTheory/AdicCompletion/Algebra.lean"
    },
    ".lake.packages.mathlib.Mathlib.RingTheory.AdicCompletion.Noetherian": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/RingTheory/AdicCompletion/Noetherian.lean"
    },
    ".lake.packages.mathlib.Mathlib.RingTheory.Regular.Depth": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/RingTheory/Regular/Depth.lean"
    },
    ".lake.packages.mathlib.Mathlib.RingTheory.Regular.Category": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/RingTheory/Regular/Category.lean"
    },
    ".lake.packages.mathlib.Mathlib.RingTheory.Regular.IsSMulRegular": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/RingTheory/Regular/IsSMulRegular.lean"
    },
    ".lake.packages.mathlib.Mathlib.RingTheory.Regular.RegularSequence": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/RingTheory/Regular/RegularSequence.lean"
    },
    ".lake.packages.mathlib.Mathlib.RingTheory.HopfAlgebra.TensorProduct": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/RingTheory/HopfAlgebra/TensorProduct.lean"
    },
    ".lake.packages.mathlib.Mathlib.RingTheory.HopfAlgebra.Basic": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/RingTheory/HopfAlgebra/Basic.lean"
    },
    ".lake.packages.mathlib.Mathlib.RingTheory.HopfAlgebra.MonoidAlgebra": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/RingTheory/HopfAlgebra/MonoidAlgebra.lean"
    },
    ".lake.packages.mathlib.Mathlib.RingTheory.Unramified.Finite": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/RingTheory/Unramified/Finite.lean"
    },
    ".lake.packages.mathlib.Mathlib.RingTheory.Unramified.LocalRing": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/RingTheory/Unramified/LocalRing.lean"
    },
    ".lake.packages.mathlib.Mathlib.RingTheory.Unramified.Pi": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/RingTheory/Unramified/Pi.lean"
    },
    ".lake.packages.mathlib.Mathlib.RingTheory.Unramified.Basic": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/RingTheory/Unramified/Basic.lean"
    },
    ".lake.packages.mathlib.Mathlib.RingTheory.Unramified.Locus": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/RingTheory/Unramified/Locus.lean"
    },
    ".lake.packages.mathlib.Mathlib.RingTheory.Unramified.Field": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/RingTheory/Unramified/Field.lean"
    },
    ".lake.packages.mathlib.Mathlib.RingTheory.IntegralClosure.IntegrallyClosed": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/RingTheory/IntegralClosure/IntegrallyClosed.lean"
    },
    ".lake.packages.mathlib.Mathlib.RingTheory.IntegralClosure.IntegralRestrict": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/RingTheory/IntegralClosure/IntegralRestrict.lean"
    },
    ".lake.packages.mathlib.Mathlib.RingTheory.IntegralClosure.IsIntegralClosure.Basic": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/RingTheory/IntegralClosure/IsIntegralClosure/Basic.lean"
    },
    ".lake.packages.mathlib.Mathlib.RingTheory.IntegralClosure.IsIntegralClosure.Defs": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/RingTheory/IntegralClosure/IsIntegralClosure/Defs.lean"
    },
    ".lake.packages.mathlib.Mathlib.RingTheory.IntegralClosure.IsIntegral.Basic": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/RingTheory/IntegralClosure/IsIntegral/Basic.lean"
    },
    ".lake.packages.mathlib.Mathlib.RingTheory.IntegralClosure.IsIntegral.Defs": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/RingTheory/IntegralClosure/IsIntegral/Defs.lean"
    },
    ".lake.packages.mathlib.Mathlib.RingTheory.IntegralClosure.Algebra.Basic": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/RingTheory/IntegralClosure/Algebra/Basic.lean"
    },
    ".lake.packages.mathlib.Mathlib.RingTheory.IntegralClosure.Algebra.Defs": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/RingTheory/IntegralClosure/Algebra/Defs.lean"
    },
    ".lake.packages.mathlib.Mathlib.RingTheory.DedekindDomain.Instances": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/RingTheory/DedekindDomain/Instances.lean"
    },
    ".lake.packages.mathlib.Mathlib.RingTheory.DedekindDomain.Different": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/RingTheory/DedekindDomain/Different.lean"
    },
    ".lake.packages.mathlib.Mathlib.RingTheory.DedekindDomain.FiniteAdeleRing": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/RingTheory/DedekindDomain/FiniteAdeleRing.lean"
    },
    ".lake.packages.mathlib.Mathlib.RingTheory.DedekindDomain.SelmerGroup": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/RingTheory/DedekindDomain/SelmerGroup.lean"
    },
    ".lake.packages.mathlib.Mathlib.RingTheory.DedekindDomain.PID": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/RingTheory/DedekindDomain/PID.lean"
    },
    ".lake.packages.mathlib.Mathlib.RingTheory.DedekindDomain.Basic": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/RingTheory/DedekindDomain/Basic.lean"
    },
    ".lake.packages.mathlib.Mathlib.RingTheory.DedekindDomain.Ideal": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/RingTheory/DedekindDomain/Ideal.lean"
    },
    ".lake.packages.mathlib.Mathlib.RingTheory.DedekindDomain.AdicValuation": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/RingTheory/DedekindDomain/AdicValuation.lean"
    },
    ".lake.packages.mathlib.Mathlib.RingTheory.DedekindDomain.Factorization": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/RingTheory/DedekindDomain/Factorization.lean"
    },
    ".lake.packages.mathlib.Mathlib.RingTheory.DedekindDomain.Dvr": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/RingTheory/DedekindDomain/Dvr.lean"
    },
    ".lake.packages.mathlib.Mathlib.RingTheory.DedekindDomain.IntegralClosure": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/RingTheory/DedekindDomain/IntegralClosure.lean"
    },
    ".lake.packages.mathlib.Mathlib.RingTheory.DedekindDomain.SInteger": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/RingTheory/DedekindDomain/SInteger.lean"
    },
    ".lake.packages.mathlib.Mathlib.RingTheory.PolynomialLaw.Basic": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/RingTheory/PolynomialLaw/Basic.lean"
    },
    ".lake.packages.mathlib.Mathlib.RingTheory.Jacobson.Ring": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/RingTheory/Jacobson/Ring.lean"
    },
    ".lake.packages.mathlib.Mathlib.RingTheory.Jacobson.Semiprimary": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/RingTheory/Jacobson/Semiprimary.lean"
    },
    ".lake.packages.mathlib.Mathlib.RingTheory.Jacobson.Ideal": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/RingTheory/Jacobson/Ideal.lean"
    },
    ".lake.packages.mathlib.Mathlib.RingTheory.Jacobson.Polynomial": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/RingTheory/Jacobson/Polynomial.lean"
    },
    ".lake.packages.mathlib.Mathlib.RingTheory.Jacobson.Artinian": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/RingTheory/Jacobson/Artinian.lean"
    },
    ".lake.packages.mathlib.Mathlib.RingTheory.Jacobson.Radical": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/RingTheory/Jacobson/Radical.lean"
    },
    ".lake.packages.mathlib.Mathlib.RingTheory.Bialgebra.TensorProduct": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/RingTheory/Bialgebra/TensorProduct.lean"
    },
    ".lake.packages.mathlib.Mathlib.RingTheory.Bialgebra.Basic": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/RingTheory/Bialgebra/Basic.lean"
    },
    ".lake.packages.mathlib.Mathlib.RingTheory.Bialgebra.MonoidAlgebra": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/RingTheory/Bialgebra/MonoidAlgebra.lean"
    },
    ".lake.packages.mathlib.Mathlib.RingTheory.Bialgebra.Equiv": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/RingTheory/Bialgebra/Equiv.lean"
    },
    ".lake.packages.mathlib.Mathlib.RingTheory.Bialgebra.Hom": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/RingTheory/Bialgebra/Hom.lean"
    },
    ".lake.packages.mathlib.Mathlib.RingTheory.Valuation.Integers": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/RingTheory/Valuation/Integers.lean"
    },
    ".lake.packages.mathlib.Mathlib.RingTheory.Valuation.PrimeMultiplicity": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/RingTheory/Valuation/PrimeMultiplicity.lean"
    },
    ".lake.packages.mathlib.Mathlib.RingTheory.Valuation.RamificationGroup": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/RingTheory/Valuation/RamificationGroup.lean"
    },
    ".lake.packages.mathlib.Mathlib.RingTheory.Valuation.ValuationRing": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/RingTheory/Valuation/ValuationRing.lean"
    },
    ".lake.packages.mathlib.Mathlib.RingTheory.Valuation.Integral": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/RingTheory/Valuation/Integral.lean"
    },
    ".lake.packages.mathlib.Mathlib.RingTheory.Valuation.ExtendToLocalization": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/RingTheory/Valuation/ExtendToLocalization.lean"
    },
    ".lake.packages.mathlib.Mathlib.RingTheory.Valuation.Archimedean": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/RingTheory/Valuation/Archimedean.lean"
    },
    ".lake.packages.mathlib.Mathlib.RingTheory.Valuation.IntegrallyClosed": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/RingTheory/Valuation/IntegrallyClosed.lean"
    },
    ".lake.packages.mathlib.Mathlib.RingTheory.Valuation.LocalSubring": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/RingTheory/Valuation/LocalSubring.lean"
    },
    ".lake.packages.mathlib.Mathlib.RingTheory.Valuation.Extension": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/RingTheory/Valuation/Extension.lean"
    },
    ".lake.packages.mathlib.Mathlib.RingTheory.Valuation.ValuationSubring": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/RingTheory/Valuation/ValuationSubring.lean"
    },
    ".lake.packages.mathlib.Mathlib.RingTheory.Valuation.Basic": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/RingTheory/Valuation/Basic.lean"
    },
    ".lake.packages.mathlib.Mathlib.RingTheory.Valuation.Quotient": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/RingTheory/Valuation/Quotient.lean"
    },
    ".lake.packages.mathlib.Mathlib.RingTheory.Valuation.RankOne": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/RingTheory/Valuation/RankOne.lean"
    },
    ".lake.packages.mathlib.Mathlib.RingTheory.Valuation.AlgebraInstances": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/RingTheory/Valuation/AlgebraInstances.lean"
    },
    ".lake.packages.mathlib.Mathlib.RingTheory.Valuation.ValuativeRel": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/RingTheory/Valuation/ValuativeRel.lean"
    },
    ".lake.packages.mathlib.Mathlib.RingTheory.Valuation.ValExtension": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/RingTheory/Valuation/ValExtension.lean"
    },
    ".lake.packages.mathlib.Mathlib.RingTheory.Valuation.Minpoly": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/RingTheory/Valuation/Minpoly.lean"
    },
    ".lake.packages.mathlib.Mathlib.RingTheory.Valuation.Discrete.Basic": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/RingTheory/Valuation/Discrete/Basic.lean"
    },
    ".lake.packages.mathlib.Mathlib.RingTheory.Polynomial.Pochhammer": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/RingTheory/Polynomial/Pochhammer.lean"
    },
    ".lake.packages.mathlib.Mathlib.RingTheory.Polynomial.UniqueFactorization": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/RingTheory/Polynomial/UniqueFactorization.lean"
    },
    ".lake.packages.mathlib.Mathlib.RingTheory.Polynomial.ShiftedLegendre": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/RingTheory/Polynomial/ShiftedLegendre.lean"
    },
    ".lake.packages.mathlib.Mathlib.RingTheory.Polynomial.Nilpotent": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/RingTheory/Polynomial/Nilpotent.lean"
    },
    ".lake.packages.mathlib.Mathlib.RingTheory.Polynomial.IntegralNormalization": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/RingTheory/Polynomial/IntegralNormalization.lean"
    },
    ".lake.packages.mathlib.Mathlib.RingTheory.Polynomial.GaussLemma": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/RingTheory/Polynomial/GaussLemma.lean"
    },
    ".lake.packages.mathlib.Mathlib.RingTheory.Polynomial.SeparableDegree": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/RingTheory/Polynomial/SeparableDegree.lean"
    },
    ".lake.packages.mathlib.Mathlib.RingTheory.Polynomial.Tower": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/RingTheory/Polynomial/Tower.lean"
    },
    ".lake.packages.mathlib.Mathlib.RingTheory.Polynomial.Dickson": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/RingTheory/Polynomial/Dickson.lean"
    },
    ".lake.packages.mathlib.Mathlib.RingTheory.Polynomial.ContentIdeal": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/RingTheory/Polynomial/ContentIdeal.lean"
    },
    ".lake.packages.mathlib.Mathlib.RingTheory.Polynomial.Selmer": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/RingTheory/Polynomial/Selmer.lean"
    },
    ".lake.packages.mathlib.Mathlib.RingTheory.Polynomial.Basic": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/RingTheory/Polynomial/Basic.lean"
    },
    ".lake.packages.mathlib.Mathlib.RingTheory.Polynomial.Bernstein": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/RingTheory/Polynomial/Bernstein.lean"
    },
    ".lake.packages.mathlib.Mathlib.RingTheory.Polynomial.Quotient": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/RingTheory/Polynomial/Quotient.lean"
    },
    ".lake.packages.mathlib.Mathlib.RingTheory.Polynomial.Ideal": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/RingTheory/Polynomial/Ideal.lean"
    },
    ".lake.packages.mathlib.Mathlib.RingTheory.Polynomial.Content": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/RingTheory/Polynomial/Content.lean"
    },
    ".lake.packages.mathlib.Mathlib.RingTheory.Polynomial.DegreeLT": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/RingTheory/Polynomial/DegreeLT.lean"
    },
    ".lake.packages.mathlib.Mathlib.RingTheory.Polynomial.GaussNorm": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/RingTheory/Polynomial/GaussNorm.lean"
    },
    ".lake.packages.mathlib.Mathlib.RingTheory.Polynomial.SmallDegreeVieta": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/RingTheory/Polynomial/SmallDegreeVieta.lean"
    },
    ".lake.packages.mathlib.Mathlib.RingTheory.Polynomial.Vieta": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/RingTheory/Polynomial/Vieta.lean"
    },
    ".lake.packages.mathlib.Mathlib.RingTheory.Polynomial.IrreducibleRing": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/RingTheory/Polynomial/IrreducibleRing.lean"
    },
    ".lake.packages.mathlib.Mathlib.RingTheory.Polynomial.Opposites": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/RingTheory/Polynomial/Opposites.lean"
    },
    ".lake.packages.mathlib.Mathlib.RingTheory.Polynomial.HilbertPoly": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/RingTheory/Polynomial/HilbertPoly.lean"
    },
    ".lake.packages.mathlib.Mathlib.RingTheory.Polynomial.Chebyshev": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/RingTheory/Polynomial/Chebyshev.lean"
    },
    ".lake.packages.mathlib.Mathlib.RingTheory.Polynomial.ScaleRoots": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/RingTheory/Polynomial/ScaleRoots.lean"
    },
    ".lake.packages.mathlib.Mathlib.RingTheory.Polynomial.RationalRoot": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/RingTheory/Polynomial/RationalRoot.lean"
    },
    ".lake.packages.mathlib.Mathlib.RingTheory.Polynomial.Wronskian": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/RingTheory/Polynomial/Wronskian.lean"
    },
    ".lake.packages.mathlib.Mathlib.RingTheory.Polynomial.Radical": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/RingTheory/Polynomial/Radical.lean"
    },
    ".lake.packages.mathlib.Mathlib.RingTheory.Polynomial.Cyclotomic.Expand": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/RingTheory/Polynomial/Cyclotomic/Expand.lean"
    },
    ".lake.packages.mathlib.Mathlib.RingTheory.Polynomial.Cyclotomic.Eval": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/RingTheory/Polynomial/Cyclotomic/Eval.lean"
    },
    ".lake.packages.mathlib.Mathlib.RingTheory.Polynomial.Cyclotomic.Basic": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/RingTheory/Polynomial/Cyclotomic/Basic.lean"
    },
    ".lake.packages.mathlib.Mathlib.RingTheory.Polynomial.Cyclotomic.Roots": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/RingTheory/Polynomial/Cyclotomic/Roots.lean"
    },
    ".lake.packages.mathlib.Mathlib.RingTheory.Polynomial.Hermite.Gaussian": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/RingTheory/Polynomial/Hermite/Gaussian.lean"
    },
    ".lake.packages.mathlib.Mathlib.RingTheory.Polynomial.Hermite.Basic": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/RingTheory/Polynomial/Hermite/Basic.lean"
    },
    ".lake.packages.mathlib.Mathlib.RingTheory.Polynomial.Eisenstein.Criterion": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/RingTheory/Polynomial/Eisenstein/Criterion.lean"
    },
    ".lake.packages.mathlib.Mathlib.RingTheory.Polynomial.Eisenstein.Basic": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/RingTheory/Polynomial/Eisenstein/Basic.lean"
    },
    ".lake.packages.mathlib.Mathlib.RingTheory.Polynomial.Eisenstein.IsIntegral": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/RingTheory/Polynomial/Eisenstein/IsIntegral.lean"
    },
    ".lake.packages.mathlib.Mathlib.RingTheory.Polynomial.Eisenstein.Distinguished": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/RingTheory/Polynomial/Eisenstein/Distinguished.lean"
    },
    ".lake.packages.mathlib.Mathlib.RingTheory.Polynomial.Eisenstein.Generalized": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/RingTheory/Polynomial/Eisenstein/Generalized.lean"
    },
    ".lake.packages.mathlib.Mathlib.RingTheory.Polynomial.Resultant.Basic": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/RingTheory/Polynomial/Resultant/Basic.lean"
    },
    ".lake.packages.mathlib.Mathlib.RingTheory.AlgebraicIndependent.RankAndCardinality": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/RingTheory/AlgebraicIndependent/RankAndCardinality.lean"
    },
    ".lake.packages.mathlib.Mathlib.RingTheory.AlgebraicIndependent.AlgebraicClosure": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/RingTheory/AlgebraicIndependent/AlgebraicClosure.lean"
    },
    ".lake.packages.mathlib.Mathlib.RingTheory.AlgebraicIndependent.Basic": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/RingTheory/AlgebraicIndependent/Basic.lean"
    },
    ".lake.packages.mathlib.Mathlib.RingTheory.AlgebraicIndependent.Defs": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/RingTheory/AlgebraicIndependent/Defs.lean"
    },
    ".lake.packages.mathlib.Mathlib.RingTheory.AlgebraicIndependent.Transcendental": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/RingTheory/AlgebraicIndependent/Transcendental.lean"
    },
    ".lake.packages.mathlib.Mathlib.RingTheory.AlgebraicIndependent.TranscendenceBasis": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/RingTheory/AlgebraicIndependent/TranscendenceBasis.lean"
    },
    ".lake.packages.mathlib.Mathlib.RingTheory.AlgebraicIndependent.Adjoin": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/RingTheory/AlgebraicIndependent/Adjoin.lean"
    },
    ".lake.packages.mathlib.Mathlib.RingTheory.TwoSidedIdeal.Instances": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/RingTheory/TwoSidedIdeal/Instances.lean"
    },
    ".lake.packages.mathlib.Mathlib.RingTheory.TwoSidedIdeal.Basic": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/RingTheory/TwoSidedIdeal/Basic.lean"
    },
    ".lake.packages.mathlib.Mathlib.RingTheory.TwoSidedIdeal.Operations": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/RingTheory/TwoSidedIdeal/Operations.lean"
    },
    ".lake.packages.mathlib.Mathlib.RingTheory.TwoSidedIdeal.BigOperators": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/RingTheory/TwoSidedIdeal/BigOperators.lean"
    },
    ".lake.packages.mathlib.Mathlib.RingTheory.TwoSidedIdeal.Kernel": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/RingTheory/TwoSidedIdeal/Kernel.lean"
    },
    ".lake.packages.mathlib.Mathlib.RingTheory.TwoSidedIdeal.Lattice": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/RingTheory/TwoSidedIdeal/Lattice.lean"
    },
    ".lake.packages.mathlib.Mathlib.RingTheory.NonUnitalSubsemiring.Basic": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/RingTheory/NonUnitalSubsemiring/Basic.lean"
    },
    ".lake.packages.mathlib.Mathlib.RingTheory.NonUnitalSubsemiring.Defs": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/RingTheory/NonUnitalSubsemiring/Defs.lean"
    },
    ".lake.packages.mathlib.Mathlib.RingTheory.MvPowerSeries.Substitution": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/RingTheory/MvPowerSeries/Substitution.lean"
    },
    ".lake.packages.mathlib.Mathlib.RingTheory.MvPowerSeries.Inverse": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/RingTheory/MvPowerSeries/Inverse.lean"
    },
    ".lake.packages.mathlib.Mathlib.RingTheory.MvPowerSeries.PiTopology": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/RingTheory/MvPowerSeries/PiTopology.lean"
    },
    ".lake.packages.mathlib.Mathlib.RingTheory.MvPowerSeries.Order": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/RingTheory/MvPowerSeries/Order.lean"
    },
    ".lake.packages.mathlib.Mathlib.RingTheory.MvPowerSeries.Evaluation": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/RingTheory/MvPowerSeries/Evaluation.lean"
    },
    ".lake.packages.mathlib.Mathlib.RingTheory.MvPowerSeries.Trunc": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/RingTheory/MvPowerSeries/Trunc.lean"
    },
    ".lake.packages.mathlib.Mathlib.RingTheory.MvPowerSeries.NoZeroDivisors": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/RingTheory/MvPowerSeries/NoZeroDivisors.lean"
    },
    ".lake.packages.mathlib.Mathlib.RingTheory.MvPowerSeries.Basic": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/RingTheory/MvPowerSeries/Basic.lean"
    },
    ".lake.packages.mathlib.Mathlib.RingTheory.MvPowerSeries.LinearTopology": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/RingTheory/MvPowerSeries/LinearTopology.lean"
    },
    ".lake.packages.mathlib.Mathlib.RingTheory.MvPowerSeries.LexOrder": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/RingTheory/MvPowerSeries/LexOrder.lean"
    },
    ".lake.packages.mathlib.Mathlib.RingTheory.LocalProperties.IntegrallyClosed": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/RingTheory/LocalProperties/IntegrallyClosed.lean"
    },
    ".lake.packages.mathlib.Mathlib.RingTheory.LocalProperties.Basic": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/RingTheory/LocalProperties/Basic.lean"
    },
    ".lake.packages.mathlib.Mathlib.RingTheory.LocalProperties.Projective": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/RingTheory/LocalProperties/Projective.lean"
    },
    ".lake.packages.mathlib.Mathlib.RingTheory.LocalProperties.Exactness": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/RingTheory/LocalProperties/Exactness.lean"
    },
    ".lake.packages.mathlib.Mathlib.RingTheory.LocalProperties.Submodule": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/RingTheory/LocalProperties/Submodule.lean"
    },
    ".lake.packages.mathlib.Mathlib.RingTheory.LocalProperties.Reduced": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/RingTheory/LocalProperties/Reduced.lean"
    },
    ".lake.packages.mathlib.Mathlib.RingTheory.Localization.NumDen": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/RingTheory/Localization/NumDen.lean"
    },
    ".lake.packages.mathlib.Mathlib.RingTheory.Localization.Integral": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/RingTheory/Localization/Integral.lean"
    },
    ".lake.packages.mathlib.Mathlib.RingTheory.Localization.Module": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/RingTheory/Localization/Module.lean"
    },
    ".lake.packages.mathlib.Mathlib.RingTheory.Localization.AsSubring": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/RingTheory/Localization/AsSubring.lean"
    },
    ".lake.packages.mathlib.Mathlib.RingTheory.Localization.AtPrime": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/RingTheory/Localization/AtPrime.lean"
    },
    ".lake.packages.mathlib.Mathlib.RingTheory.Localization.Integer": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/RingTheory/Localization/Integer.lean"
    },
    ".lake.packages.mathlib.Mathlib.RingTheory.Localization.Pi": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/RingTheory/Localization/Pi.lean"
    },
    ".lake.packages.mathlib.Mathlib.RingTheory.Localization.InvSubmonoid": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/RingTheory/Localization/InvSubmonoid.lean"
    },
    ".lake.packages.mathlib.Mathlib.RingTheory.Localization.Basic": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/RingTheory/Localization/Basic.lean"
    },
    ".lake.packages.mathlib.Mathlib.RingTheory.Localization.Cardinality": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/RingTheory/Localization/Cardinality.lean"
    },
    ".lake.packages.mathlib.Mathlib.RingTheory.Localization.Ideal": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/RingTheory/Localization/Ideal.lean"
    },
    ".lake.packages.mathlib.Mathlib.RingTheory.Localization.NormTrace": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/RingTheory/Localization/NormTrace.lean"
    },
    ".lake.packages.mathlib.Mathlib.RingTheory.Localization.Defs": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/RingTheory/Localization/Defs.lean"
    },
    ".lake.packages.mathlib.Mathlib.RingTheory.Localization.LocalizationLocalization": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/RingTheory/Localization/LocalizationLocalization.lean"
    },
    ".lake.packages.mathlib.Mathlib.RingTheory.Localization.Submodule": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/RingTheory/Localization/Submodule.lean"
    },
    ".lake.packages.mathlib.Mathlib.RingTheory.Localization.Algebra": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/RingTheory/Localization/Algebra.lean"
    },
    ".lake.packages.mathlib.Mathlib.RingTheory.Localization.BaseChange": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/RingTheory/Localization/BaseChange.lean"
    },
    ".lake.packages.mathlib.Mathlib.RingTheory.Localization.Free": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/RingTheory/Localization/Free.lean"
    },
    ".lake.packages.mathlib.Mathlib.RingTheory.Localization.Finiteness": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/RingTheory/Localization/Finiteness.lean"
    },
    ".lake.packages.mathlib.Mathlib.RingTheory.Localization.FractionRing": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/RingTheory/Localization/FractionRing.lean"
    },
    ".lake.packages.mathlib.Mathlib.RingTheory.Localization.Away.Lemmas": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/RingTheory/Localization/Away/Lemmas.lean"
    },
    ".lake.packages.mathlib.Mathlib.RingTheory.Localization.Away.AdjoinRoot": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/RingTheory/Localization/Away/AdjoinRoot.lean"
    },
    ".lake.packages.mathlib.Mathlib.RingTheory.Localization.Away.Basic": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/RingTheory/Localization/Away/Basic.lean"
    },
    ".lake.packages.mathlib.Mathlib.RingTheory.HahnSeries.Summable": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/RingTheory/HahnSeries/Summable.lean"
    },
    ".lake.packages.mathlib.Mathlib.RingTheory.HahnSeries.Valuation": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/RingTheory/HahnSeries/Valuation.lean"
    },
    ".lake.packages.mathlib.Mathlib.RingTheory.HahnSeries.Lex": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/RingTheory/HahnSeries/Lex.lean"
    },
    ".lake.packages.mathlib.Mathlib.RingTheory.HahnSeries.PowerSeries": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/RingTheory/HahnSeries/PowerSeries.lean"
    },
    ".lake.packages.mathlib.Mathlib.RingTheory.HahnSeries.Addition": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/RingTheory/HahnSeries/Addition.lean"
    },
    ".lake.packages.mathlib.Mathlib.RingTheory.HahnSeries.Multiplication": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/RingTheory/HahnSeries/Multiplication.lean"
    },
    ".lake.packages.mathlib.Mathlib.RingTheory.HahnSeries.Basic": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/RingTheory/HahnSeries/Basic.lean"
    },
    ".lake.packages.mathlib.Mathlib.RingTheory.HahnSeries.HEval": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/RingTheory/HahnSeries/HEval.lean"
    },
    ".lake.packages.mathlib.Mathlib.MeasureTheory.Topology": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/MeasureTheory/Topology.lean"
    },
    ".lake.packages.mathlib.Mathlib.MeasureTheory.SetAlgebra": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/MeasureTheory/SetAlgebra.lean"
    },
    ".lake.packages.mathlib.Mathlib.MeasureTheory.PiSystem": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/MeasureTheory/PiSystem.lean"
    },
    ".lake.packages.mathlib.Mathlib.MeasureTheory.SetSemiring": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/MeasureTheory/SetSemiring.lean"
    },
    ".lake.packages.mathlib.Mathlib.MeasureTheory.Order.UpperLower": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/MeasureTheory/Order/UpperLower.lean"
    },
    ".lake.packages.mathlib.Mathlib.MeasureTheory.Order.Lattice": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/MeasureTheory/Order/Lattice.lean"
    },
    ".lake.packages.mathlib.Mathlib.MeasureTheory.Order.Group.Lattice": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/MeasureTheory/Order/Group/Lattice.lean"
    },
    ".lake.packages.mathlib.Mathlib.MeasureTheory.OuterMeasure.Caratheodory": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/MeasureTheory/OuterMeasure/Caratheodory.lean"
    },
    ".lake.packages.mathlib.Mathlib.MeasureTheory.OuterMeasure.BorelCantelli": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/MeasureTheory/OuterMeasure/BorelCantelli.lean"
    },
    ".lake.packages.mathlib.Mathlib.MeasureTheory.OuterMeasure.OfFunction": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/MeasureTheory/OuterMeasure/OfFunction.lean"
    },
    ".lake.packages.mathlib.Mathlib.MeasureTheory.OuterMeasure.Basic": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/MeasureTheory/OuterMeasure/Basic.lean"
    },
    ".lake.packages.mathlib.Mathlib.MeasureTheory.OuterMeasure.Operations": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/MeasureTheory/OuterMeasure/Operations.lean"
    },
    ".lake.packages.mathlib.Mathlib.MeasureTheory.OuterMeasure.OfAddContent": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/MeasureTheory/OuterMeasure/OfAddContent.lean"
    },
    ".lake.packages.mathlib.Mathlib.MeasureTheory.OuterMeasure.Defs": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/MeasureTheory/OuterMeasure/Defs.lean"
    },
    ".lake.packages.mathlib.Mathlib.MeasureTheory.OuterMeasure.AE": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/MeasureTheory/OuterMeasure/AE.lean"
    },
    ".lake.packages.mathlib.Mathlib.MeasureTheory.OuterMeasure.Induced": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/MeasureTheory/OuterMeasure/Induced.lean"
    },
    ".lake.packages.mathlib.Mathlib.MeasureTheory.VectorMeasure.Basic": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/MeasureTheory/VectorMeasure/Basic.lean"
    },
    ".lake.packages.mathlib.Mathlib.MeasureTheory.VectorMeasure.WithDensity": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/MeasureTheory/VectorMeasure/WithDensity.lean"
    },
    ".lake.packages.mathlib.Mathlib.MeasureTheory.VectorMeasure.Decomposition.Jordan": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/MeasureTheory/VectorMeasure/Decomposition/Jordan.lean"
    },
    ".lake.packages.mathlib.Mathlib.MeasureTheory.VectorMeasure.Decomposition.JordanSub": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/MeasureTheory/VectorMeasure/Decomposition/JordanSub.lean"
    },
    ".lake.packages.mathlib.Mathlib.MeasureTheory.VectorMeasure.Decomposition.Hahn": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/MeasureTheory/VectorMeasure/Decomposition/Hahn.lean"
    },
    ".lake.packages.mathlib.Mathlib.MeasureTheory.VectorMeasure.Decomposition.RadonNikodym": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/MeasureTheory/VectorMeasure/Decomposition/RadonNikodym.lean"
    },
    ".lake.packages.mathlib.Mathlib.MeasureTheory.VectorMeasure.Decomposition.Lebesgue": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/MeasureTheory/VectorMeasure/Decomposition/Lebesgue.lean"
    },
    ".lake.packages.mathlib.Mathlib.MeasureTheory.SpecificCodomains.ContinuousMap": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/MeasureTheory/SpecificCodomains/ContinuousMap.lean"
    },
    ".lake.packages.mathlib.Mathlib.MeasureTheory.SpecificCodomains.ContinuousMapZero": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/MeasureTheory/SpecificCodomains/ContinuousMapZero.lean"
    },
    ".lake.packages.mathlib.Mathlib.MeasureTheory.MeasurableSpace.Instances": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/MeasureTheory/MeasurableSpace/Instances.lean"
    },
    ".lake.packages.mathlib.Mathlib.MeasureTheory.MeasurableSpace.Card": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/MeasureTheory/MeasurableSpace/Card.lean"
    },
    ".lake.packages.mathlib.Mathlib.MeasureTheory.MeasurableSpace.MeasurablyGenerated": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/MeasureTheory/MeasurableSpace/MeasurablyGenerated.lean"
    },
    ".lake.packages.mathlib.Mathlib.MeasureTheory.MeasurableSpace.CountablyGenerated": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/MeasureTheory/MeasurableSpace/CountablyGenerated.lean"
    },
    ".lake.packages.mathlib.Mathlib.MeasureTheory.MeasurableSpace.Prod": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/MeasureTheory/MeasurableSpace/Prod.lean"
    },
    ".lake.packages.mathlib.Mathlib.MeasureTheory.MeasurableSpace.NCard": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/MeasureTheory/MeasurableSpace/NCard.lean"
    },
    ".lake.packages.mathlib.Mathlib.MeasureTheory.MeasurableSpace.EventuallyMeasurable": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/MeasureTheory/MeasurableSpace/EventuallyMeasurable.lean"
    },
    ".lake.packages.mathlib.Mathlib.MeasureTheory.MeasurableSpace.Pi": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/MeasureTheory/MeasurableSpace/Pi.lean"
    },
    ".lake.packages.mathlib.Mathlib.MeasureTheory.MeasurableSpace.Basic": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/MeasureTheory/MeasurableSpace/Basic.lean"
    },
    ".lake.packages.mathlib.Mathlib.MeasureTheory.MeasurableSpace.Constructions": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/MeasureTheory/MeasurableSpace/Constructions.lean"
    },
    ".lake.packages.mathlib.Mathlib.MeasureTheory.MeasurableSpace.Defs": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/MeasureTheory/MeasurableSpace/Defs.lean"
    },
    ".lake.packages.mathlib.Mathlib.MeasureTheory.MeasurableSpace.Embedding": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/MeasureTheory/MeasurableSpace/Embedding.lean"
    },
    ".lake.packages.mathlib.Mathlib.MeasureTheory.MeasurableSpace.PreorderRestrict": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/MeasureTheory/MeasurableSpace/PreorderRestrict.lean"
    },
    ".lake.packages.mathlib.Mathlib.MeasureTheory.MeasurableSpace.Invariants": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/MeasureTheory/MeasurableSpace/Invariants.lean"
    },
    ".lake.packages.mathlib.Mathlib.MeasureTheory.Category.MeasCat": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/MeasureTheory/Category/MeasCat.lean"
    },
    ".lake.packages.mathlib.Mathlib.MeasureTheory.Group.Convolution": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/MeasureTheory/Group/Convolution.lean"
    },
    ".lake.packages.mathlib.Mathlib.MeasureTheory.Group.Integral": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/MeasureTheory/Group/Integral.lean"
    },
    ".lake.packages.mathlib.Mathlib.MeasureTheory.Group.AEStabilizer": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/MeasureTheory/Group/AEStabilizer.lean"
    },
    ".lake.packages.mathlib.Mathlib.MeasureTheory.Group.AddCircle": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/MeasureTheory/Group/AddCircle.lean"
    },
    ".lake.packages.mathlib.Mathlib.MeasureTheory.Group.Prod": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/MeasureTheory/Group/Prod.lean"
    },
    ".lake.packages.mathlib.Mathlib.MeasureTheory.Group.Pointwise": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/MeasureTheory/Group/Pointwise.lean"
    },
    ".lake.packages.mathlib.Mathlib.MeasureTheory.Group.ModularCharacter": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/MeasureTheory/Group/ModularCharacter.lean"
    },
    ".lake.packages.mathlib.Mathlib.MeasureTheory.Group.IntegralConvolution": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/MeasureTheory/Group/IntegralConvolution.lean"
    },
    ".lake.packages.mathlib.Mathlib.MeasureTheory.Group.GeometryOfNumbers": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/MeasureTheory/Group/GeometryOfNumbers.lean"
    },
    ".lake.packages.mathlib.Mathlib.MeasureTheory.Group.Arithmetic": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/MeasureTheory/Group/Arithmetic.lean"
    },
    ".lake.packages.mathlib.Mathlib.MeasureTheory.Group.Defs": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/MeasureTheory/Group/Defs.lean"
    },
    ".lake.packages.mathlib.Mathlib.MeasureTheory.Group.LIntegral": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/MeasureTheory/Group/LIntegral.lean"
    },
    ".lake.packages.mathlib.Mathlib.MeasureTheory.Group.MeasurableEquiv": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/MeasureTheory/Group/MeasurableEquiv.lean"
    },
    ".lake.packages.mathlib.Mathlib.MeasureTheory.Group.Action": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/MeasureTheory/Group/Action.lean"
    },
    ".lake.packages.mathlib.Mathlib.MeasureTheory.Group.Measure": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/MeasureTheory/Group/Measure.lean"
    },
    ".lake.packages.mathlib.Mathlib.MeasureTheory.Group.FundamentalDomain": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/MeasureTheory/Group/FundamentalDomain.lean"
    },
    ".lake.packages.mathlib.Mathlib.MeasureTheory.Constructions.UnitInterval": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/MeasureTheory/Constructions/UnitInterval.lean"
    },
    ".lake.packages.mathlib.Mathlib.MeasureTheory.Constructions.ClosedCompactCylinders": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/MeasureTheory/Constructions/ClosedCompactCylinders.lean"
    },
    ".lake.packages.mathlib.Mathlib.MeasureTheory.Constructions.Pi": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/MeasureTheory/Constructions/Pi.lean"
    },
    ".lake.packages.mathlib.Mathlib.MeasureTheory.Constructions.HaarToSphere": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/MeasureTheory/Constructions/HaarToSphere.lean"
    },
    ".lake.packages.mathlib.Mathlib.MeasureTheory.Constructions.ProjectiveFamilyContent": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/MeasureTheory/Constructions/ProjectiveFamilyContent.lean"
    },
    ".lake.packages.mathlib.Mathlib.MeasureTheory.Constructions.SubmoduleQuotient": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/MeasureTheory/Constructions/SubmoduleQuotient.lean"
    },
    ".lake.packages.mathlib.Mathlib.MeasureTheory.Constructions.Projective": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/MeasureTheory/Constructions/Projective.lean"
    },
    ".lake.packages.mathlib.Mathlib.MeasureTheory.Constructions.Cylinders": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/MeasureTheory/Constructions/Cylinders.lean"
    },
    ".lake.packages.mathlib.Mathlib.MeasureTheory.Constructions.AddChar": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/MeasureTheory/Constructions/AddChar.lean"
    },
    ".lake.packages.mathlib.Mathlib.MeasureTheory.Constructions.Polish.EmbeddingReal": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/MeasureTheory/Constructions/Polish/EmbeddingReal.lean"
    },
    ".lake.packages.mathlib.Mathlib.MeasureTheory.Constructions.Polish.StronglyMeasurable": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/MeasureTheory/Constructions/Polish/StronglyMeasurable.lean"
    },
    ".lake.packages.mathlib.Mathlib.MeasureTheory.Constructions.Polish.Basic": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/MeasureTheory/Constructions/Polish/Basic.lean"
    },
    ".lake.packages.mathlib.Mathlib.MeasureTheory.Constructions.BorelSpace.ContinuousLinearMap": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/MeasureTheory/Constructions/BorelSpace/ContinuousLinearMap.lean"
    },
    ".lake.packages.mathlib.Mathlib.MeasureTheory.Constructions.BorelSpace.Metric": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/MeasureTheory/Constructions/BorelSpace/Metric.lean"
    },
    ".lake.packages.mathlib.Mathlib.MeasureTheory.Constructions.BorelSpace.Metrizable": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/MeasureTheory/Constructions/BorelSpace/Metrizable.lean"
    },
    ".lake.packages.mathlib.Mathlib.MeasureTheory.Constructions.BorelSpace.Order": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/MeasureTheory/Constructions/BorelSpace/Order.lean"
    },
    ".lake.packages.mathlib.Mathlib.MeasureTheory.Constructions.BorelSpace.Basic": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/MeasureTheory/Constructions/BorelSpace/Basic.lean"
    },
    ".lake.packages.mathlib.Mathlib.MeasureTheory.Constructions.BorelSpace.Complex": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/MeasureTheory/Constructions/BorelSpace/Complex.lean"
    },
    ".lake.packages.mathlib.Mathlib.MeasureTheory.Constructions.BorelSpace.Real": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/MeasureTheory/Constructions/BorelSpace/Real.lean"
    },
    ".lake.packages.mathlib.Mathlib.MeasureTheory.Function.Jacobian": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/MeasureTheory/Function/Jacobian.lean"
    },
    ".lake.packages.mathlib.Mathlib.MeasureTheory.Function.AEEqFun": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/MeasureTheory/Function/AEEqFun.lean"
    },
    ".lake.packages.mathlib.Mathlib.MeasureTheory.Function.FactorsThrough": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/MeasureTheory/Function/FactorsThrough.lean"
    },
    ".lake.packages.mathlib.Mathlib.MeasureTheory.Function.UnifTight": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/MeasureTheory/Function/UnifTight.lean"
    },
    ".lake.packages.mathlib.Mathlib.MeasureTheory.Function.SimpleFunc": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/MeasureTheory/Function/SimpleFunc.lean"
    },
    ".lake.packages.mathlib.Mathlib.MeasureTheory.Function.LpOrder": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/MeasureTheory/Function/LpOrder.lean"
    },
    ".lake.packages.mathlib.Mathlib.MeasureTheory.Function.Intersectivity": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/MeasureTheory/Function/Intersectivity.lean"
    },
    ".lake.packages.mathlib.Mathlib.MeasureTheory.Function.UniformIntegrable": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/MeasureTheory/Function/UniformIntegrable.lean"
    },
    ".lake.packages.mathlib.Mathlib.MeasureTheory.Function.ContinuousMapDense": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/MeasureTheory/Function/ContinuousMapDense.lean"
    },
    ".lake.packages.mathlib.Mathlib.MeasureTheory.Function.Holder": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/MeasureTheory/Function/Holder.lean"
    },
    ".lake.packages.mathlib.Mathlib.MeasureTheory.Function.AEEqOfLIntegral": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/MeasureTheory/Function/AEEqOfLIntegral.lean"
    },
    ".lake.packages.mathlib.Mathlib.MeasureTheory.Function.EssSup": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/MeasureTheory/Function/EssSup.lean"
    },
    ".lake.packages.mathlib.Mathlib.MeasureTheory.Function.ConvergenceInMeasure": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/MeasureTheory/Function/ConvergenceInMeasure.lean"
    },
    ".lake.packages.mathlib.Mathlib.MeasureTheory.Function.L2Space": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/MeasureTheory/Function/L2Space.lean"
    },
    ".lake.packages.mathlib.Mathlib.MeasureTheory.Function.AEMeasurableOrder": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/MeasureTheory/Function/AEMeasurableOrder.lean"
    },
    ".lake.packages.mathlib.Mathlib.MeasureTheory.Function.JacobianOneDim": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/MeasureTheory/Function/JacobianOneDim.lean"
    },
    ".lake.packages.mathlib.Mathlib.MeasureTheory.Function.LocallyIntegrable": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/MeasureTheory/Function/LocallyIntegrable.lean"
    },
    ".lake.packages.mathlib.Mathlib.MeasureTheory.Function.Floor": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/MeasureTheory/Function/Floor.lean"
    },
    ".lake.packages.mathlib.Mathlib.MeasureTheory.Function.SimpleFuncDenseLp": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/MeasureTheory/Function/SimpleFuncDenseLp.lean"
    },
    ".lake.packages.mathlib.Mathlib.MeasureTheory.Function.SimpleFuncDense": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/MeasureTheory/Function/SimpleFuncDense.lean"
    },
    ".lake.packages.mathlib.Mathlib.MeasureTheory.Function.Egorov": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/MeasureTheory/Function/Egorov.lean"
    },
    ".lake.packages.mathlib.Mathlib.MeasureTheory.Function.AEEqOfIntegral": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/MeasureTheory/Function/AEEqOfIntegral.lean"
    },
    ".lake.packages.mathlib.Mathlib.MeasureTheory.Function.AEMeasurableSequence": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/MeasureTheory/Function/AEMeasurableSequence.lean"
    },
    ".lake.packages.mathlib.Mathlib.MeasureTheory.Function.ConditionalExpectation.CondexpL1": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/MeasureTheory/Function/ConditionalExpectation/CondexpL1.lean"
    },
    ".lake.packages.mathlib.Mathlib.MeasureTheory.Function.ConditionalExpectation.Indicator": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/MeasureTheory/Function/ConditionalExpectation/Indicator.lean"
    },
    ".lake.packages.mathlib.Mathlib.MeasureTheory.Function.ConditionalExpectation.Basic": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/MeasureTheory/Function/ConditionalExpectation/Basic.lean"
    },
    ".lake.packages.mathlib.Mathlib.MeasureTheory.Function.ConditionalExpectation.Unique": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/MeasureTheory/Function/ConditionalExpectation/Unique.lean"
    },
    ".lake.packages.mathlib.Mathlib.MeasureTheory.Function.ConditionalExpectation.AEMeasurable": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/MeasureTheory/Function/ConditionalExpectation/AEMeasurable.lean"
    },
    ".lake.packages.mathlib.Mathlib.MeasureTheory.Function.ConditionalExpectation.CondexpL2": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/MeasureTheory/Function/ConditionalExpectation/CondexpL2.lean"
    },
    ".lake.packages.mathlib.Mathlib.MeasureTheory.Function.ConditionalExpectation.Real": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/MeasureTheory/Function/ConditionalExpectation/Real.lean"
    },
    ".lake.packages.mathlib.Mathlib.MeasureTheory.Function.StronglyMeasurable.Lp": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/MeasureTheory/Function/StronglyMeasurable/Lp.lean"
    },
    ".lake.packages.mathlib.Mathlib.MeasureTheory.Function.StronglyMeasurable.Lemmas": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/MeasureTheory/Function/StronglyMeasurable/Lemmas.lean"
    },
    ".lake.packages.mathlib.Mathlib.MeasureTheory.Function.StronglyMeasurable.ENNReal": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/MeasureTheory/Function/StronglyMeasurable/ENNReal.lean"
    },
    ".lake.packages.mathlib.Mathlib.MeasureTheory.Function.StronglyMeasurable.Inner": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/MeasureTheory/Function/StronglyMeasurable/Inner.lean"
    },
    ".lake.packages.mathlib.Mathlib.MeasureTheory.Function.StronglyMeasurable.Basic": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/MeasureTheory/Function/StronglyMeasurable/Basic.lean"
    },
    ".lake.packages.mathlib.Mathlib.MeasureTheory.Function.StronglyMeasurable.AEStronglyMeasurable": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/MeasureTheory/Function/StronglyMeasurable/AEStronglyMeasurable.lean"
    },
    ".lake.packages.mathlib.Mathlib.MeasureTheory.Function.L1Space.AEEqFun": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/MeasureTheory/Function/L1Space/AEEqFun.lean"
    },
    ".lake.packages.mathlib.Mathlib.MeasureTheory.Function.L1Space.HasFiniteIntegral": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/MeasureTheory/Function/L1Space/HasFiniteIntegral.lean"
    },
    ".lake.packages.mathlib.Mathlib.MeasureTheory.Function.L1Space.Integrable": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/MeasureTheory/Function/L1Space/Integrable.lean"
    },
    ".lake.packages.mathlib.Mathlib.MeasureTheory.Function.SpecialFunctions.RCLike": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/MeasureTheory/Function/SpecialFunctions/RCLike.lean"
    },
    ".lake.packages.mathlib.Mathlib.MeasureTheory.Function.SpecialFunctions.Arctan": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/MeasureTheory/Function/SpecialFunctions/Arctan.lean"
    },
    ".lake.packages.mathlib.Mathlib.MeasureTheory.Function.SpecialFunctions.Inner": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/MeasureTheory/Function/SpecialFunctions/Inner.lean"
    },
    ".lake.packages.mathlib.Mathlib.MeasureTheory.Function.SpecialFunctions.Basic": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/MeasureTheory/Function/SpecialFunctions/Basic.lean"
    },
    ".lake.packages.mathlib.Mathlib.MeasureTheory.Function.SpecialFunctions.Sinc": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/MeasureTheory/Function/SpecialFunctions/Sinc.lean"
    },
    ".lake.packages.mathlib.Mathlib.MeasureTheory.Function.LpSpace.Complete": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/MeasureTheory/Function/LpSpace/Complete.lean"
    },
    ".lake.packages.mathlib.Mathlib.MeasureTheory.Function.LpSpace.Indicator": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/MeasureTheory/Function/LpSpace/Indicator.lean"
    },
    ".lake.packages.mathlib.Mathlib.MeasureTheory.Function.LpSpace.Basic": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/MeasureTheory/Function/LpSpace/Basic.lean"
    },
    ".lake.packages.mathlib.Mathlib.MeasureTheory.Function.LpSpace.ContinuousCompMeasurePreserving": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/MeasureTheory/Function/LpSpace/ContinuousCompMeasurePreserving.lean"
    },
    ".lake.packages.mathlib.Mathlib.MeasureTheory.Function.LpSpace.ContinuousFunctions": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/MeasureTheory/Function/LpSpace/ContinuousFunctions.lean"
    },
    ".lake.packages.mathlib.Mathlib.MeasureTheory.Function.LpSpace.DomAct.Basic": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/MeasureTheory/Function/LpSpace/DomAct/Basic.lean"
    },
    ".lake.packages.mathlib.Mathlib.MeasureTheory.Function.LpSpace.DomAct.Continuous": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/MeasureTheory/Function/LpSpace/DomAct/Continuous.lean"
    },
    ".lake.packages.mathlib.Mathlib.MeasureTheory.Function.AEEqFun.DomAct": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/MeasureTheory/Function/AEEqFun/DomAct.lean"
    },
    ".lake.packages.mathlib.Mathlib.MeasureTheory.Function.LpSeminorm.Trim": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/MeasureTheory/Function/LpSeminorm/Trim.lean"
    },
    ".lake.packages.mathlib.Mathlib.MeasureTheory.Function.LpSeminorm.Prod": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/MeasureTheory/Function/LpSeminorm/Prod.lean"
    },
    ".lake.packages.mathlib.Mathlib.MeasureTheory.Function.LpSeminorm.Basic": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/MeasureTheory/Function/LpSeminorm/Basic.lean"
    },
    ".lake.packages.mathlib.Mathlib.MeasureTheory.Function.LpSeminorm.ChebyshevMarkov": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/MeasureTheory/Function/LpSeminorm/ChebyshevMarkov.lean"
    },
    ".lake.packages.mathlib.Mathlib.MeasureTheory.Function.LpSeminorm.Defs": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/MeasureTheory/Function/LpSeminorm/Defs.lean"
    },
    ".lake.packages.mathlib.Mathlib.MeasureTheory.Function.LpSeminorm.CompareExp": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/MeasureTheory/Function/LpSeminorm/CompareExp.lean"
    },
    ".lake.packages.mathlib.Mathlib.MeasureTheory.Function.LpSeminorm.TriangleInequality": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/MeasureTheory/Function/LpSeminorm/TriangleInequality.lean"
    },
    ".lake.packages.mathlib.Mathlib.MeasureTheory.Measure.Trim": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/MeasureTheory/Measure/Trim.lean"
    },
    ".lake.packages.mathlib.Mathlib.MeasureTheory.Measure.MutuallySingular": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/MeasureTheory/Measure/MutuallySingular.lean"
    },
    ".lake.packages.mathlib.Mathlib.MeasureTheory.Measure.Count": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/MeasureTheory/Measure/Count.lean"
    },
    ".lake.packages.mathlib.Mathlib.MeasureTheory.Measure.SeparableMeasure": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/MeasureTheory/Measure/SeparableMeasure.lean"
    },
    ".lake.packages.mathlib.Mathlib.MeasureTheory.Measure.Tilted": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/MeasureTheory/Measure/Tilted.lean"
    },
    ".lake.packages.mathlib.Mathlib.MeasureTheory.Measure.DiracProba": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/MeasureTheory/Measure/DiracProba.lean"
    },
    ".lake.packages.mathlib.Mathlib.MeasureTheory.Measure.AEDisjoint": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/MeasureTheory/Measure/AEDisjoint.lean"
    },
    ".lake.packages.mathlib.Mathlib.MeasureTheory.Measure.Regular": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/MeasureTheory/Measure/Regular.lean"
    },
    ".lake.packages.mathlib.Mathlib.MeasureTheory.Measure.Doubling": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/MeasureTheory/Measure/Doubling.lean"
    },
    ".lake.packages.mathlib.Mathlib.MeasureTheory.Measure.Comap": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/MeasureTheory/Measure/Comap.lean"
    },
    ".lake.packages.mathlib.Mathlib.MeasureTheory.Measure.ProbabilityMeasure": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/MeasureTheory/Measure/ProbabilityMeasure.lean"
    },
    ".lake.packages.mathlib.Mathlib.MeasureTheory.Measure.WithDensityFinite": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/MeasureTheory/Measure/WithDensityFinite.lean"
    },
    ".lake.packages.mathlib.Mathlib.MeasureTheory.Measure.IntegralCharFun": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/MeasureTheory/Measure/IntegralCharFun.lean"
    },
    ".lake.packages.mathlib.Mathlib.MeasureTheory.Measure.OpenPos": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/MeasureTheory/Measure/OpenPos.lean"
    },
    ".lake.packages.mathlib.Mathlib.MeasureTheory.Measure.TightNormed": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/MeasureTheory/Measure/TightNormed.lean"
    },
    ".lake.packages.mathlib.Mathlib.MeasureTheory.Measure.RegularityCompacts": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/MeasureTheory/Measure/RegularityCompacts.lean"
    },
    ".lake.packages.mathlib.Mathlib.MeasureTheory.Measure.MeasureSpace": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/MeasureTheory/Measure/MeasureSpace.lean"
    },
    ".lake.packages.mathlib.Mathlib.MeasureTheory.Measure.Prod": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/MeasureTheory/Measure/Prod.lean"
    },
    ".lake.packages.mathlib.Mathlib.MeasureTheory.Measure.Tight": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/MeasureTheory/Measure/Tight.lean"
    },
    ".lake.packages.mathlib.Mathlib.MeasureTheory.Measure.Portmanteau": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/MeasureTheory/Measure/Portmanteau.lean"
    },
    ".lake.packages.mathlib.Mathlib.MeasureTheory.Measure.FiniteMeasure": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/MeasureTheory/Measure/FiniteMeasure.lean"
    },
    ".lake.packages.mathlib.Mathlib.MeasureTheory.Measure.FiniteMeasureExt": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/MeasureTheory/Measure/FiniteMeasureExt.lean"
    },
    ".lake.packages.mathlib.Mathlib.MeasureTheory.Measure.LogLikelihoodRatio": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/MeasureTheory/Measure/LogLikelihoodRatio.lean"
    },
    ".lake.packages.mathlib.Mathlib.MeasureTheory.Measure.Map": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/MeasureTheory/Measure/Map.lean"
    },
    ".lake.packages.mathlib.Mathlib.MeasureTheory.Measure.FiniteMeasureProd": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/MeasureTheory/Measure/FiniteMeasureProd.lean"
    },
    ".lake.packages.mathlib.Mathlib.MeasureTheory.Measure.Dirac": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/MeasureTheory/Measure/Dirac.lean"
    },
    ".lake.packages.mathlib.Mathlib.MeasureTheory.Measure.Restrict": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/MeasureTheory/Measure/Restrict.lean"
    },
    ".lake.packages.mathlib.Mathlib.MeasureTheory.Measure.CharacteristicFunction": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/MeasureTheory/Measure/CharacteristicFunction.lean"
    },
    ".lake.packages.mathlib.Mathlib.MeasureTheory.Measure.AbsolutelyContinuous": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/MeasureTheory/Measure/AbsolutelyContinuous.lean"
    },
    ".lake.packages.mathlib.Mathlib.MeasureTheory.Measure.NullMeasurable": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/MeasureTheory/Measure/NullMeasurable.lean"
    },
    ".lake.packages.mathlib.Mathlib.MeasureTheory.Measure.AddContent": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/MeasureTheory/Measure/AddContent.lean"
    },
    ".lake.packages.mathlib.Mathlib.MeasureTheory.Measure.Content": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/MeasureTheory/Measure/Content.lean"
    },
    ".lake.packages.mathlib.Mathlib.MeasureTheory.Measure.Hausdorff": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/MeasureTheory/Measure/Hausdorff.lean"
    },
    ".lake.packages.mathlib.Mathlib.MeasureTheory.Measure.WithDensity": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/MeasureTheory/Measure/WithDensity.lean"
    },
    ".lake.packages.mathlib.Mathlib.MeasureTheory.Measure.MeasureSpaceDef": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/MeasureTheory/Measure/MeasureSpaceDef.lean"
    },
    ".lake.packages.mathlib.Mathlib.MeasureTheory.Measure.Complex": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/MeasureTheory/Measure/Complex.lean"
    },
    ".lake.packages.mathlib.Mathlib.MeasureTheory.Measure.AEMeasurable": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/MeasureTheory/Measure/AEMeasurable.lean"
    },
    ".lake.packages.mathlib.Mathlib.MeasureTheory.Measure.EverywherePos": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/MeasureTheory/Measure/EverywherePos.lean"
    },
    ".lake.packages.mathlib.Mathlib.MeasureTheory.Measure.LevyProkhorovMetric": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/MeasureTheory/Measure/LevyProkhorovMetric.lean"
    },
    ".lake.packages.mathlib.Mathlib.MeasureTheory.Measure.QuasiMeasurePreserving": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/MeasureTheory/Measure/QuasiMeasurePreserving.lean"
    },
    ".lake.packages.mathlib.Mathlib.MeasureTheory.Measure.GiryMonad": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/MeasureTheory/Measure/GiryMonad.lean"
    },
    ".lake.packages.mathlib.Mathlib.MeasureTheory.Measure.Typeclasses": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/MeasureTheory/Measure/Typeclasses.lean"
    },
    ".lake.packages.mathlib.Mathlib.MeasureTheory.Measure.ContinuousPreimage": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/MeasureTheory/Measure/ContinuousPreimage.lean"
    },
    ".lake.packages.mathlib.Mathlib.MeasureTheory.Measure.HasOuterApproxClosed": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/MeasureTheory/Measure/HasOuterApproxClosed.lean"
    },
    ".lake.packages.mathlib.Mathlib.MeasureTheory.Measure.Stieltjes": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/MeasureTheory/Measure/Stieltjes.lean"
    },
    ".lake.packages.mathlib.Mathlib.MeasureTheory.Measure.Sub": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/MeasureTheory/Measure/Sub.lean"
    },
    ".lake.packages.mathlib.Mathlib.MeasureTheory.Measure.Real": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/MeasureTheory/Measure/Real.lean"
    },
    ".lake.packages.mathlib.Mathlib.MeasureTheory.Measure.Haar.Basic": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/MeasureTheory/Measure/Haar/Basic.lean"
    },
    ".lake.packages.mathlib.Mathlib.MeasureTheory.Measure.Haar.Quotient": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/MeasureTheory/Measure/Haar/Quotient.lean"
    },
    ".lake.packages.mathlib.Mathlib.MeasureTheory.Measure.Haar.Unique": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/MeasureTheory/Measure/Haar/Unique.lean"
    },
    ".lake.packages.mathlib.Mathlib.MeasureTheory.Measure.Haar.NormedSpace": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/MeasureTheory/Measure/Haar/NormedSpace.lean"
    },
    ".lake.packages.mathlib.Mathlib.MeasureTheory.Measure.Haar.OfBasis": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/MeasureTheory/Measure/Haar/OfBasis.lean"
    },
    ".lake.packages.mathlib.Mathlib.MeasureTheory.Measure.Haar.DistribChar": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/MeasureTheory/Measure/Haar/DistribChar.lean"
    },
    ".lake.packages.mathlib.Mathlib.MeasureTheory.Measure.Haar.Disintegration": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/MeasureTheory/Measure/Haar/Disintegration.lean"
    },
    ".lake.packages.mathlib.Mathlib.MeasureTheory.Measure.Haar.InnerProductSpace": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/MeasureTheory/Measure/Haar/InnerProductSpace.lean"
    },
    ".lake.packages.mathlib.Mathlib.MeasureTheory.Measure.Lebesgue.Integral": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/MeasureTheory/Measure/Lebesgue/Integral.lean"
    },
    ".lake.packages.mathlib.Mathlib.MeasureTheory.Measure.Lebesgue.EqHaar": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/MeasureTheory/Measure/Lebesgue/EqHaar.lean"
    },
    ".lake.packages.mathlib.Mathlib.MeasureTheory.Measure.Lebesgue.Basic": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/MeasureTheory/Measure/Lebesgue/Basic.lean"
    },
    ".lake.packages.mathlib.Mathlib.MeasureTheory.Measure.Lebesgue.VolumeOfBalls": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/MeasureTheory/Measure/Lebesgue/VolumeOfBalls.lean"
    },
    ".lake.packages.mathlib.Mathlib.MeasureTheory.Measure.Lebesgue.Complex": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/MeasureTheory/Measure/Lebesgue/Complex.lean"
    },
    ".lake.packages.mathlib.Mathlib.MeasureTheory.Measure.Typeclasses.Finite": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/MeasureTheory/Measure/Typeclasses/Finite.lean"
    },
    ".lake.packages.mathlib.Mathlib.MeasureTheory.Measure.Typeclasses.NoAtoms": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/MeasureTheory/Measure/Typeclasses/NoAtoms.lean"
    },
    ".lake.packages.mathlib.Mathlib.MeasureTheory.Measure.Typeclasses.Probability": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/MeasureTheory/Measure/Typeclasses/Probability.lean"
    },
    ".lake.packages.mathlib.Mathlib.MeasureTheory.Measure.Typeclasses.SFinite": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/MeasureTheory/Measure/Typeclasses/SFinite.lean"
    },
    ".lake.packages.mathlib.Mathlib.MeasureTheory.Measure.Decomposition.Hahn": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/MeasureTheory/Measure/Decomposition/Hahn.lean"
    },
    ".lake.packages.mathlib.Mathlib.MeasureTheory.Measure.Decomposition.RadonNikodym": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/MeasureTheory/Measure/Decomposition/RadonNikodym.lean"
    },
    ".lake.packages.mathlib.Mathlib.MeasureTheory.Measure.Decomposition.Exhaustion": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/MeasureTheory/Measure/Decomposition/Exhaustion.lean"
    },
    ".lake.packages.mathlib.Mathlib.MeasureTheory.Measure.Decomposition.IntegralRNDeriv": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/MeasureTheory/Measure/Decomposition/IntegralRNDeriv.lean"
    },
    ".lake.packages.mathlib.Mathlib.MeasureTheory.Measure.Decomposition.Lebesgue": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/MeasureTheory/Measure/Decomposition/Lebesgue.lean"
    },
    ".lake.packages.mathlib.Mathlib.MeasureTheory.Covering.Besicovitch": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/MeasureTheory/Covering/Besicovitch.lean"
    },
    ".lake.packages.mathlib.Mathlib.MeasureTheory.Covering.LiminfLimsup": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/MeasureTheory/Covering/LiminfLimsup.lean"
    },
    ".lake.packages.mathlib.Mathlib.MeasureTheory.Covering.Vitali": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/MeasureTheory/Covering/Vitali.lean"
    },
    ".lake.packages.mathlib.Mathlib.MeasureTheory.Covering.Differentiation": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/MeasureTheory/Covering/Differentiation.lean"
    },
    ".lake.packages.mathlib.Mathlib.MeasureTheory.Covering.OneDim": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/MeasureTheory/Covering/OneDim.lean"
    },
    ".lake.packages.mathlib.Mathlib.MeasureTheory.Covering.BesicovitchVectorSpace": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/MeasureTheory/Covering/BesicovitchVectorSpace.lean"
    },
    ".lake.packages.mathlib.Mathlib.MeasureTheory.Covering.VitaliFamily": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/MeasureTheory/Covering/VitaliFamily.lean"
    },
    ".lake.packages.mathlib.Mathlib.MeasureTheory.Covering.DensityTheorem": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/MeasureTheory/Covering/DensityTheorem.lean"
    },
    ".lake.packages.mathlib.Mathlib.MeasureTheory.Integral.Gamma": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/MeasureTheory/Integral/Gamma.lean"
    },
    ".lake.packages.mathlib.Mathlib.MeasureTheory.Integral.FinMeasAdditive": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/MeasureTheory/Integral/FinMeasAdditive.lean"
    },
    ".lake.packages.mathlib.Mathlib.MeasureTheory.Integral.IntegrableOn": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/MeasureTheory/Integral/IntegrableOn.lean"
    },
    ".lake.packages.mathlib.Mathlib.MeasureTheory.Integral.ExpDecay": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/MeasureTheory/Integral/ExpDecay.lean"
    },
    ".lake.packages.mathlib.Mathlib.MeasureTheory.Integral.BoundedContinuousFunction": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/MeasureTheory/Integral/BoundedContinuousFunction.lean"
    },
    ".lake.packages.mathlib.Mathlib.MeasureTheory.Integral.CircleAverage": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/MeasureTheory/Integral/CircleAverage.lean"
    },
    ".lake.packages.mathlib.Mathlib.MeasureTheory.Integral.Indicator": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/MeasureTheory/Integral/Indicator.lean"
    },
    ".lake.packages.mathlib.Mathlib.MeasureTheory.Integral.Asymptotics": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/MeasureTheory/Integral/Asymptotics.lean"
    },
    ".lake.packages.mathlib.Mathlib.MeasureTheory.Integral.LebesgueNormedSpace": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/MeasureTheory/Integral/LebesgueNormedSpace.lean"
    },
    ".lake.packages.mathlib.Mathlib.MeasureTheory.Integral.TorusIntegral": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/MeasureTheory/Integral/TorusIntegral.lean"
    },
    ".lake.packages.mathlib.Mathlib.MeasureTheory.Integral.CircleTransform": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/MeasureTheory/Integral/CircleTransform.lean"
    },
    ".lake.packages.mathlib.Mathlib.MeasureTheory.Integral.IntegrationByParts": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/MeasureTheory/Integral/IntegrationByParts.lean"
    },
    ".lake.packages.mathlib.Mathlib.MeasureTheory.Integral.Average": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/MeasureTheory/Integral/Average.lean"
    },
    ".lake.packages.mathlib.Mathlib.MeasureTheory.Integral.DominatedConvergence": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/MeasureTheory/Integral/DominatedConvergence.lean"
    },
    ".lake.packages.mathlib.Mathlib.MeasureTheory.Integral.Bochner": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/MeasureTheory/Integral/Bochner.lean"
    },
    ".lake.packages.mathlib.Mathlib.MeasureTheory.Integral.Prod": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/MeasureTheory/Integral/Prod.lean"
    },
    ".lake.packages.mathlib.Mathlib.MeasureTheory.Integral.SetIntegral": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/MeasureTheory/Integral/SetIntegral.lean"
    },
    ".lake.packages.mathlib.Mathlib.MeasureTheory.Integral.Pi": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/MeasureTheory/Integral/Pi.lean"
    },
    ".lake.packages.mathlib.Mathlib.MeasureTheory.Integral.BochnerL1": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/MeasureTheory/Integral/BochnerL1.lean"
    },
    ".lake.packages.mathlib.Mathlib.MeasureTheory.Integral.IntervalAverage": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/MeasureTheory/Integral/IntervalAverage.lean"
    },
    ".lake.packages.mathlib.Mathlib.MeasureTheory.Integral.MeanInequalities": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/MeasureTheory/Integral/MeanInequalities.lean"
    },
    ".lake.packages.mathlib.Mathlib.MeasureTheory.Integral.FundThmCalculus": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/MeasureTheory/Integral/FundThmCalculus.lean"
    },
    ".lake.packages.mathlib.Mathlib.MeasureTheory.Integral.IntegralEqImproper": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/MeasureTheory/Integral/IntegralEqImproper.lean"
    },
    ".lake.packages.mathlib.Mathlib.MeasureTheory.Integral.Marginal": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/MeasureTheory/Integral/Marginal.lean"
    },
    ".lake.packages.mathlib.Mathlib.MeasureTheory.Integral.IntervalIntegral": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/MeasureTheory/Integral/IntervalIntegral.lean"
    },
    ".lake.packages.mathlib.Mathlib.MeasureTheory.Integral.CircleIntegral": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/MeasureTheory/Integral/CircleIntegral.lean"
    },
    ".lake.packages.mathlib.Mathlib.MeasureTheory.Integral.Lebesgue": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/MeasureTheory/Integral/Lebesgue.lean"
    },
    ".lake.packages.mathlib.Mathlib.MeasureTheory.Integral.Periodic": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/MeasureTheory/Integral/Periodic.lean"
    },
    ".lake.packages.mathlib.Mathlib.MeasureTheory.Integral.Layercake": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/MeasureTheory/Integral/Layercake.lean"
    },
    ".lake.packages.mathlib.Mathlib.MeasureTheory.Integral.SetToL1": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/MeasureTheory/Integral/SetToL1.lean"
    },
    ".lake.packages.mathlib.Mathlib.MeasureTheory.Integral.PeakFunction": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/MeasureTheory/Integral/PeakFunction.lean"
    },
    ".lake.packages.mathlib.Mathlib.MeasureTheory.Integral.VitaliCaratheodory": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/MeasureTheory/Integral/VitaliCaratheodory.lean"
    },
    ".lake.packages.mathlib.Mathlib.MeasureTheory.Integral.DivergenceTheorem": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/MeasureTheory/Integral/DivergenceTheorem.lean"
    },
    ".lake.packages.mathlib.Mathlib.MeasureTheory.Integral.Lebesgue.MeasurePreserving": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/MeasureTheory/Integral/Lebesgue/MeasurePreserving.lean"
    },
    ".lake.packages.mathlib.Mathlib.MeasureTheory.Integral.Lebesgue.Add": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/MeasureTheory/Integral/Lebesgue/Add.lean"
    },
    ".lake.packages.mathlib.Mathlib.MeasureTheory.Integral.Lebesgue.Norm": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/MeasureTheory/Integral/Lebesgue/Norm.lean"
    },
    ".lake.packages.mathlib.Mathlib.MeasureTheory.Integral.Lebesgue.DominatedConvergence": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/MeasureTheory/Integral/Lebesgue/DominatedConvergence.lean"
    },
    ".lake.packages.mathlib.Mathlib.MeasureTheory.Integral.Lebesgue.Map": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/MeasureTheory/Integral/Lebesgue/Map.lean"
    },
    ".lake.packages.mathlib.Mathlib.MeasureTheory.Integral.Lebesgue.Basic": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/MeasureTheory/Integral/Lebesgue/Basic.lean"
    },
    ".lake.packages.mathlib.Mathlib.MeasureTheory.Integral.Lebesgue.Markov": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/MeasureTheory/Integral/Lebesgue/Markov.lean"
    },
    ".lake.packages.mathlib.Mathlib.MeasureTheory.Integral.Lebesgue.Sub": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/MeasureTheory/Integral/Lebesgue/Sub.lean"
    },
    ".lake.packages.mathlib.Mathlib.MeasureTheory.Integral.Lebesgue.Countable": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/MeasureTheory/Integral/Lebesgue/Countable.lean"
    },
    ".lake.packages.mathlib.Mathlib.MeasureTheory.Integral.RieszMarkovKakutani.Basic": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/MeasureTheory/Integral/RieszMarkovKakutani/Basic.lean"
    },
    ".lake.packages.mathlib.Mathlib.MeasureTheory.Integral.RieszMarkovKakutani.NNReal": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/MeasureTheory/Integral/RieszMarkovKakutani/NNReal.lean"
    },
    ".lake.packages.mathlib.Mathlib.MeasureTheory.Integral.RieszMarkovKakutani.Real": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/MeasureTheory/Integral/RieszMarkovKakutani/Real.lean"
    },
    ".lake.packages.mathlib.Mathlib.MeasureTheory.Integral.IntervalIntegral.IntegrationByParts": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/MeasureTheory/Integral/IntervalIntegral/IntegrationByParts.lean"
    },
    ".lake.packages.mathlib.Mathlib.MeasureTheory.Integral.IntervalIntegral.ContDiff": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/MeasureTheory/Integral/IntervalIntegral/ContDiff.lean"
    },
    ".lake.packages.mathlib.Mathlib.MeasureTheory.Integral.IntervalIntegral.Basic": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/MeasureTheory/Integral/IntervalIntegral/Basic.lean"
    },
    ".lake.packages.mathlib.Mathlib.MeasureTheory.Integral.IntervalIntegral.FundThmCalculus": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/MeasureTheory/Integral/IntervalIntegral/FundThmCalculus.lean"
    },
    ".lake.packages.mathlib.Mathlib.MeasureTheory.Integral.IntervalIntegral.Periodic": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/MeasureTheory/Integral/IntervalIntegral/Periodic.lean"
    },
    ".lake.packages.mathlib.Mathlib.MeasureTheory.Integral.Bochner.ContinuousLinearMap": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/MeasureTheory/Integral/Bochner/ContinuousLinearMap.lean"
    },
    ".lake.packages.mathlib.Mathlib.MeasureTheory.Integral.Bochner.Basic": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/MeasureTheory/Integral/Bochner/Basic.lean"
    },
    ".lake.packages.mathlib.Mathlib.MeasureTheory.Integral.Bochner.FundThmCalculus": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/MeasureTheory/Integral/Bochner/FundThmCalculus.lean"
    },
    ".lake.packages.mathlib.Mathlib.MeasureTheory.Integral.Bochner.Set": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/MeasureTheory/Integral/Bochner/Set.lean"
    },
    ".lake.packages.mathlib.Mathlib.MeasureTheory.Integral.Bochner.VitaliCaratheodory": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/MeasureTheory/Integral/Bochner/VitaliCaratheodory.lean"
    },
    ".lake.packages.mathlib.Mathlib.MeasureTheory.Integral.Bochner.L1": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/MeasureTheory/Integral/Bochner/L1.lean"
    },
    ".lake.packages.mathlib.Mathlib.Combinatorics.Colex": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Combinatorics/Colex.lean"
    },
    ".lake.packages.mathlib.Mathlib.Combinatorics.Configuration": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Combinatorics/Configuration.lean"
    },
    ".lake.packages.mathlib.Mathlib.Combinatorics.Pigeonhole": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Combinatorics/Pigeonhole.lean"
    },
    ".lake.packages.mathlib.Mathlib.Combinatorics.Hindman": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Combinatorics/Hindman.lean"
    },
    ".lake.packages.mathlib.Mathlib.Combinatorics.Nullstellensatz": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Combinatorics/Nullstellensatz.lean"
    },
    ".lake.packages.mathlib.Mathlib.Combinatorics.HalesJewett": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Combinatorics/HalesJewett.lean"
    },
    ".lake.packages.mathlib.Mathlib.Combinatorics.Schnirelmann": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Combinatorics/Schnirelmann.lean"
    },
    ".lake.packages.mathlib.Mathlib.Combinatorics.Enumerative.Catalan": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Combinatorics/Enumerative/Catalan.lean"
    },
    ".lake.packages.mathlib.Mathlib.Combinatorics.Enumerative.DoubleCounting": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Combinatorics/Enumerative/DoubleCounting.lean"
    },
    ".lake.packages.mathlib.Mathlib.Combinatorics.Enumerative.InclusionExclusion": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Combinatorics/Enumerative/InclusionExclusion.lean"
    },
    ".lake.packages.mathlib.Mathlib.Combinatorics.Enumerative.DyckWord": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Combinatorics/Enumerative/DyckWord.lean"
    },
    ".lake.packages.mathlib.Mathlib.Combinatorics.Enumerative.Composition": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Combinatorics/Enumerative/Composition.lean"
    },
    ".lake.packages.mathlib.Mathlib.Combinatorics.Enumerative.Bell": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Combinatorics/Enumerative/Bell.lean"
    },
    ".lake.packages.mathlib.Mathlib.Combinatorics.Enumerative.Partition": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Combinatorics/Enumerative/Partition.lean"
    },
    ".lake.packages.mathlib.Mathlib.Combinatorics.Enumerative.IncidenceAlgebra": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Combinatorics/Enumerative/IncidenceAlgebra.lean"
    },
    ".lake.packages.mathlib.Mathlib.Combinatorics.Optimization.ValuedCSP": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Combinatorics/Optimization/ValuedCSP.lean"
    },
    ".lake.packages.mathlib.Mathlib.Combinatorics.Graph.Basic": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Combinatorics/Graph/Basic.lean"
    },
    ".lake.packages.mathlib.Mathlib.Combinatorics.Quiver.Covering": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Combinatorics/Quiver/Covering.lean"
    },
    ".lake.packages.mathlib.Mathlib.Combinatorics.Quiver.ReflQuiver": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Combinatorics/Quiver/ReflQuiver.lean"
    },
    ".lake.packages.mathlib.Mathlib.Combinatorics.Quiver.Arborescence": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Combinatorics/Quiver/Arborescence.lean"
    },
    ".lake.packages.mathlib.Mathlib.Combinatorics.Quiver.Basic": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Combinatorics/Quiver/Basic.lean"
    },
    ".lake.packages.mathlib.Mathlib.Combinatorics.Quiver.Path": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Combinatorics/Quiver/Path.lean"
    },
    ".lake.packages.mathlib.Mathlib.Combinatorics.Quiver.Prefunctor": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Combinatorics/Quiver/Prefunctor.lean"
    },
    ".lake.packages.mathlib.Mathlib.Combinatorics.Quiver.SingleObj": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Combinatorics/Quiver/SingleObj.lean"
    },
    ".lake.packages.mathlib.Mathlib.Combinatorics.Quiver.Subquiver": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Combinatorics/Quiver/Subquiver.lean"
    },
    ".lake.packages.mathlib.Mathlib.Combinatorics.Quiver.Symmetric": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Combinatorics/Quiver/Symmetric.lean"
    },
    ".lake.packages.mathlib.Mathlib.Combinatorics.Quiver.Cast": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Combinatorics/Quiver/Cast.lean"
    },
    ".lake.packages.mathlib.Mathlib.Combinatorics.Quiver.ConnectedComponent": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Combinatorics/Quiver/ConnectedComponent.lean"
    },
    ".lake.packages.mathlib.Mathlib.Combinatorics.Quiver.Push": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Combinatorics/Quiver/Push.lean"
    },
    ".lake.packages.mathlib.Mathlib.Combinatorics.Quiver.Path.Weight": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Combinatorics/Quiver/Path/Weight.lean"
    },
    ".lake.packages.mathlib.Mathlib.Combinatorics.SimpleGraph.Paths": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Combinatorics/SimpleGraph/Paths.lean"
    },
    ".lake.packages.mathlib.Mathlib.Combinatorics.SimpleGraph.Finite": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Combinatorics/SimpleGraph/Finite.lean"
    },
    ".lake.packages.mathlib.Mathlib.Combinatorics.SimpleGraph.UniversalVerts": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Combinatorics/SimpleGraph/UniversalVerts.lean"
    },
    ".lake.packages.mathlib.Mathlib.Combinatorics.SimpleGraph.Sum": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Combinatorics/SimpleGraph/Sum.lean"
    },
    ".lake.packages.mathlib.Mathlib.Combinatorics.SimpleGraph.Finsubgraph": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Combinatorics/SimpleGraph/Finsubgraph.lean"
    },
    ".lake.packages.mathlib.Mathlib.Combinatorics.SimpleGraph.CompleteMultipartite": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Combinatorics/SimpleGraph/CompleteMultipartite.lean"
    },
    ".lake.packages.mathlib.Mathlib.Combinatorics.SimpleGraph.AdjMatrix": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Combinatorics/SimpleGraph/AdjMatrix.lean"
    },
    ".lake.packages.mathlib.Mathlib.Combinatorics.SimpleGraph.Circulant": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Combinatorics/SimpleGraph/Circulant.lean"
    },
    ".lake.packages.mathlib.Mathlib.Combinatorics.SimpleGraph.Dart": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Combinatorics/SimpleGraph/Dart.lean"
    },
    ".lake.packages.mathlib.Mathlib.Combinatorics.SimpleGraph.Metric": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Combinatorics/SimpleGraph/Metric.lean"
    },
    ".lake.packages.mathlib.Mathlib.Combinatorics.SimpleGraph.Acyclic": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Combinatorics/SimpleGraph/Acyclic.lean"
    },
    ".lake.packages.mathlib.Mathlib.Combinatorics.SimpleGraph.LineGraph": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Combinatorics/SimpleGraph/LineGraph.lean"
    },
    ".lake.packages.mathlib.Mathlib.Combinatorics.SimpleGraph.Maps": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Combinatorics/SimpleGraph/Maps.lean"
    },
    ".lake.packages.mathlib.Mathlib.Combinatorics.SimpleGraph.Girth": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Combinatorics/SimpleGraph/Girth.lean"
    },
    ".lake.packages.mathlib.Mathlib.Combinatorics.SimpleGraph.Matching": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Combinatorics/SimpleGraph/Matching.lean"
    },
    ".lake.packages.mathlib.Mathlib.Combinatorics.SimpleGraph.Init": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Combinatorics/SimpleGraph/Init.lean"
    },
    ".lake.packages.mathlib.Mathlib.Combinatorics.SimpleGraph.Prod": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Combinatorics/SimpleGraph/Prod.lean"
    },
    ".lake.packages.mathlib.Mathlib.Combinatorics.SimpleGraph.DeleteEdges": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Combinatorics/SimpleGraph/DeleteEdges.lean"
    },
    ".lake.packages.mathlib.Mathlib.Combinatorics.SimpleGraph.Hasse": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Combinatorics/SimpleGraph/Hasse.lean"
    },
    ".lake.packages.mathlib.Mathlib.Combinatorics.SimpleGraph.Tutte": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Combinatorics/SimpleGraph/Tutte.lean"
    },
    ".lake.packages.mathlib.Mathlib.Combinatorics.SimpleGraph.FiveWheelLike": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Combinatorics/SimpleGraph/FiveWheelLike.lean"
    },
    ".lake.packages.mathlib.Mathlib.Combinatorics.SimpleGraph.Density": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Combinatorics/SimpleGraph/Density.lean"
    },
    ".lake.packages.mathlib.Mathlib.Combinatorics.SimpleGraph.Basic": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Combinatorics/SimpleGraph/Basic.lean"
    },
    ".lake.packages.mathlib.Mathlib.Combinatorics.SimpleGraph.IncMatrix": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Combinatorics/SimpleGraph/IncMatrix.lean"
    },
    ".lake.packages.mathlib.Mathlib.Combinatorics.SimpleGraph.Operations": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Combinatorics/SimpleGraph/Operations.lean"
    },
    ".lake.packages.mathlib.Mathlib.Combinatorics.SimpleGraph.Trails": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Combinatorics/SimpleGraph/Trails.lean"
    },
    ".lake.packages.mathlib.Mathlib.Combinatorics.SimpleGraph.Coloring": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Combinatorics/SimpleGraph/Coloring.lean"
    },
    ".lake.packages.mathlib.Mathlib.Combinatorics.SimpleGraph.Path": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Combinatorics/SimpleGraph/Path.lean"
    },
    ".lake.packages.mathlib.Mathlib.Combinatorics.SimpleGraph.StronglyRegular": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Combinatorics/SimpleGraph/StronglyRegular.lean"
    },
    ".lake.packages.mathlib.Mathlib.Combinatorics.SimpleGraph.Diam": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Combinatorics/SimpleGraph/Diam.lean"
    },
    ".lake.packages.mathlib.Mathlib.Combinatorics.SimpleGraph.Hamiltonian": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Combinatorics/SimpleGraph/Hamiltonian.lean"
    },
    ".lake.packages.mathlib.Mathlib.Combinatorics.SimpleGraph.Turan": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Combinatorics/SimpleGraph/Turan.lean"
    },
    ".lake.packages.mathlib.Mathlib.Combinatorics.SimpleGraph.Walk": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Combinatorics/SimpleGraph/Walk.lean"
    },
    ".lake.packages.mathlib.Mathlib.Combinatorics.SimpleGraph.Copy": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Combinatorics/SimpleGraph/Copy.lean"
    },
    ".lake.packages.mathlib.Mathlib.Combinatorics.SimpleGraph.DegreeSum": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Combinatorics/SimpleGraph/DegreeSum.lean"
    },
    ".lake.packages.mathlib.Mathlib.Combinatorics.SimpleGraph.Partition": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Combinatorics/SimpleGraph/Partition.lean"
    },
    ".lake.packages.mathlib.Mathlib.Combinatorics.SimpleGraph.Subgraph": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Combinatorics/SimpleGraph/Subgraph.lean"
    },
    ".lake.packages.mathlib.Mathlib.Combinatorics.SimpleGraph.LapMatrix": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Combinatorics/SimpleGraph/LapMatrix.lean"
    },
    ".lake.packages.mathlib.Mathlib.Combinatorics.SimpleGraph.Bipartite": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Combinatorics/SimpleGraph/Bipartite.lean"
    },
    ".lake.packages.mathlib.Mathlib.Combinatorics.SimpleGraph.Clique": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Combinatorics/SimpleGraph/Clique.lean"
    },
    ".lake.packages.mathlib.Mathlib.Combinatorics.SimpleGraph.ConcreteColorings": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Combinatorics/SimpleGraph/ConcreteColorings.lean"
    },
    ".lake.packages.mathlib.Mathlib.Combinatorics.SimpleGraph.Connectivity.WalkDecomp": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Combinatorics/SimpleGraph/Connectivity/WalkDecomp.lean"
    },
    ".lake.packages.mathlib.Mathlib.Combinatorics.SimpleGraph.Connectivity.WalkCounting": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Combinatorics/SimpleGraph/Connectivity/WalkCounting.lean"
    },
    ".lake.packages.mathlib.Mathlib.Combinatorics.SimpleGraph.Connectivity.Represents": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Combinatorics/SimpleGraph/Connectivity/Represents.lean"
    },
    ".lake.packages.mathlib.Mathlib.Combinatorics.SimpleGraph.Connectivity.Connected": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Combinatorics/SimpleGraph/Connectivity/Connected.lean"
    },
    ".lake.packages.mathlib.Mathlib.Combinatorics.SimpleGraph.Connectivity.Subgraph": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Combinatorics/SimpleGraph/Connectivity/Subgraph.lean"
    },
    ".lake.packages.mathlib.Mathlib.Combinatorics.SimpleGraph.Triangle.Tripartite": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Combinatorics/SimpleGraph/Triangle/Tripartite.lean"
    },
    ".lake.packages.mathlib.Mathlib.Combinatorics.SimpleGraph.Triangle.Basic": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Combinatorics/SimpleGraph/Triangle/Basic.lean"
    },
    ".lake.packages.mathlib.Mathlib.Combinatorics.SimpleGraph.Triangle.Counting": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Combinatorics/SimpleGraph/Triangle/Counting.lean"
    },
    ".lake.packages.mathlib.Mathlib.Combinatorics.SimpleGraph.Triangle.Removal": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Combinatorics/SimpleGraph/Triangle/Removal.lean"
    },
    ".lake.packages.mathlib.Mathlib.Combinatorics.SimpleGraph.Regularity.Energy": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Combinatorics/SimpleGraph/Regularity/Energy.lean"
    },
    ".lake.packages.mathlib.Mathlib.Combinatorics.SimpleGraph.Regularity.Uniform": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Combinatorics/SimpleGraph/Regularity/Uniform.lean"
    },
    ".lake.packages.mathlib.Mathlib.Combinatorics.SimpleGraph.Regularity.Equitabilise": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Combinatorics/SimpleGraph/Regularity/Equitabilise.lean"
    },
    ".lake.packages.mathlib.Mathlib.Combinatorics.SimpleGraph.Regularity.Bound": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Combinatorics/SimpleGraph/Regularity/Bound.lean"
    },
    ".lake.packages.mathlib.Mathlib.Combinatorics.SimpleGraph.Regularity.Chunk": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Combinatorics/SimpleGraph/Regularity/Chunk.lean"
    },
    ".lake.packages.mathlib.Mathlib.Combinatorics.SimpleGraph.Regularity.Lemma": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Combinatorics/SimpleGraph/Regularity/Lemma.lean"
    },
    ".lake.packages.mathlib.Mathlib.Combinatorics.SimpleGraph.Regularity.Increment": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Combinatorics/SimpleGraph/Regularity/Increment.lean"
    },
    ".lake.packages.mathlib.Mathlib.Combinatorics.SimpleGraph.Ends.Defs": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Combinatorics/SimpleGraph/Ends/Defs.lean"
    },
    ".lake.packages.mathlib.Mathlib.Combinatorics.SimpleGraph.Ends.Properties": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Combinatorics/SimpleGraph/Ends/Properties.lean"
    },
    ".lake.packages.mathlib.Mathlib.Combinatorics.SimpleGraph.Extremal.Basic": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Combinatorics/SimpleGraph/Extremal/Basic.lean"
    },
    ".lake.packages.mathlib.Mathlib.Combinatorics.Additive.Energy": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Combinatorics/Additive/Energy.lean"
    },
    ".lake.packages.mathlib.Mathlib.Combinatorics.Additive.RuzsaCovering": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Combinatorics/Additive/RuzsaCovering.lean"
    },
    ".lake.packages.mathlib.Mathlib.Combinatorics.Additive.SmallTripling": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Combinatorics/Additive/SmallTripling.lean"
    },
    ".lake.packages.mathlib.Mathlib.Combinatorics.Additive.ETransform": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Combinatorics/Additive/ETransform.lean"
    },
    ".lake.packages.mathlib.Mathlib.Combinatorics.Additive.Dissociation": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Combinatorics/Additive/Dissociation.lean"
    },
    ".lake.packages.mathlib.Mathlib.Combinatorics.Additive.VerySmallDoubling": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Combinatorics/Additive/VerySmallDoubling.lean"
    },
    ".lake.packages.mathlib.Mathlib.Combinatorics.Additive.ApproximateSubgroup": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Combinatorics/Additive/ApproximateSubgroup.lean"
    },
    ".lake.packages.mathlib.Mathlib.Combinatorics.Additive.DoublingConst": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Combinatorics/Additive/DoublingConst.lean"
    },
    ".lake.packages.mathlib.Mathlib.Combinatorics.Additive.CovBySMul": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Combinatorics/Additive/CovBySMul.lean"
    },
    ".lake.packages.mathlib.Mathlib.Combinatorics.Additive.Randomisation": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Combinatorics/Additive/Randomisation.lean"
    },
    ".lake.packages.mathlib.Mathlib.Combinatorics.Additive.PluenneckeRuzsa": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Combinatorics/Additive/PluenneckeRuzsa.lean"
    },
    ".lake.packages.mathlib.Mathlib.Combinatorics.Additive.ErdosGinzburgZiv": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Combinatorics/Additive/ErdosGinzburgZiv.lean"
    },
    ".lake.packages.mathlib.Mathlib.Combinatorics.Additive.CauchyDavenport": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Combinatorics/Additive/CauchyDavenport.lean"
    },
    ".lake.packages.mathlib.Mathlib.Combinatorics.Additive.FreimanHom": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Combinatorics/Additive/FreimanHom.lean"
    },
    ".lake.packages.mathlib.Mathlib.Combinatorics.Additive.AP.Three.Behrend": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Combinatorics/Additive/AP/Three/Behrend.lean"
    },
    ".lake.packages.mathlib.Mathlib.Combinatorics.Additive.AP.Three.Defs": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Combinatorics/Additive/AP/Three/Defs.lean"
    },
    ".lake.packages.mathlib.Mathlib.Combinatorics.Additive.Corner.Defs": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Combinatorics/Additive/Corner/Defs.lean"
    },
    ".lake.packages.mathlib.Mathlib.Combinatorics.Additive.Corner.Roth": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Combinatorics/Additive/Corner/Roth.lean"
    },
    ".lake.packages.mathlib.Mathlib.Combinatorics.Young.SemistandardTableau": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Combinatorics/Young/SemistandardTableau.lean"
    },
    ".lake.packages.mathlib.Mathlib.Combinatorics.Young.YoungDiagram": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Combinatorics/Young/YoungDiagram.lean"
    },
    ".lake.packages.mathlib.Mathlib.Combinatorics.SetFamily.LYM": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Combinatorics/SetFamily/LYM.lean"
    },
    ".lake.packages.mathlib.Mathlib.Combinatorics.SetFamily.Shadow": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Combinatorics/SetFamily/Shadow.lean"
    },
    ".lake.packages.mathlib.Mathlib.Combinatorics.SetFamily.Intersecting": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Combinatorics/SetFamily/Intersecting.lean"
    },
    ".lake.packages.mathlib.Mathlib.Combinatorics.SetFamily.FourFunctions": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Combinatorics/SetFamily/FourFunctions.lean"
    },
    ".lake.packages.mathlib.Mathlib.Combinatorics.SetFamily.KruskalKatona": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Combinatorics/SetFamily/KruskalKatona.lean"
    },
    ".lake.packages.mathlib.Mathlib.Combinatorics.SetFamily.AhlswedeZhang": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Combinatorics/SetFamily/AhlswedeZhang.lean"
    },
    ".lake.packages.mathlib.Mathlib.Combinatorics.SetFamily.Kleitman": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Combinatorics/SetFamily/Kleitman.lean"
    },
    ".lake.packages.mathlib.Mathlib.Combinatorics.SetFamily.HarrisKleitman": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Combinatorics/SetFamily/HarrisKleitman.lean"
    },
    ".lake.packages.mathlib.Mathlib.Combinatorics.SetFamily.Shatter": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Combinatorics/SetFamily/Shatter.lean"
    },
    ".lake.packages.mathlib.Mathlib.Combinatorics.SetFamily.Compression.UV": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Combinatorics/SetFamily/Compression/UV.lean"
    },
    ".lake.packages.mathlib.Mathlib.Combinatorics.SetFamily.Compression.Down": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Combinatorics/SetFamily/Compression/Down.lean"
    },
    ".lake.packages.mathlib.Mathlib.Combinatorics.Hall.Finite": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Combinatorics/Hall/Finite.lean"
    },
    ".lake.packages.mathlib.Mathlib.Combinatorics.Hall.Basic": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Combinatorics/Hall/Basic.lean"
    },
    ".lake.packages.mathlib.Mathlib.Combinatorics.Extremal.RuzsaSzemeredi": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Combinatorics/Extremal/RuzsaSzemeredi.lean"
    },
    ".lake.packages.mathlib.Mathlib.Combinatorics.Derangements.Finite": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Combinatorics/Derangements/Finite.lean"
    },
    ".lake.packages.mathlib.Mathlib.Combinatorics.Derangements.Exponential": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Combinatorics/Derangements/Exponential.lean"
    },
    ".lake.packages.mathlib.Mathlib.Combinatorics.Derangements.Basic": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Combinatorics/Derangements/Basic.lean"
    },
    ".lake.packages.mathlib.Mathlib.Combinatorics.Digraph.Orientation": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Combinatorics/Digraph/Orientation.lean"
    },
    ".lake.packages.mathlib.Mathlib.Combinatorics.Digraph.Basic": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Combinatorics/Digraph/Basic.lean"
    },
    ".lake.packages.mathlib.Mathlib.LinearAlgebra.Ray": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/LinearAlgebra/Ray.lean"
    },
    ".lake.packages.mathlib.Mathlib.LinearAlgebra.PiTensorProduct": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/LinearAlgebra/PiTensorProduct.lean"
    },
    ".lake.packages.mathlib.Mathlib.LinearAlgebra.CrossProduct": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/LinearAlgebra/CrossProduct.lean"
    },
    ".lake.packages.mathlib.Mathlib.LinearAlgebra.SesquilinearForm": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/LinearAlgebra/SesquilinearForm.lean"
    },
    ".lake.packages.mathlib.Mathlib.LinearAlgebra.Reflection": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/LinearAlgebra/Reflection.lean"
    },
    ".lake.packages.mathlib.Mathlib.LinearAlgebra.AnnihilatingPolynomial": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/LinearAlgebra/AnnihilatingPolynomial.lean"
    },
    ".lake.packages.mathlib.Mathlib.LinearAlgebra.GeneralLinearGroup": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/LinearAlgebra/GeneralLinearGroup.lean"
    },
    ".lake.packages.mathlib.Mathlib.LinearAlgebra.BilinearMap": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/LinearAlgebra/BilinearMap.lean"
    },
    ".lake.packages.mathlib.Mathlib.LinearAlgebra.FiniteSpan": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/LinearAlgebra/FiniteSpan.lean"
    },
    ".lake.packages.mathlib.Mathlib.LinearAlgebra.SymplecticGroup": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/LinearAlgebra/SymplecticGroup.lean"
    },
    ".lake.packages.mathlib.Mathlib.LinearAlgebra.Prod": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/LinearAlgebra/Prod.lean"
    },
    ".lake.packages.mathlib.Mathlib.LinearAlgebra.PID": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/LinearAlgebra/PID.lean"
    },
    ".lake.packages.mathlib.Mathlib.LinearAlgebra.Pi": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/LinearAlgebra/Pi.lean"
    },
    ".lake.packages.mathlib.Mathlib.LinearAlgebra.Orientation": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/LinearAlgebra/Orientation.lean"
    },
    ".lake.packages.mathlib.Mathlib.LinearAlgebra.Isomorphisms": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/LinearAlgebra/Isomorphisms.lean"
    },
    ".lake.packages.mathlib.Mathlib.LinearAlgebra.JordanChevalley": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/LinearAlgebra/JordanChevalley.lean"
    },
    ".lake.packages.mathlib.Mathlib.LinearAlgebra.Contraction": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/LinearAlgebra/Contraction.lean"
    },
    ".lake.packages.mathlib.Mathlib.LinearAlgebra.Trace": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/LinearAlgebra/Trace.lean"
    },
    ".lake.packages.mathlib.Mathlib.LinearAlgebra.SModEq": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/LinearAlgebra/SModEq.lean"
    },
    ".lake.packages.mathlib.Mathlib.LinearAlgebra.Lagrange": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/LinearAlgebra/Lagrange.lean"
    },
    ".lake.packages.mathlib.Mathlib.LinearAlgebra.Vandermonde": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/LinearAlgebra/Vandermonde.lean"
    },
    ".lake.packages.mathlib.Mathlib.LinearAlgebra.StdBasis": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/LinearAlgebra/StdBasis.lean"
    },
    ".lake.packages.mathlib.Mathlib.LinearAlgebra.InvariantBasisNumber": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/LinearAlgebra/InvariantBasisNumber.lean"
    },
    ".lake.packages.mathlib.Mathlib.LinearAlgebra.LinearDisjoint": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/LinearAlgebra/LinearDisjoint.lean"
    },
    ".lake.packages.mathlib.Mathlib.LinearAlgebra.UnitaryGroup": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/LinearAlgebra/UnitaryGroup.lean"
    },
    ".lake.packages.mathlib.Mathlib.LinearAlgebra.LinearPMap": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/LinearAlgebra/LinearPMap.lean"
    },
    ".lake.packages.mathlib.Mathlib.LinearAlgebra.Projection": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/LinearAlgebra/Projection.lean"
    },
    ".lake.packages.mathlib.Mathlib.LinearAlgebra.Goursat": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/LinearAlgebra/Goursat.lean"
    },
    ".lake.packages.mathlib.Mathlib.LinearAlgebra.Determinant": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/LinearAlgebra/Determinant.lean"
    },
    ".lake.packages.mathlib.Mathlib.LinearAlgebra.Semisimple": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/LinearAlgebra/Semisimple.lean"
    },
    ".lake.packages.mathlib.Mathlib.LinearAlgebra.DFinsupp": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/LinearAlgebra/DFinsupp.lean"
    },
    ".lake.packages.mathlib.Mathlib.LinearAlgebra.Coevaluation": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/LinearAlgebra/Coevaluation.lean"
    },
    ".lake.packages.mathlib.Mathlib.LinearAlgebra.Countable": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/LinearAlgebra/Countable.lean"
    },
    ".lake.packages.mathlib.Mathlib.LinearAlgebra.FreeAlgebra": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/LinearAlgebra/FreeAlgebra.lean"
    },
    ".lake.packages.mathlib.Mathlib.LinearAlgebra.BilinearForm.TensorProduct": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/LinearAlgebra/BilinearForm/TensorProduct.lean"
    },
    ".lake.packages.mathlib.Mathlib.LinearAlgebra.BilinearForm.DualLattice": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/LinearAlgebra/BilinearForm/DualLattice.lean"
    },
    ".lake.packages.mathlib.Mathlib.LinearAlgebra.BilinearForm.Basic": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/LinearAlgebra/BilinearForm/Basic.lean"
    },
    ".lake.packages.mathlib.Mathlib.LinearAlgebra.BilinearForm.Orthogonal": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/LinearAlgebra/BilinearForm/Orthogonal.lean"
    },
    ".lake.packages.mathlib.Mathlib.LinearAlgebra.BilinearForm.Properties": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/LinearAlgebra/BilinearForm/Properties.lean"
    },
    ".lake.packages.mathlib.Mathlib.LinearAlgebra.BilinearForm.Hom": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/LinearAlgebra/BilinearForm/Hom.lean"
    },
    ".lake.packages.mathlib.Mathlib.LinearAlgebra.ExteriorAlgebra.Basic": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/LinearAlgebra/ExteriorAlgebra/Basic.lean"
    },
    ".lake.packages.mathlib.Mathlib.LinearAlgebra.ExteriorAlgebra.Grading": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/LinearAlgebra/ExteriorAlgebra/Grading.lean"
    },
    ".lake.packages.mathlib.Mathlib.LinearAlgebra.ExteriorAlgebra.OfAlternating": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/LinearAlgebra/ExteriorAlgebra/OfAlternating.lean"
    },
    ".lake.packages.mathlib.Mathlib.LinearAlgebra.Projectivization.Independence": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/LinearAlgebra/Projectivization/Independence.lean"
    },
    ".lake.packages.mathlib.Mathlib.LinearAlgebra.Projectivization.Basic": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/LinearAlgebra/Projectivization/Basic.lean"
    },
    ".lake.packages.mathlib.Mathlib.LinearAlgebra.Projectivization.Subspace": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/LinearAlgebra/Projectivization/Subspace.lean"
    },
    ".lake.packages.mathlib.Mathlib.LinearAlgebra.Projectivization.Cardinality": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/LinearAlgebra/Projectivization/Cardinality.lean"
    },
    ".lake.packages.mathlib.Mathlib.LinearAlgebra.Projectivization.Constructions": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/LinearAlgebra/Projectivization/Constructions.lean"
    },
    ".lake.packages.mathlib.Mathlib.LinearAlgebra.Finsupp.LSum": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/LinearAlgebra/Finsupp/LSum.lean"
    },
    ".lake.packages.mathlib.Mathlib.LinearAlgebra.Finsupp.VectorSpace": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/LinearAlgebra/Finsupp/VectorSpace.lean"
    },
    ".lake.packages.mathlib.Mathlib.LinearAlgebra.Finsupp.Pi": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/LinearAlgebra/Finsupp/Pi.lean"
    },
    ".lake.packages.mathlib.Mathlib.LinearAlgebra.Finsupp.Defs": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/LinearAlgebra/Finsupp/Defs.lean"
    },
    ".lake.packages.mathlib.Mathlib.LinearAlgebra.Finsupp.Span": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/LinearAlgebra/Finsupp/Span.lean"
    },
    ".lake.packages.mathlib.Mathlib.LinearAlgebra.Finsupp.Supported": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/LinearAlgebra/Finsupp/Supported.lean"
    },
    ".lake.packages.mathlib.Mathlib.LinearAlgebra.Finsupp.SumProd": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/LinearAlgebra/Finsupp/SumProd.lean"
    },
    ".lake.packages.mathlib.Mathlib.LinearAlgebra.Finsupp.LinearCombination": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/LinearAlgebra/Finsupp/LinearCombination.lean"
    },
    ".lake.packages.mathlib.Mathlib.LinearAlgebra.DirectSum.Finite": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/LinearAlgebra/DirectSum/Finite.lean"
    },
    ".lake.packages.mathlib.Mathlib.LinearAlgebra.DirectSum.TensorProduct": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/LinearAlgebra/DirectSum/TensorProduct.lean"
    },
    ".lake.packages.mathlib.Mathlib.LinearAlgebra.DirectSum.Finsupp": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/LinearAlgebra/DirectSum/Finsupp.lean"
    },
    ".lake.packages.mathlib.Mathlib.LinearAlgebra.DirectSum.Basis": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/LinearAlgebra/DirectSum/Basis.lean"
    },
    ".lake.packages.mathlib.Mathlib.LinearAlgebra.Multilinear.Curry": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/LinearAlgebra/Multilinear/Curry.lean"
    },
    ".lake.packages.mathlib.Mathlib.LinearAlgebra.Multilinear.TensorProduct": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/LinearAlgebra/Multilinear/TensorProduct.lean"
    },
    ".lake.packages.mathlib.Mathlib.LinearAlgebra.Multilinear.Pi": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/LinearAlgebra/Multilinear/Pi.lean"
    },
    ".lake.packages.mathlib.Mathlib.LinearAlgebra.Multilinear.Basic": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/LinearAlgebra/Multilinear/Basic.lean"
    },
    ".lake.packages.mathlib.Mathlib.LinearAlgebra.Multilinear.Basis": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/LinearAlgebra/Multilinear/Basis.lean"
    },
    ".lake.packages.mathlib.Mathlib.LinearAlgebra.Multilinear.DFinsupp": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/LinearAlgebra/Multilinear/DFinsupp.lean"
    },
    ".lake.packages.mathlib.Mathlib.LinearAlgebra.Multilinear.FiniteDimensional": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/LinearAlgebra/Multilinear/FiniteDimensional.lean"
    },
    ".lake.packages.mathlib.Mathlib.LinearAlgebra.SymmetricAlgebra.Basic": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/LinearAlgebra/SymmetricAlgebra/Basic.lean"
    },
    ".lake.packages.mathlib.Mathlib.LinearAlgebra.SymmetricAlgebra.Basis": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/LinearAlgebra/SymmetricAlgebra/Basis.lean"
    },
    ".lake.packages.mathlib.Mathlib.LinearAlgebra.Eigenspace.Triangularizable": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/LinearAlgebra/Eigenspace/Triangularizable.lean"
    },
    ".lake.packages.mathlib.Mathlib.LinearAlgebra.Eigenspace.Matrix": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/LinearAlgebra/Eigenspace/Matrix.lean"
    },
    ".lake.packages.mathlib.Mathlib.LinearAlgebra.Eigenspace.Pi": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/LinearAlgebra/Eigenspace/Pi.lean"
    },
    ".lake.packages.mathlib.Mathlib.LinearAlgebra.Eigenspace.Basic": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/LinearAlgebra/Eigenspace/Basic.lean"
    },
    ".lake.packages.mathlib.Mathlib.LinearAlgebra.Eigenspace.Semisimple": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/LinearAlgebra/Eigenspace/Semisimple.lean"
    },
    ".lake.packages.mathlib.Mathlib.LinearAlgebra.Eigenspace.Zero": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/LinearAlgebra/Eigenspace/Zero.lean"
    },
    ".lake.packages.mathlib.Mathlib.LinearAlgebra.Eigenspace.Minpoly": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/LinearAlgebra/Eigenspace/Minpoly.lean"
    },
    ".lake.packages.mathlib.Mathlib.LinearAlgebra.TensorProduct.Opposite": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/LinearAlgebra/TensorProduct/Opposite.lean"
    },
    ".lake.packages.mathlib.Mathlib.LinearAlgebra.TensorProduct.Subalgebra": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/LinearAlgebra/TensorProduct/Subalgebra.lean"
    },
    ".lake.packages.mathlib.Mathlib.LinearAlgebra.TensorProduct.Matrix": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/LinearAlgebra/TensorProduct/Matrix.lean"
    },
    ".lake.packages.mathlib.Mathlib.LinearAlgebra.TensorProduct.Vanishing": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/LinearAlgebra/TensorProduct/Vanishing.lean"
    },
    ".lake.packages.mathlib.Mathlib.LinearAlgebra.TensorProduct.Prod": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/LinearAlgebra/TensorProduct/Prod.lean"
    },
    ".lake.packages.mathlib.Mathlib.LinearAlgebra.TensorProduct.Tower": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/LinearAlgebra/TensorProduct/Tower.lean"
    },
    ".lake.packages.mathlib.Mathlib.LinearAlgebra.TensorProduct.DirectLimit": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/LinearAlgebra/TensorProduct/DirectLimit.lean"
    },
    ".lake.packages.mathlib.Mathlib.LinearAlgebra.TensorProduct.Pi": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/LinearAlgebra/TensorProduct/Pi.lean"
    },
    ".lake.packages.mathlib.Mathlib.LinearAlgebra.TensorProduct.Basic": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/LinearAlgebra/TensorProduct/Basic.lean"
    },
    ".lake.packages.mathlib.Mathlib.LinearAlgebra.TensorProduct.Quotient": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/LinearAlgebra/TensorProduct/Quotient.lean"
    },
    ".lake.packages.mathlib.Mathlib.LinearAlgebra.TensorProduct.RightExactness": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/LinearAlgebra/TensorProduct/RightExactness.lean"
    },
    ".lake.packages.mathlib.Mathlib.LinearAlgebra.TensorProduct.Submodule": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/LinearAlgebra/TensorProduct/Submodule.lean"
    },
    ".lake.packages.mathlib.Mathlib.LinearAlgebra.TensorProduct.Associator": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/LinearAlgebra/TensorProduct/Associator.lean"
    },
    ".lake.packages.mathlib.Mathlib.LinearAlgebra.TensorProduct.Basis": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/LinearAlgebra/TensorProduct/Basis.lean"
    },
    ".lake.packages.mathlib.Mathlib.LinearAlgebra.TensorProduct.Finiteness": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/LinearAlgebra/TensorProduct/Finiteness.lean"
    },
    ".lake.packages.mathlib.Mathlib.LinearAlgebra.TensorProduct.Graded.External": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/LinearAlgebra/TensorProduct/Graded/External.lean"
    },
    ".lake.packages.mathlib.Mathlib.LinearAlgebra.TensorProduct.Graded.Internal": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/LinearAlgebra/TensorProduct/Graded/Internal.lean"
    },
    ".lake.packages.mathlib.Mathlib.LinearAlgebra.Charpoly.Basic": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/LinearAlgebra/Charpoly/Basic.lean"
    },
    ".lake.packages.mathlib.Mathlib.LinearAlgebra.Charpoly.ToMatrix": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/LinearAlgebra/Charpoly/ToMatrix.lean"
    },
    ".lake.packages.mathlib.Mathlib.LinearAlgebra.Charpoly.BaseChange": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/LinearAlgebra/Charpoly/BaseChange.lean"
    },
    ".lake.packages.mathlib.Mathlib.LinearAlgebra.ExteriorPower.Basic": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/LinearAlgebra/ExteriorPower/Basic.lean"
    },
    ".lake.packages.mathlib.Mathlib.LinearAlgebra.ExteriorPower.Pairing": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/LinearAlgebra/ExteriorPower/Pairing.lean"
    },
    ".lake.packages.mathlib.Mathlib.LinearAlgebra.AffineSpace.Midpoint": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/LinearAlgebra/AffineSpace/Midpoint.lean"
    },
    ".lake.packages.mathlib.Mathlib.LinearAlgebra.AffineSpace.Matrix": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/LinearAlgebra/AffineSpace/Matrix.lean"
    },
    ".lake.packages.mathlib.Mathlib.LinearAlgebra.AffineSpace.Combination": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/LinearAlgebra/AffineSpace/Combination.lean"
    },
    ".lake.packages.mathlib.Mathlib.LinearAlgebra.AffineSpace.Independent": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/LinearAlgebra/AffineSpace/Independent.lean"
    },
    ".lake.packages.mathlib.Mathlib.LinearAlgebra.AffineSpace.AffineMap": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/LinearAlgebra/AffineSpace/AffineMap.lean"
    },
    ".lake.packages.mathlib.Mathlib.LinearAlgebra.AffineSpace.Pointwise": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/LinearAlgebra/AffineSpace/Pointwise.lean"
    },
    ".lake.packages.mathlib.Mathlib.LinearAlgebra.AffineSpace.Restrict": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/LinearAlgebra/AffineSpace/Restrict.lean"
    },
    ".lake.packages.mathlib.Mathlib.LinearAlgebra.AffineSpace.Slope": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/LinearAlgebra/AffineSpace/Slope.lean"
    },
    ".lake.packages.mathlib.Mathlib.LinearAlgebra.AffineSpace.Defs": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/LinearAlgebra/AffineSpace/Defs.lean"
    },
    ".lake.packages.mathlib.Mathlib.LinearAlgebra.AffineSpace.Ordered": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/LinearAlgebra/AffineSpace/Ordered.lean"
    },
    ".lake.packages.mathlib.Mathlib.LinearAlgebra.AffineSpace.MidpointZero": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/LinearAlgebra/AffineSpace/MidpointZero.lean"
    },
    ".lake.packages.mathlib.Mathlib.LinearAlgebra.AffineSpace.Basis": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/LinearAlgebra/AffineSpace/Basis.lean"
    },
    ".lake.packages.mathlib.Mathlib.LinearAlgebra.AffineSpace.ContinuousAffineEquiv": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/LinearAlgebra/AffineSpace/ContinuousAffineEquiv.lean"
    },
    ".lake.packages.mathlib.Mathlib.LinearAlgebra.AffineSpace.FiniteDimensional": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/LinearAlgebra/AffineSpace/FiniteDimensional.lean"
    },
    ".lake.packages.mathlib.Mathlib.LinearAlgebra.AffineSpace.AffineEquiv": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/LinearAlgebra/AffineSpace/AffineEquiv.lean"
    },
    ".lake.packages.mathlib.Mathlib.LinearAlgebra.AffineSpace.AffineSubspace.Basic": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/LinearAlgebra/AffineSpace/AffineSubspace/Basic.lean"
    },
    ".lake.packages.mathlib.Mathlib.LinearAlgebra.AffineSpace.AffineSubspace.Defs": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/LinearAlgebra/AffineSpace/AffineSubspace/Defs.lean"
    },
    ".lake.packages.mathlib.Mathlib.LinearAlgebra.RootSystem.RootPositive": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/LinearAlgebra/RootSystem/RootPositive.lean"
    },
    ".lake.packages.mathlib.Mathlib.LinearAlgebra.RootSystem.Chain": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/LinearAlgebra/RootSystem/Chain.lean"
    },
    ".lake.packages.mathlib.Mathlib.LinearAlgebra.RootSystem.Base": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/LinearAlgebra/RootSystem/Base.lean"
    },
    ".lake.packages.mathlib.Mathlib.LinearAlgebra.RootSystem.Basic": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/LinearAlgebra/RootSystem/Basic.lean"
    },
    ".lake.packages.mathlib.Mathlib.LinearAlgebra.RootSystem.WeylGroup": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/LinearAlgebra/RootSystem/WeylGroup.lean"
    },
    ".lake.packages.mathlib.Mathlib.LinearAlgebra.RootSystem.Defs": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/LinearAlgebra/RootSystem/Defs.lean"
    },
    ".lake.packages.mathlib.Mathlib.LinearAlgebra.RootSystem.IsValuedIn": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/LinearAlgebra/RootSystem/IsValuedIn.lean"
    },
    ".lake.packages.mathlib.Mathlib.LinearAlgebra.RootSystem.OfBilinear": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/LinearAlgebra/RootSystem/OfBilinear.lean"
    },
    ".lake.packages.mathlib.Mathlib.LinearAlgebra.RootSystem.CartanMatrix": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/LinearAlgebra/RootSystem/CartanMatrix.lean"
    },
    ".lake.packages.mathlib.Mathlib.LinearAlgebra.RootSystem.Irreducible": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/LinearAlgebra/RootSystem/Irreducible.lean"
    },
    ".lake.packages.mathlib.Mathlib.LinearAlgebra.RootSystem.BaseChange": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/LinearAlgebra/RootSystem/BaseChange.lean"
    },
    ".lake.packages.mathlib.Mathlib.LinearAlgebra.RootSystem.RootPairingCat": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/LinearAlgebra/RootSystem/RootPairingCat.lean"
    },
    ".lake.packages.mathlib.Mathlib.LinearAlgebra.RootSystem.Hom": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/LinearAlgebra/RootSystem/Hom.lean"
    },
    ".lake.packages.mathlib.Mathlib.LinearAlgebra.RootSystem.Reduced": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/LinearAlgebra/RootSystem/Reduced.lean"
    },
    ".lake.packages.mathlib.Mathlib.LinearAlgebra.RootSystem.Finite.Lemmas": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/LinearAlgebra/RootSystem/Finite/Lemmas.lean"
    },
    ".lake.packages.mathlib.Mathlib.LinearAlgebra.RootSystem.Finite.Nondegenerate": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/LinearAlgebra/RootSystem/Finite/Nondegenerate.lean"
    },
    ".lake.packages.mathlib.Mathlib.LinearAlgebra.RootSystem.Finite.G2": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/LinearAlgebra/RootSystem/Finite/G2.lean"
    },
    ".lake.packages.mathlib.Mathlib.LinearAlgebra.RootSystem.Finite.CanonicalBilinear": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/LinearAlgebra/RootSystem/Finite/CanonicalBilinear.lean"
    },
    ".lake.packages.mathlib.Mathlib.LinearAlgebra.RootSystem.GeckConstruction.Lemmas": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/LinearAlgebra/RootSystem/GeckConstruction/Lemmas.lean"
    },
    ".lake.packages.mathlib.Mathlib.LinearAlgebra.RootSystem.GeckConstruction.Basic": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/LinearAlgebra/RootSystem/GeckConstruction/Basic.lean"
    },
    ".lake.packages.mathlib.Mathlib.LinearAlgebra.TensorPower.Basic": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/LinearAlgebra/TensorPower/Basic.lean"
    },
    ".lake.packages.mathlib.Mathlib.LinearAlgebra.TensorPower.Pairing": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/LinearAlgebra/TensorPower/Pairing.lean"
    },
    ".lake.packages.mathlib.Mathlib.LinearAlgebra.Span.Basic": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/LinearAlgebra/Span/Basic.lean"
    },
    ".lake.packages.mathlib.Mathlib.LinearAlgebra.Span.Defs": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/LinearAlgebra/Span/Defs.lean"
    },
    ".lake.packages.mathlib.Mathlib.LinearAlgebra.QuadraticForm.QuadraticModuleCat": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/LinearAlgebra/QuadraticForm/QuadraticModuleCat.lean"
    },
    ".lake.packages.mathlib.Mathlib.LinearAlgebra.QuadraticForm.TensorProduct": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/LinearAlgebra/QuadraticForm/TensorProduct.lean"
    },
    ".lake.packages.mathlib.Mathlib.LinearAlgebra.QuadraticForm.Isometry": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/LinearAlgebra/QuadraticForm/Isometry.lean"
    },
    ".lake.packages.mathlib.Mathlib.LinearAlgebra.QuadraticForm.Prod": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/LinearAlgebra/QuadraticForm/Prod.lean"
    },
    ".lake.packages.mathlib.Mathlib.LinearAlgebra.QuadraticForm.Basic": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/LinearAlgebra/QuadraticForm/Basic.lean"
    },
    ".lake.packages.mathlib.Mathlib.LinearAlgebra.QuadraticForm.Complex": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/LinearAlgebra/QuadraticForm/Complex.lean"
    },
    ".lake.packages.mathlib.Mathlib.LinearAlgebra.QuadraticForm.Dual": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/LinearAlgebra/QuadraticForm/Dual.lean"
    },
    ".lake.packages.mathlib.Mathlib.LinearAlgebra.QuadraticForm.Basis": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/LinearAlgebra/QuadraticForm/Basis.lean"
    },
    ".lake.packages.mathlib.Mathlib.LinearAlgebra.QuadraticForm.IsometryEquiv": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/LinearAlgebra/QuadraticForm/IsometryEquiv.lean"
    },
    ".lake.packages.mathlib.Mathlib.LinearAlgebra.QuadraticForm.Real": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/LinearAlgebra/QuadraticForm/Real.lean"
    },
    ".lake.packages.mathlib.Mathlib.LinearAlgebra.QuadraticForm.TensorProduct.Isometries": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/LinearAlgebra/QuadraticForm/TensorProduct/Isometries.lean"
    },
    ".lake.packages.mathlib.Mathlib.LinearAlgebra.QuadraticForm.QuadraticModuleCat.Monoidal": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/LinearAlgebra/QuadraticForm/QuadraticModuleCat/Monoidal.lean"
    },
    ".lake.packages.mathlib.Mathlib.LinearAlgebra.QuadraticForm.QuadraticModuleCat.Symmetric": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/LinearAlgebra/QuadraticForm/QuadraticModuleCat/Symmetric.lean"
    },
    ".lake.packages.mathlib.Mathlib.LinearAlgebra.CliffordAlgebra.Star": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/LinearAlgebra/CliffordAlgebra/Star.lean"
    },
    ".lake.packages.mathlib.Mathlib.LinearAlgebra.CliffordAlgebra.Prod": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/LinearAlgebra/CliffordAlgebra/Prod.lean"
    },
    ".lake.packages.mathlib.Mathlib.LinearAlgebra.CliffordAlgebra.SpinGroup": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/LinearAlgebra/CliffordAlgebra/SpinGroup.lean"
    },
    ".lake.packages.mathlib.Mathlib.LinearAlgebra.CliffordAlgebra.Basic": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/LinearAlgebra/CliffordAlgebra/Basic.lean"
    },
    ".lake.packages.mathlib.Mathlib.LinearAlgebra.CliffordAlgebra.Grading": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/LinearAlgebra/CliffordAlgebra/Grading.lean"
    },
    ".lake.packages.mathlib.Mathlib.LinearAlgebra.CliffordAlgebra.Contraction": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/LinearAlgebra/CliffordAlgebra/Contraction.lean"
    },
    ".lake.packages.mathlib.Mathlib.LinearAlgebra.CliffordAlgebra.Even": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/LinearAlgebra/CliffordAlgebra/Even.lean"
    },
    ".lake.packages.mathlib.Mathlib.LinearAlgebra.CliffordAlgebra.Fold": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/LinearAlgebra/CliffordAlgebra/Fold.lean"
    },
    ".lake.packages.mathlib.Mathlib.LinearAlgebra.CliffordAlgebra.CategoryTheory": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/LinearAlgebra/CliffordAlgebra/CategoryTheory.lean"
    },
    ".lake.packages.mathlib.Mathlib.LinearAlgebra.CliffordAlgebra.BaseChange": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/LinearAlgebra/CliffordAlgebra/BaseChange.lean"
    },
    ".lake.packages.mathlib.Mathlib.LinearAlgebra.CliffordAlgebra.Conjugation": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/LinearAlgebra/CliffordAlgebra/Conjugation.lean"
    },
    ".lake.packages.mathlib.Mathlib.LinearAlgebra.CliffordAlgebra.Inversion": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/LinearAlgebra/CliffordAlgebra/Inversion.lean"
    },
    ".lake.packages.mathlib.Mathlib.LinearAlgebra.CliffordAlgebra.EvenEquiv": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/LinearAlgebra/CliffordAlgebra/EvenEquiv.lean"
    },
    ".lake.packages.mathlib.Mathlib.LinearAlgebra.CliffordAlgebra.Equivs": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/LinearAlgebra/CliffordAlgebra/Equivs.lean"
    },
    ".lake.packages.mathlib.Mathlib.LinearAlgebra.Alternating.DomCoprod": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/LinearAlgebra/Alternating/DomCoprod.lean"
    },
    ".lake.packages.mathlib.Mathlib.LinearAlgebra.Alternating.Curry": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/LinearAlgebra/Alternating/Curry.lean"
    },
    ".lake.packages.mathlib.Mathlib.LinearAlgebra.Alternating.Basic": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/LinearAlgebra/Alternating/Basic.lean"
    },
    ".lake.packages.mathlib.Mathlib.LinearAlgebra.Alternating.Uncurry.Fin": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/LinearAlgebra/Alternating/Uncurry/Fin.lean"
    },
    ".lake.packages.mathlib.Mathlib.LinearAlgebra.FreeProduct.Basic": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/LinearAlgebra/FreeProduct/Basic.lean"
    },
    ".lake.packages.mathlib.Mathlib.LinearAlgebra.Dual.Lemmas": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/LinearAlgebra/Dual/Lemmas.lean"
    },
    ".lake.packages.mathlib.Mathlib.LinearAlgebra.Dual.Defs": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/LinearAlgebra/Dual/Defs.lean"
    },
    ".lake.packages.mathlib.Mathlib.LinearAlgebra.Dual.Basis": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/LinearAlgebra/Dual/Basis.lean"
    },
    ".lake.packages.mathlib.Mathlib.LinearAlgebra.Quotient.Pi": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/LinearAlgebra/Quotient/Pi.lean"
    },
    ".lake.packages.mathlib.Mathlib.LinearAlgebra.Quotient.Basic": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/LinearAlgebra/Quotient/Basic.lean"
    },
    ".lake.packages.mathlib.Mathlib.LinearAlgebra.Quotient.Defs": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/LinearAlgebra/Quotient/Defs.lean"
    },
    ".lake.packages.mathlib.Mathlib.LinearAlgebra.LinearIndependent.Lemmas": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/LinearAlgebra/LinearIndependent/Lemmas.lean"
    },
    ".lake.packages.mathlib.Mathlib.LinearAlgebra.LinearIndependent.Basic": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/LinearAlgebra/LinearIndependent/Basic.lean"
    },
    ".lake.packages.mathlib.Mathlib.LinearAlgebra.LinearIndependent.Defs": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/LinearAlgebra/LinearIndependent/Defs.lean"
    },
    ".lake.packages.mathlib.Mathlib.LinearAlgebra.FreeModule.Int": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/LinearAlgebra/FreeModule/Int.lean"
    },
    ".lake.packages.mathlib.Mathlib.LinearAlgebra.FreeModule.IdealQuotient": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/LinearAlgebra/FreeModule/IdealQuotient.lean"
    },
    ".lake.packages.mathlib.Mathlib.LinearAlgebra.FreeModule.StrongRankCondition": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/LinearAlgebra/FreeModule/StrongRankCondition.lean"
    },
    ".lake.packages.mathlib.Mathlib.LinearAlgebra.FreeModule.ModN": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/LinearAlgebra/FreeModule/ModN.lean"
    },
    ".lake.packages.mathlib.Mathlib.LinearAlgebra.FreeModule.Norm": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/LinearAlgebra/FreeModule/Norm.lean"
    },
    ".lake.packages.mathlib.Mathlib.LinearAlgebra.FreeModule.PID": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/LinearAlgebra/FreeModule/PID.lean"
    },
    ".lake.packages.mathlib.Mathlib.LinearAlgebra.FreeModule.Basic": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/LinearAlgebra/FreeModule/Basic.lean"
    },
    ".lake.packages.mathlib.Mathlib.LinearAlgebra.FreeModule.Determinant": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/LinearAlgebra/FreeModule/Determinant.lean"
    },
    ".lake.packages.mathlib.Mathlib.LinearAlgebra.FreeModule.Finite.Matrix": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/LinearAlgebra/FreeModule/Finite/Matrix.lean"
    },
    ".lake.packages.mathlib.Mathlib.LinearAlgebra.FreeModule.Finite.CardQuotient": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/LinearAlgebra/FreeModule/Finite/CardQuotient.lean"
    },
    ".lake.packages.mathlib.Mathlib.LinearAlgebra.FreeModule.Finite.Basic": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/LinearAlgebra/FreeModule/Finite/Basic.lean"
    },
    ".lake.packages.mathlib.Mathlib.LinearAlgebra.FreeModule.Finite.Quotient": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/LinearAlgebra/FreeModule/Finite/Quotient.lean"
    },
    ".lake.packages.mathlib.Mathlib.LinearAlgebra.TensorAlgebra.ToTensorPower": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/LinearAlgebra/TensorAlgebra/ToTensorPower.lean"
    },
    ".lake.packages.mathlib.Mathlib.LinearAlgebra.TensorAlgebra.Basic": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/LinearAlgebra/TensorAlgebra/Basic.lean"
    },
    ".lake.packages.mathlib.Mathlib.LinearAlgebra.TensorAlgebra.Grading": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/LinearAlgebra/TensorAlgebra/Grading.lean"
    },
    ".lake.packages.mathlib.Mathlib.LinearAlgebra.TensorAlgebra.Basis": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/LinearAlgebra/TensorAlgebra/Basis.lean"
    },
    ".lake.packages.mathlib.Mathlib.LinearAlgebra.PerfectPairing.Matrix": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/LinearAlgebra/PerfectPairing/Matrix.lean"
    },
    ".lake.packages.mathlib.Mathlib.LinearAlgebra.PerfectPairing.Restrict": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/LinearAlgebra/PerfectPairing/Restrict.lean"
    },
    ".lake.packages.mathlib.Mathlib.LinearAlgebra.PerfectPairing.Basic": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/LinearAlgebra/PerfectPairing/Basic.lean"
    },
    ".lake.packages.mathlib.Mathlib.LinearAlgebra.Matrix.NonsingularInverse": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/LinearAlgebra/Matrix/NonsingularInverse.lean"
    },
    ".lake.packages.mathlib.Mathlib.LinearAlgebra.Matrix.IsDiag": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/LinearAlgebra/Matrix/IsDiag.lean"
    },
    ".lake.packages.mathlib.Mathlib.LinearAlgebra.Matrix.Circulant": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/LinearAlgebra/Matrix/Circulant.lean"
    },
    ".lake.packages.mathlib.Mathlib.LinearAlgebra.Matrix.Swap": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/LinearAlgebra/Matrix/Swap.lean"
    },
    ".lake.packages.mathlib.Mathlib.LinearAlgebra.Matrix.LDL": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/LinearAlgebra/Matrix/LDL.lean"
    },
    ".lake.packages.mathlib.Mathlib.LinearAlgebra.Matrix.Diagonal": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/LinearAlgebra/Matrix/Diagonal.lean"
    },
    ".lake.packages.mathlib.Mathlib.LinearAlgebra.Matrix.PosDef": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/LinearAlgebra/Matrix/PosDef.lean"
    },
    ".lake.packages.mathlib.Mathlib.LinearAlgebra.Matrix.BilinearForm": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/LinearAlgebra/Matrix/BilinearForm.lean"
    },
    ".lake.packages.mathlib.Mathlib.LinearAlgebra.Matrix.Nondegenerate": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/LinearAlgebra/Matrix/Nondegenerate.lean"
    },
    ".lake.packages.mathlib.Mathlib.LinearAlgebra.Matrix.SesquilinearForm": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/LinearAlgebra/Matrix/SesquilinearForm.lean"
    },
    ".lake.packages.mathlib.Mathlib.LinearAlgebra.Matrix.Permutation": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/LinearAlgebra/Matrix/Permutation.lean"
    },
    ".lake.packages.mathlib.Mathlib.LinearAlgebra.Matrix.Integer": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/LinearAlgebra/Matrix/Integer.lean"
    },
    ".lake.packages.mathlib.Mathlib.LinearAlgebra.Matrix.ZPow": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/LinearAlgebra/Matrix/ZPow.lean"
    },
    ".lake.packages.mathlib.Mathlib.LinearAlgebra.Matrix.Reindex": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/LinearAlgebra/Matrix/Reindex.lean"
    },
    ".lake.packages.mathlib.Mathlib.LinearAlgebra.Matrix.SchurComplement": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/LinearAlgebra/Matrix/SchurComplement.lean"
    },
    ".lake.packages.mathlib.Mathlib.LinearAlgebra.Matrix.ToLin": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/LinearAlgebra/Matrix/ToLin.lean"
    },
    ".lake.packages.mathlib.Mathlib.LinearAlgebra.Matrix.Ideal": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/LinearAlgebra/Matrix/Ideal.lean"
    },
    ".lake.packages.mathlib.Mathlib.LinearAlgebra.Matrix.Unique": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/LinearAlgebra/Matrix/Unique.lean"
    },
    ".lake.packages.mathlib.Mathlib.LinearAlgebra.Matrix.SemiringInverse": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/LinearAlgebra/Matrix/SemiringInverse.lean"
    },
    ".lake.packages.mathlib.Mathlib.LinearAlgebra.Matrix.Trace": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/LinearAlgebra/Matrix/Trace.lean"
    },
    ".lake.packages.mathlib.Mathlib.LinearAlgebra.Matrix.Block": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/LinearAlgebra/Matrix/Block.lean"
    },
    ".lake.packages.mathlib.Mathlib.LinearAlgebra.Matrix.MvPolynomial": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/LinearAlgebra/Matrix/MvPolynomial.lean"
    },
    ".lake.packages.mathlib.Mathlib.LinearAlgebra.Matrix.Transvection": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/LinearAlgebra/Matrix/Transvection.lean"
    },
    ".lake.packages.mathlib.Mathlib.LinearAlgebra.Matrix.FixedDetMatrices": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/LinearAlgebra/Matrix/FixedDetMatrices.lean"
    },
    ".lake.packages.mathlib.Mathlib.LinearAlgebra.Matrix.DotProduct": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/LinearAlgebra/Matrix/DotProduct.lean"
    },
    ".lake.packages.mathlib.Mathlib.LinearAlgebra.Matrix.Orthogonal": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/LinearAlgebra/Matrix/Orthogonal.lean"
    },
    ".lake.packages.mathlib.Mathlib.LinearAlgebra.Matrix.ProjectiveSpecialLinearGroup": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/LinearAlgebra/Matrix/ProjectiveSpecialLinearGroup.lean"
    },
    ".lake.packages.mathlib.Mathlib.LinearAlgebra.Matrix.Adjugate": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/LinearAlgebra/Matrix/Adjugate.lean"
    },
    ".lake.packages.mathlib.Mathlib.LinearAlgebra.Matrix.Permanent": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/LinearAlgebra/Matrix/Permanent.lean"
    },
    ".lake.packages.mathlib.Mathlib.LinearAlgebra.Matrix.StdBasis": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/LinearAlgebra/Matrix/StdBasis.lean"
    },
    ".lake.packages.mathlib.Mathlib.LinearAlgebra.Matrix.InvariantBasisNumber": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/LinearAlgebra/Matrix/InvariantBasisNumber.lean"
    },
    ".lake.packages.mathlib.Mathlib.LinearAlgebra.Matrix.Dual": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/LinearAlgebra/Matrix/Dual.lean"
    },
    ".lake.packages.mathlib.Mathlib.LinearAlgebra.Matrix.Polynomial": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/LinearAlgebra/Matrix/Polynomial.lean"
    },
    ".lake.packages.mathlib.Mathlib.LinearAlgebra.Matrix.HermitianFunctionalCalculus": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/LinearAlgebra/Matrix/HermitianFunctionalCalculus.lean"
    },
    ".lake.packages.mathlib.Mathlib.LinearAlgebra.Matrix.SpecialLinearGroup": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/LinearAlgebra/Matrix/SpecialLinearGroup.lean"
    },
    ".lake.packages.mathlib.Mathlib.LinearAlgebra.Matrix.Symmetric": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/LinearAlgebra/Matrix/Symmetric.lean"
    },
    ".lake.packages.mathlib.Mathlib.LinearAlgebra.Matrix.Basis": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/LinearAlgebra/Matrix/Basis.lean"
    },
    ".lake.packages.mathlib.Mathlib.LinearAlgebra.Matrix.BaseChange": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/LinearAlgebra/Matrix/BaseChange.lean"
    },
    ".lake.packages.mathlib.Mathlib.LinearAlgebra.Matrix.Hermitian": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/LinearAlgebra/Matrix/Hermitian.lean"
    },
    ".lake.packages.mathlib.Mathlib.LinearAlgebra.Matrix.Gershgorin": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/LinearAlgebra/Matrix/Gershgorin.lean"
    },
    ".lake.packages.mathlib.Mathlib.LinearAlgebra.Matrix.Spectrum": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/LinearAlgebra/Matrix/Spectrum.lean"
    },
    ".lake.packages.mathlib.Mathlib.LinearAlgebra.Matrix.FiniteDimensional": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/LinearAlgebra/Matrix/FiniteDimensional.lean"
    },
    ".lake.packages.mathlib.Mathlib.LinearAlgebra.Matrix.AbsoluteValue": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/LinearAlgebra/Matrix/AbsoluteValue.lean"
    },
    ".lake.packages.mathlib.Mathlib.LinearAlgebra.Matrix.ToLinearEquiv": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/LinearAlgebra/Matrix/ToLinearEquiv.lean"
    },
    ".lake.packages.mathlib.Mathlib.LinearAlgebra.Matrix.Charpoly.FiniteField": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/LinearAlgebra/Matrix/Charpoly/FiniteField.lean"
    },
    ".lake.packages.mathlib.Mathlib.LinearAlgebra.Matrix.Charpoly.Basic": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/LinearAlgebra/Matrix/Charpoly/Basic.lean"
    },
    ".lake.packages.mathlib.Mathlib.LinearAlgebra.Matrix.Charpoly.Univ": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/LinearAlgebra/Matrix/Charpoly/Univ.lean"
    },
    ".lake.packages.mathlib.Mathlib.LinearAlgebra.Matrix.Charpoly.LinearMap": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/LinearAlgebra/Matrix/Charpoly/LinearMap.lean"
    },
    ".lake.packages.mathlib.Mathlib.LinearAlgebra.Matrix.Charpoly.Coeff": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/LinearAlgebra/Matrix/Charpoly/Coeff.lean"
    },
    ".lake.packages.mathlib.Mathlib.LinearAlgebra.Matrix.Charpoly.Eigs": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/LinearAlgebra/Matrix/Charpoly/Eigs.lean"
    },
    ".lake.packages.mathlib.Mathlib.LinearAlgebra.Matrix.Charpoly.Minpoly": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/LinearAlgebra/Matrix/Charpoly/Minpoly.lean"
    },
    ".lake.packages.mathlib.Mathlib.LinearAlgebra.Matrix.GeneralLinearGroup.Card": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/LinearAlgebra/Matrix/GeneralLinearGroup/Card.lean"
    },
    ".lake.packages.mathlib.Mathlib.LinearAlgebra.Matrix.GeneralLinearGroup.Basic": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/LinearAlgebra/Matrix/GeneralLinearGroup/Basic.lean"
    },
    ".lake.packages.mathlib.Mathlib.LinearAlgebra.Matrix.GeneralLinearGroup.Defs": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/LinearAlgebra/Matrix/GeneralLinearGroup/Defs.lean"
    },
    ".lake.packages.mathlib.Mathlib.LinearAlgebra.Matrix.Determinant.Basic": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/LinearAlgebra/Matrix/Determinant/Basic.lean"
    },
    ".lake.packages.mathlib.Mathlib.LinearAlgebra.Matrix.Determinant.Misc": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/LinearAlgebra/Matrix/Determinant/Misc.lean"
    },
    ".lake.packages.mathlib.Mathlib.LinearAlgebra.Matrix.Determinant.TotallyUnimodular": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/LinearAlgebra/Matrix/Determinant/TotallyUnimodular.lean"
    },
    ".lake.packages.mathlib.Mathlib.LinearAlgebra.Basis.SMul": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/LinearAlgebra/Basis/SMul.lean"
    },
    ".lake.packages.mathlib.Mathlib.LinearAlgebra.Basis.Fin": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/LinearAlgebra/Basis/Fin.lean"
    },
    ".lake.packages.mathlib.Mathlib.LinearAlgebra.Basis.Bilinear": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/LinearAlgebra/Basis/Bilinear.lean"
    },
    ".lake.packages.mathlib.Mathlib.LinearAlgebra.Basis.MulOpposite": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/LinearAlgebra/Basis/MulOpposite.lean"
    },
    ".lake.packages.mathlib.Mathlib.LinearAlgebra.Basis.Flag": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/LinearAlgebra/Basis/Flag.lean"
    },
    ".lake.packages.mathlib.Mathlib.LinearAlgebra.Basis.Prod": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/LinearAlgebra/Basis/Prod.lean"
    },
    ".lake.packages.mathlib.Mathlib.LinearAlgebra.Basis.VectorSpace": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/LinearAlgebra/Basis/VectorSpace.lean"
    },
    ".lake.packages.mathlib.Mathlib.LinearAlgebra.Basis.Basic": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/LinearAlgebra/Basis/Basic.lean"
    },
    ".lake.packages.mathlib.Mathlib.LinearAlgebra.Basis.Cardinality": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/LinearAlgebra/Basis/Cardinality.lean"
    },
    ".lake.packages.mathlib.Mathlib.LinearAlgebra.Basis.Defs": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/LinearAlgebra/Basis/Defs.lean"
    },
    ".lake.packages.mathlib.Mathlib.LinearAlgebra.Basis.Exact": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/LinearAlgebra/Basis/Exact.lean"
    },
    ".lake.packages.mathlib.Mathlib.LinearAlgebra.Basis.Submodule": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/LinearAlgebra/Basis/Submodule.lean"
    },
    ".lake.packages.mathlib.Mathlib.LinearAlgebra.Dimension.Finite": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/LinearAlgebra/Dimension/Finite.lean"
    },
    ".lake.packages.mathlib.Mathlib.LinearAlgebra.Dimension.Finrank": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/LinearAlgebra/Dimension/Finrank.lean"
    },
    ".lake.packages.mathlib.Mathlib.LinearAlgebra.Dimension.StrongRankCondition": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/LinearAlgebra/Dimension/StrongRankCondition.lean"
    },
    ".lake.packages.mathlib.Mathlib.LinearAlgebra.Dimension.Basic": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/LinearAlgebra/Dimension/Basic.lean"
    },
    ".lake.packages.mathlib.Mathlib.LinearAlgebra.Dimension.Constructions": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/LinearAlgebra/Dimension/Constructions.lean"
    },
    ".lake.packages.mathlib.Mathlib.LinearAlgebra.Dimension.DivisionRing": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/LinearAlgebra/Dimension/DivisionRing.lean"
    },
    ".lake.packages.mathlib.Mathlib.LinearAlgebra.Dimension.Localization": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/LinearAlgebra/Dimension/Localization.lean"
    },
    ".lake.packages.mathlib.Mathlib.LinearAlgebra.Dimension.LinearMap": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/LinearAlgebra/Dimension/LinearMap.lean"
    },
    ".lake.packages.mathlib.Mathlib.LinearAlgebra.Dimension.RankNullity": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/LinearAlgebra/Dimension/RankNullity.lean"
    },
    ".lake.packages.mathlib.Mathlib.LinearAlgebra.Dimension.Subsingleton": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/LinearAlgebra/Dimension/Subsingleton.lean"
    },
    ".lake.packages.mathlib.Mathlib.LinearAlgebra.Dimension.Free": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/LinearAlgebra/Dimension/Free.lean"
    },
    ".lake.packages.mathlib.Mathlib.LinearAlgebra.Dimension.FreeAndStrongRankCondition": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/LinearAlgebra/Dimension/FreeAndStrongRankCondition.lean"
    },
    ".lake.packages.mathlib.Mathlib.LinearAlgebra.Dimension.ErdosKaplansky": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/LinearAlgebra/Dimension/ErdosKaplansky.lean"
    },
    ".lake.packages.mathlib.Mathlib.LinearAlgebra.Dimension.Torsion.Finite": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/LinearAlgebra/Dimension/Torsion/Finite.lean"
    },
    ".lake.packages.mathlib.Mathlib.LinearAlgebra.Dimension.Torsion.Basic": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/LinearAlgebra/Dimension/Torsion/Basic.lean"
    },
    ".lake.packages.mathlib.Mathlib.LinearAlgebra.FiniteDimensional.Lemmas": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/LinearAlgebra/FiniteDimensional/Lemmas.lean"
    },
    ".lake.packages.mathlib.Mathlib.LinearAlgebra.FiniteDimensional.Basic": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/LinearAlgebra/FiniteDimensional/Basic.lean"
    },
    ".lake.packages.mathlib.Mathlib.LinearAlgebra.FiniteDimensional.Defs": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/LinearAlgebra/FiniteDimensional/Defs.lean"
    },
    ".lake.packages.mathlib.Mathlib.Geometry.RingedSpace.Stalks": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Geometry/RingedSpace/Stalks.lean"
    },
    ".lake.packages.mathlib.Mathlib.Geometry.RingedSpace.SheafedSpace": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Geometry/RingedSpace/SheafedSpace.lean"
    },
    ".lake.packages.mathlib.Mathlib.Geometry.RingedSpace.OpenImmersion": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Geometry/RingedSpace/OpenImmersion.lean"
    },
    ".lake.packages.mathlib.Mathlib.Geometry.RingedSpace.LocallyRingedSpace": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Geometry/RingedSpace/LocallyRingedSpace.lean"
    },
    ".lake.packages.mathlib.Mathlib.Geometry.RingedSpace.Basic": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Geometry/RingedSpace/Basic.lean"
    },
    ".lake.packages.mathlib.Mathlib.Geometry.RingedSpace.PresheafedSpace": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Geometry/RingedSpace/PresheafedSpace.lean"
    },
    ".lake.packages.mathlib.Mathlib.Geometry.RingedSpace.PresheafedSpace.HasColimits": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Geometry/RingedSpace/PresheafedSpace/HasColimits.lean"
    },
    ".lake.packages.mathlib.Mathlib.Geometry.RingedSpace.PresheafedSpace.Gluing": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Geometry/RingedSpace/PresheafedSpace/Gluing.lean"
    },
    ".lake.packages.mathlib.Mathlib.Geometry.RingedSpace.LocallyRingedSpace.HasColimits": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Geometry/RingedSpace/LocallyRingedSpace/HasColimits.lean"
    },
    ".lake.packages.mathlib.Mathlib.Geometry.RingedSpace.LocallyRingedSpace.ResidueField": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Geometry/RingedSpace/LocallyRingedSpace/ResidueField.lean"
    },
    ".lake.packages.mathlib.Mathlib.Geometry.Group.Growth.LinearLowerBound": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Geometry/Group/Growth/LinearLowerBound.lean"
    },
    ".lake.packages.mathlib.Mathlib.Geometry.Group.Growth.QuotientInter": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Geometry/Group/Growth/QuotientInter.lean"
    },
    ".lake.packages.mathlib.Mathlib.Geometry.Euclidean.SignedDist": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Geometry/Euclidean/SignedDist.lean"
    },
    ".lake.packages.mathlib.Mathlib.Geometry.Euclidean.Altitude": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Geometry/Euclidean/Altitude.lean"
    },
    ".lake.packages.mathlib.Mathlib.Geometry.Euclidean.Triangle": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Geometry/Euclidean/Triangle.lean"
    },
    ".lake.packages.mathlib.Mathlib.Geometry.Euclidean.Circumcenter": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Geometry/Euclidean/Circumcenter.lean"
    },
    ".lake.packages.mathlib.Mathlib.Geometry.Euclidean.Simplex": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Geometry/Euclidean/Simplex.lean"
    },
    ".lake.packages.mathlib.Mathlib.Geometry.Euclidean.MongePoint": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Geometry/Euclidean/MongePoint.lean"
    },
    ".lake.packages.mathlib.Mathlib.Geometry.Euclidean.Basic": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Geometry/Euclidean/Basic.lean"
    },
    ".lake.packages.mathlib.Mathlib.Geometry.Euclidean.Incenter": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Geometry/Euclidean/Incenter.lean"
    },
    ".lake.packages.mathlib.Mathlib.Geometry.Euclidean.PerpBisector": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Geometry/Euclidean/PerpBisector.lean"
    },
    ".lake.packages.mathlib.Mathlib.Geometry.Euclidean.Projection": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Geometry/Euclidean/Projection.lean"
    },
    ".lake.packages.mathlib.Mathlib.Geometry.Euclidean.Congruence": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Geometry/Euclidean/Congruence.lean"
    },
    ".lake.packages.mathlib.Mathlib.Geometry.Euclidean.Inversion.ImageHyperplane": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Geometry/Euclidean/Inversion/ImageHyperplane.lean"
    },
    ".lake.packages.mathlib.Mathlib.Geometry.Euclidean.Inversion.Calculus": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Geometry/Euclidean/Inversion/Calculus.lean"
    },
    ".lake.packages.mathlib.Mathlib.Geometry.Euclidean.Inversion.Basic": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Geometry/Euclidean/Inversion/Basic.lean"
    },
    ".lake.packages.mathlib.Mathlib.Geometry.Euclidean.Angle.Sphere": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Geometry/Euclidean/Angle/Sphere.lean"
    },
    ".lake.packages.mathlib.Mathlib.Geometry.Euclidean.Angle.Oriented.Basic": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Geometry/Euclidean/Angle/Oriented/Basic.lean"
    },
    ".lake.packages.mathlib.Mathlib.Geometry.Euclidean.Angle.Oriented.RightAngle": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Geometry/Euclidean/Angle/Oriented/RightAngle.lean"
    },
    ".lake.packages.mathlib.Mathlib.Geometry.Euclidean.Angle.Oriented.Affine": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Geometry/Euclidean/Angle/Oriented/Affine.lean"
    },
    ".lake.packages.mathlib.Mathlib.Geometry.Euclidean.Angle.Oriented.Rotation": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Geometry/Euclidean/Angle/Oriented/Rotation.lean"
    },
    ".lake.packages.mathlib.Mathlib.Geometry.Euclidean.Angle.Unoriented.CrossProduct": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Geometry/Euclidean/Angle/Unoriented/CrossProduct.lean"
    },
    ".lake.packages.mathlib.Mathlib.Geometry.Euclidean.Angle.Unoriented.Basic": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Geometry/Euclidean/Angle/Unoriented/Basic.lean"
    },
    ".lake.packages.mathlib.Mathlib.Geometry.Euclidean.Angle.Unoriented.RightAngle": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Geometry/Euclidean/Angle/Unoriented/RightAngle.lean"
    },
    ".lake.packages.mathlib.Mathlib.Geometry.Euclidean.Angle.Unoriented.Conformal": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Geometry/Euclidean/Angle/Unoriented/Conformal.lean"
    },
    ".lake.packages.mathlib.Mathlib.Geometry.Euclidean.Angle.Unoriented.Affine": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Geometry/Euclidean/Angle/Unoriented/Affine.lean"
    },
    ".lake.packages.mathlib.Mathlib.Geometry.Euclidean.Sphere.SecondInter": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Geometry/Euclidean/Sphere/SecondInter.lean"
    },
    ".lake.packages.mathlib.Mathlib.Geometry.Euclidean.Sphere.Basic": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Geometry/Euclidean/Sphere/Basic.lean"
    },
    ".lake.packages.mathlib.Mathlib.Geometry.Euclidean.Sphere.Tangent": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Geometry/Euclidean/Sphere/Tangent.lean"
    },
    ".lake.packages.mathlib.Mathlib.Geometry.Euclidean.Sphere.Power": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Geometry/Euclidean/Sphere/Power.lean"
    },
    ".lake.packages.mathlib.Mathlib.Geometry.Euclidean.Sphere.Ptolemy": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Geometry/Euclidean/Sphere/Ptolemy.lean"
    },
    ".lake.packages.mathlib.Mathlib.Geometry.Convex.Cone.Basic": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Geometry/Convex/Cone/Basic.lean"
    },
    ".lake.packages.mathlib.Mathlib.Geometry.Convex.Cone.Pointed": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Geometry/Convex/Cone/Pointed.lean"
    },
    ".lake.packages.mathlib.Mathlib.Geometry.Convex.Cone.Dual": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Geometry/Convex/Cone/Dual.lean"
    },
    ".lake.packages.mathlib.Mathlib.Geometry.Manifold.ContMDiffMFDeriv": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Geometry/Manifold/ContMDiffMFDeriv.lean"
    },
    ".lake.packages.mathlib.Mathlib.Geometry.Manifold.ChartedSpace": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Geometry/Manifold/ChartedSpace.lean"
    },
    ".lake.packages.mathlib.Mathlib.Geometry.Manifold.ContMDiffMap": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Geometry/Manifold/ContMDiffMap.lean"
    },
    ".lake.packages.mathlib.Mathlib.Geometry.Manifold.BumpFunction": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Geometry/Manifold/BumpFunction.lean"
    },
    ".lake.packages.mathlib.Mathlib.Geometry.Manifold.GroupLieAlgebra": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Geometry/Manifold/GroupLieAlgebra.lean"
    },
    ".lake.packages.mathlib.Mathlib.Geometry.Manifold.ConformalGroupoid": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Geometry/Manifold/ConformalGroupoid.lean"
    },
    ".lake.packages.mathlib.Mathlib.Geometry.Manifold.Metrizable": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Geometry/Manifold/Metrizable.lean"
    },
    ".lake.packages.mathlib.Mathlib.Geometry.Manifold.Bordism": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Geometry/Manifold/Bordism.lean"
    },
    ".lake.packages.mathlib.Mathlib.Geometry.Manifold.WhitneyEmbedding": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Geometry/Manifold/WhitneyEmbedding.lean"
    },
    ".lake.packages.mathlib.Mathlib.Geometry.Manifold.DerivationBundle": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Geometry/Manifold/DerivationBundle.lean"
    },
    ".lake.packages.mathlib.Mathlib.Geometry.Manifold.Diffeomorph": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Geometry/Manifold/Diffeomorph.lean"
    },
    ".lake.packages.mathlib.Mathlib.Geometry.Manifold.LocalDiffeomorph": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Geometry/Manifold/LocalDiffeomorph.lean"
    },
    ".lake.packages.mathlib.Mathlib.Geometry.Manifold.Complex": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Geometry/Manifold/Complex.lean"
    },
    ".lake.packages.mathlib.Mathlib.Geometry.Manifold.PoincareConjecture": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Geometry/Manifold/PoincareConjecture.lean"
    },
    ".lake.packages.mathlib.Mathlib.Geometry.Manifold.PartitionOfUnity": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Geometry/Manifold/PartitionOfUnity.lean"
    },
    ".lake.packages.mathlib.Mathlib.Geometry.Manifold.AnalyticManifold": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Geometry/Manifold/AnalyticManifold.lean"
    },
    ".lake.packages.mathlib.Mathlib.Geometry.Manifold.LocalInvariantProperties": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Geometry/Manifold/LocalInvariantProperties.lean"
    },
    ".lake.packages.mathlib.Mathlib.Geometry.Manifold.Riemannian.Basic": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Geometry/Manifold/Riemannian/Basic.lean"
    },
    ".lake.packages.mathlib.Mathlib.Geometry.Manifold.Riemannian.PathELength": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Geometry/Manifold/Riemannian/PathELength.lean"
    },
    ".lake.packages.mathlib.Mathlib.Geometry.Manifold.IntegralCurve.UniformTime": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Geometry/Manifold/IntegralCurve/UniformTime.lean"
    },
    ".lake.packages.mathlib.Mathlib.Geometry.Manifold.IntegralCurve.Transform": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Geometry/Manifold/IntegralCurve/Transform.lean"
    },
    ".lake.packages.mathlib.Mathlib.Geometry.Manifold.IntegralCurve.ExistUnique": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Geometry/Manifold/IntegralCurve/ExistUnique.lean"
    },
    ".lake.packages.mathlib.Mathlib.Geometry.Manifold.IntegralCurve.Basic": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Geometry/Manifold/IntegralCurve/Basic.lean"
    },
    ".lake.packages.mathlib.Mathlib.Geometry.Manifold.MFDeriv.UniqueDifferential": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Geometry/Manifold/MFDeriv/UniqueDifferential.lean"
    },
    ".lake.packages.mathlib.Mathlib.Geometry.Manifold.MFDeriv.Atlas": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Geometry/Manifold/MFDeriv/Atlas.lean"
    },
    ".lake.packages.mathlib.Mathlib.Geometry.Manifold.MFDeriv.Basic": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Geometry/Manifold/MFDeriv/Basic.lean"
    },
    ".lake.packages.mathlib.Mathlib.Geometry.Manifold.MFDeriv.Tangent": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Geometry/Manifold/MFDeriv/Tangent.lean"
    },
    ".lake.packages.mathlib.Mathlib.Geometry.Manifold.MFDeriv.Defs": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Geometry/Manifold/MFDeriv/Defs.lean"
    },
    ".lake.packages.mathlib.Mathlib.Geometry.Manifold.MFDeriv.SpecificFunctions": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Geometry/Manifold/MFDeriv/SpecificFunctions.lean"
    },
    ".lake.packages.mathlib.Mathlib.Geometry.Manifold.MFDeriv.NormedSpace": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Geometry/Manifold/MFDeriv/NormedSpace.lean"
    },
    ".lake.packages.mathlib.Mathlib.Geometry.Manifold.MFDeriv.FDeriv": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Geometry/Manifold/MFDeriv/FDeriv.lean"
    },
    ".lake.packages.mathlib.Mathlib.Geometry.Manifold.VectorField.LieBracket": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Geometry/Manifold/VectorField/LieBracket.lean"
    },
    ".lake.packages.mathlib.Mathlib.Geometry.Manifold.VectorField.Pullback": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Geometry/Manifold/VectorField/Pullback.lean"
    },
    ".lake.packages.mathlib.Mathlib.Geometry.Manifold.VectorBundle.MDifferentiable": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Geometry/Manifold/VectorBundle/MDifferentiable.lean"
    },
    ".lake.packages.mathlib.Mathlib.Geometry.Manifold.VectorBundle.Riemannian": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Geometry/Manifold/VectorBundle/Riemannian.lean"
    },
    ".lake.packages.mathlib.Mathlib.Geometry.Manifold.VectorBundle.Basic": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Geometry/Manifold/VectorBundle/Basic.lean"
    },
    ".lake.packages.mathlib.Mathlib.Geometry.Manifold.VectorBundle.Tangent": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Geometry/Manifold/VectorBundle/Tangent.lean"
    },
    ".lake.packages.mathlib.Mathlib.Geometry.Manifold.VectorBundle.Pullback": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Geometry/Manifold/VectorBundle/Pullback.lean"
    },
    ".lake.packages.mathlib.Mathlib.Geometry.Manifold.VectorBundle.SmoothSection": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Geometry/Manifold/VectorBundle/SmoothSection.lean"
    },
    ".lake.packages.mathlib.Mathlib.Geometry.Manifold.VectorBundle.Hom": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Geometry/Manifold/VectorBundle/Hom.lean"
    },
    ".lake.packages.mathlib.Mathlib.Geometry.Manifold.VectorBundle.FiberwiseLinear": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Geometry/Manifold/VectorBundle/FiberwiseLinear.lean"
    },
    ".lake.packages.mathlib.Mathlib.Geometry.Manifold.ContMDiff.Atlas": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Geometry/Manifold/ContMDiff/Atlas.lean"
    },
    ".lake.packages.mathlib.Mathlib.Geometry.Manifold.ContMDiff.Basic": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Geometry/Manifold/ContMDiff/Basic.lean"
    },
    ".lake.packages.mathlib.Mathlib.Geometry.Manifold.ContMDiff.Constructions": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Geometry/Manifold/ContMDiff/Constructions.lean"
    },
    ".lake.packages.mathlib.Mathlib.Geometry.Manifold.ContMDiff.Defs": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Geometry/Manifold/ContMDiff/Defs.lean"
    },
    ".lake.packages.mathlib.Mathlib.Geometry.Manifold.ContMDiff.NormedSpace": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Geometry/Manifold/ContMDiff/NormedSpace.lean"
    },
    ".lake.packages.mathlib.Mathlib.Geometry.Manifold.Sheaf.LocallyRingedSpace": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Geometry/Manifold/Sheaf/LocallyRingedSpace.lean"
    },
    ".lake.packages.mathlib.Mathlib.Geometry.Manifold.Sheaf.Basic": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Geometry/Manifold/Sheaf/Basic.lean"
    },
    ".lake.packages.mathlib.Mathlib.Geometry.Manifold.Sheaf.Smooth": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Geometry/Manifold/Sheaf/Smooth.lean"
    },
    ".lake.packages.mathlib.Mathlib.Geometry.Manifold.Instances.Icc": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Geometry/Manifold/Instances/Icc.lean"
    },
    ".lake.packages.mathlib.Mathlib.Geometry.Manifold.Instances.Sphere": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Geometry/Manifold/Instances/Sphere.lean"
    },
    ".lake.packages.mathlib.Mathlib.Geometry.Manifold.Instances.UnitsOfNormedAlgebra": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Geometry/Manifold/Instances/UnitsOfNormedAlgebra.lean"
    },
    ".lake.packages.mathlib.Mathlib.Geometry.Manifold.Instances.Real": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Geometry/Manifold/Instances/Real.lean"
    },
    ".lake.packages.mathlib.Mathlib.Geometry.Manifold.IsManifold.InteriorBoundary": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Geometry/Manifold/IsManifold/InteriorBoundary.lean"
    },
    ".lake.packages.mathlib.Mathlib.Geometry.Manifold.IsManifold.ExtChartAt": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Geometry/Manifold/IsManifold/ExtChartAt.lean"
    },
    ".lake.packages.mathlib.Mathlib.Geometry.Manifold.IsManifold.Basic": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Geometry/Manifold/IsManifold/Basic.lean"
    },
    ".lake.packages.mathlib.Mathlib.Geometry.Manifold.Algebra.Monoid": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Geometry/Manifold/Algebra/Monoid.lean"
    },
    ".lake.packages.mathlib.Mathlib.Geometry.Manifold.Algebra.SmoothFunctions": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Geometry/Manifold/Algebra/SmoothFunctions.lean"
    },
    ".lake.packages.mathlib.Mathlib.Geometry.Manifold.Algebra.LeftInvariantDerivation": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Geometry/Manifold/Algebra/LeftInvariantDerivation.lean"
    },
    ".lake.packages.mathlib.Mathlib.Geometry.Manifold.Algebra.LieGroup": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Geometry/Manifold/Algebra/LieGroup.lean"
    },
    ".lake.packages.mathlib.Mathlib.Geometry.Manifold.Algebra.Structures": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Geometry/Manifold/Algebra/Structures.lean"
    },
    ".lake.packages.mathlib.Mathlib.InformationTheory.Hamming": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/InformationTheory/Hamming.lean"
    },
    ".lake.packages.mathlib.Mathlib.InformationTheory.KullbackLeibler.Basic": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/InformationTheory/KullbackLeibler/Basic.lean"
    },
    ".lake.packages.mathlib.Mathlib.InformationTheory.KullbackLeibler.KLFun": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/InformationTheory/KullbackLeibler/KLFun.lean"
    },
    ".lake.packages.mathlib.Mathlib.SetTheory.Lists": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/SetTheory/Lists.lean"
    },
    ".lake.packages.mathlib.Mathlib.SetTheory.ZFC.Class": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/SetTheory/ZFC/Class.lean"
    },
    ".lake.packages.mathlib.Mathlib.SetTheory.ZFC.Rank": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/SetTheory/ZFC/Rank.lean"
    },
    ".lake.packages.mathlib.Mathlib.SetTheory.ZFC.Basic": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/SetTheory/ZFC/Basic.lean"
    },
    ".lake.packages.mathlib.Mathlib.SetTheory.ZFC.VonNeumann": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/SetTheory/ZFC/VonNeumann.lean"
    },
    ".lake.packages.mathlib.Mathlib.SetTheory.ZFC.Ordinal": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/SetTheory/ZFC/Ordinal.lean"
    },
    ".lake.packages.mathlib.Mathlib.SetTheory.ZFC.PSet": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/SetTheory/ZFC/PSet.lean"
    },
    ".lake.packages.mathlib.Mathlib.SetTheory.Surreal.Dyadic": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/SetTheory/Surreal/Dyadic.lean"
    },
    ".lake.packages.mathlib.Mathlib.SetTheory.Surreal.Multiplication": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/SetTheory/Surreal/Multiplication.lean"
    },
    ".lake.packages.mathlib.Mathlib.SetTheory.Surreal.Basic": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/SetTheory/Surreal/Basic.lean"
    },
    ".lake.packages.mathlib.Mathlib.SetTheory.Ordinal.FixedPointApproximants": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/SetTheory/Ordinal/FixedPointApproximants.lean"
    },
    ".lake.packages.mathlib.Mathlib.SetTheory.Ordinal.Family": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/SetTheory/Ordinal/Family.lean"
    },
    ".lake.packages.mathlib.Mathlib.SetTheory.Ordinal.Veblen": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/SetTheory/Ordinal/Veblen.lean"
    },
    ".lake.packages.mathlib.Mathlib.SetTheory.Ordinal.NaturalOps": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/SetTheory/Ordinal/NaturalOps.lean"
    },
    ".lake.packages.mathlib.Mathlib.SetTheory.Ordinal.Rank": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/SetTheory/Ordinal/Rank.lean"
    },
    ".lake.packages.mathlib.Mathlib.SetTheory.Ordinal.Topology": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/SetTheory/Ordinal/Topology.lean"
    },
    ".lake.packages.mathlib.Mathlib.SetTheory.Ordinal.Exponential": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/SetTheory/Ordinal/Exponential.lean"
    },
    ".lake.packages.mathlib.Mathlib.SetTheory.Ordinal.Arithmetic": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/SetTheory/Ordinal/Arithmetic.lean"
    },
    ".lake.packages.mathlib.Mathlib.SetTheory.Ordinal.Basic": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/SetTheory/Ordinal/Basic.lean"
    },
    ".lake.packages.mathlib.Mathlib.SetTheory.Ordinal.Notation": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/SetTheory/Ordinal/Notation.lean"
    },
    ".lake.packages.mathlib.Mathlib.SetTheory.Ordinal.CantorNormalForm": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/SetTheory/Ordinal/CantorNormalForm.lean"
    },
    ".lake.packages.mathlib.Mathlib.SetTheory.Ordinal.Principal": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/SetTheory/Ordinal/Principal.lean"
    },
    ".lake.packages.mathlib.Mathlib.SetTheory.Ordinal.Enum": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/SetTheory/Ordinal/Enum.lean"
    },
    ".lake.packages.mathlib.Mathlib.SetTheory.Ordinal.FixedPoint": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/SetTheory/Ordinal/FixedPoint.lean"
    },
    ".lake.packages.mathlib.Mathlib.SetTheory.Cardinal.Finite": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/SetTheory/Cardinal/Finite.lean"
    },
    ".lake.packages.mathlib.Mathlib.SetTheory.Cardinal.Regular": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/SetTheory/Cardinal/Regular.lean"
    },
    ".lake.packages.mathlib.Mathlib.SetTheory.Cardinal.Aleph": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/SetTheory/Cardinal/Aleph.lean"
    },
    ".lake.packages.mathlib.Mathlib.SetTheory.Cardinal.SchroederBernstein": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/SetTheory/Cardinal/SchroederBernstein.lean"
    },
    ".lake.packages.mathlib.Mathlib.SetTheory.Cardinal.Subfield": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/SetTheory/Cardinal/Subfield.lean"
    },
    ".lake.packages.mathlib.Mathlib.SetTheory.Cardinal.Continuum": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/SetTheory/Cardinal/Continuum.lean"
    },
    ".lake.packages.mathlib.Mathlib.SetTheory.Cardinal.UnivLE": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/SetTheory/Cardinal/UnivLE.lean"
    },
    ".lake.packages.mathlib.Mathlib.SetTheory.Cardinal.Order": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/SetTheory/Cardinal/Order.lean"
    },
    ".lake.packages.mathlib.Mathlib.SetTheory.Cardinal.Arithmetic": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/SetTheory/Cardinal/Arithmetic.lean"
    },
    ".lake.packages.mathlib.Mathlib.SetTheory.Cardinal.Basic": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/SetTheory/Cardinal/Basic.lean"
    },
    ".lake.packages.mathlib.Mathlib.SetTheory.Cardinal.ENat": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/SetTheory/Cardinal/ENat.lean"
    },
    ".lake.packages.mathlib.Mathlib.SetTheory.Cardinal.CountableCover": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/SetTheory/Cardinal/CountableCover.lean"
    },
    ".lake.packages.mathlib.Mathlib.SetTheory.Cardinal.Cofinality": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/SetTheory/Cardinal/Cofinality.lean"
    },
    ".lake.packages.mathlib.Mathlib.SetTheory.Cardinal.HasCardinalLT": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/SetTheory/Cardinal/HasCardinalLT.lean"
    },
    ".lake.packages.mathlib.Mathlib.SetTheory.Cardinal.Pigeonhole": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/SetTheory/Cardinal/Pigeonhole.lean"
    },
    ".lake.packages.mathlib.Mathlib.SetTheory.Cardinal.NatCount": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/SetTheory/Cardinal/NatCount.lean"
    },
    ".lake.packages.mathlib.Mathlib.SetTheory.Cardinal.Defs": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/SetTheory/Cardinal/Defs.lean"
    },
    ".lake.packages.mathlib.Mathlib.SetTheory.Cardinal.Finsupp": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/SetTheory/Cardinal/Finsupp.lean"
    },
    ".lake.packages.mathlib.Mathlib.SetTheory.Cardinal.ToNat": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/SetTheory/Cardinal/ToNat.lean"
    },
    ".lake.packages.mathlib.Mathlib.SetTheory.Cardinal.Ordinal": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/SetTheory/Cardinal/Ordinal.lean"
    },
    ".lake.packages.mathlib.Mathlib.SetTheory.Cardinal.Embedding": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/SetTheory/Cardinal/Embedding.lean"
    },
    ".lake.packages.mathlib.Mathlib.SetTheory.Cardinal.Divisibility": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/SetTheory/Cardinal/Divisibility.lean"
    },
    ".lake.packages.mathlib.Mathlib.SetTheory.Cardinal.Free": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/SetTheory/Cardinal/Free.lean"
    },
    ".lake.packages.mathlib.Mathlib.SetTheory.Nimber.Basic": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/SetTheory/Nimber/Basic.lean"
    },
    ".lake.packages.mathlib.Mathlib.SetTheory.Nimber.Field": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/SetTheory/Nimber/Field.lean"
    },
    ".lake.packages.mathlib.Mathlib.SetTheory.Game.Short": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/SetTheory/Game/Short.lean"
    },
    ".lake.packages.mathlib.Mathlib.SetTheory.Game.Impartial": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/SetTheory/Game/Impartial.lean"
    },
    ".lake.packages.mathlib.Mathlib.SetTheory.Game.Domineering": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/SetTheory/Game/Domineering.lean"
    },
    ".lake.packages.mathlib.Mathlib.SetTheory.Game.Basic": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/SetTheory/Game/Basic.lean"
    },
    ".lake.packages.mathlib.Mathlib.SetTheory.Game.Nim": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/SetTheory/Game/Nim.lean"
    },
    ".lake.packages.mathlib.Mathlib.SetTheory.Game.Ordinal": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/SetTheory/Game/Ordinal.lean"
    },
    ".lake.packages.mathlib.Mathlib.SetTheory.Game.State": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/SetTheory/Game/State.lean"
    },
    ".lake.packages.mathlib.Mathlib.SetTheory.Game.Birthday": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/SetTheory/Game/Birthday.lean"
    },
    ".lake.packages.mathlib.Mathlib.SetTheory.Descriptive.Tree": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/SetTheory/Descriptive/Tree.lean"
    },
    ".lake.packages.mathlib.Mathlib.SetTheory.PGame.Order": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/SetTheory/PGame/Order.lean"
    },
    ".lake.packages.mathlib.Mathlib.SetTheory.PGame.Basic": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/SetTheory/PGame/Basic.lean"
    },
    ".lake.packages.mathlib.Mathlib.SetTheory.PGame.Algebra": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/SetTheory/PGame/Algebra.lean"
    },
    ".lake.packages.mathlib.Mathlib.Data.Subtype": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Data/Subtype.lean"
    },
    ".lake.packages.mathlib.Mathlib.Data.Ineq": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Data/Ineq.lean"
    },
    ".lake.packages.mathlib.Mathlib.Data.Quot": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Data/Quot.lean"
    },
    ".lake.packages.mathlib.Mathlib.Data.Part": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Data/Part.lean"
    },
    ".lake.packages.mathlib.Mathlib.Data.Opposite": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Data/Opposite.lean"
    },
    ".lake.packages.mathlib.Mathlib.Data.Sign": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Data/Sign.lean"
    },
    ".lake.packages.mathlib.Mathlib.Data.Rel": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Data/Rel.lean"
    },
    ".lake.packages.mathlib.Mathlib.Data.Erased": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Data/Erased.lean"
    },
    ".lake.packages.mathlib.Mathlib.Data.PFun": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Data/PFun.lean"
    },
    ".lake.packages.mathlib.Mathlib.Data.TwoPointing": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Data/TwoPointing.lean"
    },
    ".lake.packages.mathlib.Mathlib.Data.BitVec": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Data/BitVec.lean"
    },
    ".lake.packages.mathlib.Mathlib.Data.ULift": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Data/ULift.lean"
    },
    ".lake.packages.mathlib.Mathlib.Data.Finmap": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Data/Finmap.lean"
    },
    ".lake.packages.mathlib.Mathlib.Data.FinEnum": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Data/FinEnum.lean"
    },
    ".lake.packages.mathlib.Mathlib.Data.Holor": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Data/Holor.lean"
    },
    ".lake.packages.mathlib.Mathlib.Data.SProd": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Data/SProd.lean"
    },
    ".lake.packages.mathlib.Mathlib.Data.Semiquot": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Data/Semiquot.lean"
    },
    ".lake.packages.mathlib.Mathlib.Data.TypeVec": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Data/TypeVec.lean"
    },
    ".lake.packages.mathlib.Mathlib.Data.Bracket": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Data/Bracket.lean"
    },
    ".lake.packages.mathlib.Mathlib.Data.Vector3": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Data/Vector3.lean"
    },
    ".lake.packages.mathlib.Mathlib.Data.Char": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Data/Char.lean"
    },
    ".lake.packages.mathlib.Mathlib.Data.PEquiv": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Data/PEquiv.lean"
    },
    ".lake.packages.mathlib.Mathlib.Data.UInt": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Data/UInt.lean"
    },
    ".lake.packages.mathlib.Mathlib.Data.Bundle": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Data/Bundle.lean"
    },
    ".lake.packages.mathlib.Mathlib.Data.Prod.PProd": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Data/Prod/PProd.lean"
    },
    ".lake.packages.mathlib.Mathlib.Data.Prod.Lex": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Data/Prod/Lex.lean"
    },
    ".lake.packages.mathlib.Mathlib.Data.Prod.Basic": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Data/Prod/Basic.lean"
    },
    ".lake.packages.mathlib.Mathlib.Data.Prod.TProd": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Data/Prod/TProd.lean"
    },
    ".lake.packages.mathlib.Mathlib.Data.Ordmap.Ordset": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Data/Ordmap/Ordset.lean"
    },
    ".lake.packages.mathlib.Mathlib.Data.Ordmap.Ordnode": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Data/Ordmap/Ordnode.lean"
    },
    ".lake.packages.mathlib.Mathlib.Data.Ordmap.Invariants": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Data/Ordmap/Invariants.lean"
    },
    ".lake.packages.mathlib.Mathlib.Data.Sym.Card": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Data/Sym/Card.lean"
    },
    ".lake.packages.mathlib.Mathlib.Data.Sym.Basic": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Data/Sym/Basic.lean"
    },
    ".lake.packages.mathlib.Mathlib.Data.Sym.Sym2": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Data/Sym/Sym2.lean"
    },
    ".lake.packages.mathlib.Mathlib.Data.Sym.Sym2.Init": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Data/Sym/Sym2/Init.lean"
    },
    ".lake.packages.mathlib.Mathlib.Data.Sym.Sym2.Order": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Data/Sym/Sym2/Order.lean"
    },
    ".lake.packages.mathlib.Mathlib.Data.Sym.Sym2.Finsupp": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Data/Sym/Sym2/Finsupp.lean"
    },
    ".lake.packages.mathlib.Mathlib.Data.Tree.RBMap": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Data/Tree/RBMap.lean"
    },
    ".lake.packages.mathlib.Mathlib.Data.Tree.Traversable": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Data/Tree/Traversable.lean"
    },
    ".lake.packages.mathlib.Mathlib.Data.Tree.Basic": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Data/Tree/Basic.lean"
    },
    ".lake.packages.mathlib.Mathlib.Data.Tree.Get": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Data/Tree/Get.lean"
    },
    ".lake.packages.mathlib.Mathlib.Data.QPF.Multivariate.Basic": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Data/QPF/Multivariate/Basic.lean"
    },
    ".lake.packages.mathlib.Mathlib.Data.QPF.Multivariate.Constructions.Quot": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Data/QPF/Multivariate/Constructions/Quot.lean"
    },
    ".lake.packages.mathlib.Mathlib.Data.QPF.Multivariate.Constructions.Comp": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Data/QPF/Multivariate/Constructions/Comp.lean"
    },
    ".lake.packages.mathlib.Mathlib.Data.QPF.Multivariate.Constructions.Sigma": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Data/QPF/Multivariate/Constructions/Sigma.lean"
    },
    ".lake.packages.mathlib.Mathlib.Data.QPF.Multivariate.Constructions.Const": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Data/QPF/Multivariate/Constructions/Const.lean"
    },
    ".lake.packages.mathlib.Mathlib.Data.QPF.Multivariate.Constructions.Prj": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Data/QPF/Multivariate/Constructions/Prj.lean"
    },
    ".lake.packages.mathlib.Mathlib.Data.QPF.Multivariate.Constructions.Cofix": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Data/QPF/Multivariate/Constructions/Cofix.lean"
    },
    ".lake.packages.mathlib.Mathlib.Data.QPF.Multivariate.Constructions.Fix": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Data/QPF/Multivariate/Constructions/Fix.lean"
    },
    ".lake.packages.mathlib.Mathlib.Data.QPF.Univariate.Basic": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Data/QPF/Univariate/Basic.lean"
    },
    ".lake.packages.mathlib.Mathlib.Data.DList.Instances": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Data/DList/Instances.lean"
    },
    ".lake.packages.mathlib.Mathlib.Data.DFinsupp.Module": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Data/DFinsupp/Module.lean"
    },
    ".lake.packages.mathlib.Mathlib.Data.DFinsupp.FiniteInfinite": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Data/DFinsupp/FiniteInfinite.lean"
    },
    ".lake.packages.mathlib.Mathlib.Data.DFinsupp.Interval": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Data/DFinsupp/Interval.lean"
    },
    ".lake.packages.mathlib.Mathlib.Data.DFinsupp.Lex": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Data/DFinsupp/Lex.lean"
    },
    ".lake.packages.mathlib.Mathlib.Data.DFinsupp.Sigma": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Data/DFinsupp/Sigma.lean"
    },
    ".lake.packages.mathlib.Mathlib.Data.DFinsupp.Order": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Data/DFinsupp/Order.lean"
    },
    ".lake.packages.mathlib.Mathlib.Data.DFinsupp.Multiset": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Data/DFinsupp/Multiset.lean"
    },
    ".lake.packages.mathlib.Mathlib.Data.DFinsupp.WellFounded": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Data/DFinsupp/WellFounded.lean"
    },
    ".lake.packages.mathlib.Mathlib.Data.DFinsupp.Ext": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Data/DFinsupp/Ext.lean"
    },
    ".lake.packages.mathlib.Mathlib.Data.DFinsupp.Notation": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Data/DFinsupp/Notation.lean"
    },
    ".lake.packages.mathlib.Mathlib.Data.DFinsupp.Defs": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Data/DFinsupp/Defs.lean"
    },
    ".lake.packages.mathlib.Mathlib.Data.DFinsupp.Submonoid": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Data/DFinsupp/Submonoid.lean"
    },
    ".lake.packages.mathlib.Mathlib.Data.DFinsupp.Small": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Data/DFinsupp/Small.lean"
    },
    ".lake.packages.mathlib.Mathlib.Data.DFinsupp.BigOperators": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Data/DFinsupp/BigOperators.lean"
    },
    ".lake.packages.mathlib.Mathlib.Data.DFinsupp.NeLocus": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Data/DFinsupp/NeLocus.lean"
    },
    ".lake.packages.mathlib.Mathlib.Data.DFinsupp.Encodable": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Data/DFinsupp/Encodable.lean"
    },
    ".lake.packages.mathlib.Mathlib.Data.Fin.SuccPred": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Data/Fin/SuccPred.lean"
    },
    ".lake.packages.mathlib.Mathlib.Data.Fin.VecNotation": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Data/Fin/VecNotation.lean"
    },
    ".lake.packages.mathlib.Mathlib.Data.Fin.FlagRange": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Data/Fin/FlagRange.lean"
    },
    ".lake.packages.mathlib.Mathlib.Data.Fin.Basic": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Data/Fin/Basic.lean"
    },
    ".lake.packages.mathlib.Mathlib.Data.Fin.Pigeonhole": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Data/Fin/Pigeonhole.lean"
    },
    ".lake.packages.mathlib.Mathlib.Data.Fin.Embedding": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Data/Fin/Embedding.lean"
    },
    ".lake.packages.mathlib.Mathlib.Data.Fin.Rev": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Data/Fin/Rev.lean"
    },
    ".lake.packages.mathlib.Mathlib.Data.Fin.Parity": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Data/Fin/Parity.lean"
    },
    ".lake.packages.mathlib.Mathlib.Data.Fin.Fin2": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Data/Fin/Fin2.lean"
    },
    ".lake.packages.mathlib.Mathlib.Data.Fin.Tuple.BubbleSortInduction": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Data/Fin/Tuple/BubbleSortInduction.lean"
    },
    ".lake.packages.mathlib.Mathlib.Data.Fin.Tuple.Curry": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Data/Fin/Tuple/Curry.lean"
    },
    ".lake.packages.mathlib.Mathlib.Data.Fin.Tuple.Reflection": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Data/Fin/Tuple/Reflection.lean"
    },
    ".lake.packages.mathlib.Mathlib.Data.Fin.Tuple.Take": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Data/Fin/Tuple/Take.lean"
    },
    ".lake.packages.mathlib.Mathlib.Data.Fin.Tuple.Finset": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Data/Fin/Tuple/Finset.lean"
    },
    ".lake.packages.mathlib.Mathlib.Data.Fin.Tuple.Basic": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Data/Fin/Tuple/Basic.lean"
    },
    ".lake.packages.mathlib.Mathlib.Data.Fin.Tuple.Sort": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Data/Fin/Tuple/Sort.lean"
    },
    ".lake.packages.mathlib.Mathlib.Data.Fin.Tuple.Embedding": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Data/Fin/Tuple/Embedding.lean"
    },
    ".lake.packages.mathlib.Mathlib.Data.Fin.Tuple.NatAntidiagonal": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Data/Fin/Tuple/NatAntidiagonal.lean"
    },
    ".lake.packages.mathlib.Mathlib.Data.Finsupp.Fintype": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Data/Finsupp/Fintype.lean"
    },
    ".lake.packages.mathlib.Mathlib.Data.Finsupp.SMul": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Data/Finsupp/SMul.lean"
    },
    ".lake.packages.mathlib.Mathlib.Data.Finsupp.Fin": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Data/Finsupp/Fin.lean"
    },
    ".lake.packages.mathlib.Mathlib.Data.Finsupp.Option": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Data/Finsupp/Option.lean"
    },
    ".lake.packages.mathlib.Mathlib.Data.Finsupp.Indicator": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Data/Finsupp/Indicator.lean"
    },
    ".lake.packages.mathlib.Mathlib.Data.Finsupp.SMulWithZero": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Data/Finsupp/SMulWithZero.lean"
    },
    ".lake.packages.mathlib.Mathlib.Data.Finsupp.Interval": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Data/Finsupp/Interval.lean"
    },
    ".lake.packages.mathlib.Mathlib.Data.Finsupp.Lex": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Data/Finsupp/Lex.lean"
    },
    ".lake.packages.mathlib.Mathlib.Data.Finsupp.Antidiagonal": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Data/Finsupp/Antidiagonal.lean"
    },
    ".lake.packages.mathlib.Mathlib.Data.Finsupp.Pointwise": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Data/Finsupp/Pointwise.lean"
    },
    ".lake.packages.mathlib.Mathlib.Data.Finsupp.Order": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Data/Finsupp/Order.lean"
    },
    ".lake.packages.mathlib.Mathlib.Data.Finsupp.Single": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Data/Finsupp/Single.lean"
    },
    ".lake.packages.mathlib.Mathlib.Data.Finsupp.Basic": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Data/Finsupp/Basic.lean"
    },
    ".lake.packages.mathlib.Mathlib.Data.Finsupp.Multiset": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Data/Finsupp/Multiset.lean"
    },
    ".lake.packages.mathlib.Mathlib.Data.Finsupp.PWO": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Data/Finsupp/PWO.lean"
    },
    ".lake.packages.mathlib.Mathlib.Data.Finsupp.WellFounded": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Data/Finsupp/WellFounded.lean"
    },
    ".lake.packages.mathlib.Mathlib.Data.Finsupp.Ext": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Data/Finsupp/Ext.lean"
    },
    ".lake.packages.mathlib.Mathlib.Data.Finsupp.Notation": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Data/Finsupp/Notation.lean"
    },
    ".lake.packages.mathlib.Mathlib.Data.Finsupp.Defs": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Data/Finsupp/Defs.lean"
    },
    ".lake.packages.mathlib.Mathlib.Data.Finsupp.Weight": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Data/Finsupp/Weight.lean"
    },
    ".lake.packages.mathlib.Mathlib.Data.Finsupp.AList": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Data/Finsupp/AList.lean"
    },
    ".lake.packages.mathlib.Mathlib.Data.Finsupp.BigOperators": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Data/Finsupp/BigOperators.lean"
    },
    ".lake.packages.mathlib.Mathlib.Data.Finsupp.ToDFinsupp": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Data/Finsupp/ToDFinsupp.lean"
    },
    ".lake.packages.mathlib.Mathlib.Data.Finsupp.NeLocus": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Data/Finsupp/NeLocus.lean"
    },
    ".lake.packages.mathlib.Mathlib.Data.Finsupp.MonomialOrder": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Data/Finsupp/MonomialOrder.lean"
    },
    ".lake.packages.mathlib.Mathlib.Data.Finsupp.Encodable": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Data/Finsupp/Encodable.lean"
    },
    ".lake.packages.mathlib.Mathlib.Data.Finsupp.MonomialOrder.DegLex": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Data/Finsupp/MonomialOrder/DegLex.lean"
    },
    ".lake.packages.mathlib.Mathlib.Data.Analysis.Topology": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Data/Analysis/Topology.lean"
    },
    ".lake.packages.mathlib.Mathlib.Data.Analysis.Filter": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Data/Analysis/Filter.lean"
    },
    ".lake.packages.mathlib.Mathlib.Data.MLList.BestFirst": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Data/MLList/BestFirst.lean"
    },
    ".lake.packages.mathlib.Mathlib.Data.WSeq.Basic": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Data/WSeq/Basic.lean"
    },
    ".lake.packages.mathlib.Mathlib.Data.WSeq.Relation": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Data/WSeq/Relation.lean"
    },
    ".lake.packages.mathlib.Mathlib.Data.WSeq.Defs": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Data/WSeq/Defs.lean"
    },
    ".lake.packages.mathlib.Mathlib.Data.WSeq.Productive": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Data/WSeq/Productive.lean"
    },
    ".lake.packages.mathlib.Mathlib.Data.PFunctor.Multivariate.Basic": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Data/PFunctor/Multivariate/Basic.lean"
    },
    ".lake.packages.mathlib.Mathlib.Data.PFunctor.Multivariate.W": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Data/PFunctor/Multivariate/W.lean"
    },
    ".lake.packages.mathlib.Mathlib.Data.PFunctor.Multivariate.M": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Data/PFunctor/Multivariate/M.lean"
    },
    ".lake.packages.mathlib.Mathlib.Data.PFunctor.Univariate.Basic": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Data/PFunctor/Univariate/Basic.lean"
    },
    ".lake.packages.mathlib.Mathlib.Data.PFunctor.Univariate.M": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Data/PFunctor/Univariate/M.lean"
    },
    ".lake.packages.mathlib.Mathlib.Data.Array.Extract": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Data/Array/Extract.lean"
    },
    ".lake.packages.mathlib.Mathlib.Data.Array.Defs": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Data/Array/Defs.lean"
    },
    ".lake.packages.mathlib.Mathlib.Data.ZMod.QuotientRing": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Data/ZMod/QuotientRing.lean"
    },
    ".lake.packages.mathlib.Mathlib.Data.ZMod.Aut": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Data/ZMod/Aut.lean"
    },
    ".lake.packages.mathlib.Mathlib.Data.ZMod.IntUnitsPower": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Data/ZMod/IntUnitsPower.lean"
    },
    ".lake.packages.mathlib.Mathlib.Data.ZMod.ValMinAbs": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Data/ZMod/ValMinAbs.lean"
    },
    ".lake.packages.mathlib.Mathlib.Data.ZMod.Basic": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Data/ZMod/Basic.lean"
    },
    ".lake.packages.mathlib.Mathlib.Data.ZMod.Defs": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Data/ZMod/Defs.lean"
    },
    ".lake.packages.mathlib.Mathlib.Data.ZMod.Coprime": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Data/ZMod/Coprime.lean"
    },
    ".lake.packages.mathlib.Mathlib.Data.ZMod.Factorial": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Data/ZMod/Factorial.lean"
    },
    ".lake.packages.mathlib.Mathlib.Data.ZMod.Units": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Data/ZMod/Units.lean"
    },
    ".lake.packages.mathlib.Mathlib.Data.ZMod.QuotientGroup": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Data/ZMod/QuotientGroup.lean"
    },
    ".lake.packages.mathlib.Mathlib.Data.NNReal.Star": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Data/NNReal/Star.lean"
    },
    ".lake.packages.mathlib.Mathlib.Data.NNReal.Basic": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Data/NNReal/Basic.lean"
    },
    ".lake.packages.mathlib.Mathlib.Data.NNReal.Defs": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Data/NNReal/Defs.lean"
    },
    ".lake.packages.mathlib.Mathlib.Data.Finset.Sum": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Data/Finset/Sum.lean"
    },
    ".lake.packages.mathlib.Mathlib.Data.Finset.Fin": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Data/Finset/Fin.lean"
    },
    ".lake.packages.mathlib.Mathlib.Data.Finset.Card": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Data/Finset/Card.lean"
    },
    ".lake.packages.mathlib.Mathlib.Data.Finset.NoncommProd": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Data/Finset/NoncommProd.lean"
    },
    ".lake.packages.mathlib.Mathlib.Data.Finset.Option": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Data/Finset/Option.lean"
    },
    ".lake.packages.mathlib.Mathlib.Data.Finset.Pairwise": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Data/Finset/Pairwise.lean"
    },
    ".lake.packages.mathlib.Mathlib.Data.Finset.Attr": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Data/Finset/Attr.lean"
    },
    ".lake.packages.mathlib.Mathlib.Data.Finset.PImage": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Data/Finset/PImage.lean"
    },
    ".lake.packages.mathlib.Mathlib.Data.Finset.Sups": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Data/Finset/Sups.lean"
    },
    ".lake.packages.mathlib.Mathlib.Data.Finset.Piecewise": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Data/Finset/Piecewise.lean"
    },
    ".lake.packages.mathlib.Mathlib.Data.Finset.Interval": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Data/Finset/Interval.lean"
    },
    ".lake.packages.mathlib.Mathlib.Data.Finset.NAry": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Data/Finset/NAry.lean"
    },
    ".lake.packages.mathlib.Mathlib.Data.Finset.Sigma": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Data/Finset/Sigma.lean"
    },
    ".lake.packages.mathlib.Mathlib.Data.Finset.Update": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Data/Finset/Update.lean"
    },
    ".lake.packages.mathlib.Mathlib.Data.Finset.SMulAntidiagonal": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Data/Finset/SMulAntidiagonal.lean"
    },
    ".lake.packages.mathlib.Mathlib.Data.Finset.Prod": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Data/Finset/Prod.lean"
    },
    ".lake.packages.mathlib.Mathlib.Data.Finset.Dedup": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Data/Finset/Dedup.lean"
    },
    ".lake.packages.mathlib.Mathlib.Data.Finset.SDiff": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Data/Finset/SDiff.lean"
    },
    ".lake.packages.mathlib.Mathlib.Data.Finset.Union": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Data/Finset/Union.lean"
    },
    ".lake.packages.mathlib.Mathlib.Data.Finset.Order": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Data/Finset/Order.lean"
    },
    ".lake.packages.mathlib.Mathlib.Data.Finset.BooleanAlgebra": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Data/Finset/BooleanAlgebra.lean"
    },
    ".lake.packages.mathlib.Mathlib.Data.Finset.Insert": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Data/Finset/Insert.lean"
    },
    ".lake.packages.mathlib.Mathlib.Data.Finset.Pi": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Data/Finset/Pi.lean"
    },
    ".lake.packages.mathlib.Mathlib.Data.Finset.Density": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Data/Finset/Density.lean"
    },
    ".lake.packages.mathlib.Mathlib.Data.Finset.Image": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Data/Finset/Image.lean"
    },
    ".lake.packages.mathlib.Mathlib.Data.Finset.Basic": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Data/Finset/Basic.lean"
    },
    ".lake.packages.mathlib.Mathlib.Data.Finset.Disjoint": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Data/Finset/Disjoint.lean"
    },
    ".lake.packages.mathlib.Mathlib.Data.Finset.Sort": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Data/Finset/Sort.lean"
    },
    ".lake.packages.mathlib.Mathlib.Data.Finset.Powerset": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Data/Finset/Powerset.lean"
    },
    ".lake.packages.mathlib.Mathlib.Data.Finset.Filter": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Data/Finset/Filter.lean"
    },
    ".lake.packages.mathlib.Mathlib.Data.Finset.Defs": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Data/Finset/Defs.lean"
    },
    ".lake.packages.mathlib.Mathlib.Data.Finset.Finsupp": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Data/Finset/Finsupp.lean"
    },
    ".lake.packages.mathlib.Mathlib.Data.Finset.Empty": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Data/Finset/Empty.lean"
    },
    ".lake.packages.mathlib.Mathlib.Data.Finset.SymmDiff": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Data/Finset/SymmDiff.lean"
    },
    ".lake.packages.mathlib.Mathlib.Data.Finset.Grade": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Data/Finset/Grade.lean"
    },
    ".lake.packages.mathlib.Mathlib.Data.Finset.Fold": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Data/Finset/Fold.lean"
    },
    ".lake.packages.mathlib.Mathlib.Data.Finset.MulAntidiagonal": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Data/Finset/MulAntidiagonal.lean"
    },
    ".lake.packages.mathlib.Mathlib.Data.Finset.Functor": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Data/Finset/Functor.lean"
    },
    ".lake.packages.mathlib.Mathlib.Data.Finset.Range": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Data/Finset/Range.lean"
    },
    ".lake.packages.mathlib.Mathlib.Data.Finset.CastCard": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Data/Finset/CastCard.lean"
    },
    ".lake.packages.mathlib.Mathlib.Data.Finset.Attach": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Data/Finset/Attach.lean"
    },
    ".lake.packages.mathlib.Mathlib.Data.Finset.PiInduction": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Data/Finset/PiInduction.lean"
    },
    ".lake.packages.mathlib.Mathlib.Data.Finset.Slice": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Data/Finset/Slice.lean"
    },
    ".lake.packages.mathlib.Mathlib.Data.Finset.Max": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Data/Finset/Max.lean"
    },
    ".lake.packages.mathlib.Mathlib.Data.Finset.Erase": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Data/Finset/Erase.lean"
    },
    ".lake.packages.mathlib.Mathlib.Data.Finset.NatAntidiagonal": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Data/Finset/NatAntidiagonal.lean"
    },
    ".lake.packages.mathlib.Mathlib.Data.Finset.Preimage": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Data/Finset/Preimage.lean"
    },
    ".lake.packages.mathlib.Mathlib.Data.Finset.Sym": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Data/Finset/Sym.lean"
    },
    ".lake.packages.mathlib.Mathlib.Data.Finset.NatDivisors": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Data/Finset/NatDivisors.lean"
    },
    ".lake.packages.mathlib.Mathlib.Data.Finset.Lattice.Lemmas": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Data/Finset/Lattice/Lemmas.lean"
    },
    ".lake.packages.mathlib.Mathlib.Data.Finset.Lattice.Prod": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Data/Finset/Lattice/Prod.lean"
    },
    ".lake.packages.mathlib.Mathlib.Data.Finset.Lattice.Union": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Data/Finset/Lattice/Union.lean"
    },
    ".lake.packages.mathlib.Mathlib.Data.Finset.Lattice.Pi": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Data/Finset/Lattice/Pi.lean"
    },
    ".lake.packages.mathlib.Mathlib.Data.Finset.Lattice.Basic": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Data/Finset/Lattice/Basic.lean"
    },
    ".lake.packages.mathlib.Mathlib.Data.Finset.Lattice.Fold": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Data/Finset/Lattice/Fold.lean"
    },
    ".lake.packages.mathlib.Mathlib.Data.Fintype.Sum": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Data/Fintype/Sum.lean"
    },
    ".lake.packages.mathlib.Mathlib.Data.Fintype.Fin": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Data/Fintype/Fin.lean"
    },
    ".lake.packages.mathlib.Mathlib.Data.Fintype.Card": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Data/Fintype/Card.lean"
    },
    ".lake.packages.mathlib.Mathlib.Data.Fintype.Option": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Data/Fintype/Option.lean"
    },
    ".lake.packages.mathlib.Mathlib.Data.Fintype.List": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Data/Fintype/List.lean"
    },
    ".lake.packages.mathlib.Mathlib.Data.Fintype.Sigma": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Data/Fintype/Sigma.lean"
    },
    ".lake.packages.mathlib.Mathlib.Data.Fintype.OfMap": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Data/Fintype/OfMap.lean"
    },
    ".lake.packages.mathlib.Mathlib.Data.Fintype.Prod": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Data/Fintype/Prod.lean"
    },
    ".lake.packages.mathlib.Mathlib.Data.Fintype.EquivFin": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Data/Fintype/EquivFin.lean"
    },
    ".lake.packages.mathlib.Mathlib.Data.Fintype.Perm": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Data/Fintype/Perm.lean"
    },
    ".lake.packages.mathlib.Mathlib.Data.Fintype.Sets": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Data/Fintype/Sets.lean"
    },
    ".lake.packages.mathlib.Mathlib.Data.Fintype.Order": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Data/Fintype/Order.lean"
    },
    ".lake.packages.mathlib.Mathlib.Data.Fintype.Pi": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Data/Fintype/Pi.lean"
    },
    ".lake.packages.mathlib.Mathlib.Data.Fintype.Basic": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Data/Fintype/Basic.lean"
    },
    ".lake.packages.mathlib.Mathlib.Data.Fintype.Sort": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Data/Fintype/Sort.lean"
    },
    ".lake.packages.mathlib.Mathlib.Data.Fintype.Quotient": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Data/Fintype/Quotient.lean"
    },
    ".lake.packages.mathlib.Mathlib.Data.Fintype.Vector": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Data/Fintype/Vector.lean"
    },
    ".lake.packages.mathlib.Mathlib.Data.Fintype.Powerset": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Data/Fintype/Powerset.lean"
    },
    ".lake.packages.mathlib.Mathlib.Data.Fintype.CardEmbedding": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Data/Fintype/CardEmbedding.lean"
    },
    ".lake.packages.mathlib.Mathlib.Data.Fintype.Pigeonhole": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Data/Fintype/Pigeonhole.lean"
    },
    ".lake.packages.mathlib.Mathlib.Data.Fintype.Defs": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Data/Fintype/Defs.lean"
    },
    ".lake.packages.mathlib.Mathlib.Data.Fintype.Shrink": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Data/Fintype/Shrink.lean"
    },
    ".lake.packages.mathlib.Mathlib.Data.Fintype.BigOperators": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Data/Fintype/BigOperators.lean"
    },
    ".lake.packages.mathlib.Mathlib.Data.Fintype.Parity": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Data/Fintype/Parity.lean"
    },
    ".lake.packages.mathlib.Mathlib.Data.Fintype.Lattice": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Data/Fintype/Lattice.lean"
    },
    ".lake.packages.mathlib.Mathlib.Data.Fintype.Units": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Data/Fintype/Units.lean"
    },
    ".lake.packages.mathlib.Mathlib.Data.Fintype.Inv": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Data/Fintype/Inv.lean"
    },
    ".lake.packages.mathlib.Mathlib.Data.Complex.ExponentialBounds": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Data/Complex/ExponentialBounds.lean"
    },
    ".lake.packages.mathlib.Mathlib.Data.Complex.Module": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Data/Complex/Module.lean"
    },
    ".lake.packages.mathlib.Mathlib.Data.Complex.Norm": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Data/Complex/Norm.lean"
    },
    ".lake.packages.mathlib.Mathlib.Data.Complex.Exponential": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Data/Complex/Exponential.lean"
    },
    ".lake.packages.mathlib.Mathlib.Data.Complex.Order": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Data/Complex/Order.lean"
    },
    ".lake.packages.mathlib.Mathlib.Data.Complex.Orientation": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Data/Complex/Orientation.lean"
    },
    ".lake.packages.mathlib.Mathlib.Data.Complex.Basic": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Data/Complex/Basic.lean"
    },
    ".lake.packages.mathlib.Mathlib.Data.Complex.Cardinality": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Data/Complex/Cardinality.lean"
    },
    ".lake.packages.mathlib.Mathlib.Data.Complex.Trigonometric": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Data/Complex/Trigonometric.lean"
    },
    ".lake.packages.mathlib.Mathlib.Data.Complex.BigOperators": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Data/Complex/BigOperators.lean"
    },
    ".lake.packages.mathlib.Mathlib.Data.Complex.Determinant": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Data/Complex/Determinant.lean"
    },
    ".lake.packages.mathlib.Mathlib.Data.Complex.FiniteDimensional": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Data/Complex/FiniteDimensional.lean"
    },
    ".lake.packages.mathlib.Mathlib.Data.Real.CompleteField": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Data/Real/CompleteField.lean"
    },
    ".lake.packages.mathlib.Mathlib.Data.Real.Sqrt": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Data/Real/Sqrt.lean"
    },
    ".lake.packages.mathlib.Mathlib.Data.Real.Sign": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Data/Real/Sign.lean"
    },
    ".lake.packages.mathlib.Mathlib.Data.Real.ENatENNReal": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Data/Real/ENatENNReal.lean"
    },
    ".lake.packages.mathlib.Mathlib.Data.Real.Star": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Data/Real/Star.lean"
    },
    ".lake.packages.mathlib.Mathlib.Data.Real.Pointwise": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Data/Real/Pointwise.lean"
    },
    ".lake.packages.mathlib.Mathlib.Data.Real.ConjExponents": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Data/Real/ConjExponents.lean"
    },
    ".lake.packages.mathlib.Mathlib.Data.Real.Archimedean": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Data/Real/Archimedean.lean"
    },
    ".lake.packages.mathlib.Mathlib.Data.Real.GoldenRatio": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Data/Real/GoldenRatio.lean"
    },
    ".lake.packages.mathlib.Mathlib.Data.Real.Basic": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Data/Real/Basic.lean"
    },
    ".lake.packages.mathlib.Mathlib.Data.Real.Cardinality": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Data/Real/Cardinality.lean"
    },
    ".lake.packages.mathlib.Mathlib.Data.Real.EReal": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Data/Real/EReal.lean"
    },
    ".lake.packages.mathlib.Mathlib.Data.Real.Hyperreal": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Data/Real/Hyperreal.lean"
    },
    ".lake.packages.mathlib.Mathlib.Data.Real.Embedding": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Data/Real/Embedding.lean"
    },
    ".lake.packages.mathlib.Mathlib.Data.Real.Irrational": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Data/Real/Irrational.lean"
    },
    ".lake.packages.mathlib.Mathlib.Data.Real.StarOrdered": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Data/Real/StarOrdered.lean"
    },
    ".lake.packages.mathlib.Mathlib.Data.Real.Pi.Wallis": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Data/Real/Pi/Wallis.lean"
    },
    ".lake.packages.mathlib.Mathlib.Data.Real.Pi.Irrational": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Data/Real/Pi/Irrational.lean"
    },
    ".lake.packages.mathlib.Mathlib.Data.Real.Pi.Leibniz": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Data/Real/Pi/Leibniz.lean"
    },
    ".lake.packages.mathlib.Mathlib.Data.Real.Pi.Bounds": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Data/Real/Pi/Bounds.lean"
    },
    ".lake.packages.mathlib.Mathlib.Data.Seq.Computation": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Data/Seq/Computation.lean"
    },
    ".lake.packages.mathlib.Mathlib.Data.Seq.Seq": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Data/Seq/Seq.lean"
    },
    ".lake.packages.mathlib.Mathlib.Data.Seq.WSeq": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Data/Seq/WSeq.lean"
    },
    ".lake.packages.mathlib.Mathlib.Data.Seq.Parallel": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Data/Seq/Parallel.lean"
    },
    ".lake.packages.mathlib.Mathlib.Data.Finite.Sum": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Data/Finite/Sum.lean"
    },
    ".lake.packages.mathlib.Mathlib.Data.Finite.Card": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Data/Finite/Card.lean"
    },
    ".lake.packages.mathlib.Mathlib.Data.Finite.Sigma": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Data/Finite/Sigma.lean"
    },
    ".lake.packages.mathlib.Mathlib.Data.Finite.Prod": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Data/Finite/Prod.lean"
    },
    ".lake.packages.mathlib.Mathlib.Data.Finite.Perm": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Data/Finite/Perm.lean"
    },
    ".lake.packages.mathlib.Mathlib.Data.Finite.Vector": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Data/Finite/Vector.lean"
    },
    ".lake.packages.mathlib.Mathlib.Data.Finite.Defs": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Data/Finite/Defs.lean"
    },
    ".lake.packages.mathlib.Mathlib.Data.Finite.Set": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Data/Finite/Set.lean"
    },
    ".lake.packages.mathlib.Mathlib.Data.NNRat.Lemmas": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Data/NNRat/Lemmas.lean"
    },
    ".lake.packages.mathlib.Mathlib.Data.NNRat.Order": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Data/NNRat/Order.lean"
    },
    ".lake.packages.mathlib.Mathlib.Data.NNRat.Defs": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Data/NNRat/Defs.lean"
    },
    ".lake.packages.mathlib.Mathlib.Data.NNRat.Floor": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Data/NNRat/Floor.lean"
    },
    ".lake.packages.mathlib.Mathlib.Data.NNRat.BigOperators": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Data/NNRat/BigOperators.lean"
    },
    ".lake.packages.mathlib.Mathlib.Data.Nat.ModEq": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Data/Nat/ModEq.lean"
    },
    ".lake.packages.mathlib.Mathlib.Data.Nat.Nth": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Data/Nat/Nth.lean"
    },
    ".lake.packages.mathlib.Mathlib.Data.Nat.Bitwise": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Data/Nat/Bitwise.lean"
    },
    ".lake.packages.mathlib.Mathlib.Data.Nat.Count": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Data/Nat/Count.lean"
    },
    ".lake.packages.mathlib.Mathlib.Data.Nat.PrimeFin": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Data/Nat/PrimeFin.lean"
    },
    ".lake.packages.mathlib.Mathlib.Data.Nat.Dist": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Data/Nat/Dist.lean"
    },
    ".lake.packages.mathlib.Mathlib.Data.Nat.SuccPred": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Data/Nat/SuccPred.lean"
    },
    ".lake.packages.mathlib.Mathlib.Data.Nat.Sqrt": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Data/Nat/Sqrt.lean"
    },
    ".lake.packages.mathlib.Mathlib.Data.Nat.BinaryRec": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Data/Nat/BinaryRec.lean"
    },
    ".lake.packages.mathlib.Mathlib.Data.Nat.BitIndices": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Data/Nat/BitIndices.lean"
    },
    ".lake.packages.mathlib.Mathlib.Data.Nat.EvenOddRec": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Data/Nat/EvenOddRec.lean"
    },
    ".lake.packages.mathlib.Mathlib.Data.Nat.Init": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Data/Nat/Init.lean"
    },
    ".lake.packages.mathlib.Mathlib.Data.Nat.Factors": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Data/Nat/Factors.lean"
    },
    ".lake.packages.mathlib.Mathlib.Data.Nat.Multiplicity": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Data/Nat/Multiplicity.lean"
    },
    ".lake.packages.mathlib.Mathlib.Data.Nat.MaxPowDiv": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Data/Nat/MaxPowDiv.lean"
    },
    ".lake.packages.mathlib.Mathlib.Data.Nat.PowModTotient": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Data/Nat/PowModTotient.lean"
    },
    ".lake.packages.mathlib.Mathlib.Data.Nat.Basic": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Data/Nat/Basic.lean"
    },
    ".lake.packages.mathlib.Mathlib.Data.Nat.Size": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Data/Nat/Size.lean"
    },
    ".lake.packages.mathlib.Mathlib.Data.Nat.Hyperoperation": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Data/Nat/Hyperoperation.lean"
    },
    ".lake.packages.mathlib.Mathlib.Data.Nat.Notation": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Data/Nat/Notation.lean"
    },
    ".lake.packages.mathlib.Mathlib.Data.Nat.Set": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Data/Nat/Set.lean"
    },
    ".lake.packages.mathlib.Mathlib.Data.Nat.ChineseRemainder": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Data/Nat/ChineseRemainder.lean"
    },
    ".lake.packages.mathlib.Mathlib.Data.Nat.Squarefree": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Data/Nat/Squarefree.lean"
    },
    ".lake.packages.mathlib.Mathlib.Data.Nat.WithBot": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Data/Nat/WithBot.lean"
    },
    ".lake.packages.mathlib.Mathlib.Data.Nat.Bits": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Data/Nat/Bits.lean"
    },
    ".lake.packages.mathlib.Mathlib.Data.Nat.Periodic": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Data/Nat/Periodic.lean"
    },
    ".lake.packages.mathlib.Mathlib.Data.Nat.PartENat": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Data/Nat/PartENat.lean"
    },
    ".lake.packages.mathlib.Mathlib.Data.Nat.Totient": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Data/Nat/Totient.lean"
    },
    ".lake.packages.mathlib.Mathlib.Data.Nat.PSub": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Data/Nat/PSub.lean"
    },
    ".lake.packages.mathlib.Mathlib.Data.Nat.Pairing": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Data/Nat/Pairing.lean"
    },
    ".lake.packages.mathlib.Mathlib.Data.Nat.Lattice": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Data/Nat/Lattice.lean"
    },
    ".lake.packages.mathlib.Mathlib.Data.Nat.Log": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Data/Nat/Log.lean"
    },
    ".lake.packages.mathlib.Mathlib.Data.Nat.Upto": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Data/Nat/Upto.lean"
    },
    ".lake.packages.mathlib.Mathlib.Data.Nat.Find": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Data/Nat/Find.lean"
    },
    ".lake.packages.mathlib.Mathlib.Data.Nat.Order.Lemmas": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Data/Nat/Order/Lemmas.lean"
    },
    ".lake.packages.mathlib.Mathlib.Data.Nat.Choose.Sum": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Data/Nat/Choose/Sum.lean"
    },
    ".lake.packages.mathlib.Mathlib.Data.Nat.Choose.Dvd": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Data/Nat/Choose/Dvd.lean"
    },
    ".lake.packages.mathlib.Mathlib.Data.Nat.Choose.Mul": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Data/Nat/Choose/Mul.lean"
    },
    ".lake.packages.mathlib.Mathlib.Data.Nat.Choose.Basic": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Data/Nat/Choose/Basic.lean"
    },
    ".lake.packages.mathlib.Mathlib.Data.Nat.Choose.Lucas": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Data/Nat/Choose/Lucas.lean"
    },
    ".lake.packages.mathlib.Mathlib.Data.Nat.Choose.Factorization": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Data/Nat/Choose/Factorization.lean"
    },
    ".lake.packages.mathlib.Mathlib.Data.Nat.Choose.Vandermonde": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Data/Nat/Choose/Vandermonde.lean"
    },
    ".lake.packages.mathlib.Mathlib.Data.Nat.Choose.Central": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Data/Nat/Choose/Central.lean"
    },
    ".lake.packages.mathlib.Mathlib.Data.Nat.Choose.Multinomial": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Data/Nat/Choose/Multinomial.lean"
    },
    ".lake.packages.mathlib.Mathlib.Data.Nat.Choose.Cast": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Data/Nat/Choose/Cast.lean"
    },
    ".lake.packages.mathlib.Mathlib.Data.Nat.Choose.Bounds": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Data/Nat/Choose/Bounds.lean"
    },
    ".lake.packages.mathlib.Mathlib.Data.Nat.Cast.SetInterval": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Data/Nat/Cast/SetInterval.lean"
    },
    ".lake.packages.mathlib.Mathlib.Data.Nat.Cast.WithTop": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Data/Nat/Cast/WithTop.lean"
    },
    ".lake.packages.mathlib.Mathlib.Data.Nat.Cast.Synonym": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Data/Nat/Cast/Synonym.lean"
    },
    ".lake.packages.mathlib.Mathlib.Data.Nat.Cast.Prod": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Data/Nat/Cast/Prod.lean"
    },
    ".lake.packages.mathlib.Mathlib.Data.Nat.Cast.Commute": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Data/Nat/Cast/Commute.lean"
    },
    ".lake.packages.mathlib.Mathlib.Data.Nat.Cast.Basic": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Data/Nat/Cast/Basic.lean"
    },
    ".lake.packages.mathlib.Mathlib.Data.Nat.Cast.Defs": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Data/Nat/Cast/Defs.lean"
    },
    ".lake.packages.mathlib.Mathlib.Data.Nat.Cast.Field": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Data/Nat/Cast/Field.lean"
    },
    ".lake.packages.mathlib.Mathlib.Data.Nat.Cast.NeZero": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Data/Nat/Cast/NeZero.lean"
    },
    ".lake.packages.mathlib.Mathlib.Data.Nat.Cast.Order.Ring": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Data/Nat/Cast/Order/Ring.lean"
    },
    ".lake.packages.mathlib.Mathlib.Data.Nat.Cast.Order.Basic": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Data/Nat/Cast/Order/Basic.lean"
    },
    ".lake.packages.mathlib.Mathlib.Data.Nat.Cast.Order.Field": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Data/Nat/Cast/Order/Field.lean"
    },
    ".lake.packages.mathlib.Mathlib.Data.Nat.Factorization.PrimePow": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Data/Nat/Factorization/PrimePow.lean"
    },
    ".lake.packages.mathlib.Mathlib.Data.Nat.Factorization.Root": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Data/Nat/Factorization/Root.lean"
    },
    ".lake.packages.mathlib.Mathlib.Data.Nat.Factorization.LCM": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Data/Nat/Factorization/LCM.lean"
    },
    ".lake.packages.mathlib.Mathlib.Data.Nat.Factorization.Basic": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Data/Nat/Factorization/Basic.lean"
    },
    ".lake.packages.mathlib.Mathlib.Data.Nat.Factorization.Defs": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Data/Nat/Factorization/Defs.lean"
    },
    ".lake.packages.mathlib.Mathlib.Data.Nat.Factorization.Induction": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Data/Nat/Factorization/Induction.lean"
    },
    ".lake.packages.mathlib.Mathlib.Data.Nat.Factorial.Basic": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Data/Nat/Factorial/Basic.lean"
    },
    ".lake.packages.mathlib.Mathlib.Data.Nat.Factorial.SuperFactorial": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Data/Nat/Factorial/SuperFactorial.lean"
    },
    ".lake.packages.mathlib.Mathlib.Data.Nat.Factorial.NatCast": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Data/Nat/Factorial/NatCast.lean"
    },
    ".lake.packages.mathlib.Mathlib.Data.Nat.Factorial.BigOperators": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Data/Nat/Factorial/BigOperators.lean"
    },
    ".lake.packages.mathlib.Mathlib.Data.Nat.Factorial.DoubleFactorial": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Data/Nat/Factorial/DoubleFactorial.lean"
    },
    ".lake.packages.mathlib.Mathlib.Data.Nat.Factorial.Cast": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Data/Nat/Factorial/Cast.lean"
    },
    ".lake.packages.mathlib.Mathlib.Data.Nat.GCD.Basic": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Data/Nat/GCD/Basic.lean"
    },
    ".lake.packages.mathlib.Mathlib.Data.Nat.GCD.BigOperators": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Data/Nat/GCD/BigOperators.lean"
    },
    ".lake.packages.mathlib.Mathlib.Data.Nat.Digits.Div": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Data/Nat/Digits/Div.lean"
    },
    ".lake.packages.mathlib.Mathlib.Data.Nat.Digits.Lemmas": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Data/Nat/Digits/Lemmas.lean"
    },
    ".lake.packages.mathlib.Mathlib.Data.Nat.Digits.Defs": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Data/Nat/Digits/Defs.lean"
    },
    ".lake.packages.mathlib.Mathlib.Data.Nat.Fib.Basic": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Data/Nat/Fib/Basic.lean"
    },
    ".lake.packages.mathlib.Mathlib.Data.Nat.Fib.Zeckendorf": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Data/Nat/Fib/Zeckendorf.lean"
    },
    ".lake.packages.mathlib.Mathlib.Data.Nat.Prime.Nth": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Data/Nat/Prime/Nth.lean"
    },
    ".lake.packages.mathlib.Mathlib.Data.Nat.Prime.Pow": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Data/Nat/Prime/Pow.lean"
    },
    ".lake.packages.mathlib.Mathlib.Data.Nat.Prime.Int": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Data/Nat/Prime/Int.lean"
    },
    ".lake.packages.mathlib.Mathlib.Data.Nat.Prime.Basic": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Data/Nat/Prime/Basic.lean"
    },
    ".lake.packages.mathlib.Mathlib.Data.Nat.Prime.Defs": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Data/Nat/Prime/Defs.lean"
    },
    ".lake.packages.mathlib.Mathlib.Data.Nat.Prime.Infinite": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Data/Nat/Prime/Infinite.lean"
    },
    ".lake.packages.mathlib.Mathlib.Data.Nat.Prime.Factorial": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Data/Nat/Prime/Factorial.lean"
    },
    ".lake.packages.mathlib.Mathlib.Data.Stream.Init": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Data/Stream/Init.lean"
    },
    ".lake.packages.mathlib.Mathlib.Data.Stream.Defs": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Data/Stream/Defs.lean"
    },
    ".lake.packages.mathlib.Mathlib.Data.FP.Basic": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Data/FP/Basic.lean"
    },
    ".lake.packages.mathlib.Mathlib.Data.Setoid.Basic": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Data/Setoid/Basic.lean"
    },
    ".lake.packages.mathlib.Mathlib.Data.Setoid.Partition": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Data/Setoid/Partition.lean"
    },
    ".lake.packages.mathlib.Mathlib.Data.Setoid.Partition.Card": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Data/Setoid/Partition/Card.lean"
    },
    ".lake.packages.mathlib.Mathlib.Data.ENat.Basic": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Data/ENat/Basic.lean"
    },
    ".lake.packages.mathlib.Mathlib.Data.ENat.Defs": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Data/ENat/Defs.lean"
    },
    ".lake.packages.mathlib.Mathlib.Data.ENat.BigOperators": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Data/ENat/BigOperators.lean"
    },
    ".lake.packages.mathlib.Mathlib.Data.ENat.Lattice": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Data/ENat/Lattice.lean"
    },
    ".lake.packages.mathlib.Mathlib.Data.Rat.Sqrt": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Data/Rat/Sqrt.lean"
    },
    ".lake.packages.mathlib.Mathlib.Data.Rat.Lemmas": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Data/Rat/Lemmas.lean"
    },
    ".lake.packages.mathlib.Mathlib.Data.Rat.Star": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Data/Rat/Star.lean"
    },
    ".lake.packages.mathlib.Mathlib.Data.Rat.Init": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Data/Rat/Init.lean"
    },
    ".lake.packages.mathlib.Mathlib.Data.Rat.Denumerable": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Data/Rat/Denumerable.lean"
    },
    ".lake.packages.mathlib.Mathlib.Data.Rat.Defs": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Data/Rat/Defs.lean"
    },
    ".lake.packages.mathlib.Mathlib.Data.Rat.Floor": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Data/Rat/Floor.lean"
    },
    ".lake.packages.mathlib.Mathlib.Data.Rat.BigOperators": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Data/Rat/BigOperators.lean"
    },
    ".lake.packages.mathlib.Mathlib.Data.Rat.Cardinal": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Data/Rat/Cardinal.lean"
    },
    ".lake.packages.mathlib.Mathlib.Data.Rat.Encodable": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Data/Rat/Encodable.lean"
    },
    ".lake.packages.mathlib.Mathlib.Data.Rat.Cast.Lemmas": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Data/Rat/Cast/Lemmas.lean"
    },
    ".lake.packages.mathlib.Mathlib.Data.Rat.Cast.Order": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Data/Rat/Cast/Order.lean"
    },
    ".lake.packages.mathlib.Mathlib.Data.Rat.Cast.Defs": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Data/Rat/Cast/Defs.lean"
    },
    ".lake.packages.mathlib.Mathlib.Data.Rat.Cast.CharZero": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Data/Rat/Cast/CharZero.lean"
    },
    ".lake.packages.mathlib.Mathlib.Data.Num.Bitwise": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Data/Num/Bitwise.lean"
    },
    ".lake.packages.mathlib.Mathlib.Data.Num.Lemmas": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Data/Num/Lemmas.lean"
    },
    ".lake.packages.mathlib.Mathlib.Data.Num.Basic": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Data/Num/Basic.lean"
    },
    ".lake.packages.mathlib.Mathlib.Data.Num.ZNum": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Data/Num/ZNum.lean"
    },
    ".lake.packages.mathlib.Mathlib.Data.Num.Prime": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Data/Num/Prime.lean"
    },
    ".lake.packages.mathlib.Mathlib.Data.Option.NAry": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Data/Option/NAry.lean"
    },
    ".lake.packages.mathlib.Mathlib.Data.Option.Basic": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Data/Option/Basic.lean"
    },
    ".lake.packages.mathlib.Mathlib.Data.Option.Defs": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Data/Option/Defs.lean"
    },
    ".lake.packages.mathlib.Mathlib.Data.FunLike.Fintype": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Data/FunLike/Fintype.lean"
    },
    ".lake.packages.mathlib.Mathlib.Data.FunLike.Basic": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Data/FunLike/Basic.lean"
    },
    ".lake.packages.mathlib.Mathlib.Data.FunLike.Embedding": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Data/FunLike/Embedding.lean"
    },
    ".lake.packages.mathlib.Mathlib.Data.FunLike.Equiv": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Data/FunLike/Equiv.lean"
    },
    ".lake.packages.mathlib.Mathlib.Data.Sigma.Interval": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Data/Sigma/Interval.lean"
    },
    ".lake.packages.mathlib.Mathlib.Data.Sigma.Lex": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Data/Sigma/Lex.lean"
    },
    ".lake.packages.mathlib.Mathlib.Data.Sigma.Order": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Data/Sigma/Order.lean"
    },
    ".lake.packages.mathlib.Mathlib.Data.Sigma.Basic": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Data/Sigma/Basic.lean"
    },
    ".lake.packages.mathlib.Mathlib.Data.Pi.Interval": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Data/Pi/Interval.lean"
    },
    ".lake.packages.mathlib.Mathlib.Data.Int.ModEq": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Data/Int/ModEq.lean"
    },
    ".lake.packages.mathlib.Mathlib.Data.Int.DivMod": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Data/Int/DivMod.lean"
    },
    ".lake.packages.mathlib.Mathlib.Data.Int.Bitwise": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Data/Int/Bitwise.lean"
    },
    ".lake.packages.mathlib.Mathlib.Data.Int.GCD": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Data/Int/GCD.lean"
    },
    ".lake.packages.mathlib.Mathlib.Data.Int.SuccPred": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Data/Int/SuccPred.lean"
    },
    ".lake.packages.mathlib.Mathlib.Data.Int.Sqrt": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Data/Int/Sqrt.lean"
    },
    ".lake.packages.mathlib.Mathlib.Data.Int.WithZero": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Data/Int/WithZero.lean"
    },
    ".lake.packages.mathlib.Mathlib.Data.Int.CardIntervalMod": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Data/Int/CardIntervalMod.lean"
    },
    ".lake.packages.mathlib.Mathlib.Data.Int.Lemmas": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Data/Int/Lemmas.lean"
    },
    ".lake.packages.mathlib.Mathlib.Data.Int.Star": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Data/Int/Star.lean"
    },
    ".lake.packages.mathlib.Mathlib.Data.Int.Interval": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Data/Int/Interval.lean"
    },
    ".lake.packages.mathlib.Mathlib.Data.Int.NatPrime": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Data/Int/NatPrime.lean"
    },
    ".lake.packages.mathlib.Mathlib.Data.Int.Init": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Data/Int/Init.lean"
    },
    ".lake.packages.mathlib.Mathlib.Data.Int.Basic": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Data/Int/Basic.lean"
    },
    ".lake.packages.mathlib.Mathlib.Data.Int.LeastGreatest": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Data/Int/LeastGreatest.lean"
    },
    ".lake.packages.mathlib.Mathlib.Data.Int.ConditionallyCompleteOrder": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Data/Int/ConditionallyCompleteOrder.lean"
    },
    ".lake.packages.mathlib.Mathlib.Data.Int.Notation": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Data/Int/Notation.lean"
    },
    ".lake.packages.mathlib.Mathlib.Data.Int.CharZero": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Data/Int/CharZero.lean"
    },
    ".lake.packages.mathlib.Mathlib.Data.Int.Range": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Data/Int/Range.lean"
    },
    ".lake.packages.mathlib.Mathlib.Data.Int.NatAbs": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Data/Int/NatAbs.lean"
    },
    ".lake.packages.mathlib.Mathlib.Data.Int.Log": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Data/Int/Log.lean"
    },
    ".lake.packages.mathlib.Mathlib.Data.Int.Associated": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Data/Int/Associated.lean"
    },
    ".lake.packages.mathlib.Mathlib.Data.Int.AbsoluteValue": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Data/Int/AbsoluteValue.lean"
    },
    ".lake.packages.mathlib.Mathlib.Data.Int.Order.Lemmas": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Data/Int/Order/Lemmas.lean"
    },
    ".lake.packages.mathlib.Mathlib.Data.Int.Order.Basic": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Data/Int/Order/Basic.lean"
    },
    ".lake.packages.mathlib.Mathlib.Data.Int.Order.Units": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Data/Int/Order/Units.lean"
    },
    ".lake.packages.mathlib.Mathlib.Data.Int.Cast.Lemmas": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Data/Int/Cast/Lemmas.lean"
    },
    ".lake.packages.mathlib.Mathlib.Data.Int.Cast.Prod": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Data/Int/Cast/Prod.lean"
    },
    ".lake.packages.mathlib.Mathlib.Data.Int.Cast.Pi": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Data/Int/Cast/Pi.lean"
    },
    ".lake.packages.mathlib.Mathlib.Data.Int.Cast.Basic": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Data/Int/Cast/Basic.lean"
    },
    ".lake.packages.mathlib.Mathlib.Data.Int.Cast.Defs": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Data/Int/Cast/Defs.lean"
    },
    ".lake.packages.mathlib.Mathlib.Data.Int.Cast.Field": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Data/Int/Cast/Field.lean"
    },
    ".lake.packages.mathlib.Mathlib.Data.FinEnum.Option": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Data/FinEnum/Option.lean"
    },
    ".lake.packages.mathlib.Mathlib.Data.Matroid.Sum": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Data/Matroid/Sum.lean"
    },
    ".lake.packages.mathlib.Mathlib.Data.Matroid.Init": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Data/Matroid/Init.lean"
    },
    ".lake.packages.mathlib.Mathlib.Data.Matroid.Circuit": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Data/Matroid/Circuit.lean"
    },
    ".lake.packages.mathlib.Mathlib.Data.Matroid.Closure": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Data/Matroid/Closure.lean"
    },
    ".lake.packages.mathlib.Mathlib.Data.Matroid.Map": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Data/Matroid/Map.lean"
    },
    ".lake.packages.mathlib.Mathlib.Data.Matroid.Basic": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Data/Matroid/Basic.lean"
    },
    ".lake.packages.mathlib.Mathlib.Data.Matroid.Constructions": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Data/Matroid/Constructions.lean"
    },
    ".lake.packages.mathlib.Mathlib.Data.Matroid.Loop": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Data/Matroid/Loop.lean"
    },
    ".lake.packages.mathlib.Mathlib.Data.Matroid.IndepAxioms": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Data/Matroid/IndepAxioms.lean"
    },
    ".lake.packages.mathlib.Mathlib.Data.Matroid.Dual": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Data/Matroid/Dual.lean"
    },
    ".lake.packages.mathlib.Mathlib.Data.Matroid.Rank.Finite": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Data/Matroid/Rank/Finite.lean"
    },
    ".lake.packages.mathlib.Mathlib.Data.Matroid.Rank.ENat": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Data/Matroid/Rank/ENat.lean"
    },
    ".lake.packages.mathlib.Mathlib.Data.Matroid.Rank.Cardinal": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Data/Matroid/Rank/Cardinal.lean"
    },
    ".lake.packages.mathlib.Mathlib.Data.Matroid.Minor.Order": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Data/Matroid/Minor/Order.lean"
    },
    ".lake.packages.mathlib.Mathlib.Data.Matroid.Minor.Restrict": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Data/Matroid/Minor/Restrict.lean"
    },
    ".lake.packages.mathlib.Mathlib.Data.Matroid.Minor.Contract": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Data/Matroid/Minor/Contract.lean"
    },
    ".lake.packages.mathlib.Mathlib.Data.Matroid.Minor.Delete": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Data/Matroid/Minor/Delete.lean"
    },
    ".lake.packages.mathlib.Mathlib.Data.Sum.Interval": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Data/Sum/Interval.lean"
    },
    ".lake.packages.mathlib.Mathlib.Data.Sum.Order": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Data/Sum/Order.lean"
    },
    ".lake.packages.mathlib.Mathlib.Data.Sum.Basic": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Data/Sum/Basic.lean"
    },
    ".lake.packages.mathlib.Mathlib.Data.Sum.Lattice": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Data/Sum/Lattice.lean"
    },
    ".lake.packages.mathlib.Mathlib.Data.Ordering.Lemmas": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Data/Ordering/Lemmas.lean"
    },
    ".lake.packages.mathlib.Mathlib.Data.Ordering.Basic": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Data/Ordering/Basic.lean"
    },
    ".lake.packages.mathlib.Mathlib.Data.List.Nodup": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Data/List/Nodup.lean"
    },
    ".lake.packages.mathlib.Mathlib.Data.List.ReduceOption": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Data/List/ReduceOption.lean"
    },
    ".lake.packages.mathlib.Mathlib.Data.List.Zip": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Data/List/Zip.lean"
    },
    ".lake.packages.mathlib.Mathlib.Data.List.SplitLengths": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Data/List/SplitLengths.lean"
    },
    ".lake.packages.mathlib.Mathlib.Data.List.Count": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Data/List/Count.lean"
    },
    ".lake.packages.mathlib.Mathlib.Data.List.Chain": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Data/List/Chain.lean"
    },
    ".lake.packages.mathlib.Mathlib.Data.List.Iterate": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Data/List/Iterate.lean"
    },
    ".lake.packages.mathlib.Mathlib.Data.List.Sections": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Data/List/Sections.lean"
    },
    ".lake.packages.mathlib.Mathlib.Data.List.Flatten": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Data/List/Flatten.lean"
    },
    ".lake.packages.mathlib.Mathlib.Data.List.Lemmas": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Data/List/Lemmas.lean"
    },
    ".lake.packages.mathlib.Mathlib.Data.List.Pairwise": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Data/List/Pairwise.lean"
    },
    ".lake.packages.mathlib.Mathlib.Data.List.MinMax": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Data/List/MinMax.lean"
    },
    ".lake.packages.mathlib.Mathlib.Data.List.InsertIdx": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Data/List/InsertIdx.lean"
    },
    ".lake.packages.mathlib.Mathlib.Data.List.Lex": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Data/List/Lex.lean"
    },
    ".lake.packages.mathlib.Mathlib.Data.List.TFAE": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Data/List/TFAE.lean"
    },
    ".lake.packages.mathlib.Mathlib.Data.List.Permutation": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Data/List/Permutation.lean"
    },
    ".lake.packages.mathlib.Mathlib.Data.List.Sigma": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Data/List/Sigma.lean"
    },
    ".lake.packages.mathlib.Mathlib.Data.List.Dedup": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Data/List/Dedup.lean"
    },
    ".lake.packages.mathlib.Mathlib.Data.List.Scan": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Data/List/Scan.lean"
    },
    ".lake.packages.mathlib.Mathlib.Data.List.FinRange": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Data/List/FinRange.lean"
    },
    ".lake.packages.mathlib.Mathlib.Data.List.Forall2": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Data/List/Forall2.lean"
    },
    ".lake.packages.mathlib.Mathlib.Data.List.NodupEquivFin": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Data/List/NodupEquivFin.lean"
    },
    ".lake.packages.mathlib.Mathlib.Data.List.Indexes": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Data/List/Indexes.lean"
    },
    ".lake.packages.mathlib.Mathlib.Data.List.Pi": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Data/List/Pi.lean"
    },
    ".lake.packages.mathlib.Mathlib.Data.List.Monad": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Data/List/Monad.lean"
    },
    ".lake.packages.mathlib.Mathlib.Data.List.Duplicate": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Data/List/Duplicate.lean"
    },
    ".lake.packages.mathlib.Mathlib.Data.List.Basic": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Data/List/Basic.lean"
    },
    ".lake.packages.mathlib.Mathlib.Data.List.Shortlex": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Data/List/Shortlex.lean"
    },
    ".lake.packages.mathlib.Mathlib.Data.List.Sort": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Data/List/Sort.lean"
    },
    ".lake.packages.mathlib.Mathlib.Data.List.DropRight": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Data/List/DropRight.lean"
    },
    ".lake.packages.mathlib.Mathlib.Data.List.Triplewise": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Data/List/Triplewise.lean"
    },
    ".lake.packages.mathlib.Mathlib.Data.List.Defs": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Data/List/Defs.lean"
    },
    ".lake.packages.mathlib.Mathlib.Data.List.GetD": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Data/List/GetD.lean"
    },
    ".lake.packages.mathlib.Mathlib.Data.List.Infix": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Data/List/Infix.lean"
    },
    ".lake.packages.mathlib.Mathlib.Data.List.ChainOfFn": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Data/List/ChainOfFn.lean"
    },
    ".lake.packages.mathlib.Mathlib.Data.List.ModifyLast": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Data/List/ModifyLast.lean"
    },
    ".lake.packages.mathlib.Mathlib.Data.List.Map2": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Data/List/Map2.lean"
    },
    ".lake.packages.mathlib.Mathlib.Data.List.ToFinsupp": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Data/List/ToFinsupp.lean"
    },
    ".lake.packages.mathlib.Mathlib.Data.List.SplitBy": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Data/List/SplitBy.lean"
    },
    ".lake.packages.mathlib.Mathlib.Data.List.AList": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Data/List/AList.lean"
    },
    ".lake.packages.mathlib.Mathlib.Data.List.Destutter": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Data/List/Destutter.lean"
    },
    ".lake.packages.mathlib.Mathlib.Data.List.TakeDrop": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Data/List/TakeDrop.lean"
    },
    ".lake.packages.mathlib.Mathlib.Data.List.Prime": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Data/List/Prime.lean"
    },
    ".lake.packages.mathlib.Mathlib.Data.List.Range": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Data/List/Range.lean"
    },
    ".lake.packages.mathlib.Mathlib.Data.List.TakeWhile": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Data/List/TakeWhile.lean"
    },
    ".lake.packages.mathlib.Mathlib.Data.List.OfFn": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Data/List/OfFn.lean"
    },
    ".lake.packages.mathlib.Mathlib.Data.List.Palindrome": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Data/List/Palindrome.lean"
    },
    ".lake.packages.mathlib.Mathlib.Data.List.Lookmap": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Data/List/Lookmap.lean"
    },
    ".lake.packages.mathlib.Mathlib.Data.List.Enum": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Data/List/Enum.lean"
    },
    ".lake.packages.mathlib.Mathlib.Data.List.Induction": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Data/List/Induction.lean"
    },
    ".lake.packages.mathlib.Mathlib.Data.List.SplitOn": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Data/List/SplitOn.lean"
    },
    ".lake.packages.mathlib.Mathlib.Data.List.InsertNth": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Data/List/InsertNth.lean"
    },
    ".lake.packages.mathlib.Mathlib.Data.List.Lattice": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Data/List/Lattice.lean"
    },
    ".lake.packages.mathlib.Mathlib.Data.List.ProdSigma": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Data/List/ProdSigma.lean"
    },
    ".lake.packages.mathlib.Mathlib.Data.List.NatAntidiagonal": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Data/List/NatAntidiagonal.lean"
    },
    ".lake.packages.mathlib.Mathlib.Data.List.Sublists": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Data/List/Sublists.lean"
    },
    ".lake.packages.mathlib.Mathlib.Data.List.Cycle": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Data/List/Cycle.lean"
    },
    ".lake.packages.mathlib.Mathlib.Data.List.Intervals": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Data/List/Intervals.lean"
    },
    ".lake.packages.mathlib.Mathlib.Data.List.Sym": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Data/List/Sym.lean"
    },
    ".lake.packages.mathlib.Mathlib.Data.List.Rotate": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Data/List/Rotate.lean"
    },
    ".lake.packages.mathlib.Mathlib.Data.List.Perm.Subperm": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Data/List/Perm/Subperm.lean"
    },
    ".lake.packages.mathlib.Mathlib.Data.List.Perm.Basic": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Data/List/Perm/Basic.lean"
    },
    ".lake.packages.mathlib.Mathlib.Data.List.Perm.Lattice": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Data/List/Perm/Lattice.lean"
    },
    ".lake.packages.mathlib.Mathlib.Data.List.EditDistance.Estimator": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Data/List/EditDistance/Estimator.lean"
    },
    ".lake.packages.mathlib.Mathlib.Data.List.EditDistance.Defs": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Data/List/EditDistance/Defs.lean"
    },
    ".lake.packages.mathlib.Mathlib.Data.List.EditDistance.Bounds": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Data/List/EditDistance/Bounds.lean"
    },
    ".lake.packages.mathlib.Mathlib.Data.Bool.Count": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Data/Bool/Count.lean"
    },
    ".lake.packages.mathlib.Mathlib.Data.Bool.AllAny": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Data/Bool/AllAny.lean"
    },
    ".lake.packages.mathlib.Mathlib.Data.Bool.Basic": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Data/Bool/Basic.lean"
    },
    ".lake.packages.mathlib.Mathlib.Data.Bool.Set": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Data/Bool/Set.lean"
    },
    ".lake.packages.mathlib.Mathlib.Data.ENNReal.Lemmas": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Data/ENNReal/Lemmas.lean"
    },
    ".lake.packages.mathlib.Mathlib.Data.ENNReal.Holder": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Data/ENNReal/Holder.lean"
    },
    ".lake.packages.mathlib.Mathlib.Data.ENNReal.Order": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Data/ENNReal/Order.lean"
    },
    ".lake.packages.mathlib.Mathlib.Data.ENNReal.Basic": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Data/ENNReal/Basic.lean"
    },
    ".lake.packages.mathlib.Mathlib.Data.ENNReal.Operations": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Data/ENNReal/Operations.lean"
    },
    ".lake.packages.mathlib.Mathlib.Data.ENNReal.Action": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Data/ENNReal/Action.lean"
    },
    ".lake.packages.mathlib.Mathlib.Data.ENNReal.BigOperators": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Data/ENNReal/BigOperators.lean"
    },
    ".lake.packages.mathlib.Mathlib.Data.ENNReal.Inv": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Data/ENNReal/Inv.lean"
    },
    ".lake.packages.mathlib.Mathlib.Data.ENNReal.Real": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Data/ENNReal/Real.lean"
    },
    ".lake.packages.mathlib.Mathlib.Data.SetLike.Fintype": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Data/SetLike/Fintype.lean"
    },
    ".lake.packages.mathlib.Mathlib.Data.SetLike.Basic": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Data/SetLike/Basic.lean"
    },
    ".lake.packages.mathlib.Mathlib.Data.String.Lemmas": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Data/String/Lemmas.lean"
    },
    ".lake.packages.mathlib.Mathlib.Data.String.Basic": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Data/String/Basic.lean"
    },
    ".lake.packages.mathlib.Mathlib.Data.String.Defs": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Data/String/Defs.lean"
    },
    ".lake.packages.mathlib.Mathlib.Data.Set.FunctorToTypes": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Data/Set/FunctorToTypes.lean"
    },
    ".lake.packages.mathlib.Mathlib.Data.Set.Equitable": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Data/Set/Equitable.lean"
    },
    ".lake.packages.mathlib.Mathlib.Data.Set.Enumerate": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Data/Set/Enumerate.lean"
    },
    ".lake.packages.mathlib.Mathlib.Data.Set.Card": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Data/Set/Card.lean"
    },
    ".lake.packages.mathlib.Mathlib.Data.Set.Opposite": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Data/Set/Opposite.lean"
    },
    ".lake.packages.mathlib.Mathlib.Data.Set.Subset": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Data/Set/Subset.lean"
    },
    ".lake.packages.mathlib.Mathlib.Data.Set.CoeSort": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Data/Set/CoeSort.lean"
    },
    ".lake.packages.mathlib.Mathlib.Data.Set.List": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Data/Set/List.lean"
    },
    ".lake.packages.mathlib.Mathlib.Data.Set.Sups": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Data/Set/Sups.lean"
    },
    ".lake.packages.mathlib.Mathlib.Data.Set.Piecewise": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Data/Set/Piecewise.lean"
    },
    ".lake.packages.mathlib.Mathlib.Data.Set.BoolIndicator": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Data/Set/BoolIndicator.lean"
    },
    ".lake.packages.mathlib.Mathlib.Data.Set.NAry": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Data/Set/NAry.lean"
    },
    ".lake.packages.mathlib.Mathlib.Data.Set.Accumulate": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Data/Set/Accumulate.lean"
    },
    ".lake.packages.mathlib.Mathlib.Data.Set.Sigma": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Data/Set/Sigma.lean"
    },
    ".lake.packages.mathlib.Mathlib.Data.Set.SMulAntidiagonal": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Data/Set/SMulAntidiagonal.lean"
    },
    ".lake.packages.mathlib.Mathlib.Data.Set.Prod": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Data/Set/Prod.lean"
    },
    ".lake.packages.mathlib.Mathlib.Data.Set.UnionLift": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Data/Set/UnionLift.lean"
    },
    ".lake.packages.mathlib.Mathlib.Data.Set.Order": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Data/Set/Order.lean"
    },
    ".lake.packages.mathlib.Mathlib.Data.Set.BooleanAlgebra": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Data/Set/BooleanAlgebra.lean"
    },
    ".lake.packages.mathlib.Mathlib.Data.Set.Insert": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Data/Set/Insert.lean"
    },
    ".lake.packages.mathlib.Mathlib.Data.Set.Restrict": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Data/Set/Restrict.lean"
    },
    ".lake.packages.mathlib.Mathlib.Data.Set.Image": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Data/Set/Image.lean"
    },
    ".lake.packages.mathlib.Mathlib.Data.Set.Basic": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Data/Set/Basic.lean"
    },
    ".lake.packages.mathlib.Mathlib.Data.Set.Disjoint": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Data/Set/Disjoint.lean"
    },
    ".lake.packages.mathlib.Mathlib.Data.Set.Operations": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Data/Set/Operations.lean"
    },
    ".lake.packages.mathlib.Mathlib.Data.Set.Constructions": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Data/Set/Constructions.lean"
    },
    ".lake.packages.mathlib.Mathlib.Data.Set.MemPartition": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Data/Set/MemPartition.lean"
    },
    ".lake.packages.mathlib.Mathlib.Data.Set.Notation": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Data/Set/Notation.lean"
    },
    ".lake.packages.mathlib.Mathlib.Data.Set.Defs": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Data/Set/Defs.lean"
    },
    ".lake.packages.mathlib.Mathlib.Data.Set.Semiring": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Data/Set/Semiring.lean"
    },
    ".lake.packages.mathlib.Mathlib.Data.Set.Function": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Data/Set/Function.lean"
    },
    ".lake.packages.mathlib.Mathlib.Data.Set.SymmDiff": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Data/Set/SymmDiff.lean"
    },
    ".lake.packages.mathlib.Mathlib.Data.Set.MulAntidiagonal": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Data/Set/MulAntidiagonal.lean"
    },
    ".lake.packages.mathlib.Mathlib.Data.Set.Functor": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Data/Set/Functor.lean"
    },
    ".lake.packages.mathlib.Mathlib.Data.Set.Monotone": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Data/Set/Monotone.lean"
    },
    ".lake.packages.mathlib.Mathlib.Data.Set.Subsingleton": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Data/Set/Subsingleton.lean"
    },
    ".lake.packages.mathlib.Mathlib.Data.Set.Lattice": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Data/Set/Lattice.lean"
    },
    ".lake.packages.mathlib.Mathlib.Data.Set.Inclusion": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Data/Set/Inclusion.lean"
    },
    ".lake.packages.mathlib.Mathlib.Data.Set.Countable": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Data/Set/Countable.lean"
    },
    ".lake.packages.mathlib.Mathlib.Data.Set.Card.Arithmetic": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Data/Set/Card/Arithmetic.lean"
    },
    ".lake.packages.mathlib.Mathlib.Data.Set.Finite.Lemmas": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Data/Set/Finite/Lemmas.lean"
    },
    ".lake.packages.mathlib.Mathlib.Data.Set.Finite.List": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Data/Set/Finite/List.lean"
    },
    ".lake.packages.mathlib.Mathlib.Data.Set.Finite.Monad": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Data/Set/Finite/Monad.lean"
    },
    ".lake.packages.mathlib.Mathlib.Data.Set.Finite.Basic": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Data/Set/Finite/Basic.lean"
    },
    ".lake.packages.mathlib.Mathlib.Data.Set.Finite.Powerset": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Data/Set/Finite/Powerset.lean"
    },
    ".lake.packages.mathlib.Mathlib.Data.Set.Finite.Range": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Data/Set/Finite/Range.lean"
    },
    ".lake.packages.mathlib.Mathlib.Data.Set.Finite.Lattice": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Data/Set/Finite/Lattice.lean"
    },
    ".lake.packages.mathlib.Mathlib.Data.Set.Lattice.Image": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Data/Set/Lattice/Image.lean"
    },
    ".lake.packages.mathlib.Mathlib.Data.Set.Pairwise.List": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Data/Set/Pairwise/List.lean"
    },
    ".lake.packages.mathlib.Mathlib.Data.Set.Pairwise.Basic": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Data/Set/Pairwise/Basic.lean"
    },
    ".lake.packages.mathlib.Mathlib.Data.Set.Pairwise.Lattice": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Data/Set/Pairwise/Lattice.lean"
    },
    ".lake.packages.mathlib.Mathlib.Data.Set.Pointwise.Support": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Data/Set/Pointwise/Support.lean"
    },
    ".lake.packages.mathlib.Mathlib.Data.PNat.Xgcd": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Data/PNat/Xgcd.lean"
    },
    ".lake.packages.mathlib.Mathlib.Data.PNat.Interval": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Data/PNat/Interval.lean"
    },
    ".lake.packages.mathlib.Mathlib.Data.PNat.Factors": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Data/PNat/Factors.lean"
    },
    ".lake.packages.mathlib.Mathlib.Data.PNat.Basic": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Data/PNat/Basic.lean"
    },
    ".lake.packages.mathlib.Mathlib.Data.PNat.Notation": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Data/PNat/Notation.lean"
    },
    ".lake.packages.mathlib.Mathlib.Data.PNat.Defs": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Data/PNat/Defs.lean"
    },
    ".lake.packages.mathlib.Mathlib.Data.PNat.Equiv": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Data/PNat/Equiv.lean"
    },
    ".lake.packages.mathlib.Mathlib.Data.PNat.Prime": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Data/PNat/Prime.lean"
    },
    ".lake.packages.mathlib.Mathlib.Data.PNat.Find": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Data/PNat/Find.lean"
    },
    ".lake.packages.mathlib.Mathlib.Data.Multiset.DershowitzManna": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Data/Multiset/DershowitzManna.lean"
    },
    ".lake.packages.mathlib.Mathlib.Data.Multiset.Sum": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Data/Multiset/Sum.lean"
    },
    ".lake.packages.mathlib.Mathlib.Data.Multiset.Fintype": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Data/Multiset/Fintype.lean"
    },
    ".lake.packages.mathlib.Mathlib.Data.Multiset.Count": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Data/Multiset/Count.lean"
    },
    ".lake.packages.mathlib.Mathlib.Data.Multiset.Sections": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Data/Multiset/Sections.lean"
    },
    ".lake.packages.mathlib.Mathlib.Data.Multiset.Pairwise": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Data/Multiset/Pairwise.lean"
    },
    ".lake.packages.mathlib.Mathlib.Data.Multiset.ZeroCons": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Data/Multiset/ZeroCons.lean"
    },
    ".lake.packages.mathlib.Mathlib.Data.Multiset.Bind": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Data/Multiset/Bind.lean"
    },
    ".lake.packages.mathlib.Mathlib.Data.Multiset.Interval": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Data/Multiset/Interval.lean"
    },
    ".lake.packages.mathlib.Mathlib.Data.Multiset.Antidiagonal": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Data/Multiset/Antidiagonal.lean"
    },
    ".lake.packages.mathlib.Mathlib.Data.Multiset.Dedup": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Data/Multiset/Dedup.lean"
    },
    ".lake.packages.mathlib.Mathlib.Data.Multiset.AddSub": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Data/Multiset/AddSub.lean"
    },
    ".lake.packages.mathlib.Mathlib.Data.Multiset.Pi": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Data/Multiset/Pi.lean"
    },
    ".lake.packages.mathlib.Mathlib.Data.Multiset.Basic": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Data/Multiset/Basic.lean"
    },
    ".lake.packages.mathlib.Mathlib.Data.Multiset.Sort": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Data/Multiset/Sort.lean"
    },
    ".lake.packages.mathlib.Mathlib.Data.Multiset.FinsetOps": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Data/Multiset/FinsetOps.lean"
    },
    ".lake.packages.mathlib.Mathlib.Data.Multiset.Powerset": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Data/Multiset/Powerset.lean"
    },
    ".lake.packages.mathlib.Mathlib.Data.Multiset.Replicate": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Data/Multiset/Replicate.lean"
    },
    ".lake.packages.mathlib.Mathlib.Data.Multiset.Filter": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Data/Multiset/Filter.lean"
    },
    ".lake.packages.mathlib.Mathlib.Data.Multiset.Defs": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Data/Multiset/Defs.lean"
    },
    ".lake.packages.mathlib.Mathlib.Data.Multiset.UnionInter": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Data/Multiset/UnionInter.lean"
    },
    ".lake.packages.mathlib.Mathlib.Data.Multiset.Fold": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Data/Multiset/Fold.lean"
    },
    ".lake.packages.mathlib.Mathlib.Data.Multiset.Functor": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Data/Multiset/Functor.lean"
    },
    ".lake.packages.mathlib.Mathlib.Data.Multiset.Range": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Data/Multiset/Range.lean"
    },
    ".lake.packages.mathlib.Mathlib.Data.Multiset.OrderedMonoid": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Data/Multiset/OrderedMonoid.lean"
    },
    ".lake.packages.mathlib.Mathlib.Data.Multiset.Lattice": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Data/Multiset/Lattice.lean"
    },
    ".lake.packages.mathlib.Mathlib.Data.Multiset.MapFold": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Data/Multiset/MapFold.lean"
    },
    ".lake.packages.mathlib.Mathlib.Data.Multiset.NatAntidiagonal": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Data/Multiset/NatAntidiagonal.lean"
    },
    ".lake.packages.mathlib.Mathlib.Data.Multiset.Sym": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Data/Multiset/Sym.lean"
    },
    ".lake.packages.mathlib.Mathlib.Data.Vector.Zip": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Data/Vector/Zip.lean"
    },
    ".lake.packages.mathlib.Mathlib.Data.Vector.Snoc": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Data/Vector/Snoc.lean"
    },
    ".lake.packages.mathlib.Mathlib.Data.Vector.Basic": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Data/Vector/Basic.lean"
    },
    ".lake.packages.mathlib.Mathlib.Data.Vector.Defs": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Data/Vector/Defs.lean"
    },
    ".lake.packages.mathlib.Mathlib.Data.Vector.Mem": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Data/Vector/Mem.lean"
    },
    ".lake.packages.mathlib.Mathlib.Data.Vector.MapLemmas": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Data/Vector/MapLemmas.lean"
    },
    ".lake.packages.mathlib.Mathlib.Data.Sign.Basic": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Data/Sign/Basic.lean"
    },
    ".lake.packages.mathlib.Mathlib.Data.Sign.Defs": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Data/Sign/Defs.lean"
    },
    ".lake.packages.mathlib.Mathlib.Data.Matrix.Kronecker": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Data/Matrix/Kronecker.lean"
    },
    ".lake.packages.mathlib.Mathlib.Data.Matrix.DoublyStochastic": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Data/Matrix/DoublyStochastic.lean"
    },
    ".lake.packages.mathlib.Mathlib.Data.Matrix.ConjTranspose": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Data/Matrix/ConjTranspose.lean"
    },
    ".lake.packages.mathlib.Mathlib.Data.Matrix.Auto": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Data/Matrix/Auto.lean"
    },
    ".lake.packages.mathlib.Mathlib.Data.Matrix.Bilinear": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Data/Matrix/Bilinear.lean"
    },
    ".lake.packages.mathlib.Mathlib.Data.Matrix.RowCol": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Data/Matrix/RowCol.lean"
    },
    ".lake.packages.mathlib.Mathlib.Data.Matrix.ColumnRowPartitioned": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Data/Matrix/ColumnRowPartitioned.lean"
    },
    ".lake.packages.mathlib.Mathlib.Data.Matrix.Diagonal": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Data/Matrix/Diagonal.lean"
    },
    ".lake.packages.mathlib.Mathlib.Data.Matrix.Hadamard": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Data/Matrix/Hadamard.lean"
    },
    ".lake.packages.mathlib.Mathlib.Data.Matrix.Reflection": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Data/Matrix/Reflection.lean"
    },
    ".lake.packages.mathlib.Mathlib.Data.Matrix.Rank": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Data/Matrix/Rank.lean"
    },
    ".lake.packages.mathlib.Mathlib.Data.Matrix.Composition": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Data/Matrix/Composition.lean"
    },
    ".lake.packages.mathlib.Mathlib.Data.Matrix.Invertible": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Data/Matrix/Invertible.lean"
    },
    ".lake.packages.mathlib.Mathlib.Data.Matrix.Mul": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Data/Matrix/Mul.lean"
    },
    ".lake.packages.mathlib.Mathlib.Data.Matrix.CharP": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Data/Matrix/CharP.lean"
    },
    ".lake.packages.mathlib.Mathlib.Data.Matrix.Basic": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Data/Matrix/Basic.lean"
    },
    ".lake.packages.mathlib.Mathlib.Data.Matrix.DMatrix": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Data/Matrix/DMatrix.lean"
    },
    ".lake.packages.mathlib.Mathlib.Data.Matrix.Notation": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Data/Matrix/Notation.lean"
    },
    ".lake.packages.mathlib.Mathlib.Data.Matrix.Defs": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Data/Matrix/Defs.lean"
    },
    ".lake.packages.mathlib.Mathlib.Data.Matrix.Block": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Data/Matrix/Block.lean"
    },
    ".lake.packages.mathlib.Mathlib.Data.Matrix.Vec": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Data/Matrix/Vec.lean"
    },
    ".lake.packages.mathlib.Mathlib.Data.Matrix.Basis": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Data/Matrix/Basis.lean"
    },
    ".lake.packages.mathlib.Mathlib.Data.Matrix.PEquiv": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Data/Matrix/PEquiv.lean"
    },
    ".lake.packages.mathlib.Mathlib.Data.Matrix.DualNumber": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Data/Matrix/DualNumber.lean"
    },
    ".lake.packages.mathlib.Mathlib.Data.PSigma.Order": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Data/PSigma/Order.lean"
    },
    ".lake.packages.mathlib.Mathlib.Data.Countable.Basic": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Data/Countable/Basic.lean"
    },
    ".lake.packages.mathlib.Mathlib.Data.Countable.Defs": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Data/Countable/Defs.lean"
    },
    ".lake.packages.mathlib.Mathlib.Data.Countable.Small": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Data/Countable/Small.lean"
    },
    ".lake.packages.mathlib.Mathlib.Data.EReal.Basic": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Data/EReal/Basic.lean"
    },
    ".lake.packages.mathlib.Mathlib.Data.EReal.Operations": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Data/EReal/Operations.lean"
    },
    ".lake.packages.mathlib.Mathlib.Data.EReal.Inv": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Data/EReal/Inv.lean"
    },
    ".lake.packages.mathlib.Mathlib.Data.W.Basic": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Data/W/Basic.lean"
    },
    ".lake.packages.mathlib.Mathlib.Data.W.Constructions": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Data/W/Constructions.lean"
    },
    ".lake.packages.mathlib.Mathlib.Data.W.Cardinal": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Data/W/Cardinal.lean"
    },
    ".lake.packages.mathlib.Mathlib.Control.Applicative": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Control/Applicative.lean"
    },
    ".lake.packages.mathlib.Mathlib.Control.LawfulFix": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Control/LawfulFix.lean"
    },
    ".lake.packages.mathlib.Mathlib.Control.Bifunctor": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Control/Bifunctor.lean"
    },
    ".lake.packages.mathlib.Mathlib.Control.Basic": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Control/Basic.lean"
    },
    ".lake.packages.mathlib.Mathlib.Control.ULift": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Control/ULift.lean"
    },
    ".lake.packages.mathlib.Mathlib.Control.Lawful": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Control/Lawful.lean"
    },
    ".lake.packages.mathlib.Mathlib.Control.ULiftable": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Control/ULiftable.lean"
    },
    ".lake.packages.mathlib.Mathlib.Control.Fold": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Control/Fold.lean"
    },
    ".lake.packages.mathlib.Mathlib.Control.Combinators": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Control/Combinators.lean"
    },
    ".lake.packages.mathlib.Mathlib.Control.Functor": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Control/Functor.lean"
    },
    ".lake.packages.mathlib.Mathlib.Control.Fix": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Control/Fix.lean"
    },
    ".lake.packages.mathlib.Mathlib.Control.EquivFunctor": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Control/EquivFunctor.lean"
    },
    ".lake.packages.mathlib.Mathlib.Control.Random": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Control/Random.lean"
    },
    ".lake.packages.mathlib.Mathlib.Control.Functor.Multivariate": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Control/Functor/Multivariate.lean"
    },
    ".lake.packages.mathlib.Mathlib.Control.Traversable.Instances": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Control/Traversable/Instances.lean"
    },
    ".lake.packages.mathlib.Mathlib.Control.Traversable.Lemmas": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Control/Traversable/Lemmas.lean"
    },
    ".lake.packages.mathlib.Mathlib.Control.Traversable.Basic": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Control/Traversable/Basic.lean"
    },
    ".lake.packages.mathlib.Mathlib.Control.Traversable.Equiv": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Control/Traversable/Equiv.lean"
    },
    ".lake.packages.mathlib.Mathlib.Control.Bitraversable.Instances": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Control/Bitraversable/Instances.lean"
    },
    ".lake.packages.mathlib.Mathlib.Control.Bitraversable.Lemmas": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Control/Bitraversable/Lemmas.lean"
    },
    ".lake.packages.mathlib.Mathlib.Control.Bitraversable.Basic": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Control/Bitraversable/Basic.lean"
    },
    ".lake.packages.mathlib.Mathlib.Control.Monad.Writer": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Control/Monad/Writer.lean"
    },
    ".lake.packages.mathlib.Mathlib.Control.Monad.Basic": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Control/Monad/Basic.lean"
    },
    ".lake.packages.mathlib.Mathlib.Control.Monad.Cont": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Control/Monad/Cont.lean"
    },
    ".lake.packages.mathlib.Mathlib.Control.EquivFunctor.Instances": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Control/EquivFunctor/Instances.lean"
    },
    ".lake.packages.mathlib.Mathlib.Computability.PostTuringMachine": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Computability/PostTuringMachine.lean"
    },
    ".lake.packages.mathlib.Mathlib.Computability.TMComputable": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Computability/TMComputable.lean"
    },
    ".lake.packages.mathlib.Mathlib.Computability.Primrec": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Computability/Primrec.lean"
    },
    ".lake.packages.mathlib.Mathlib.Computability.ContextFreeGrammar": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Computability/ContextFreeGrammar.lean"
    },
    ".lake.packages.mathlib.Mathlib.Computability.NFA": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Computability/NFA.lean"
    },
    ".lake.packages.mathlib.Mathlib.Computability.Partrec": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Computability/Partrec.lean"
    },
    ".lake.packages.mathlib.Mathlib.Computability.TMConfig": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Computability/TMConfig.lean"
    },
    ".lake.packages.mathlib.Mathlib.Computability.Ackermann": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Computability/Ackermann.lean"
    },
    ".lake.packages.mathlib.Mathlib.Computability.Tape": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Computability/Tape.lean"
    },
    ".lake.packages.mathlib.Mathlib.Computability.TuringDegree": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Computability/TuringDegree.lean"
    },
    ".lake.packages.mathlib.Mathlib.Computability.RegularExpressions": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Computability/RegularExpressions.lean"
    },
    ".lake.packages.mathlib.Mathlib.Computability.Halting": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Computability/Halting.lean"
    },
    ".lake.packages.mathlib.Mathlib.Computability.DFA": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Computability/DFA.lean"
    },
    ".lake.packages.mathlib.Mathlib.Computability.EpsilonNFA": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Computability/EpsilonNFA.lean"
    },
    ".lake.packages.mathlib.Mathlib.Computability.TMToPartrec": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Computability/TMToPartrec.lean"
    },
    ".lake.packages.mathlib.Mathlib.Computability.Encoding": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Computability/Encoding.lean"
    },
    ".lake.packages.mathlib.Mathlib.Computability.Language": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Computability/Language.lean"
    },
    ".lake.packages.mathlib.Mathlib.Computability.PartrecCode": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Computability/PartrecCode.lean"
    },
    ".lake.packages.mathlib.Mathlib.Computability.MyhillNerode": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Computability/MyhillNerode.lean"
    },
    ".lake.packages.mathlib.Mathlib.Computability.Reduce": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Computability/Reduce.lean"
    },
    ".lake.packages.mathlib.Mathlib.Computability.TuringMachine": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Computability/TuringMachine.lean"
    },
    ".lake.packages.mathlib.Mathlib.Computability.AkraBazzi.SumTransform": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Computability/AkraBazzi/SumTransform.lean"
    },
    ".lake.packages.mathlib.Mathlib.Computability.AkraBazzi.GrowsPolynomially": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Computability/AkraBazzi/GrowsPolynomially.lean"
    },
    ".lake.packages.mathlib.Mathlib.Computability.AkraBazzi.AkraBazzi": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Computability/AkraBazzi/AkraBazzi.lean"
    },
    ".lake.packages.mathlib.Mathlib.Algebra.ModEq": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Algebra/ModEq.lean"
    },
    ".lake.packages.mathlib.Mathlib.Algebra.QuaternionBasis": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Algebra/QuaternionBasis.lean"
    },
    ".lake.packages.mathlib.Mathlib.Algebra.LinearRecurrence": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Algebra/LinearRecurrence.lean"
    },
    ".lake.packages.mathlib.Mathlib.Algebra.GradedMulAction": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Algebra/GradedMulAction.lean"
    },
    ".lake.packages.mathlib.Mathlib.Algebra.GradedMonoid": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Algebra/GradedMonoid.lean"
    },
    ".lake.packages.mathlib.Mathlib.Algebra.QuadraticDiscriminant": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Algebra/QuadraticDiscriminant.lean"
    },
    ".lake.packages.mathlib.Mathlib.Algebra.AlgebraicCard": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Algebra/AlgebraicCard.lean"
    },
    ".lake.packages.mathlib.Mathlib.Algebra.IsPrimePow": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Algebra/IsPrimePow.lean"
    },
    ".lake.packages.mathlib.Mathlib.Algebra.HierarchyDesign": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Algebra/HierarchyDesign.lean"
    },
    ".lake.packages.mathlib.Mathlib.Algebra.CubicDiscriminant": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Algebra/CubicDiscriminant.lean"
    },
    ".lake.packages.mathlib.Mathlib.Algebra.FiveLemma": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Algebra/FiveLemma.lean"
    },
    ".lake.packages.mathlib.Mathlib.Algebra.Quotient": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Algebra/Quotient.lean"
    },
    ".lake.packages.mathlib.Mathlib.Algebra.PEmptyInstances": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Algebra/PEmptyInstances.lean"
    },
    ".lake.packages.mathlib.Mathlib.Algebra.Notation": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Algebra/Notation.lean"
    },
    ".lake.packages.mathlib.Mathlib.Algebra.Symmetrized": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Algebra/Symmetrized.lean"
    },
    ".lake.packages.mathlib.Mathlib.Algebra.Quaternion": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Algebra/Quaternion.lean"
    },
    ".lake.packages.mathlib.Mathlib.Algebra.RingQuot": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Algebra/RingQuot.lean"
    },
    ".lake.packages.mathlib.Mathlib.Algebra.GeomSum": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Algebra/GeomSum.lean"
    },
    ".lake.packages.mathlib.Mathlib.Algebra.Exact": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Algebra/Exact.lean"
    },
    ".lake.packages.mathlib.Mathlib.Algebra.FreeNonUnitalNonAssocAlgebra": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Algebra/FreeNonUnitalNonAssocAlgebra.lean"
    },
    ".lake.packages.mathlib.Mathlib.Algebra.Opposites": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Algebra/Opposites.lean"
    },
    ".lake.packages.mathlib.Mathlib.Algebra.DualQuaternion": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Algebra/DualQuaternion.lean"
    },
    ".lake.packages.mathlib.Mathlib.Algebra.Quandle": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Algebra/Quandle.lean"
    },
    ".lake.packages.mathlib.Mathlib.Algebra.Expr": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Algebra/Expr.lean"
    },
    ".lake.packages.mathlib.Mathlib.Algebra.NeZero": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Algebra/NeZero.lean"
    },
    ".lake.packages.mathlib.Mathlib.Algebra.TrivSqZeroExt": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Algebra/TrivSqZeroExt.lean"
    },
    ".lake.packages.mathlib.Mathlib.Algebra.Free": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Algebra/Free.lean"
    },
    ".lake.packages.mathlib.Mathlib.Algebra.DualNumber": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Algebra/DualNumber.lean"
    },
    ".lake.packages.mathlib.Mathlib.Algebra.FreeAlgebra": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Algebra/FreeAlgebra.lean"
    },
    ".lake.packages.mathlib.Mathlib.Algebra.CharZero.Quotient": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Algebra/CharZero/Quotient.lean"
    },
    ".lake.packages.mathlib.Mathlib.Algebra.CharZero.Defs": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Algebra/CharZero/Defs.lean"
    },
    ".lake.packages.mathlib.Mathlib.Algebra.CharZero.Infinite": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Algebra/CharZero/Infinite.lean"
    },
    ".lake.packages.mathlib.Mathlib.Algebra.AddTorsor.Basic": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Algebra/AddTorsor/Basic.lean"
    },
    ".lake.packages.mathlib.Mathlib.Algebra.AddTorsor.Defs": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Algebra/AddTorsor/Defs.lean"
    },
    ".lake.packages.mathlib.Mathlib.Algebra.Order.CompleteField": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Algebra/Order/CompleteField.lean"
    },
    ".lake.packages.mathlib.Mathlib.Algebra.Order.Sum": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Algebra/Order/Sum.lean"
    },
    ".lake.packages.mathlib.Mathlib.Algebra.Order.SuccPred": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Algebra/Order/SuccPred.lean"
    },
    ".lake.packages.mathlib.Mathlib.Algebra.Order.PUnit": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Algebra/Order/PUnit.lean"
    },
    ".lake.packages.mathlib.Mathlib.Algebra.Order.Disjointed": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Algebra/Order/Disjointed.lean"
    },
    ".lake.packages.mathlib.Mathlib.Algebra.Order.AddTorsor": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Algebra/Order/AddTorsor.lean"
    },
    ".lake.packages.mathlib.Mathlib.Algebra.Order.Round": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Algebra/Order/Round.lean"
    },
    ".lake.packages.mathlib.Mathlib.Algebra.Order.Monovary": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Algebra/Order/Monovary.lean"
    },
    ".lake.packages.mathlib.Mathlib.Algebra.Order.ToIntervalMod": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Algebra/Order/ToIntervalMod.lean"
    },
    ".lake.packages.mathlib.Mathlib.Algebra.Order.Invertible": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Algebra/Order/Invertible.lean"
    },
    ".lake.packages.mathlib.Mathlib.Algebra.Order.Pi": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Algebra/Order/Pi.lean"
    },
    ".lake.packages.mathlib.Mathlib.Algebra.Order.PartialSups": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Algebra/Order/PartialSups.lean"
    },
    ".lake.packages.mathlib.Mathlib.Algebra.Order.UpperLower": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Algebra/Order/UpperLower.lean"
    },
    ".lake.packages.mathlib.Mathlib.Algebra.Order.Rearrangement": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Algebra/Order/Rearrangement.lean"
    },
    ".lake.packages.mathlib.Mathlib.Algebra.Order.ZeroLEOne": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Algebra/Order/ZeroLEOne.lean"
    },
    ".lake.packages.mathlib.Mathlib.Algebra.Order.Quantale": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Algebra/Order/Quantale.lean"
    },
    ".lake.packages.mathlib.Mathlib.Algebra.Order.AddGroupWithTop": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Algebra/Order/AddGroupWithTop.lean"
    },
    ".lake.packages.mathlib.Mathlib.Algebra.Order.Floor": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Algebra/Order/Floor.lean"
    },
    ".lake.packages.mathlib.Mathlib.Algebra.Order.Chebyshev": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Algebra/Order/Chebyshev.lean"
    },
    ".lake.packages.mathlib.Mathlib.Algebra.Order.Algebra": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Algebra/Order/Algebra.lean"
    },
    ".lake.packages.mathlib.Mathlib.Algebra.Order.Kleene": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Algebra/Order/Kleene.lean"
    },
    ".lake.packages.mathlib.Mathlib.Algebra.Order.Nonneg.Module": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Algebra/Order/Nonneg/Module.lean"
    },
    ".lake.packages.mathlib.Mathlib.Algebra.Order.Nonneg.Ring": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Algebra/Order/Nonneg/Ring.lean"
    },
    ".lake.packages.mathlib.Mathlib.Algebra.Order.Nonneg.Basic": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Algebra/Order/Nonneg/Basic.lean"
    },
    ".lake.packages.mathlib.Mathlib.Algebra.Order.Nonneg.Floor": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Algebra/Order/Nonneg/Floor.lean"
    },
    ".lake.packages.mathlib.Mathlib.Algebra.Order.Nonneg.Field": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Algebra/Order/Nonneg/Field.lean"
    },
    ".lake.packages.mathlib.Mathlib.Algebra.Order.Nonneg.Lattice": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Algebra/Order/Nonneg/Lattice.lean"
    },
    ".lake.packages.mathlib.Mathlib.Algebra.Order.Positive.Ring": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Algebra/Order/Positive/Ring.lean"
    },
    ".lake.packages.mathlib.Mathlib.Algebra.Order.Positive.Field": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Algebra/Order/Positive/Field.lean"
    },
    ".lake.packages.mathlib.Mathlib.Algebra.Order.Monoid.WithTop": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Algebra/Order/Monoid/WithTop.lean"
    },
    ".lake.packages.mathlib.Mathlib.Algebra.Order.Monoid.OrderDual": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Algebra/Order/Monoid/OrderDual.lean"
    },
    ".lake.packages.mathlib.Mathlib.Algebra.Order.Monoid.ToMulBot": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Algebra/Order/Monoid/ToMulBot.lean"
    },
    ".lake.packages.mathlib.Mathlib.Algebra.Order.Monoid.Lex": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Algebra/Order/Monoid/Lex.lean"
    },
    ".lake.packages.mathlib.Mathlib.Algebra.Order.Monoid.Prod": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Algebra/Order/Monoid/Prod.lean"
    },
    ".lake.packages.mathlib.Mathlib.Algebra.Order.Monoid.Basic": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Algebra/Order/Monoid/Basic.lean"
    },
    ".lake.packages.mathlib.Mathlib.Algebra.Order.Monoid.NatCast": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Algebra/Order/Monoid/NatCast.lean"
    },
    ".lake.packages.mathlib.Mathlib.Algebra.Order.Monoid.Defs": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Algebra/Order/Monoid/Defs.lean"
    },
    ".lake.packages.mathlib.Mathlib.Algebra.Order.Monoid.Submonoid": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Algebra/Order/Monoid/Submonoid.lean"
    },
    ".lake.packages.mathlib.Mathlib.Algebra.Order.Monoid.LocallyFiniteOrder": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Algebra/Order/Monoid/LocallyFiniteOrder.lean"
    },
    ".lake.packages.mathlib.Mathlib.Algebra.Order.Monoid.TypeTags": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Algebra/Order/Monoid/TypeTags.lean"
    },
    ".lake.packages.mathlib.Mathlib.Algebra.Order.Monoid.Units": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Algebra/Order/Monoid/Units.lean"
    },
    ".lake.packages.mathlib.Mathlib.Algebra.Order.Monoid.Associated": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Algebra/Order/Monoid/Associated.lean"
    },
    ".lake.packages.mathlib.Mathlib.Algebra.Order.Monoid.Canonical.Basic": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Algebra/Order/Monoid/Canonical/Basic.lean"
    },
    ".lake.packages.mathlib.Mathlib.Algebra.Order.Monoid.Canonical.Defs": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Algebra/Order/Monoid/Canonical/Defs.lean"
    },
    ".lake.packages.mathlib.Mathlib.Algebra.Order.Monoid.Unbundled.WithTop": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Algebra/Order/Monoid/Unbundled/WithTop.lean"
    },
    ".lake.packages.mathlib.Mathlib.Algebra.Order.Monoid.Unbundled.Pow": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Algebra/Order/Monoid/Unbundled/Pow.lean"
    },
    ".lake.packages.mathlib.Mathlib.Algebra.Order.Monoid.Unbundled.OrderDual": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Algebra/Order/Monoid/Unbundled/OrderDual.lean"
    },
    ".lake.packages.mathlib.Mathlib.Algebra.Order.Monoid.Unbundled.MinMax": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Algebra/Order/Monoid/Unbundled/MinMax.lean"
    },
    ".lake.packages.mathlib.Mathlib.Algebra.Order.Monoid.Unbundled.Basic": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Algebra/Order/Monoid/Unbundled/Basic.lean"
    },
    ".lake.packages.mathlib.Mathlib.Algebra.Order.Monoid.Unbundled.Defs": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Algebra/Order/Monoid/Unbundled/Defs.lean"
    },
    ".lake.packages.mathlib.Mathlib.Algebra.Order.Monoid.Unbundled.TypeTags": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Algebra/Order/Monoid/Unbundled/TypeTags.lean"
    },
    ".lake.packages.mathlib.Mathlib.Algebra.Order.Monoid.Unbundled.ExistsOfLE": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Algebra/Order/Monoid/Unbundled/ExistsOfLE.lean"
    },
    ".lake.packages.mathlib.Mathlib.Algebra.Order.Archimedean.Class": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Algebra/Order/Archimedean/Class.lean"
    },
    ".lake.packages.mathlib.Mathlib.Algebra.Order.Archimedean.Basic": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Algebra/Order/Archimedean/Basic.lean"
    },
    ".lake.packages.mathlib.Mathlib.Algebra.Order.Archimedean.Submonoid": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Algebra/Order/Archimedean/Submonoid.lean"
    },
    ".lake.packages.mathlib.Mathlib.Algebra.Order.Archimedean.IndicatorCard": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Algebra/Order/Archimedean/IndicatorCard.lean"
    },
    ".lake.packages.mathlib.Mathlib.Algebra.Order.Archimedean.Hom": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Algebra/Order/Archimedean/Hom.lean"
    },
    ".lake.packages.mathlib.Mathlib.Algebra.Order.Hom.Monoid": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Algebra/Order/Hom/Monoid.lean"
    },
    ".lake.packages.mathlib.Mathlib.Algebra.Order.Hom.Ring": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Algebra/Order/Hom/Ring.lean"
    },
    ".lake.packages.mathlib.Mathlib.Algebra.Order.Hom.MonoidWithZero": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Algebra/Order/Hom/MonoidWithZero.lean"
    },
    ".lake.packages.mathlib.Mathlib.Algebra.Order.Hom.Basic": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Algebra/Order/Hom/Basic.lean"
    },
    ".lake.packages.mathlib.Mathlib.Algebra.Order.Hom.TypeTags": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Algebra/Order/Hom/TypeTags.lean"
    },
    ".lake.packages.mathlib.Mathlib.Algebra.Order.SuccPred.WithBot": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Algebra/Order/SuccPred/WithBot.lean"
    },
    ".lake.packages.mathlib.Mathlib.Algebra.Order.SuccPred.TypeTags": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Algebra/Order/SuccPred/TypeTags.lean"
    },
    ".lake.packages.mathlib.Mathlib.Algebra.Order.Group.OrderIso": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Algebra/Order/Group/OrderIso.lean"
    },
    ".lake.packages.mathlib.Mathlib.Algebra.Order.Group.DenselyOrdered": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Algebra/Order/Group/DenselyOrdered.lean"
    },
    ".lake.packages.mathlib.Mathlib.Algebra.Order.Group.Synonym": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Algebra/Order/Group/Synonym.lean"
    },
    ".lake.packages.mathlib.Mathlib.Algebra.Order.Group.Instances": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Algebra/Order/Group/Instances.lean"
    },
    ".lake.packages.mathlib.Mathlib.Algebra.Order.Group.Opposite": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Algebra/Order/Group/Opposite.lean"
    },
    ".lake.packages.mathlib.Mathlib.Algebra.Order.Group.Int": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Algebra/Order/Group/Int.lean"
    },
    ".lake.packages.mathlib.Mathlib.Algebra.Order.Group.Indicator": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Algebra/Order/Group/Indicator.lean"
    },
    ".lake.packages.mathlib.Mathlib.Algebra.Order.Group.MinMax": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Algebra/Order/Group/MinMax.lean"
    },
    ".lake.packages.mathlib.Mathlib.Algebra.Order.Group.Cyclic": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Algebra/Order/Group/Cyclic.lean"
    },
    ".lake.packages.mathlib.Mathlib.Algebra.Order.Group.Prod": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Algebra/Order/Group/Prod.lean"
    },
    ".lake.packages.mathlib.Mathlib.Algebra.Order.Group.Nat": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Algebra/Order/Group/Nat.lean"
    },
    ".lake.packages.mathlib.Mathlib.Algebra.Order.Group.Cone": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Algebra/Order/Group/Cone.lean"
    },
    ".lake.packages.mathlib.Mathlib.Algebra.Order.Group.Finset": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Algebra/Order/Group/Finset.lean"
    },
    ".lake.packages.mathlib.Mathlib.Algebra.Order.Group.Basic": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Algebra/Order/Group/Basic.lean"
    },
    ".lake.packages.mathlib.Mathlib.Algebra.Order.Group.Multiset": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Algebra/Order/Group/Multiset.lean"
    },
    ".lake.packages.mathlib.Mathlib.Algebra.Order.Group.End": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Algebra/Order/Group/End.lean"
    },
    ".lake.packages.mathlib.Mathlib.Algebra.Order.Group.InjSurj": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Algebra/Order/Group/InjSurj.lean"
    },
    ".lake.packages.mathlib.Mathlib.Algebra.Order.Group.Defs": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Algebra/Order/Group/Defs.lean"
    },
    ".lake.packages.mathlib.Mathlib.Algebra.Order.Group.Action": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Algebra/Order/Group/Action.lean"
    },
    ".lake.packages.mathlib.Mathlib.Algebra.Order.Group.TypeTags": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Algebra/Order/Group/TypeTags.lean"
    },
    ".lake.packages.mathlib.Mathlib.Algebra.Order.Group.PosPart": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Algebra/Order/Group/PosPart.lean"
    },
    ".lake.packages.mathlib.Mathlib.Algebra.Order.Group.CompleteLattice": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Algebra/Order/Group/CompleteLattice.lean"
    },
    ".lake.packages.mathlib.Mathlib.Algebra.Order.Group.Abs": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Algebra/Order/Group/Abs.lean"
    },
    ".lake.packages.mathlib.Mathlib.Algebra.Order.Group.Lattice": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Algebra/Order/Group/Lattice.lean"
    },
    ".lake.packages.mathlib.Mathlib.Algebra.Order.Group.Units": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Algebra/Order/Group/Units.lean"
    },
    ".lake.packages.mathlib.Mathlib.Algebra.Order.Group.Bounds": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Algebra/Order/Group/Bounds.lean"
    },
    ".lake.packages.mathlib.Mathlib.Algebra.Order.Group.PiLex": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Algebra/Order/Group/PiLex.lean"
    },
    ".lake.packages.mathlib.Mathlib.Algebra.Order.Group.Int.Sum": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Algebra/Order/Group/Int/Sum.lean"
    },
    ".lake.packages.mathlib.Mathlib.Algebra.Order.Group.Action.Synonym": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Algebra/Order/Group/Action/Synonym.lean"
    },
    ".lake.packages.mathlib.Mathlib.Algebra.Order.Group.Action.Flag": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Algebra/Order/Group/Action/Flag.lean"
    },
    ".lake.packages.mathlib.Mathlib.Algebra.Order.Group.Action.End": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Algebra/Order/Group/Action/End.lean"
    },
    ".lake.packages.mathlib.Mathlib.Algebra.Order.Group.Unbundled.Int": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Algebra/Order/Group/Unbundled/Int.lean"
    },
    ".lake.packages.mathlib.Mathlib.Algebra.Order.Group.Unbundled.Basic": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Algebra/Order/Group/Unbundled/Basic.lean"
    },
    ".lake.packages.mathlib.Mathlib.Algebra.Order.Group.Unbundled.Abs": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Algebra/Order/Group/Unbundled/Abs.lean"
    },
    ".lake.packages.mathlib.Mathlib.Algebra.Order.Group.Pointwise.Interval": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Algebra/Order/Group/Pointwise/Interval.lean"
    },
    ".lake.packages.mathlib.Mathlib.Algebra.Order.Group.Pointwise.CompleteLattice": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Algebra/Order/Group/Pointwise/CompleteLattice.lean"
    },
    ".lake.packages.mathlib.Mathlib.Algebra.Order.Group.Pointwise.Bounds": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Algebra/Order/Group/Pointwise/Bounds.lean"
    },
    ".lake.packages.mathlib.Mathlib.Algebra.Order.Interval.Basic": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Algebra/Order/Interval/Basic.lean"
    },
    ".lake.packages.mathlib.Mathlib.Algebra.Order.Interval.Multiset": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Algebra/Order/Interval/Multiset.lean"
    },
    ".lake.packages.mathlib.Mathlib.Algebra.Order.Interval.Finset.SuccPred": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Algebra/Order/Interval/Finset/SuccPred.lean"
    },
    ".lake.packages.mathlib.Mathlib.Algebra.Order.Interval.Finset.Basic": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Algebra/Order/Interval/Finset/Basic.lean"
    },
    ".lake.packages.mathlib.Mathlib.Algebra.Order.Interval.Set.Instances": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Algebra/Order/Interval/Set/Instances.lean"
    },
    ".lake.packages.mathlib.Mathlib.Algebra.Order.Interval.Set.Monoid": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Algebra/Order/Interval/Set/Monoid.lean"
    },
    ".lake.packages.mathlib.Mathlib.Algebra.Order.Interval.Set.SuccPred": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Algebra/Order/Interval/Set/SuccPred.lean"
    },
    ".lake.packages.mathlib.Mathlib.Algebra.Order.Interval.Set.Group": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Algebra/Order/Interval/Set/Group.lean"
    },
    ".lake.packages.mathlib.Mathlib.Algebra.Order.BigOperators.Expect": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Algebra/Order/BigOperators/Expect.lean"
    },
    ".lake.packages.mathlib.Mathlib.Algebra.Order.BigOperators.Group.List": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Algebra/Order/BigOperators/Group/List.lean"
    },
    ".lake.packages.mathlib.Mathlib.Algebra.Order.BigOperators.Group.Finset": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Algebra/Order/BigOperators/Group/Finset.lean"
    },
    ".lake.packages.mathlib.Mathlib.Algebra.Order.BigOperators.Group.Multiset": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Algebra/Order/BigOperators/Group/Multiset.lean"
    },
    ".lake.packages.mathlib.Mathlib.Algebra.Order.BigOperators.Group.LocallyFinite": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Algebra/Order/BigOperators/Group/LocallyFinite.lean"
    },
    ".lake.packages.mathlib.Mathlib.Algebra.Order.BigOperators.GroupWithZero.List": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Algebra/Order/BigOperators/GroupWithZero/List.lean"
    },
    ".lake.packages.mathlib.Mathlib.Algebra.Order.BigOperators.GroupWithZero.Multiset": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Algebra/Order/BigOperators/GroupWithZero/Multiset.lean"
    },
    ".lake.packages.mathlib.Mathlib.Algebra.Order.BigOperators.Ring.List": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Algebra/Order/BigOperators/Ring/List.lean"
    },
    ".lake.packages.mathlib.Mathlib.Algebra.Order.BigOperators.Ring.Finset": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Algebra/Order/BigOperators/Ring/Finset.lean"
    },
    ".lake.packages.mathlib.Mathlib.Algebra.Order.BigOperators.Ring.Multiset": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Algebra/Order/BigOperators/Ring/Multiset.lean"
    },
    ".lake.packages.mathlib.Mathlib.Algebra.Order.Module.Synonym": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Algebra/Order/Module/Synonym.lean"
    },
    ".lake.packages.mathlib.Mathlib.Algebra.Order.Module.Rat": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Algebra/Order/Module/Rat.lean"
    },
    ".lake.packages.mathlib.Mathlib.Algebra.Order.Module.PositiveLinearMap": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Algebra/Order/Module/PositiveLinearMap.lean"
    },
    ".lake.packages.mathlib.Mathlib.Algebra.Order.Module.Pointwise": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Algebra/Order/Module/Pointwise.lean"
    },
    ".lake.packages.mathlib.Mathlib.Algebra.Order.Module.OrderedSMul": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Algebra/Order/Module/OrderedSMul.lean"
    },
    ".lake.packages.mathlib.Mathlib.Algebra.Order.Module.Basic": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Algebra/Order/Module/Basic.lean"
    },
    ".lake.packages.mathlib.Mathlib.Algebra.Order.Module.Defs": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Algebra/Order/Module/Defs.lean"
    },
    ".lake.packages.mathlib.Mathlib.Algebra.Order.Module.Field": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Algebra/Order/Module/Field.lean"
    },
    ".lake.packages.mathlib.Mathlib.Algebra.Order.Module.Algebra": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Algebra/Order/Module/Algebra.lean"
    },
    ".lake.packages.mathlib.Mathlib.Algebra.Order.CauSeq.Completion": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Algebra/Order/CauSeq/Completion.lean"
    },
    ".lake.packages.mathlib.Mathlib.Algebra.Order.CauSeq.Basic": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Algebra/Order/CauSeq/Basic.lean"
    },
    ".lake.packages.mathlib.Mathlib.Algebra.Order.CauSeq.BigOperators": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Algebra/Order/CauSeq/BigOperators.lean"
    },
    ".lake.packages.mathlib.Mathlib.Algebra.Order.Antidiag.Prod": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Algebra/Order/Antidiag/Prod.lean"
    },
    ".lake.packages.mathlib.Mathlib.Algebra.Order.Antidiag.Nat": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Algebra/Order/Antidiag/Nat.lean"
    },
    ".lake.packages.mathlib.Mathlib.Algebra.Order.Antidiag.Pi": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Algebra/Order/Antidiag/Pi.lean"
    },
    ".lake.packages.mathlib.Mathlib.Algebra.Order.Antidiag.Finsupp": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Algebra/Order/Antidiag/Finsupp.lean"
    },
    ".lake.packages.mathlib.Mathlib.Algebra.Order.WithTop.Untop0": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Algebra/Order/WithTop/Untop0.lean"
    },
    ".lake.packages.mathlib.Mathlib.Algebra.Order.GroupWithZero.Synonym": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Algebra/Order/GroupWithZero/Synonym.lean"
    },
    ".lake.packages.mathlib.Mathlib.Algebra.Order.GroupWithZero.WithZero": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Algebra/Order/GroupWithZero/WithZero.lean"
    },
    ".lake.packages.mathlib.Mathlib.Algebra.Order.GroupWithZero.Canonical": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Algebra/Order/GroupWithZero/Canonical.lean"
    },
    ".lake.packages.mathlib.Mathlib.Algebra.Order.GroupWithZero.Unbundled": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Algebra/Order/GroupWithZero/Unbundled.lean"
    },
    ".lake.packages.mathlib.Mathlib.Algebra.Order.GroupWithZero.Lex": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Algebra/Order/GroupWithZero/Lex.lean"
    },
    ".lake.packages.mathlib.Mathlib.Algebra.Order.GroupWithZero.Finset": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Algebra/Order/GroupWithZero/Finset.lean"
    },
    ".lake.packages.mathlib.Mathlib.Algebra.Order.GroupWithZero.Submonoid": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Algebra/Order/GroupWithZero/Submonoid.lean"
    },
    ".lake.packages.mathlib.Mathlib.Algebra.Order.GroupWithZero.Bounds": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Algebra/Order/GroupWithZero/Bounds.lean"
    },
    ".lake.packages.mathlib.Mathlib.Algebra.Order.GroupWithZero.Action.Synonym": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Algebra/Order/GroupWithZero/Action/Synonym.lean"
    },
    ".lake.packages.mathlib.Mathlib.Algebra.Order.GroupWithZero.Unbundled.OrderIso": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Algebra/Order/GroupWithZero/Unbundled/OrderIso.lean"
    },
    ".lake.packages.mathlib.Mathlib.Algebra.Order.GroupWithZero.Unbundled.Lemmas": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Algebra/Order/GroupWithZero/Unbundled/Lemmas.lean"
    },
    ".lake.packages.mathlib.Mathlib.Algebra.Order.GroupWithZero.Unbundled.Basic": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Algebra/Order/GroupWithZero/Unbundled/Basic.lean"
    },
    ".lake.packages.mathlib.Mathlib.Algebra.Order.GroupWithZero.Unbundled.Defs": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Algebra/Order/GroupWithZero/Unbundled/Defs.lean"
    },
    ".lake.packages.mathlib.Mathlib.Algebra.Order.Field.Canonical": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Algebra/Order/Field/Canonical.lean"
    },
    ".lake.packages.mathlib.Mathlib.Algebra.Order.Field.Rat": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Algebra/Order/Field/Rat.lean"
    },
    ".lake.packages.mathlib.Mathlib.Algebra.Order.Field.Subfield": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Algebra/Order/Field/Subfield.lean"
    },
    ".lake.packages.mathlib.Mathlib.Algebra.Order.Field.Pointwise": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Algebra/Order/Field/Pointwise.lean"
    },
    ".lake.packages.mathlib.Mathlib.Algebra.Order.Field.Pi": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Algebra/Order/Field/Pi.lean"
    },
    ".lake.packages.mathlib.Mathlib.Algebra.Order.Field.Basic": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Algebra/Order/Field/Basic.lean"
    },
    ".lake.packages.mathlib.Mathlib.Algebra.Order.Field.InjSurj": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Algebra/Order/Field/InjSurj.lean"
    },
    ".lake.packages.mathlib.Mathlib.Algebra.Order.Field.Defs": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Algebra/Order/Field/Defs.lean"
    },
    ".lake.packages.mathlib.Mathlib.Algebra.Order.Field.Power": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Algebra/Order/Field/Power.lean"
    },
    ".lake.packages.mathlib.Mathlib.Algebra.Order.Sub.WithTop": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Algebra/Order/Sub/WithTop.lean"
    },
    ".lake.packages.mathlib.Mathlib.Algebra.Order.Sub.Prod": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Algebra/Order/Sub/Prod.lean"
    },
    ".lake.packages.mathlib.Mathlib.Algebra.Order.Sub.Basic": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Algebra/Order/Sub/Basic.lean"
    },
    ".lake.packages.mathlib.Mathlib.Algebra.Order.Sub.Defs": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Algebra/Order/Sub/Defs.lean"
    },
    ".lake.packages.mathlib.Mathlib.Algebra.Order.Sub.Unbundled.Basic": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Algebra/Order/Sub/Unbundled/Basic.lean"
    },
    ".lake.packages.mathlib.Mathlib.Algebra.Order.Sub.Unbundled.Hom": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Algebra/Order/Sub/Unbundled/Hom.lean"
    },
    ".lake.packages.mathlib.Mathlib.Algebra.Order.Star.Prod": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Algebra/Order/Star/Prod.lean"
    },
    ".lake.packages.mathlib.Mathlib.Algebra.Order.Star.Basic": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Algebra/Order/Star/Basic.lean"
    },
    ".lake.packages.mathlib.Mathlib.Algebra.Order.Star.Conjneg": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Algebra/Order/Star/Conjneg.lean"
    },
    ".lake.packages.mathlib.Mathlib.Algebra.Order.AbsoluteValue.Euclidean": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Algebra/Order/AbsoluteValue/Euclidean.lean"
    },
    ".lake.packages.mathlib.Mathlib.Algebra.Order.AbsoluteValue.Basic": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Algebra/Order/AbsoluteValue/Basic.lean"
    },
    ".lake.packages.mathlib.Mathlib.Algebra.Order.Floor.Div": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Algebra/Order/Floor/Div.lean"
    },
    ".lake.packages.mathlib.Mathlib.Algebra.Order.Floor.Ring": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Algebra/Order/Floor/Ring.lean"
    },
    ".lake.packages.mathlib.Mathlib.Algebra.Order.Floor.Defs": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Algebra/Order/Floor/Defs.lean"
    },
    ".lake.packages.mathlib.Mathlib.Algebra.Order.Floor.Semiring": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Algebra/Order/Floor/Semiring.lean"
    },
    ".lake.packages.mathlib.Mathlib.Algebra.Order.Ring.WithTop": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Algebra/Order/Ring/WithTop.lean"
    },
    ".lake.packages.mathlib.Mathlib.Algebra.Order.Ring.Synonym": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Algebra/Order/Ring/Synonym.lean"
    },
    ".lake.packages.mathlib.Mathlib.Algebra.Order.Ring.Idempotent": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Algebra/Order/Ring/Idempotent.lean"
    },
    ".lake.packages.mathlib.Mathlib.Algebra.Order.Ring.Pow": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Algebra/Order/Ring/Pow.lean"
    },
    ".lake.packages.mathlib.Mathlib.Algebra.Order.Ring.Opposite": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Algebra/Order/Ring/Opposite.lean"
    },
    ".lake.packages.mathlib.Mathlib.Algebra.Order.Ring.Int": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Algebra/Order/Ring/Int.lean"
    },
    ".lake.packages.mathlib.Mathlib.Algebra.Order.Ring.Canonical": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Algebra/Order/Ring/Canonical.lean"
    },
    ".lake.packages.mathlib.Mathlib.Algebra.Order.Ring.Rat": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Algebra/Order/Ring/Rat.lean"
    },
    ".lake.packages.mathlib.Mathlib.Algebra.Order.Ring.Star": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Algebra/Order/Ring/Star.lean"
    },
    ".lake.packages.mathlib.Mathlib.Algebra.Order.Ring.Prod": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Algebra/Order/Ring/Prod.lean"
    },
    ".lake.packages.mathlib.Mathlib.Algebra.Order.Ring.Nat": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Algebra/Order/Ring/Nat.lean"
    },
    ".lake.packages.mathlib.Mathlib.Algebra.Order.Ring.IsNonarchimedean": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Algebra/Order/Ring/IsNonarchimedean.lean"
    },
    ".lake.packages.mathlib.Mathlib.Algebra.Order.Ring.Cone": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Algebra/Order/Ring/Cone.lean"
    },
    ".lake.packages.mathlib.Mathlib.Algebra.Order.Ring.Finset": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Algebra/Order/Ring/Finset.lean"
    },
    ".lake.packages.mathlib.Mathlib.Algebra.Order.Ring.Basic": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Algebra/Order/Ring/Basic.lean"
    },
    ".lake.packages.mathlib.Mathlib.Algebra.Order.Ring.InjSurj": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Algebra/Order/Ring/InjSurj.lean"
    },
    ".lake.packages.mathlib.Mathlib.Algebra.Order.Ring.Defs": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Algebra/Order/Ring/Defs.lean"
    },
    ".lake.packages.mathlib.Mathlib.Algebra.Order.Ring.Abs": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Algebra/Order/Ring/Abs.lean"
    },
    ".lake.packages.mathlib.Mathlib.Algebra.Order.Ring.Cast": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Algebra/Order/Ring/Cast.lean"
    },
    ".lake.packages.mathlib.Mathlib.Algebra.Order.Ring.Unbundled.Rat": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Algebra/Order/Ring/Unbundled/Rat.lean"
    },
    ".lake.packages.mathlib.Mathlib.Algebra.Order.Ring.Unbundled.Basic": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Algebra/Order/Ring/Unbundled/Basic.lean"
    },
    ".lake.packages.mathlib.Mathlib.Algebra.Azumaya.Matrix": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Algebra/Azumaya/Matrix.lean"
    },
    ".lake.packages.mathlib.Mathlib.Algebra.Azumaya.Basic": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Algebra/Azumaya/Basic.lean"
    },
    ".lake.packages.mathlib.Mathlib.Algebra.Azumaya.Defs": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Algebra/Azumaya/Defs.lean"
    },
    ".lake.packages.mathlib.Mathlib.Algebra.FreeAlgebra.Cardinality": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Algebra/FreeAlgebra/Cardinality.lean"
    },
    ".lake.packages.mathlib.Mathlib.Algebra.DirectSum.Decomposition": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Algebra/DirectSum/Decomposition.lean"
    },
    ".lake.packages.mathlib.Mathlib.Algebra.DirectSum.Module": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Algebra/DirectSum/Module.lean"
    },
    ".lake.packages.mathlib.Mathlib.Algebra.DirectSum.Ring": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Algebra/DirectSum/Ring.lean"
    },
    ".lake.packages.mathlib.Mathlib.Algebra.DirectSum.Internal": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Algebra/DirectSum/Internal.lean"
    },
    ".lake.packages.mathlib.Mathlib.Algebra.DirectSum.Basic": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Algebra/DirectSum/Basic.lean"
    },
    ".lake.packages.mathlib.Mathlib.Algebra.DirectSum.Finsupp": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Algebra/DirectSum/Finsupp.lean"
    },
    ".lake.packages.mathlib.Mathlib.Algebra.DirectSum.LinearMap": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Algebra/DirectSum/LinearMap.lean"
    },
    ".lake.packages.mathlib.Mathlib.Algebra.DirectSum.Algebra": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Algebra/DirectSum/Algebra.lean"
    },
    ".lake.packages.mathlib.Mathlib.Algebra.DirectSum.Idempotents": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Algebra/DirectSum/Idempotents.lean"
    },
    ".lake.packages.mathlib.Mathlib.Algebra.DirectSum.AddChar": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Algebra/DirectSum/AddChar.lean"
    },
    ".lake.packages.mathlib.Mathlib.Algebra.Category.BoolRing": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Algebra/Category/BoolRing.lean"
    },
    ".lake.packages.mathlib.Mathlib.Algebra.Category.GrpWithZero": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Algebra/Category/GrpWithZero.lean"
    },
    ".lake.packages.mathlib.Mathlib.Algebra.Category.AlgebraCat.Symmetric": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Algebra/Category/AlgebraCat/Symmetric.lean"
    },
    ".lake.packages.mathlib.Mathlib.Algebra.Category.Grp.Yoneda": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Algebra/Category/Grp/Yoneda.lean"
    },
    ".lake.packages.mathlib.Mathlib.Algebra.Category.Grp.Biproducts": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Algebra/Category/Grp/Biproducts.lean"
    },
    ".lake.packages.mathlib.Mathlib.Algebra.Category.Grp.CartesianMonoidal": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Algebra/Category/Grp/CartesianMonoidal.lean"
    },
    ".lake.packages.mathlib.Mathlib.Algebra.Category.Grp.EpiMono": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Algebra/Category/Grp/EpiMono.lean"
    },
    ".lake.packages.mathlib.Mathlib.Algebra.Category.Grp.IsFinite": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Algebra/Category/Grp/IsFinite.lean"
    },
    ".lake.packages.mathlib.Mathlib.Algebra.Category.Grp.Abelian": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Algebra/Category/Grp/Abelian.lean"
    },
    ".lake.packages.mathlib.Mathlib.Algebra.Category.Grp.EnoughInjectives": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Algebra/Category/Grp/EnoughInjectives.lean"
    },
    ".lake.packages.mathlib.Mathlib.Algebra.Category.Grp.FiniteGrp": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Algebra/Category/Grp/FiniteGrp.lean"
    },
    ".lake.packages.mathlib.Mathlib.Algebra.Category.Grp.Preadditive": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Algebra/Category/Grp/Preadditive.lean"
    },
    ".lake.packages.mathlib.Mathlib.Algebra.Category.Grp.Basic": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Algebra/Category/Grp/Basic.lean"
    },
    ".lake.packages.mathlib.Mathlib.Algebra.Category.Grp.Ulift": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Algebra/Category/Grp/Ulift.lean"
    },
    ".lake.packages.mathlib.Mathlib.Algebra.Category.Grp.FilteredColimits": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Algebra/Category/Grp/FilteredColimits.lean"
    },
    ".lake.packages.mathlib.Mathlib.Algebra.Category.Grp.Subobject": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Algebra/Category/Grp/Subobject.lean"
    },
    ".lake.packages.mathlib.Mathlib.Algebra.Category.Grp.ZModuleEquivalence": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Algebra/Category/Grp/ZModuleEquivalence.lean"
    },
    ".lake.packages.mathlib.Mathlib.Algebra.Category.Grp.ChosenFiniteProducts": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Algebra/Category/Grp/ChosenFiniteProducts.lean"
    },
    ".lake.packages.mathlib.Mathlib.Algebra.Category.Grp.ForgetCorepresentable": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Algebra/Category/Grp/ForgetCorepresentable.lean"
    },
    ".lake.packages.mathlib.Mathlib.Algebra.Category.Grp.Kernels": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Algebra/Category/Grp/Kernels.lean"
    },
    ".lake.packages.mathlib.Mathlib.Algebra.Category.Grp.LeftExactFunctor": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Algebra/Category/Grp/LeftExactFunctor.lean"
    },
    ".lake.packages.mathlib.Mathlib.Algebra.Category.Grp.Injective": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Algebra/Category/Grp/Injective.lean"
    },
    ".lake.packages.mathlib.Mathlib.Algebra.Category.Grp.Colimits": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Algebra/Category/Grp/Colimits.lean"
    },
    ".lake.packages.mathlib.Mathlib.Algebra.Category.Grp.AB": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Algebra/Category/Grp/AB.lean"
    },
    ".lake.packages.mathlib.Mathlib.Algebra.Category.Grp.LargeColimits": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Algebra/Category/Grp/LargeColimits.lean"
    },
    ".lake.packages.mathlib.Mathlib.Algebra.Category.Grp.Limits": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Algebra/Category/Grp/Limits.lean"
    },
    ".lake.packages.mathlib.Mathlib.Algebra.Category.Grp.Adjunctions": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Algebra/Category/Grp/Adjunctions.lean"
    },
    ".lake.packages.mathlib.Mathlib.Algebra.Category.Grp.Images": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Algebra/Category/Grp/Images.lean"
    },
    ".lake.packages.mathlib.Mathlib.Algebra.Category.Grp.Zero": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Algebra/Category/Grp/Zero.lean"
    },
    ".lake.packages.mathlib.Mathlib.Algebra.Category.Grp.EquivalenceGroupAddGroup": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Algebra/Category/Grp/EquivalenceGroupAddGroup.lean"
    },
    ".lake.packages.mathlib.Mathlib.Algebra.Category.AlgCat.Monoidal": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Algebra/Category/AlgCat/Monoidal.lean"
    },
    ".lake.packages.mathlib.Mathlib.Algebra.Category.AlgCat.Basic": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Algebra/Category/AlgCat/Basic.lean"
    },
    ".lake.packages.mathlib.Mathlib.Algebra.Category.AlgCat.Symmetric": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Algebra/Category/AlgCat/Symmetric.lean"
    },
    ".lake.packages.mathlib.Mathlib.Algebra.Category.AlgCat.Limits": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Algebra/Category/AlgCat/Limits.lean"
    },
    ".lake.packages.mathlib.Mathlib.Algebra.Category.BialgCat.Monoidal": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Algebra/Category/BialgCat/Monoidal.lean"
    },
    ".lake.packages.mathlib.Mathlib.Algebra.Category.BialgCat.Basic": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Algebra/Category/BialgCat/Basic.lean"
    },
    ".lake.packages.mathlib.Mathlib.Algebra.Category.ModuleCat.Biproducts": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Algebra/Category/ModuleCat/Biproducts.lean"
    },
    ".lake.packages.mathlib.Mathlib.Algebra.Category.ModuleCat.EpiMono": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Algebra/Category/ModuleCat/EpiMono.lean"
    },
    ".lake.packages.mathlib.Mathlib.Algebra.Category.ModuleCat.Products": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Algebra/Category/ModuleCat/Products.lean"
    },
    ".lake.packages.mathlib.Mathlib.Algebra.Category.ModuleCat.Abelian": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Algebra/Category/ModuleCat/Abelian.lean"
    },
    ".lake.packages.mathlib.Mathlib.Algebra.Category.ModuleCat.Presheaf": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Algebra/Category/ModuleCat/Presheaf.lean"
    },
    ".lake.packages.mathlib.Mathlib.Algebra.Category.ModuleCat.Pseudofunctor": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Algebra/Category/ModuleCat/Pseudofunctor.lean"
    },
    ".lake.packages.mathlib.Mathlib.Algebra.Category.ModuleCat.ExteriorPower": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Algebra/Category/ModuleCat/ExteriorPower.lean"
    },
    ".lake.packages.mathlib.Mathlib.Algebra.Category.ModuleCat.EnoughInjectives": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Algebra/Category/ModuleCat/EnoughInjectives.lean"
    },
    ".lake.packages.mathlib.Mathlib.Algebra.Category.ModuleCat.Tannaka": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Algebra/Category/ModuleCat/Tannaka.lean"
    },
    ".lake.packages.mathlib.Mathlib.Algebra.Category.ModuleCat.Basic": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Algebra/Category/ModuleCat/Basic.lean"
    },
    ".lake.packages.mathlib.Mathlib.Algebra.Category.ModuleCat.Simple": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Algebra/Category/ModuleCat/Simple.lean"
    },
    ".lake.packages.mathlib.Mathlib.Algebra.Category.ModuleCat.FilteredColimits": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Algebra/Category/ModuleCat/FilteredColimits.lean"
    },
    ".lake.packages.mathlib.Mathlib.Algebra.Category.ModuleCat.Subobject": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Algebra/Category/ModuleCat/Subobject.lean"
    },
    ".lake.packages.mathlib.Mathlib.Algebra.Category.ModuleCat.Kernels": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Algebra/Category/ModuleCat/Kernels.lean"
    },
    ".lake.packages.mathlib.Mathlib.Algebra.Category.ModuleCat.Injective": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Algebra/Category/ModuleCat/Injective.lean"
    },
    ".lake.packages.mathlib.Mathlib.Algebra.Category.ModuleCat.Projective": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Algebra/Category/ModuleCat/Projective.lean"
    },
    ".lake.packages.mathlib.Mathlib.Algebra.Category.ModuleCat.Colimits": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Algebra/Category/ModuleCat/Colimits.lean"
    },
    ".lake.packages.mathlib.Mathlib.Algebra.Category.ModuleCat.Sheaf": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Algebra/Category/ModuleCat/Sheaf.lean"
    },
    ".lake.packages.mathlib.Mathlib.Algebra.Category.ModuleCat.AB": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Algebra/Category/ModuleCat/AB.lean"
    },
    ".lake.packages.mathlib.Mathlib.Algebra.Category.ModuleCat.Limits": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Algebra/Category/ModuleCat/Limits.lean"
    },
    ".lake.packages.mathlib.Mathlib.Algebra.Category.ModuleCat.Algebra": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Algebra/Category/ModuleCat/Algebra.lean"
    },
    ".lake.packages.mathlib.Mathlib.Algebra.Category.ModuleCat.ChangeOfRings": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Algebra/Category/ModuleCat/ChangeOfRings.lean"
    },
    ".lake.packages.mathlib.Mathlib.Algebra.Category.ModuleCat.Adjunctions": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Algebra/Category/ModuleCat/Adjunctions.lean"
    },
    ".lake.packages.mathlib.Mathlib.Algebra.Category.ModuleCat.Free": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Algebra/Category/ModuleCat/Free.lean"
    },
    ".lake.packages.mathlib.Mathlib.Algebra.Category.ModuleCat.Images": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Algebra/Category/ModuleCat/Images.lean"
    },
    ".lake.packages.mathlib.Mathlib.Algebra.Category.ModuleCat.Topology.Basic": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Algebra/Category/ModuleCat/Topology/Basic.lean"
    },
    ".lake.packages.mathlib.Mathlib.Algebra.Category.ModuleCat.Topology.Homology": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Algebra/Category/ModuleCat/Topology/Homology.lean"
    },
    ".lake.packages.mathlib.Mathlib.Algebra.Category.ModuleCat.Differentials.Presheaf": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Algebra/Category/ModuleCat/Differentials/Presheaf.lean"
    },
    ".lake.packages.mathlib.Mathlib.Algebra.Category.ModuleCat.Differentials.Basic": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Algebra/Category/ModuleCat/Differentials/Basic.lean"
    },
    ".lake.packages.mathlib.Mathlib.Algebra.Category.ModuleCat.Presheaf.EpiMono": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Algebra/Category/ModuleCat/Presheaf/EpiMono.lean"
    },
    ".lake.packages.mathlib.Mathlib.Algebra.Category.ModuleCat.Presheaf.Monoidal": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Algebra/Category/ModuleCat/Presheaf/Monoidal.lean"
    },
    ".lake.packages.mathlib.Mathlib.Algebra.Category.ModuleCat.Presheaf.Abelian": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Algebra/Category/ModuleCat/Presheaf/Abelian.lean"
    },
    ".lake.packages.mathlib.Mathlib.Algebra.Category.ModuleCat.Presheaf.Sheafify": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Algebra/Category/ModuleCat/Presheaf/Sheafify.lean"
    },
    ".lake.packages.mathlib.Mathlib.Algebra.Category.ModuleCat.Presheaf.Pushforward": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Algebra/Category/ModuleCat/Presheaf/Pushforward.lean"
    },
    ".lake.packages.mathlib.Mathlib.Algebra.Category.ModuleCat.Presheaf.Generator": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Algebra/Category/ModuleCat/Presheaf/Generator.lean"
    },
    ".lake.packages.mathlib.Mathlib.Algebra.Category.ModuleCat.Presheaf.Sheafification": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Algebra/Category/ModuleCat/Presheaf/Sheafification.lean"
    },
    ".lake.packages.mathlib.Mathlib.Algebra.Category.ModuleCat.Presheaf.Pullback": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Algebra/Category/ModuleCat/Presheaf/Pullback.lean"
    },
    ".lake.packages.mathlib.Mathlib.Algebra.Category.ModuleCat.Presheaf.Colimits": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Algebra/Category/ModuleCat/Presheaf/Colimits.lean"
    },
    ".lake.packages.mathlib.Mathlib.Algebra.Category.ModuleCat.Presheaf.Limits": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Algebra/Category/ModuleCat/Presheaf/Limits.lean"
    },
    ".lake.packages.mathlib.Mathlib.Algebra.Category.ModuleCat.Presheaf.ChangeOfRings": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Algebra/Category/ModuleCat/Presheaf/ChangeOfRings.lean"
    },
    ".lake.packages.mathlib.Mathlib.Algebra.Category.ModuleCat.Presheaf.Free": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Algebra/Category/ModuleCat/Presheaf/Free.lean"
    },
    ".lake.packages.mathlib.Mathlib.Algebra.Category.ModuleCat.Monoidal.Basic": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Algebra/Category/ModuleCat/Monoidal/Basic.lean"
    },
    ".lake.packages.mathlib.Mathlib.Algebra.Category.ModuleCat.Monoidal.Symmetric": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Algebra/Category/ModuleCat/Monoidal/Symmetric.lean"
    },
    ".lake.packages.mathlib.Mathlib.Algebra.Category.ModuleCat.Monoidal.Closed": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Algebra/Category/ModuleCat/Monoidal/Closed.lean"
    },
    ".lake.packages.mathlib.Mathlib.Algebra.Category.ModuleCat.Sheaf.PullbackContinuous": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Algebra/Category/ModuleCat/Sheaf/PullbackContinuous.lean"
    },
    ".lake.packages.mathlib.Mathlib.Algebra.Category.ModuleCat.Sheaf.Abelian": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Algebra/Category/ModuleCat/Sheaf/Abelian.lean"
    },
    ".lake.packages.mathlib.Mathlib.Algebra.Category.ModuleCat.Sheaf.PushforwardContinuous": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Algebra/Category/ModuleCat/Sheaf/PushforwardContinuous.lean"
    },
    ".lake.packages.mathlib.Mathlib.Algebra.Category.ModuleCat.Sheaf.Generators": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Algebra/Category/ModuleCat/Sheaf/Generators.lean"
    },
    ".lake.packages.mathlib.Mathlib.Algebra.Category.ModuleCat.Sheaf.Colimits": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Algebra/Category/ModuleCat/Sheaf/Colimits.lean"
    },
    ".lake.packages.mathlib.Mathlib.Algebra.Category.ModuleCat.Sheaf.Limits": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Algebra/Category/ModuleCat/Sheaf/Limits.lean"
    },
    ".lake.packages.mathlib.Mathlib.Algebra.Category.ModuleCat.Sheaf.Quasicoherent": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Algebra/Category/ModuleCat/Sheaf/Quasicoherent.lean"
    },
    ".lake.packages.mathlib.Mathlib.Algebra.Category.ModuleCat.Sheaf.ChangeOfRings": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Algebra/Category/ModuleCat/Sheaf/ChangeOfRings.lean"
    },
    ".lake.packages.mathlib.Mathlib.Algebra.Category.ModuleCat.Sheaf.Free": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Algebra/Category/ModuleCat/Sheaf/Free.lean"
    },
    ".lake.packages.mathlib.Mathlib.Algebra.Category.CommAlgCat.Monoidal": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Algebra/Category/CommAlgCat/Monoidal.lean"
    },
    ".lake.packages.mathlib.Mathlib.Algebra.Category.CommAlgCat.Basic": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Algebra/Category/CommAlgCat/Basic.lean"
    },
    ".lake.packages.mathlib.Mathlib.Algebra.Category.CommAlgCat.FiniteType": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Algebra/Category/CommAlgCat/FiniteType.lean"
    },
    ".lake.packages.mathlib.Mathlib.Algebra.Category.ContinuousCohomology.Basic": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Algebra/Category/ContinuousCohomology/Basic.lean"
    },
    ".lake.packages.mathlib.Mathlib.Algebra.Category.Ring.Instances": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Algebra/Category/Ring/Instances.lean"
    },
    ".lake.packages.mathlib.Mathlib.Algebra.Category.Ring.Topology": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Algebra/Category/Ring/Topology.lean"
    },
    ".lake.packages.mathlib.Mathlib.Algebra.Category.Ring.LinearAlgebra": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Algebra/Category/Ring/LinearAlgebra.lean"
    },
    ".lake.packages.mathlib.Mathlib.Algebra.Category.Ring.Basic": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Algebra/Category/Ring/Basic.lean"
    },
    ".lake.packages.mathlib.Mathlib.Algebra.Category.Ring.FilteredColimits": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Algebra/Category/Ring/FilteredColimits.lean"
    },
    ".lake.packages.mathlib.Mathlib.Algebra.Category.Ring.Constructions": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Algebra/Category/Ring/Constructions.lean"
    },
    ".lake.packages.mathlib.Mathlib.Algebra.Category.Ring.FinitePresentation": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Algebra/Category/Ring/FinitePresentation.lean"
    },
    ".lake.packages.mathlib.Mathlib.Algebra.Category.Ring.Colimits": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Algebra/Category/Ring/Colimits.lean"
    },
    ".lake.packages.mathlib.Mathlib.Algebra.Category.Ring.Epi": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Algebra/Category/Ring/Epi.lean"
    },
    ".lake.packages.mathlib.Mathlib.Algebra.Category.Ring.Limits": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Algebra/Category/Ring/Limits.lean"
    },
    ".lake.packages.mathlib.Mathlib.Algebra.Category.Ring.Adjunctions": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Algebra/Category/Ring/Adjunctions.lean"
    },
    ".lake.packages.mathlib.Mathlib.Algebra.Category.Ring.Under.Basic": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Algebra/Category/Ring/Under/Basic.lean"
    },
    ".lake.packages.mathlib.Mathlib.Algebra.Category.Ring.Under.Limits": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Algebra/Category/Ring/Under/Limits.lean"
    },
    ".lake.packages.mathlib.Mathlib.Algebra.Category.CoalgCat.Monoidal": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Algebra/Category/CoalgCat/Monoidal.lean"
    },
    ".lake.packages.mathlib.Mathlib.Algebra.Category.CoalgCat.Basic": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Algebra/Category/CoalgCat/Basic.lean"
    },
    ".lake.packages.mathlib.Mathlib.Algebra.Category.CoalgCat.ComonEquivalence": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Algebra/Category/CoalgCat/ComonEquivalence.lean"
    },
    ".lake.packages.mathlib.Mathlib.Algebra.Category.MonCat.Yoneda": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Algebra/Category/MonCat/Yoneda.lean"
    },
    ".lake.packages.mathlib.Mathlib.Algebra.Category.MonCat.Basic": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Algebra/Category/MonCat/Basic.lean"
    },
    ".lake.packages.mathlib.Mathlib.Algebra.Category.MonCat.FilteredColimits": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Algebra/Category/MonCat/FilteredColimits.lean"
    },
    ".lake.packages.mathlib.Mathlib.Algebra.Category.MonCat.ForgetCorepresentable": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Algebra/Category/MonCat/ForgetCorepresentable.lean"
    },
    ".lake.packages.mathlib.Mathlib.Algebra.Category.MonCat.Colimits": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Algebra/Category/MonCat/Colimits.lean"
    },
    ".lake.packages.mathlib.Mathlib.Algebra.Category.MonCat.Limits": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Algebra/Category/MonCat/Limits.lean"
    },
    ".lake.packages.mathlib.Mathlib.Algebra.Category.MonCat.Adjunctions": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Algebra/Category/MonCat/Adjunctions.lean"
    },
    ".lake.packages.mathlib.Mathlib.Algebra.Category.FGModuleCat.EssentiallySmall": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Algebra/Category/FGModuleCat/EssentiallySmall.lean"
    },
    ".lake.packages.mathlib.Mathlib.Algebra.Category.FGModuleCat.Basic": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Algebra/Category/FGModuleCat/Basic.lean"
    },
    ".lake.packages.mathlib.Mathlib.Algebra.Category.FGModuleCat.Limits": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Algebra/Category/FGModuleCat/Limits.lean"
    },
    ".lake.packages.mathlib.Mathlib.Algebra.Category.HopfAlgCat.Monoidal": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Algebra/Category/HopfAlgCat/Monoidal.lean"
    },
    ".lake.packages.mathlib.Mathlib.Algebra.Category.HopfAlgCat.Basic": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Algebra/Category/HopfAlgCat/Basic.lean"
    },
    ".lake.packages.mathlib.Mathlib.Algebra.Category.Semigrp.Basic": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Algebra/Category/Semigrp/Basic.lean"
    },
    ".lake.packages.mathlib.Mathlib.Algebra.Group.Idempotent": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Algebra/Group/Idempotent.lean"
    },
    ".lake.packages.mathlib.Mathlib.Algebra.Group.Opposite": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Algebra/Group/Opposite.lean"
    },
    ".lake.packages.mathlib.Mathlib.Algebra.Group.Indicator": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Algebra/Group/Indicator.lean"
    },
    ".lake.packages.mathlib.Mathlib.Algebra.Group.Support": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Algebra/Group/Support.lean"
    },
    ".lake.packages.mathlib.Mathlib.Algebra.Group.TransferInstance": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Algebra/Group/TransferInstance.lean"
    },
    ".lake.packages.mathlib.Mathlib.Algebra.Group.PUnit": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Algebra/Group/PUnit.lean"
    },
    ".lake.packages.mathlib.Mathlib.Algebra.Group.Graph": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Algebra/Group/Graph.lean"
    },
    ".lake.packages.mathlib.Mathlib.Algebra.Group.ConjFinite": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Algebra/Group/ConjFinite.lean"
    },
    ".lake.packages.mathlib.Mathlib.Algebra.Group.Prod": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Algebra/Group/Prod.lean"
    },
    ".lake.packages.mathlib.Mathlib.Algebra.Group.Commutator": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Algebra/Group/Commutator.lean"
    },
    ".lake.packages.mathlib.Mathlib.Algebra.Group.PNatPowAssoc": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Algebra/Group/PNatPowAssoc.lean"
    },
    ".lake.packages.mathlib.Mathlib.Algebra.Group.Center": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Algebra/Group/Center.lean"
    },
    ".lake.packages.mathlib.Mathlib.Algebra.Group.Basic": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Algebra/Group/Basic.lean"
    },
    ".lake.packages.mathlib.Mathlib.Algebra.Group.ULift": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Algebra/Group/ULift.lean"
    },
    ".lake.packages.mathlib.Mathlib.Algebra.Group.Translate": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Algebra/Group/Translate.lean"
    },
    ".lake.packages.mathlib.Mathlib.Algebra.Group.End": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Algebra/Group/End.lean"
    },
    ".lake.packages.mathlib.Mathlib.Algebra.Group.Conj": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Algebra/Group/Conj.lean"
    },
    ".lake.packages.mathlib.Mathlib.Algebra.Group.Ext": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Algebra/Group/Ext.lean"
    },
    ".lake.packages.mathlib.Mathlib.Algebra.Group.InjSurj": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Algebra/Group/InjSurj.lean"
    },
    ".lake.packages.mathlib.Mathlib.Algebra.Group.Defs": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Algebra/Group/Defs.lean"
    },
    ".lake.packages.mathlib.Mathlib.Algebra.Group.Shrink": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Algebra/Group/Shrink.lean"
    },
    ".lake.packages.mathlib.Mathlib.Algebra.Group.Finsupp": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Algebra/Group/Finsupp.lean"
    },
    ".lake.packages.mathlib.Mathlib.Algebra.Group.Even": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Algebra/Group/Even.lean"
    },
    ".lake.packages.mathlib.Mathlib.Algebra.Group.Torsion": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Algebra/Group/Torsion.lean"
    },
    ".lake.packages.mathlib.Mathlib.Algebra.Group.Embedding": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Algebra/Group/Embedding.lean"
    },
    ".lake.packages.mathlib.Mathlib.Algebra.Group.FiniteSupport": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Algebra/Group/FiniteSupport.lean"
    },
    ".lake.packages.mathlib.Mathlib.Algebra.Group.EvenFunction": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Algebra/Group/EvenFunction.lean"
    },
    ".lake.packages.mathlib.Mathlib.Algebra.Group.MinimalAxioms": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Algebra/Group/MinimalAxioms.lean"
    },
    ".lake.packages.mathlib.Mathlib.Algebra.Group.NatPowAssoc": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Algebra/Group/NatPowAssoc.lean"
    },
    ".lake.packages.mathlib.Mathlib.Algebra.Group.ForwardDiff": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Algebra/Group/ForwardDiff.lean"
    },
    ".lake.packages.mathlib.Mathlib.Algebra.Group.AddChar": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Algebra/Group/AddChar.lean"
    },
    ".lake.packages.mathlib.Mathlib.Algebra.Group.UniqueProds.VectorSpace": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Algebra/Group/UniqueProds/VectorSpace.lean"
    },
    ".lake.packages.mathlib.Mathlib.Algebra.Group.UniqueProds.Basic": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Algebra/Group/UniqueProds/Basic.lean"
    },
    ".lake.packages.mathlib.Mathlib.Algebra.Group.Fin.Tuple": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Algebra/Group/Fin/Tuple.lean"
    },
    ".lake.packages.mathlib.Mathlib.Algebra.Group.Fin.Basic": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Algebra/Group/Fin/Basic.lean"
    },
    ".lake.packages.mathlib.Mathlib.Algebra.Group.Hom.Instances": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Algebra/Group/Hom/Instances.lean"
    },
    ".lake.packages.mathlib.Mathlib.Algebra.Group.Hom.Basic": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Algebra/Group/Hom/Basic.lean"
    },
    ".lake.packages.mathlib.Mathlib.Algebra.Group.Hom.End": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Algebra/Group/Hom/End.lean"
    },
    ".lake.packages.mathlib.Mathlib.Algebra.Group.Hom.Defs": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Algebra/Group/Hom/Defs.lean"
    },
    ".lake.packages.mathlib.Mathlib.Algebra.Group.Hom.CompTypeclasses": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Algebra/Group/Hom/CompTypeclasses.lean"
    },
    ".lake.packages.mathlib.Mathlib.Algebra.Group.Irreducible.Lemmas": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Algebra/Group/Irreducible/Lemmas.lean"
    },
    ".lake.packages.mathlib.Mathlib.Algebra.Group.Irreducible.Defs": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Algebra/Group/Irreducible/Defs.lean"
    },
    ".lake.packages.mathlib.Mathlib.Algebra.Group.Invertible.Basic": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Algebra/Group/Invertible/Basic.lean"
    },
    ".lake.packages.mathlib.Mathlib.Algebra.Group.Invertible.Defs": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Algebra/Group/Invertible/Defs.lean"
    },
    ".lake.packages.mathlib.Mathlib.Algebra.Group.Equiv.Finite": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Algebra/Group/Equiv/Finite.lean"
    },
    ".lake.packages.mathlib.Mathlib.Algebra.Group.Equiv.Opposite": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Algebra/Group/Equiv/Opposite.lean"
    },
    ".lake.packages.mathlib.Mathlib.Algebra.Group.Equiv.Basic": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Algebra/Group/Equiv/Basic.lean"
    },
    ".lake.packages.mathlib.Mathlib.Algebra.Group.Equiv.Defs": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Algebra/Group/Equiv/Defs.lean"
    },
    ".lake.packages.mathlib.Mathlib.Algebra.Group.Equiv.TypeTags": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Algebra/Group/Equiv/TypeTags.lean"
    },
    ".lake.packages.mathlib.Mathlib.Algebra.Group.Nat.Defs": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Algebra/Group/Nat/Defs.lean"
    },
    ".lake.packages.mathlib.Mathlib.Algebra.Group.Nat.Even": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Algebra/Group/Nat/Even.lean"
    },
    ".lake.packages.mathlib.Mathlib.Algebra.Group.Nat.TypeTags": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Algebra/Group/Nat/TypeTags.lean"
    },
    ".lake.packages.mathlib.Mathlib.Algebra.Group.Nat.Range": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Algebra/Group/Nat/Range.lean"
    },
    ".lake.packages.mathlib.Mathlib.Algebra.Group.Nat.Units": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Algebra/Group/Nat/Units.lean"
    },
    ".lake.packages.mathlib.Mathlib.Algebra.Group.Nat.Hom": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Algebra/Group/Nat/Hom.lean"
    },
    ".lake.packages.mathlib.Mathlib.Algebra.Group.Submonoid.MulOpposite": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Algebra/Group/Submonoid/MulOpposite.lean"
    },
    ".lake.packages.mathlib.Mathlib.Algebra.Group.Submonoid.Pointwise": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Algebra/Group/Submonoid/Pointwise.lean"
    },
    ".lake.packages.mathlib.Mathlib.Algebra.Group.Submonoid.Basic": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Algebra/Group/Submonoid/Basic.lean"
    },
    ".lake.packages.mathlib.Mathlib.Algebra.Group.Submonoid.Operations": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Algebra/Group/Submonoid/Operations.lean"
    },
    ".lake.packages.mathlib.Mathlib.Algebra.Group.Submonoid.DistribMulAction": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Algebra/Group/Submonoid/DistribMulAction.lean"
    },
    ".lake.packages.mathlib.Mathlib.Algebra.Group.Submonoid.Defs": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Algebra/Group/Submonoid/Defs.lean"
    },
    ".lake.packages.mathlib.Mathlib.Algebra.Group.Submonoid.Finsupp": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Algebra/Group/Submonoid/Finsupp.lean"
    },
    ".lake.packages.mathlib.Mathlib.Algebra.Group.Submonoid.Membership": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Algebra/Group/Submonoid/Membership.lean"
    },
    ".lake.packages.mathlib.Mathlib.Algebra.Group.Submonoid.BigOperators": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Algebra/Group/Submonoid/BigOperators.lean"
    },
    ".lake.packages.mathlib.Mathlib.Algebra.Group.Submonoid.Units": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Algebra/Group/Submonoid/Units.lean"
    },
    ".lake.packages.mathlib.Mathlib.Algebra.Group.Submonoid.MulAction": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Algebra/Group/Submonoid/MulAction.lean"
    },
    ".lake.packages.mathlib.Mathlib.Algebra.Group.Units.Opposite": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Algebra/Group/Units/Opposite.lean"
    },
    ".lake.packages.mathlib.Mathlib.Algebra.Group.Units.Basic": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Algebra/Group/Units/Basic.lean"
    },
    ".lake.packages.mathlib.Mathlib.Algebra.Group.Units.Defs": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Algebra/Group/Units/Defs.lean"
    },
    ".lake.packages.mathlib.Mathlib.Algebra.Group.Units.Equiv": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Algebra/Group/Units/Equiv.lean"
    },
    ".lake.packages.mathlib.Mathlib.Algebra.Group.Units.Hom": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Algebra/Group/Units/Hom.lean"
    },
    ".lake.packages.mathlib.Mathlib.Algebra.Group.Pi.Lemmas": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Algebra/Group/Pi/Lemmas.lean"
    },
    ".lake.packages.mathlib.Mathlib.Algebra.Group.Pi.Basic": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Algebra/Group/Pi/Basic.lean"
    },
    ".lake.packages.mathlib.Mathlib.Algebra.Group.Pi.Units": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Algebra/Group/Pi/Units.lean"
    },
    ".lake.packages.mathlib.Mathlib.Algebra.Group.Int.Defs": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Algebra/Group/Int/Defs.lean"
    },
    ".lake.packages.mathlib.Mathlib.Algebra.Group.Int.Even": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Algebra/Group/Int/Even.lean"
    },
    ".lake.packages.mathlib.Mathlib.Algebra.Group.Int.TypeTags": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Algebra/Group/Int/TypeTags.lean"
    },
    ".lake.packages.mathlib.Mathlib.Algebra.Group.Int.Units": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Algebra/Group/Int/Units.lean"
    },
    ".lake.packages.mathlib.Mathlib.Algebra.Group.Action.Sum": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Algebra/Group/Action/Sum.lean"
    },
    ".lake.packages.mathlib.Mathlib.Algebra.Group.Action.Opposite": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Algebra/Group/Action/Opposite.lean"
    },
    ".lake.packages.mathlib.Mathlib.Algebra.Group.Action.Option": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Algebra/Group/Action/Option.lean"
    },
    ".lake.packages.mathlib.Mathlib.Algebra.Group.Action.Faithful": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Algebra/Group/Action/Faithful.lean"
    },
    ".lake.packages.mathlib.Mathlib.Algebra.Group.Action.Sigma": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Algebra/Group/Action/Sigma.lean"
    },
    ".lake.packages.mathlib.Mathlib.Algebra.Group.Action.Prod": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Algebra/Group/Action/Prod.lean"
    },
    ".lake.packages.mathlib.Mathlib.Algebra.Group.Action.Pi": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Algebra/Group/Action/Pi.lean"
    },
    ".lake.packages.mathlib.Mathlib.Algebra.Group.Action.Basic": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Algebra/Group/Action/Basic.lean"
    },
    ".lake.packages.mathlib.Mathlib.Algebra.Group.Action.End": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Algebra/Group/Action/End.lean"
    },
    ".lake.packages.mathlib.Mathlib.Algebra.Group.Action.Defs": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Algebra/Group/Action/Defs.lean"
    },
    ".lake.packages.mathlib.Mathlib.Algebra.Group.Action.Equidecomp": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Algebra/Group/Action/Equidecomp.lean"
    },
    ".lake.packages.mathlib.Mathlib.Algebra.Group.Action.Pretransitive": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Algebra/Group/Action/Pretransitive.lean"
    },
    ".lake.packages.mathlib.Mathlib.Algebra.Group.Action.TypeTags": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Algebra/Group/Action/TypeTags.lean"
    },
    ".lake.packages.mathlib.Mathlib.Algebra.Group.Action.Units": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Algebra/Group/Action/Units.lean"
    },
    ".lake.packages.mathlib.Mathlib.Algebra.Group.Action.Hom": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Algebra/Group/Action/Hom.lean"
    },
    ".lake.packages.mathlib.Mathlib.Algebra.Group.Action.Pointwise.Finset": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Algebra/Group/Action/Pointwise/Finset.lean"
    },
    ".lake.packages.mathlib.Mathlib.Algebra.Group.Action.Pointwise.Set.Finite": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Algebra/Group/Action/Pointwise/Set/Finite.lean"
    },
    ".lake.packages.mathlib.Mathlib.Algebra.Group.Action.Pointwise.Set.Basic": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Algebra/Group/Action/Pointwise/Set/Basic.lean"
    },
    ".lake.packages.mathlib.Mathlib.Algebra.Group.Commute.Basic": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Algebra/Group/Commute/Basic.lean"
    },
    ".lake.packages.mathlib.Mathlib.Algebra.Group.Commute.Defs": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Algebra/Group/Commute/Defs.lean"
    },
    ".lake.packages.mathlib.Mathlib.Algebra.Group.Commute.Units": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Algebra/Group/Commute/Units.lean"
    },
    ".lake.packages.mathlib.Mathlib.Algebra.Group.Commute.Hom": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Algebra/Group/Commute/Hom.lean"
    },
    ".lake.packages.mathlib.Mathlib.Algebra.Group.Semiconj.Basic": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Algebra/Group/Semiconj/Basic.lean"
    },
    ".lake.packages.mathlib.Mathlib.Algebra.Group.Semiconj.Defs": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Algebra/Group/Semiconj/Defs.lean"
    },
    ".lake.packages.mathlib.Mathlib.Algebra.Group.Semiconj.Units": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Algebra/Group/Semiconj/Units.lean"
    },
    ".lake.packages.mathlib.Mathlib.Algebra.Group.Subgroup.Finite": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Algebra/Group/Subgroup/Finite.lean"
    },
    ".lake.packages.mathlib.Mathlib.Algebra.Group.Subgroup.MulOpposite": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Algebra/Group/Subgroup/MulOpposite.lean"
    },
    ".lake.packages.mathlib.Mathlib.Algebra.Group.Subgroup.Pointwise": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Algebra/Group/Subgroup/Pointwise.lean"
    },
    ".lake.packages.mathlib.Mathlib.Algebra.Group.Subgroup.Order": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Algebra/Group/Subgroup/Order.lean"
    },
    ".lake.packages.mathlib.Mathlib.Algebra.Group.Subgroup.Map": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Algebra/Group/Subgroup/Map.lean"
    },
    ".lake.packages.mathlib.Mathlib.Algebra.Group.Subgroup.Actions": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Algebra/Group/Subgroup/Actions.lean"
    },
    ".lake.packages.mathlib.Mathlib.Algebra.Group.Subgroup.Basic": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Algebra/Group/Subgroup/Basic.lean"
    },
    ".lake.packages.mathlib.Mathlib.Algebra.Group.Subgroup.Defs": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Algebra/Group/Subgroup/Defs.lean"
    },
    ".lake.packages.mathlib.Mathlib.Algebra.Group.Subgroup.Finsupp": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Algebra/Group/Subgroup/Finsupp.lean"
    },
    ".lake.packages.mathlib.Mathlib.Algebra.Group.Subgroup.Even": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Algebra/Group/Subgroup/Even.lean"
    },
    ".lake.packages.mathlib.Mathlib.Algebra.Group.Subgroup.Ker": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Algebra/Group/Subgroup/Ker.lean"
    },
    ".lake.packages.mathlib.Mathlib.Algebra.Group.Subgroup.Lattice": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Algebra/Group/Subgroup/Lattice.lean"
    },
    ".lake.packages.mathlib.Mathlib.Algebra.Group.Subgroup.MulOppositeLemmas": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Algebra/Group/Subgroup/MulOppositeLemmas.lean"
    },
    ".lake.packages.mathlib.Mathlib.Algebra.Group.Subgroup.ZPowers.Lemmas": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Algebra/Group/Subgroup/ZPowers/Lemmas.lean"
    },
    ".lake.packages.mathlib.Mathlib.Algebra.Group.Subgroup.ZPowers.Basic": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Algebra/Group/Subgroup/ZPowers/Basic.lean"
    },
    ".lake.packages.mathlib.Mathlib.Algebra.Group.Pointwise.Finset.Interval": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Algebra/Group/Pointwise/Finset/Interval.lean"
    },
    ".lake.packages.mathlib.Mathlib.Algebra.Group.Pointwise.Finset.Density": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Algebra/Group/Pointwise/Finset/Density.lean"
    },
    ".lake.packages.mathlib.Mathlib.Algebra.Group.Pointwise.Finset.Scalar": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Algebra/Group/Pointwise/Finset/Scalar.lean"
    },
    ".lake.packages.mathlib.Mathlib.Algebra.Group.Pointwise.Finset.Basic": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Algebra/Group/Pointwise/Finset/Basic.lean"
    },
    ".lake.packages.mathlib.Mathlib.Algebra.Group.Pointwise.Finset.BigOperators": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Algebra/Group/Pointwise/Finset/BigOperators.lean"
    },
    ".lake.packages.mathlib.Mathlib.Algebra.Group.Pointwise.Set.Finite": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Algebra/Group/Pointwise/Set/Finite.lean"
    },
    ".lake.packages.mathlib.Mathlib.Algebra.Group.Pointwise.Set.Card": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Algebra/Group/Pointwise/Set/Card.lean"
    },
    ".lake.packages.mathlib.Mathlib.Algebra.Group.Pointwise.Set.ListOfFn": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Algebra/Group/Pointwise/Set/ListOfFn.lean"
    },
    ".lake.packages.mathlib.Mathlib.Algebra.Group.Pointwise.Set.Scalar": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Algebra/Group/Pointwise/Set/Scalar.lean"
    },
    ".lake.packages.mathlib.Mathlib.Algebra.Group.Pointwise.Set.Basic": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Algebra/Group/Pointwise/Set/Basic.lean"
    },
    ".lake.packages.mathlib.Mathlib.Algebra.Group.Pointwise.Set.BigOperators": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Algebra/Group/Pointwise/Set/BigOperators.lean"
    },
    ".lake.packages.mathlib.Mathlib.Algebra.Group.Pointwise.Set.Lattice": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Algebra/Group/Pointwise/Set/Lattice.lean"
    },
    ".lake.packages.mathlib.Mathlib.Algebra.Group.WithOne.Basic": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Algebra/Group/WithOne/Basic.lean"
    },
    ".lake.packages.mathlib.Mathlib.Algebra.Group.WithOne.Defs": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Algebra/Group/WithOne/Defs.lean"
    },
    ".lake.packages.mathlib.Mathlib.Algebra.Group.Subsemigroup.Basic": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Algebra/Group/Subsemigroup/Basic.lean"
    },
    ".lake.packages.mathlib.Mathlib.Algebra.Group.Subsemigroup.Operations": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Algebra/Group/Subsemigroup/Operations.lean"
    },
    ".lake.packages.mathlib.Mathlib.Algebra.Group.Subsemigroup.Defs": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Algebra/Group/Subsemigroup/Defs.lean"
    },
    ".lake.packages.mathlib.Mathlib.Algebra.Group.Subsemigroup.Membership": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Algebra/Group/Subsemigroup/Membership.lean"
    },
    ".lake.packages.mathlib.Mathlib.Algebra.Group.TypeTags.Finite": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Algebra/Group/TypeTags/Finite.lean"
    },
    ".lake.packages.mathlib.Mathlib.Algebra.Group.TypeTags.Basic": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Algebra/Group/TypeTags/Basic.lean"
    },
    ".lake.packages.mathlib.Mathlib.Algebra.Group.TypeTags.Hom": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Algebra/Group/TypeTags/Hom.lean"
    },
    ".lake.packages.mathlib.Mathlib.Algebra.MvPolynomial.SchwartzZippel": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Algebra/MvPolynomial/SchwartzZippel.lean"
    },
    ".lake.packages.mathlib.Mathlib.Algebra.MvPolynomial.PDeriv": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Algebra/MvPolynomial/PDeriv.lean"
    },
    ".lake.packages.mathlib.Mathlib.Algebra.MvPolynomial.Derivation": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Algebra/MvPolynomial/Derivation.lean"
    },
    ".lake.packages.mathlib.Mathlib.Algebra.MvPolynomial.Nilpotent": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Algebra/MvPolynomial/Nilpotent.lean"
    },
    ".lake.packages.mathlib.Mathlib.Algebra.MvPolynomial.Comap": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Algebra/MvPolynomial/Comap.lean"
    },
    ".lake.packages.mathlib.Mathlib.Algebra.MvPolynomial.Variables": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Algebra/MvPolynomial/Variables.lean"
    },
    ".lake.packages.mathlib.Mathlib.Algebra.MvPolynomial.Expand": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Algebra/MvPolynomial/Expand.lean"
    },
    ".lake.packages.mathlib.Mathlib.Algebra.MvPolynomial.Rename": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Algebra/MvPolynomial/Rename.lean"
    },
    ".lake.packages.mathlib.Mathlib.Algebra.MvPolynomial.Eval": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Algebra/MvPolynomial/Eval.lean"
    },
    ".lake.packages.mathlib.Mathlib.Algebra.MvPolynomial.Degrees": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Algebra/MvPolynomial/Degrees.lean"
    },
    ".lake.packages.mathlib.Mathlib.Algebra.MvPolynomial.Invertible": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Algebra/MvPolynomial/Invertible.lean"
    },
    ".lake.packages.mathlib.Mathlib.Algebra.MvPolynomial.Monad": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Algebra/MvPolynomial/Monad.lean"
    },
    ".lake.packages.mathlib.Mathlib.Algebra.MvPolynomial.CommRing": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Algebra/MvPolynomial/CommRing.lean"
    },
    ".lake.packages.mathlib.Mathlib.Algebra.MvPolynomial.Basic": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Algebra/MvPolynomial/Basic.lean"
    },
    ".lake.packages.mathlib.Mathlib.Algebra.MvPolynomial.Counit": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Algebra/MvPolynomial/Counit.lean"
    },
    ".lake.packages.mathlib.Mathlib.Algebra.MvPolynomial.Division": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Algebra/MvPolynomial/Division.lean"
    },
    ".lake.packages.mathlib.Mathlib.Algebra.MvPolynomial.Supported": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Algebra/MvPolynomial/Supported.lean"
    },
    ".lake.packages.mathlib.Mathlib.Algebra.MvPolynomial.Equiv": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Algebra/MvPolynomial/Equiv.lean"
    },
    ".lake.packages.mathlib.Mathlib.Algebra.MvPolynomial.Polynomial": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Algebra/MvPolynomial/Polynomial.lean"
    },
    ".lake.packages.mathlib.Mathlib.Algebra.MvPolynomial.Cardinal": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Algebra/MvPolynomial/Cardinal.lean"
    },
    ".lake.packages.mathlib.Mathlib.Algebra.MvPolynomial.Funext": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Algebra/MvPolynomial/Funext.lean"
    },
    ".lake.packages.mathlib.Mathlib.Algebra.GCDMonoid.PUnit": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Algebra/GCDMonoid/PUnit.lean"
    },
    ".lake.packages.mathlib.Mathlib.Algebra.GCDMonoid.Nat": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Algebra/GCDMonoid/Nat.lean"
    },
    ".lake.packages.mathlib.Mathlib.Algebra.GCDMonoid.IntegrallyClosed": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Algebra/GCDMonoid/IntegrallyClosed.lean"
    },
    ".lake.packages.mathlib.Mathlib.Algebra.GCDMonoid.Finset": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Algebra/GCDMonoid/Finset.lean"
    },
    ".lake.packages.mathlib.Mathlib.Algebra.GCDMonoid.Basic": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Algebra/GCDMonoid/Basic.lean"
    },
    ".lake.packages.mathlib.Mathlib.Algebra.GCDMonoid.Multiset": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Algebra/GCDMonoid/Multiset.lean"
    },
    ".lake.packages.mathlib.Mathlib.Algebra.BigOperators.Finprod": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Algebra/BigOperators/Finprod.lean"
    },
    ".lake.packages.mathlib.Mathlib.Algebra.BigOperators.WithTop": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Algebra/BigOperators/WithTop.lean"
    },
    ".lake.packages.mathlib.Mathlib.Algebra.BigOperators.RingEquiv": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Algebra/BigOperators/RingEquiv.lean"
    },
    ".lake.packages.mathlib.Mathlib.Algebra.BigOperators.Fin": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Algebra/BigOperators/Fin.lean"
    },
    ".lake.packages.mathlib.Mathlib.Algebra.BigOperators.Option": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Algebra/BigOperators/Option.lean"
    },
    ".lake.packages.mathlib.Mathlib.Algebra.BigOperators.Expect": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Algebra/BigOperators/Expect.lean"
    },
    ".lake.packages.mathlib.Mathlib.Algebra.BigOperators.Module": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Algebra/BigOperators/Module.lean"
    },
    ".lake.packages.mathlib.Mathlib.Algebra.BigOperators.Pi": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Algebra/BigOperators/Pi.lean"
    },
    ".lake.packages.mathlib.Mathlib.Algebra.BigOperators.Balance": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Algebra/BigOperators/Balance.lean"
    },
    ".lake.packages.mathlib.Mathlib.Algebra.BigOperators.Field": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Algebra/BigOperators/Field.lean"
    },
    ".lake.packages.mathlib.Mathlib.Algebra.BigOperators.NatAntidiagonal": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Algebra/BigOperators/NatAntidiagonal.lean"
    },
    ".lake.packages.mathlib.Mathlib.Algebra.BigOperators.Associated": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Algebra/BigOperators/Associated.lean"
    },
    ".lake.packages.mathlib.Mathlib.Algebra.BigOperators.Intervals": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Algebra/BigOperators/Intervals.lean"
    },
    ".lake.packages.mathlib.Mathlib.Algebra.BigOperators.Sym": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Algebra/BigOperators/Sym.lean"
    },
    ".lake.packages.mathlib.Mathlib.Algebra.BigOperators.Finsupp.Fin": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Algebra/BigOperators/Finsupp/Fin.lean"
    },
    ".lake.packages.mathlib.Mathlib.Algebra.BigOperators.Finsupp.Basic": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Algebra/BigOperators/Finsupp/Basic.lean"
    },
    ".lake.packages.mathlib.Mathlib.Algebra.BigOperators.Group.Finset.Indicator": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Algebra/BigOperators/Group/Finset/Indicator.lean"
    },
    ".lake.packages.mathlib.Mathlib.Algebra.BigOperators.Group.Finset.Lemmas": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Algebra/BigOperators/Group/Finset/Lemmas.lean"
    },
    ".lake.packages.mathlib.Mathlib.Algebra.BigOperators.Group.Finset.Piecewise": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Algebra/BigOperators/Group/Finset/Piecewise.lean"
    },
    ".lake.packages.mathlib.Mathlib.Algebra.BigOperators.Group.Finset.Sigma": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Algebra/BigOperators/Group/Finset/Sigma.lean"
    },
    ".lake.packages.mathlib.Mathlib.Algebra.BigOperators.Group.Finset.Pi": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Algebra/BigOperators/Group/Finset/Pi.lean"
    },
    ".lake.packages.mathlib.Mathlib.Algebra.BigOperators.Group.Finset.Basic": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Algebra/BigOperators/Group/Finset/Basic.lean"
    },
    ".lake.packages.mathlib.Mathlib.Algebra.BigOperators.Group.Finset.Powerset": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Algebra/BigOperators/Group/Finset/Powerset.lean"
    },
    ".lake.packages.mathlib.Mathlib.Algebra.BigOperators.Group.Finset.Defs": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Algebra/BigOperators/Group/Finset/Defs.lean"
    },
    ".lake.packages.mathlib.Mathlib.Algebra.BigOperators.Group.Finset.Preimage": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Algebra/BigOperators/Group/Finset/Preimage.lean"
    },
    ".lake.packages.mathlib.Mathlib.Algebra.BigOperators.Group.List.Lemmas": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Algebra/BigOperators/Group/List/Lemmas.lean"
    },
    ".lake.packages.mathlib.Mathlib.Algebra.BigOperators.Group.List.Basic": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Algebra/BigOperators/Group/List/Basic.lean"
    },
    ".lake.packages.mathlib.Mathlib.Algebra.BigOperators.Group.List.Defs": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Algebra/BigOperators/Group/List/Defs.lean"
    },
    ".lake.packages.mathlib.Mathlib.Algebra.BigOperators.Group.Multiset.Basic": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Algebra/BigOperators/Group/Multiset/Basic.lean"
    },
    ".lake.packages.mathlib.Mathlib.Algebra.BigOperators.Group.Multiset.Defs": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Algebra/BigOperators/Group/Multiset/Defs.lean"
    },
    ".lake.packages.mathlib.Mathlib.Algebra.BigOperators.GroupWithZero.Finset": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Algebra/BigOperators/GroupWithZero/Finset.lean"
    },
    ".lake.packages.mathlib.Mathlib.Algebra.BigOperators.GroupWithZero.Action": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Algebra/BigOperators/GroupWithZero/Action.lean"
    },
    ".lake.packages.mathlib.Mathlib.Algebra.BigOperators.Ring.List": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Algebra/BigOperators/Ring/List.lean"
    },
    ".lake.packages.mathlib.Mathlib.Algebra.BigOperators.Ring.Nat": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Algebra/BigOperators/Ring/Nat.lean"
    },
    ".lake.packages.mathlib.Mathlib.Algebra.BigOperators.Ring.Finset": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Algebra/BigOperators/Ring/Finset.lean"
    },
    ".lake.packages.mathlib.Mathlib.Algebra.BigOperators.Ring.Multiset": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Algebra/BigOperators/Ring/Multiset.lean"
    },
    ".lake.packages.mathlib.Mathlib.Algebra.Module.GradedModule": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Algebra/Module/GradedModule.lean"
    },
    ".lake.packages.mathlib.Mathlib.Algebra.Module.SpanRank": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Algebra/Module/SpanRank.lean"
    },
    ".lake.packages.mathlib.Mathlib.Algebra.Module.Card": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Algebra/Module/Card.lean"
    },
    ".lake.packages.mathlib.Mathlib.Algebra.Module.Opposite": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Algebra/Module/Opposite.lean"
    },
    ".lake.packages.mathlib.Mathlib.Algebra.Module.DedekindDomain": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Algebra/Module/DedekindDomain.lean"
    },
    ".lake.packages.mathlib.Mathlib.Algebra.Module.NatInt": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Algebra/Module/NatInt.lean"
    },
    ".lake.packages.mathlib.Mathlib.Algebra.Module.Rat": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Algebra/Module/Rat.lean"
    },
    ".lake.packages.mathlib.Mathlib.Algebra.Module.TransferInstance": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Algebra/Module/TransferInstance.lean"
    },
    ".lake.packages.mathlib.Mathlib.Algebra.Module.PUnit": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Algebra/Module/PUnit.lean"
    },
    ".lake.packages.mathlib.Mathlib.Algebra.Module.Bimodule": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Algebra/Module/Bimodule.lean"
    },
    ".lake.packages.mathlib.Mathlib.Algebra.Module.Prod": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Algebra/Module/Prod.lean"
    },
    ".lake.packages.mathlib.Mathlib.Algebra.Module.PID": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Algebra/Module/PID.lean"
    },
    ".lake.packages.mathlib.Mathlib.Algebra.Module.Pi": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Algebra/Module/Pi.lean"
    },
    ".lake.packages.mathlib.Mathlib.Algebra.Module.Basic": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Algebra/Module/Basic.lean"
    },
    ".lake.packages.mathlib.Mathlib.Algebra.Module.ULift": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Algebra/Module/ULift.lean"
    },
    ".lake.packages.mathlib.Mathlib.Algebra.Module.End": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Algebra/Module/End.lean"
    },
    ".lake.packages.mathlib.Mathlib.Algebra.Module.RingHom": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Algebra/Module/RingHom.lean"
    },
    ".lake.packages.mathlib.Mathlib.Algebra.Module.PointwisePi": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Algebra/Module/PointwisePi.lean"
    },
    ".lake.packages.mathlib.Mathlib.Algebra.Module.Defs": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Algebra/Module/Defs.lean"
    },
    ".lake.packages.mathlib.Mathlib.Algebra.Module.CharacterModule": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Algebra/Module/CharacterModule.lean"
    },
    ".lake.packages.mathlib.Mathlib.Algebra.Module.Shrink": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Algebra/Module/Shrink.lean"
    },
    ".lake.packages.mathlib.Mathlib.Algebra.Module.Injective": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Algebra/Module/Injective.lean"
    },
    ".lake.packages.mathlib.Mathlib.Algebra.Module.Torsion": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Algebra/Module/Torsion.lean"
    },
    ".lake.packages.mathlib.Mathlib.Algebra.Module.Projective": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Algebra/Module/Projective.lean"
    },
    ".lake.packages.mathlib.Mathlib.Algebra.Module.BigOperators": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Algebra/Module/BigOperators.lean"
    },
    ".lake.packages.mathlib.Mathlib.Algebra.Module.FinitePresentation": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Algebra/Module/FinitePresentation.lean"
    },
    ".lake.packages.mathlib.Mathlib.Algebra.Module.ZMod": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Algebra/Module/ZMod.lean"
    },
    ".lake.packages.mathlib.Mathlib.Algebra.Module.Lattice": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Algebra/Module/Lattice.lean"
    },
    ".lake.packages.mathlib.Mathlib.Algebra.Module.MinimalAxioms": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Algebra/Module/MinimalAxioms.lean"
    },
    ".lake.packages.mathlib.Mathlib.Algebra.Module.SnakeLemma": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Algebra/Module/SnakeLemma.lean"
    },
    ".lake.packages.mathlib.Mathlib.Algebra.Module.Hom": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Algebra/Module/Hom.lean"
    },
    ".lake.packages.mathlib.Mathlib.Algebra.Module.LocalizedModule.Away": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Algebra/Module/LocalizedModule/Away.lean"
    },
    ".lake.packages.mathlib.Mathlib.Algebra.Module.LocalizedModule.Int": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Algebra/Module/LocalizedModule/Int.lean"
    },
    ".lake.packages.mathlib.Mathlib.Algebra.Module.LocalizedModule.AtPrime": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Algebra/Module/LocalizedModule/AtPrime.lean"
    },
    ".lake.packages.mathlib.Mathlib.Algebra.Module.LocalizedModule.Basic": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Algebra/Module/LocalizedModule/Basic.lean"
    },
    ".lake.packages.mathlib.Mathlib.Algebra.Module.LocalizedModule.IsLocalization": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Algebra/Module/LocalizedModule/IsLocalization.lean"
    },
    ".lake.packages.mathlib.Mathlib.Algebra.Module.LocalizedModule.Exact": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Algebra/Module/LocalizedModule/Exact.lean"
    },
    ".lake.packages.mathlib.Mathlib.Algebra.Module.LocalizedModule.Submodule": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Algebra/Module/LocalizedModule/Submodule.lean"
    },
    ".lake.packages.mathlib.Mathlib.Algebra.Module.Submodule.RestrictScalars": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Algebra/Module/Submodule/RestrictScalars.lean"
    },
    ".lake.packages.mathlib.Mathlib.Algebra.Module.Submodule.Bilinear": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Algebra/Module/Submodule/Bilinear.lean"
    },
    ".lake.packages.mathlib.Mathlib.Algebra.Module.Submodule.Invariant": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Algebra/Module/Submodule/Invariant.lean"
    },
    ".lake.packages.mathlib.Mathlib.Algebra.Module.Submodule.Pointwise": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Algebra/Module/Submodule/Pointwise.lean"
    },
    ".lake.packages.mathlib.Mathlib.Algebra.Module.Submodule.Order": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Algebra/Module/Submodule/Order.lean"
    },
    ".lake.packages.mathlib.Mathlib.Algebra.Module.Submodule.Map": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Algebra/Module/Submodule/Map.lean"
    },
    ".lake.packages.mathlib.Mathlib.Algebra.Module.Submodule.EqLocus": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Algebra/Module/Submodule/EqLocus.lean"
    },
    ".lake.packages.mathlib.Mathlib.Algebra.Module.Submodule.Basic": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Algebra/Module/Submodule/Basic.lean"
    },
    ".lake.packages.mathlib.Mathlib.Algebra.Module.Submodule.Defs": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Algebra/Module/Submodule/Defs.lean"
    },
    ".lake.packages.mathlib.Mathlib.Algebra.Module.Submodule.LinearMap": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Algebra/Module/Submodule/LinearMap.lean"
    },
    ".lake.packages.mathlib.Mathlib.Algebra.Module.Submodule.Equiv": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Algebra/Module/Submodule/Equiv.lean"
    },
    ".lake.packages.mathlib.Mathlib.Algebra.Module.Submodule.Range": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Algebra/Module/Submodule/Range.lean"
    },
    ".lake.packages.mathlib.Mathlib.Algebra.Module.Submodule.Ker": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Algebra/Module/Submodule/Ker.lean"
    },
    ".lake.packages.mathlib.Mathlib.Algebra.Module.Submodule.Lattice": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Algebra/Module/Submodule/Lattice.lean"
    },
    ".lake.packages.mathlib.Mathlib.Algebra.Module.Submodule.IterateMapComap": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Algebra/Module/Submodule/IterateMapComap.lean"
    },
    ".lake.packages.mathlib.Mathlib.Algebra.Module.Equiv.Opposite": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Algebra/Module/Equiv/Opposite.lean"
    },
    ".lake.packages.mathlib.Mathlib.Algebra.Module.Equiv.Basic": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Algebra/Module/Equiv/Basic.lean"
    },
    ".lake.packages.mathlib.Mathlib.Algebra.Module.Equiv.Defs": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Algebra/Module/Equiv/Defs.lean"
    },
    ".lake.packages.mathlib.Mathlib.Algebra.Module.LinearMap.Rat": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Algebra/Module/LinearMap/Rat.lean"
    },
    ".lake.packages.mathlib.Mathlib.Algebra.Module.LinearMap.Star": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Algebra/Module/LinearMap/Star.lean"
    },
    ".lake.packages.mathlib.Mathlib.Algebra.Module.LinearMap.Prod": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Algebra/Module/LinearMap/Prod.lean"
    },
    ".lake.packages.mathlib.Mathlib.Algebra.Module.LinearMap.Basic": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Algebra/Module/LinearMap/Basic.lean"
    },
    ".lake.packages.mathlib.Mathlib.Algebra.Module.LinearMap.End": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Algebra/Module/LinearMap/End.lean"
    },
    ".lake.packages.mathlib.Mathlib.Algebra.Module.LinearMap.Defs": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Algebra/Module/LinearMap/Defs.lean"
    },
    ".lake.packages.mathlib.Mathlib.Algebra.Module.LinearMap.Polynomial": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Algebra/Module/LinearMap/Polynomial.lean"
    },
    ".lake.packages.mathlib.Mathlib.Algebra.Module.Presentation.Finite": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Algebra/Module/Presentation/Finite.lean"
    },
    ".lake.packages.mathlib.Mathlib.Algebra.Module.Presentation.DirectSum": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Algebra/Module/Presentation/DirectSum.lean"
    },
    ".lake.packages.mathlib.Mathlib.Algebra.Module.Presentation.RestrictScalars": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Algebra/Module/Presentation/RestrictScalars.lean"
    },
    ".lake.packages.mathlib.Mathlib.Algebra.Module.Presentation.Differentials": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Algebra/Module/Presentation/Differentials.lean"
    },
    ".lake.packages.mathlib.Mathlib.Algebra.Module.Presentation.Tautological": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Algebra/Module/Presentation/Tautological.lean"
    },
    ".lake.packages.mathlib.Mathlib.Algebra.Module.Presentation.Basic": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Algebra/Module/Presentation/Basic.lean"
    },
    ".lake.packages.mathlib.Mathlib.Algebra.Module.Presentation.Cokernel": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Algebra/Module/Presentation/Cokernel.lean"
    },
    ".lake.packages.mathlib.Mathlib.Algebra.Module.Presentation.Free": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Algebra/Module/Presentation/Free.lean"
    },
    ".lake.packages.mathlib.Mathlib.Algebra.Module.Presentation.Tensor": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Algebra/Module/Presentation/Tensor.lean"
    },
    ".lake.packages.mathlib.Mathlib.Algebra.Module.ZLattice.Basic": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Algebra/Module/ZLattice/Basic.lean"
    },
    ".lake.packages.mathlib.Mathlib.Algebra.Module.ZLattice.Covolume": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Algebra/Module/ZLattice/Covolume.lean"
    },
    ".lake.packages.mathlib.Mathlib.Algebra.FreeAbelianGroup.UniqueSums": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Algebra/FreeAbelianGroup/UniqueSums.lean"
    },
    ".lake.packages.mathlib.Mathlib.Algebra.FreeAbelianGroup.Finsupp": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Algebra/FreeAbelianGroup/Finsupp.lean"
    },
    ".lake.packages.mathlib.Mathlib.Algebra.Divisibility.Finite": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Algebra/Divisibility/Finite.lean"
    },
    ".lake.packages.mathlib.Mathlib.Algebra.Divisibility.Prod": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Algebra/Divisibility/Prod.lean"
    },
    ".lake.packages.mathlib.Mathlib.Algebra.Divisibility.Basic": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Algebra/Divisibility/Basic.lean"
    },
    ".lake.packages.mathlib.Mathlib.Algebra.Divisibility.Units": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Algebra/Divisibility/Units.lean"
    },
    ".lake.packages.mathlib.Mathlib.Algebra.Divisibility.Hom": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Algebra/Divisibility/Hom.lean"
    },
    ".lake.packages.mathlib.Mathlib.Algebra.PresentedMonoid.Basic": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Algebra/PresentedMonoid/Basic.lean"
    },
    ".lake.packages.mathlib.Mathlib.Algebra.EuclideanDomain.Int": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Algebra/EuclideanDomain/Int.lean"
    },
    ".lake.packages.mathlib.Mathlib.Algebra.EuclideanDomain.Basic": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Algebra/EuclideanDomain/Basic.lean"
    },
    ".lake.packages.mathlib.Mathlib.Algebra.EuclideanDomain.Defs": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Algebra/EuclideanDomain/Defs.lean"
    },
    ".lake.packages.mathlib.Mathlib.Algebra.EuclideanDomain.Field": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Algebra/EuclideanDomain/Field.lean"
    },
    ".lake.packages.mathlib.Mathlib.Algebra.GroupWithZero.Idempotent": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Algebra/GroupWithZero/Idempotent.lean"
    },
    ".lake.packages.mathlib.Mathlib.Algebra.GroupWithZero.Opposite": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Algebra/GroupWithZero/Opposite.lean"
    },
    ".lake.packages.mathlib.Mathlib.Algebra.GroupWithZero.Semiconj": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Algebra/GroupWithZero/Semiconj.lean"
    },
    ".lake.packages.mathlib.Mathlib.Algebra.GroupWithZero.Int": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Algebra/GroupWithZero/Int.lean"
    },
    ".lake.packages.mathlib.Mathlib.Algebra.GroupWithZero.WithZero": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Algebra/GroupWithZero/WithZero.lean"
    },
    ".lake.packages.mathlib.Mathlib.Algebra.GroupWithZero.Regular": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Algebra/GroupWithZero/Regular.lean"
    },
    ".lake.packages.mathlib.Mathlib.Algebra.GroupWithZero.Indicator": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Algebra/GroupWithZero/Indicator.lean"
    },
    ".lake.packages.mathlib.Mathlib.Algebra.GroupWithZero.TransferInstance": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Algebra/GroupWithZero/TransferInstance.lean"
    },
    ".lake.packages.mathlib.Mathlib.Algebra.GroupWithZero.ProdHom": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Algebra/GroupWithZero/ProdHom.lean"
    },
    ".lake.packages.mathlib.Mathlib.Algebra.GroupWithZero.Prod": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Algebra/GroupWithZero/Prod.lean"
    },
    ".lake.packages.mathlib.Mathlib.Algebra.GroupWithZero.Nat": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Algebra/GroupWithZero/Nat.lean"
    },
    ".lake.packages.mathlib.Mathlib.Algebra.GroupWithZero.Invertible": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Algebra/GroupWithZero/Invertible.lean"
    },
    ".lake.packages.mathlib.Mathlib.Algebra.GroupWithZero.Pi": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Algebra/GroupWithZero/Pi.lean"
    },
    ".lake.packages.mathlib.Mathlib.Algebra.GroupWithZero.Center": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Algebra/GroupWithZero/Center.lean"
    },
    ".lake.packages.mathlib.Mathlib.Algebra.GroupWithZero.Commute": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Algebra/GroupWithZero/Commute.lean"
    },
    ".lake.packages.mathlib.Mathlib.Algebra.GroupWithZero.Basic": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Algebra/GroupWithZero/Basic.lean"
    },
    ".lake.packages.mathlib.Mathlib.Algebra.GroupWithZero.ULift": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Algebra/GroupWithZero/ULift.lean"
    },
    ".lake.packages.mathlib.Mathlib.Algebra.GroupWithZero.Conj": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Algebra/GroupWithZero/Conj.lean"
    },
    ".lake.packages.mathlib.Mathlib.Algebra.GroupWithZero.InjSurj": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Algebra/GroupWithZero/InjSurj.lean"
    },
    ".lake.packages.mathlib.Mathlib.Algebra.GroupWithZero.Defs": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Algebra/GroupWithZero/Defs.lean"
    },
    ".lake.packages.mathlib.Mathlib.Algebra.GroupWithZero.Shrink": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Algebra/GroupWithZero/Shrink.lean"
    },
    ".lake.packages.mathlib.Mathlib.Algebra.GroupWithZero.NonZeroDivisors": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Algebra/GroupWithZero/NonZeroDivisors.lean"
    },
    ".lake.packages.mathlib.Mathlib.Algebra.GroupWithZero.Subgroup": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Algebra/GroupWithZero/Subgroup.lean"
    },
    ".lake.packages.mathlib.Mathlib.Algebra.GroupWithZero.Divisibility": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Algebra/GroupWithZero/Divisibility.lean"
    },
    ".lake.packages.mathlib.Mathlib.Algebra.GroupWithZero.Equiv": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Algebra/GroupWithZero/Equiv.lean"
    },
    ".lake.packages.mathlib.Mathlib.Algebra.GroupWithZero.Range": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Algebra/GroupWithZero/Range.lean"
    },
    ".lake.packages.mathlib.Mathlib.Algebra.GroupWithZero.NeZero": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Algebra/GroupWithZero/NeZero.lean"
    },
    ".lake.packages.mathlib.Mathlib.Algebra.GroupWithZero.Hom": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Algebra/GroupWithZero/Hom.lean"
    },
    ".lake.packages.mathlib.Mathlib.Algebra.GroupWithZero.Associated": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Algebra/GroupWithZero/Associated.lean"
    },
    ".lake.packages.mathlib.Mathlib.Algebra.GroupWithZero.Submonoid.Pointwise": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Algebra/GroupWithZero/Submonoid/Pointwise.lean"
    },
    ".lake.packages.mathlib.Mathlib.Algebra.GroupWithZero.Submonoid.Primal": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Algebra/GroupWithZero/Submonoid/Primal.lean"
    },
    ".lake.packages.mathlib.Mathlib.Algebra.GroupWithZero.Units.Lemmas": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Algebra/GroupWithZero/Units/Lemmas.lean"
    },
    ".lake.packages.mathlib.Mathlib.Algebra.GroupWithZero.Units.Basic": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Algebra/GroupWithZero/Units/Basic.lean"
    },
    ".lake.packages.mathlib.Mathlib.Algebra.GroupWithZero.Units.Equiv": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Algebra/GroupWithZero/Units/Equiv.lean"
    },
    ".lake.packages.mathlib.Mathlib.Algebra.GroupWithZero.Action.Opposite": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Algebra/GroupWithZero/Action/Opposite.lean"
    },
    ".lake.packages.mathlib.Mathlib.Algebra.GroupWithZero.Action.Faithful": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Algebra/GroupWithZero/Action/Faithful.lean"
    },
    ".lake.packages.mathlib.Mathlib.Algebra.GroupWithZero.Action.ConjAct": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Algebra/GroupWithZero/Action/ConjAct.lean"
    },
    ".lake.packages.mathlib.Mathlib.Algebra.GroupWithZero.Action.Prod": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Algebra/GroupWithZero/Action/Prod.lean"
    },
    ".lake.packages.mathlib.Mathlib.Algebra.GroupWithZero.Action.Pi": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Algebra/GroupWithZero/Action/Pi.lean"
    },
    ".lake.packages.mathlib.Mathlib.Algebra.GroupWithZero.Action.Center": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Algebra/GroupWithZero/Action/Center.lean"
    },
    ".lake.packages.mathlib.Mathlib.Algebra.GroupWithZero.Action.Basic": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Algebra/GroupWithZero/Action/Basic.lean"
    },
    ".lake.packages.mathlib.Mathlib.Algebra.GroupWithZero.Action.End": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Algebra/GroupWithZero/Action/End.lean"
    },
    ".lake.packages.mathlib.Mathlib.Algebra.GroupWithZero.Action.Defs": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Algebra/GroupWithZero/Action/Defs.lean"
    },
    ".lake.packages.mathlib.Mathlib.Algebra.GroupWithZero.Action.Units": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Algebra/GroupWithZero/Action/Units.lean"
    },
    ".lake.packages.mathlib.Mathlib.Algebra.GroupWithZero.Action.Hom": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Algebra/GroupWithZero/Action/Hom.lean"
    },
    ".lake.packages.mathlib.Mathlib.Algebra.GroupWithZero.Action.Pointwise.Finset": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Algebra/GroupWithZero/Action/Pointwise/Finset.lean"
    },
    ".lake.packages.mathlib.Mathlib.Algebra.GroupWithZero.Action.Pointwise.Set": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Algebra/GroupWithZero/Action/Pointwise/Set.lean"
    },
    ".lake.packages.mathlib.Mathlib.Algebra.GroupWithZero.Pointwise.Finset": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Algebra/GroupWithZero/Pointwise/Finset.lean"
    },
    ".lake.packages.mathlib.Mathlib.Algebra.GroupWithZero.Pointwise.Set.Card": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Algebra/GroupWithZero/Pointwise/Set/Card.lean"
    },
    ".lake.packages.mathlib.Mathlib.Algebra.GroupWithZero.Pointwise.Set.Basic": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Algebra/GroupWithZero/Pointwise/Set/Basic.lean"
    },
    ".lake.packages.mathlib.Mathlib.Algebra.Field.Opposite": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Algebra/Field/Opposite.lean"
    },
    ".lake.packages.mathlib.Mathlib.Algebra.Field.Rat": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Algebra/Field/Rat.lean"
    },
    ".lake.packages.mathlib.Mathlib.Algebra.Field.TransferInstance": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Algebra/Field/TransferInstance.lean"
    },
    ".lake.packages.mathlib.Mathlib.Algebra.Field.NegOnePow": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Algebra/Field/NegOnePow.lean"
    },
    ".lake.packages.mathlib.Mathlib.Algebra.Field.IsField": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Algebra/Field/IsField.lean"
    },
    ".lake.packages.mathlib.Mathlib.Algebra.Field.Basic": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Algebra/Field/Basic.lean"
    },
    ".lake.packages.mathlib.Mathlib.Algebra.Field.ULift": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Algebra/Field/ULift.lean"
    },
    ".lake.packages.mathlib.Mathlib.Algebra.Field.Defs": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Algebra/Field/Defs.lean"
    },
    ".lake.packages.mathlib.Mathlib.Algebra.Field.Shrink": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Algebra/Field/Shrink.lean"
    },
    ".lake.packages.mathlib.Mathlib.Algebra.Field.Power": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Algebra/Field/Power.lean"
    },
    ".lake.packages.mathlib.Mathlib.Algebra.Field.Equiv": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Algebra/Field/Equiv.lean"
    },
    ".lake.packages.mathlib.Mathlib.Algebra.Field.Periodic": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Algebra/Field/Periodic.lean"
    },
    ".lake.packages.mathlib.Mathlib.Algebra.Field.ZMod": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Algebra/Field/ZMod.lean"
    },
    ".lake.packages.mathlib.Mathlib.Algebra.Field.MinimalAxioms": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Algebra/Field/MinimalAxioms.lean"
    },
    ".lake.packages.mathlib.Mathlib.Algebra.Field.Action.ConjAct": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Algebra/Field/Action/ConjAct.lean"
    },
    ".lake.packages.mathlib.Mathlib.Algebra.Field.Subfield.Basic": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Algebra/Field/Subfield/Basic.lean"
    },
    ".lake.packages.mathlib.Mathlib.Algebra.Field.Subfield.Defs": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Algebra/Field/Subfield/Defs.lean"
    },
    ".lake.packages.mathlib.Mathlib.Algebra.Star.Subalgebra": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Algebra/Star/Subalgebra.lean"
    },
    ".lake.packages.mathlib.Mathlib.Algebra.Star.Module": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Algebra/Star/Module.lean"
    },
    ".lake.packages.mathlib.Mathlib.Algebra.Star.Rat": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Algebra/Star/Rat.lean"
    },
    ".lake.packages.mathlib.Mathlib.Algebra.Star.SelfAdjoint": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Algebra/Star/SelfAdjoint.lean"
    },
    ".lake.packages.mathlib.Mathlib.Algebra.Star.Prod": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Algebra/Star/Prod.lean"
    },
    ".lake.packages.mathlib.Mathlib.Algebra.Star.Pointwise": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Algebra/Star/Pointwise.lean"
    },
    ".lake.packages.mathlib.Mathlib.Algebra.Star.StarAlgHom": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Algebra/Star/StarAlgHom.lean"
    },
    ".lake.packages.mathlib.Mathlib.Algebra.Star.Pi": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Algebra/Star/Pi.lean"
    },
    ".lake.packages.mathlib.Mathlib.Algebra.Star.Center": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Algebra/Star/Center.lean"
    },
    ".lake.packages.mathlib.Mathlib.Algebra.Star.Basic": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Algebra/Star/Basic.lean"
    },
    ".lake.packages.mathlib.Mathlib.Algebra.Star.Subsemiring": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Algebra/Star/Subsemiring.lean"
    },
    ".lake.packages.mathlib.Mathlib.Algebra.Star.NonUnitalSubsemiring": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Algebra/Star/NonUnitalSubsemiring.lean"
    },
    ".lake.packages.mathlib.Mathlib.Algebra.Star.NonUnitalSubalgebra": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Algebra/Star/NonUnitalSubalgebra.lean"
    },
    ".lake.packages.mathlib.Mathlib.Algebra.Star.CHSH": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Algebra/Star/CHSH.lean"
    },
    ".lake.packages.mathlib.Mathlib.Algebra.Star.RingQuot": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Algebra/Star/RingQuot.lean"
    },
    ".lake.packages.mathlib.Mathlib.Algebra.Star.CentroidHom": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Algebra/Star/CentroidHom.lean"
    },
    ".lake.packages.mathlib.Mathlib.Algebra.Star.Unitary": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Algebra/Star/Unitary.lean"
    },
    ".lake.packages.mathlib.Mathlib.Algebra.Star.StarProjection": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Algebra/Star/StarProjection.lean"
    },
    ".lake.packages.mathlib.Mathlib.Algebra.Star.BigOperators": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Algebra/Star/BigOperators.lean"
    },
    ".lake.packages.mathlib.Mathlib.Algebra.Star.StarRingHom": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Algebra/Star/StarRingHom.lean"
    },
    ".lake.packages.mathlib.Mathlib.Algebra.Star.Free": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Algebra/Star/Free.lean"
    },
    ".lake.packages.mathlib.Mathlib.Algebra.Star.Conjneg": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Algebra/Star/Conjneg.lean"
    },
    ".lake.packages.mathlib.Mathlib.Algebra.Tropical.Basic": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Algebra/Tropical/Basic.lean"
    },
    ".lake.packages.mathlib.Mathlib.Algebra.Tropical.BigOperators": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Algebra/Tropical/BigOperators.lean"
    },
    ".lake.packages.mathlib.Mathlib.Algebra.Tropical.Lattice": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Algebra/Tropical/Lattice.lean"
    },
    ".lake.packages.mathlib.Mathlib.Algebra.FreeMonoid.Count": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Algebra/FreeMonoid/Count.lean"
    },
    ".lake.packages.mathlib.Mathlib.Algebra.FreeMonoid.Basic": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Algebra/FreeMonoid/Basic.lean"
    },
    ".lake.packages.mathlib.Mathlib.Algebra.FreeMonoid.Symbols": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Algebra/FreeMonoid/Symbols.lean"
    },
    ".lake.packages.mathlib.Mathlib.Algebra.FreeMonoid.UniqueProds": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Algebra/FreeMonoid/UniqueProds.lean"
    },
    ".lake.packages.mathlib.Mathlib.Algebra.Lie.DirectSum": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Algebra/Lie/DirectSum.lean"
    },
    ".lake.packages.mathlib.Mathlib.Algebra.Lie.Subalgebra": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Algebra/Lie/Subalgebra.lean"
    },
    ".lake.packages.mathlib.Mathlib.Algebra.Lie.UniversalEnveloping": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Algebra/Lie/UniversalEnveloping.lean"
    },
    ".lake.packages.mathlib.Mathlib.Algebra.Lie.CartanSubalgebra": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Algebra/Lie/CartanSubalgebra.lean"
    },
    ".lake.packages.mathlib.Mathlib.Algebra.Lie.EngelSubalgebra": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Algebra/Lie/EngelSubalgebra.lean"
    },
    ".lake.packages.mathlib.Mathlib.Algebra.Lie.Matrix": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Algebra/Lie/Matrix.lean"
    },
    ".lake.packages.mathlib.Mathlib.Algebra.Lie.Nilpotent": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Algebra/Lie/Nilpotent.lean"
    },
    ".lake.packages.mathlib.Mathlib.Algebra.Lie.Solvable": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Algebra/Lie/Solvable.lean"
    },
    ".lake.packages.mathlib.Mathlib.Algebra.Lie.IdealOperations": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Algebra/Lie/IdealOperations.lean"
    },
    ".lake.packages.mathlib.Mathlib.Algebra.Lie.TensorProduct": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Algebra/Lie/TensorProduct.lean"
    },
    ".lake.packages.mathlib.Mathlib.Algebra.Lie.Abelian": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Algebra/Lie/Abelian.lean"
    },
    ".lake.packages.mathlib.Mathlib.Algebra.Lie.LieTheorem": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Algebra/Lie/LieTheorem.lean"
    },
    ".lake.packages.mathlib.Mathlib.Algebra.Lie.Rank": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Algebra/Lie/Rank.lean"
    },
    ".lake.packages.mathlib.Mathlib.Algebra.Lie.NonUnitalNonAssocAlgebra": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Algebra/Lie/NonUnitalNonAssocAlgebra.lean"
    },
    ".lake.packages.mathlib.Mathlib.Algebra.Lie.InvariantForm": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Algebra/Lie/InvariantForm.lean"
    },
    ".lake.packages.mathlib.Mathlib.Algebra.Lie.OfAssociative": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Algebra/Lie/OfAssociative.lean"
    },
    ".lake.packages.mathlib.Mathlib.Algebra.Lie.Extension": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Algebra/Lie/Extension.lean"
    },
    ".lake.packages.mathlib.Mathlib.Algebra.Lie.SkewAdjoint": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Algebra/Lie/SkewAdjoint.lean"
    },
    ".lake.packages.mathlib.Mathlib.Algebra.Lie.Basic": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Algebra/Lie/Basic.lean"
    },
    ".lake.packages.mathlib.Mathlib.Algebra.Lie.Quotient": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Algebra/Lie/Quotient.lean"
    },
    ".lake.packages.mathlib.Mathlib.Algebra.Lie.Ideal": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Algebra/Lie/Ideal.lean"
    },
    ".lake.packages.mathlib.Mathlib.Algebra.Lie.Sl2": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Algebra/Lie/Sl2.lean"
    },
    ".lake.packages.mathlib.Mathlib.Algebra.Lie.CartanExists": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Algebra/Lie/CartanExists.lean"
    },
    ".lake.packages.mathlib.Mathlib.Algebra.Lie.Killing": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Algebra/Lie/Killing.lean"
    },
    ".lake.packages.mathlib.Mathlib.Algebra.Lie.Engel": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Algebra/Lie/Engel.lean"
    },
    ".lake.packages.mathlib.Mathlib.Algebra.Lie.Submodule": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Algebra/Lie/Submodule.lean"
    },
    ".lake.packages.mathlib.Mathlib.Algebra.Lie.CartanMatrix": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Algebra/Lie/CartanMatrix.lean"
    },
    ".lake.packages.mathlib.Mathlib.Algebra.Lie.TraceForm": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Algebra/Lie/TraceForm.lean"
    },
    ".lake.packages.mathlib.Mathlib.Algebra.Lie.Classical": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Algebra/Lie/Classical.lean"
    },
    ".lake.packages.mathlib.Mathlib.Algebra.Lie.BaseChange": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Algebra/Lie/BaseChange.lean"
    },
    ".lake.packages.mathlib.Mathlib.Algebra.Lie.Free": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Algebra/Lie/Free.lean"
    },
    ".lake.packages.mathlib.Mathlib.Algebra.Lie.Character": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Algebra/Lie/Character.lean"
    },
    ".lake.packages.mathlib.Mathlib.Algebra.Lie.Normalizer": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Algebra/Lie/Normalizer.lean"
    },
    ".lake.packages.mathlib.Mathlib.Algebra.Lie.Semisimple.Lemmas": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Algebra/Lie/Semisimple/Lemmas.lean"
    },
    ".lake.packages.mathlib.Mathlib.Algebra.Lie.Semisimple.Basic": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Algebra/Lie/Semisimple/Basic.lean"
    },
    ".lake.packages.mathlib.Mathlib.Algebra.Lie.Semisimple.Defs": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Algebra/Lie/Semisimple/Defs.lean"
    },
    ".lake.packages.mathlib.Mathlib.Algebra.Lie.Derivation.AdjointAction": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Algebra/Lie/Derivation/AdjointAction.lean"
    },
    ".lake.packages.mathlib.Mathlib.Algebra.Lie.Derivation.Basic": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Algebra/Lie/Derivation/Basic.lean"
    },
    ".lake.packages.mathlib.Mathlib.Algebra.Lie.Derivation.Killing": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Algebra/Lie/Derivation/Killing.lean"
    },
    ".lake.packages.mathlib.Mathlib.Algebra.Lie.Weights.Chain": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Algebra/Lie/Weights/Chain.lean"
    },
    ".lake.packages.mathlib.Mathlib.Algebra.Lie.Weights.Cartan": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Algebra/Lie/Weights/Cartan.lean"
    },
    ".lake.packages.mathlib.Mathlib.Algebra.Lie.Weights.Linear": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Algebra/Lie/Weights/Linear.lean"
    },
    ".lake.packages.mathlib.Mathlib.Algebra.Lie.Weights.Basic": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Algebra/Lie/Weights/Basic.lean"
    },
    ".lake.packages.mathlib.Mathlib.Algebra.Lie.Weights.RootSystem": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Algebra/Lie/Weights/RootSystem.lean"
    },
    ".lake.packages.mathlib.Mathlib.Algebra.Lie.Weights.Killing": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Algebra/Lie/Weights/Killing.lean"
    },
    ".lake.packages.mathlib.Mathlib.Algebra.AddConstMap.Basic": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Algebra/AddConstMap/Basic.lean"
    },
    ".lake.packages.mathlib.Mathlib.Algebra.AddConstMap.Equiv": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Algebra/AddConstMap/Equiv.lean"
    },
    ".lake.packages.mathlib.Mathlib.Algebra.Colimit.Module": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Algebra/Colimit/Module.lean"
    },
    ".lake.packages.mathlib.Mathlib.Algebra.Colimit.Ring": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Algebra/Colimit/Ring.lean"
    },
    ".lake.packages.mathlib.Mathlib.Algebra.Colimit.TensorProduct": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Algebra/Colimit/TensorProduct.lean"
    },
    ".lake.packages.mathlib.Mathlib.Algebra.Colimit.DirectLimit": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Algebra/Colimit/DirectLimit.lean"
    },
    ".lake.packages.mathlib.Mathlib.Algebra.Colimit.Finiteness": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Algebra/Colimit/Finiteness.lean"
    },
    ".lake.packages.mathlib.Mathlib.Algebra.BrauerGroup.Defs": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Algebra/BrauerGroup/Defs.lean"
    },
    ".lake.packages.mathlib.Mathlib.Algebra.Notation.Lemmas": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Algebra/Notation/Lemmas.lean"
    },
    ".lake.packages.mathlib.Mathlib.Algebra.Notation.Prod": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Algebra/Notation/Prod.lean"
    },
    ".lake.packages.mathlib.Mathlib.Algebra.Notation.Pi": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Algebra/Notation/Pi.lean"
    },
    ".lake.packages.mathlib.Mathlib.Algebra.Notation.Defs": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Algebra/Notation/Defs.lean"
    },
    ".lake.packages.mathlib.Mathlib.Algebra.SkewMonoidAlgebra.Basic": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Algebra/SkewMonoidAlgebra/Basic.lean"
    },
    ".lake.packages.mathlib.Mathlib.Algebra.Ring.SumsOfSquares": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Algebra/Ring/SumsOfSquares.lean"
    },
    ".lake.packages.mathlib.Mathlib.Algebra.Ring.Idempotent": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Algebra/Ring/Idempotent.lean"
    },
    ".lake.packages.mathlib.Mathlib.Algebra.Ring.Fin": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Algebra/Ring/Fin.lean"
    },
    ".lake.packages.mathlib.Mathlib.Algebra.Ring.Opposite": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Algebra/Ring/Opposite.lean"
    },
    ".lake.packages.mathlib.Mathlib.Algebra.Ring.GrindInstances": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Algebra/Ring/GrindInstances.lean"
    },
    ".lake.packages.mathlib.Mathlib.Algebra.Ring.Semiconj": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Algebra/Ring/Semiconj.lean"
    },
    ".lake.packages.mathlib.Mathlib.Algebra.Ring.WithZero": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Algebra/Ring/WithZero.lean"
    },
    ".lake.packages.mathlib.Mathlib.Algebra.Ring.Regular": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Algebra/Ring/Regular.lean"
    },
    ".lake.packages.mathlib.Mathlib.Algebra.Ring.Rat": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Algebra/Ring/Rat.lean"
    },
    ".lake.packages.mathlib.Mathlib.Algebra.Ring.TransferInstance": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Algebra/Ring/TransferInstance.lean"
    },
    ".lake.packages.mathlib.Mathlib.Algebra.Ring.PUnit": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Algebra/Ring/PUnit.lean"
    },
    ".lake.packages.mathlib.Mathlib.Algebra.Ring.Aut": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Algebra/Ring/Aut.lean"
    },
    ".lake.packages.mathlib.Mathlib.Algebra.Ring.NegOnePow": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Algebra/Ring/NegOnePow.lean"
    },
    ".lake.packages.mathlib.Mathlib.Algebra.Ring.Prod": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Algebra/Ring/Prod.lean"
    },
    ".lake.packages.mathlib.Mathlib.Algebra.Ring.Nat": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Algebra/Ring/Nat.lean"
    },
    ".lake.packages.mathlib.Mathlib.Algebra.Ring.Invertible": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Algebra/Ring/Invertible.lean"
    },
    ".lake.packages.mathlib.Mathlib.Algebra.Ring.Pi": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Algebra/Ring/Pi.lean"
    },
    ".lake.packages.mathlib.Mathlib.Algebra.Ring.Center": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Algebra/Ring/Center.lean"
    },
    ".lake.packages.mathlib.Mathlib.Algebra.Ring.Commute": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Algebra/Ring/Commute.lean"
    },
    ".lake.packages.mathlib.Mathlib.Algebra.Ring.Basic": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Algebra/Ring/Basic.lean"
    },
    ".lake.packages.mathlib.Mathlib.Algebra.Ring.ULift": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Algebra/Ring/ULift.lean"
    },
    ".lake.packages.mathlib.Mathlib.Algebra.Ring.Ext": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Algebra/Ring/Ext.lean"
    },
    ".lake.packages.mathlib.Mathlib.Algebra.Ring.InjSurj": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Algebra/Ring/InjSurj.lean"
    },
    ".lake.packages.mathlib.Mathlib.Algebra.Ring.Defs": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Algebra/Ring/Defs.lean"
    },
    ".lake.packages.mathlib.Mathlib.Algebra.Ring.Shrink": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Algebra/Ring/Shrink.lean"
    },
    ".lake.packages.mathlib.Mathlib.Algebra.Ring.Submonoid": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Algebra/Ring/Submonoid.lean"
    },
    ".lake.packages.mathlib.Mathlib.Algebra.Ring.NonZeroDivisors": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Algebra/Ring/NonZeroDivisors.lean"
    },
    ".lake.packages.mathlib.Mathlib.Algebra.Ring.Subgroup": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Algebra/Ring/Subgroup.lean"
    },
    ".lake.packages.mathlib.Mathlib.Algebra.Ring.CentroidHom": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Algebra/Ring/CentroidHom.lean"
    },
    ".lake.packages.mathlib.Mathlib.Algebra.Ring.Centralizer": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Algebra/Ring/Centralizer.lean"
    },
    ".lake.packages.mathlib.Mathlib.Algebra.Ring.CharZero": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Algebra/Ring/CharZero.lean"
    },
    ".lake.packages.mathlib.Mathlib.Algebra.Ring.Equiv": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Algebra/Ring/Equiv.lean"
    },
    ".lake.packages.mathlib.Mathlib.Algebra.Ring.Periodic": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Algebra/Ring/Periodic.lean"
    },
    ".lake.packages.mathlib.Mathlib.Algebra.Ring.Parity": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Algebra/Ring/Parity.lean"
    },
    ".lake.packages.mathlib.Mathlib.Algebra.Ring.Associator": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Algebra/Ring/Associator.lean"
    },
    ".lake.packages.mathlib.Mathlib.Algebra.Ring.BooleanRing": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Algebra/Ring/BooleanRing.lean"
    },
    ".lake.packages.mathlib.Mathlib.Algebra.Ring.Identities": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Algebra/Ring/Identities.lean"
    },
    ".lake.packages.mathlib.Mathlib.Algebra.Ring.MinimalAxioms": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Algebra/Ring/MinimalAxioms.lean"
    },
    ".lake.packages.mathlib.Mathlib.Algebra.Ring.Units": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Algebra/Ring/Units.lean"
    },
    ".lake.packages.mathlib.Mathlib.Algebra.Ring.CompTypeclasses": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Algebra/Ring/CompTypeclasses.lean"
    },
    ".lake.packages.mathlib.Mathlib.Algebra.Ring.Associated": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Algebra/Ring/Associated.lean"
    },
    ".lake.packages.mathlib.Mathlib.Algebra.Ring.AddAut": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Algebra/Ring/AddAut.lean"
    },
    ".lake.packages.mathlib.Mathlib.Algebra.Ring.Hom.Basic": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Algebra/Ring/Hom/Basic.lean"
    },
    ".lake.packages.mathlib.Mathlib.Algebra.Ring.Hom.InjSurj": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Algebra/Ring/Hom/InjSurj.lean"
    },
    ".lake.packages.mathlib.Mathlib.Algebra.Ring.Hom.Defs": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Algebra/Ring/Hom/Defs.lean"
    },
    ".lake.packages.mathlib.Mathlib.Algebra.Ring.Submonoid.Pointwise": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Algebra/Ring/Submonoid/Pointwise.lean"
    },
    ".lake.packages.mathlib.Mathlib.Algebra.Ring.Submonoid.Basic": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Algebra/Ring/Submonoid/Basic.lean"
    },
    ".lake.packages.mathlib.Mathlib.Algebra.Ring.Divisibility.Lemmas": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Algebra/Ring/Divisibility/Lemmas.lean"
    },
    ".lake.packages.mathlib.Mathlib.Algebra.Ring.Divisibility.Basic": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Algebra/Ring/Divisibility/Basic.lean"
    },
    ".lake.packages.mathlib.Mathlib.Algebra.Ring.Int.Defs": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Algebra/Ring/Int/Defs.lean"
    },
    ".lake.packages.mathlib.Mathlib.Algebra.Ring.Int.Parity": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Algebra/Ring/Int/Parity.lean"
    },
    ".lake.packages.mathlib.Mathlib.Algebra.Ring.Int.Units": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Algebra/Ring/Int/Units.lean"
    },
    ".lake.packages.mathlib.Mathlib.Algebra.Ring.Action.Invariant": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Algebra/Ring/Action/Invariant.lean"
    },
    ".lake.packages.mathlib.Mathlib.Algebra.Ring.Action.Rat": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Algebra/Ring/Action/Rat.lean"
    },
    ".lake.packages.mathlib.Mathlib.Algebra.Ring.Action.ConjAct": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Algebra/Ring/Action/ConjAct.lean"
    },
    ".lake.packages.mathlib.Mathlib.Algebra.Ring.Action.Group": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Algebra/Ring/Action/Group.lean"
    },
    ".lake.packages.mathlib.Mathlib.Algebra.Ring.Action.Basic": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Algebra/Ring/Action/Basic.lean"
    },
    ".lake.packages.mathlib.Mathlib.Algebra.Ring.Action.End": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Algebra/Ring/Action/End.lean"
    },
    ".lake.packages.mathlib.Mathlib.Algebra.Ring.Action.Subobjects": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Algebra/Ring/Action/Subobjects.lean"
    },
    ".lake.packages.mathlib.Mathlib.Algebra.Ring.Action.Submonoid": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Algebra/Ring/Action/Submonoid.lean"
    },
    ".lake.packages.mathlib.Mathlib.Algebra.Ring.Action.Field": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Algebra/Ring/Action/Field.lean"
    },
    ".lake.packages.mathlib.Mathlib.Algebra.Ring.Action.Pointwise.Finset": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Algebra/Ring/Action/Pointwise/Finset.lean"
    },
    ".lake.packages.mathlib.Mathlib.Algebra.Ring.Action.Pointwise.Set": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Algebra/Ring/Action/Pointwise/Set.lean"
    },
    ".lake.packages.mathlib.Mathlib.Algebra.Ring.Subring.IntPolynomial": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Algebra/Ring/Subring/IntPolynomial.lean"
    },
    ".lake.packages.mathlib.Mathlib.Algebra.Ring.Subring.MulOpposite": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Algebra/Ring/Subring/MulOpposite.lean"
    },
    ".lake.packages.mathlib.Mathlib.Algebra.Ring.Subring.Pointwise": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Algebra/Ring/Subring/Pointwise.lean"
    },
    ".lake.packages.mathlib.Mathlib.Algebra.Ring.Subring.Order": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Algebra/Ring/Subring/Order.lean"
    },
    ".lake.packages.mathlib.Mathlib.Algebra.Ring.Subring.Basic": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Algebra/Ring/Subring/Basic.lean"
    },
    ".lake.packages.mathlib.Mathlib.Algebra.Ring.Subring.Defs": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Algebra/Ring/Subring/Defs.lean"
    },
    ".lake.packages.mathlib.Mathlib.Algebra.Ring.Subring.Units": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Algebra/Ring/Subring/Units.lean"
    },
    ".lake.packages.mathlib.Mathlib.Algebra.Ring.Pointwise.Finset": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Algebra/Ring/Pointwise/Finset.lean"
    },
    ".lake.packages.mathlib.Mathlib.Algebra.Ring.Pointwise.Set": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Algebra/Ring/Pointwise/Set.lean"
    },
    ".lake.packages.mathlib.Mathlib.Algebra.Ring.Subsemiring.MulOpposite": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Algebra/Ring/Subsemiring/MulOpposite.lean"
    },
    ".lake.packages.mathlib.Mathlib.Algebra.Ring.Subsemiring.Pointwise": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Algebra/Ring/Subsemiring/Pointwise.lean"
    },
    ".lake.packages.mathlib.Mathlib.Algebra.Ring.Subsemiring.Order": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Algebra/Ring/Subsemiring/Order.lean"
    },
    ".lake.packages.mathlib.Mathlib.Algebra.Ring.Subsemiring.Basic": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Algebra/Ring/Subsemiring/Basic.lean"
    },
    ".lake.packages.mathlib.Mathlib.Algebra.Ring.Subsemiring.Defs": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Algebra/Ring/Subsemiring/Defs.lean"
    },
    ".lake.packages.mathlib.Mathlib.Algebra.Ring.Semireal.Defs": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Algebra/Ring/Semireal/Defs.lean"
    },
    ".lake.packages.mathlib.Mathlib.Algebra.Vertex.HVertexOperator": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Algebra/Vertex/HVertexOperator.lean"
    },
    ".lake.packages.mathlib.Mathlib.Algebra.Vertex.VertexOperator": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Algebra/Vertex/VertexOperator.lean"
    },
    ".lake.packages.mathlib.Mathlib.Algebra.MonoidAlgebra.Support": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Algebra/MonoidAlgebra/Support.lean"
    },
    ".lake.packages.mathlib.Mathlib.Algebra.MonoidAlgebra.MapDomain": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Algebra/MonoidAlgebra/MapDomain.lean"
    },
    ".lake.packages.mathlib.Mathlib.Algebra.MonoidAlgebra.NoZeroDivisors": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Algebra/MonoidAlgebra/NoZeroDivisors.lean"
    },
    ".lake.packages.mathlib.Mathlib.Algebra.MonoidAlgebra.Basic": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Algebra/MonoidAlgebra/Basic.lean"
    },
    ".lake.packages.mathlib.Mathlib.Algebra.MonoidAlgebra.Ideal": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Algebra/MonoidAlgebra/Ideal.lean"
    },
    ".lake.packages.mathlib.Mathlib.Algebra.MonoidAlgebra.Grading": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Algebra/MonoidAlgebra/Grading.lean"
    },
    ".lake.packages.mathlib.Mathlib.Algebra.MonoidAlgebra.Division": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Algebra/MonoidAlgebra/Division.lean"
    },
    ".lake.packages.mathlib.Mathlib.Algebra.MonoidAlgebra.Defs": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Algebra/MonoidAlgebra/Defs.lean"
    },
    ".lake.packages.mathlib.Mathlib.Algebra.MonoidAlgebra.Degree": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Algebra/MonoidAlgebra/Degree.lean"
    },
    ".lake.packages.mathlib.Mathlib.Algebra.MonoidAlgebra.ToDirectSum": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Algebra/MonoidAlgebra/ToDirectSum.lean"
    },
    ".lake.packages.mathlib.Mathlib.Algebra.Regular.Pow": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Algebra/Regular/Pow.lean"
    },
    ".lake.packages.mathlib.Mathlib.Algebra.Regular.SMul": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Algebra/Regular/SMul.lean"
    },
    ".lake.packages.mathlib.Mathlib.Algebra.Regular.Opposite": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Algebra/Regular/Opposite.lean"
    },
    ".lake.packages.mathlib.Mathlib.Algebra.Regular.Prod": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Algebra/Regular/Prod.lean"
    },
    ".lake.packages.mathlib.Mathlib.Algebra.Regular.Pi": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Algebra/Regular/Pi.lean"
    },
    ".lake.packages.mathlib.Mathlib.Algebra.Regular.Basic": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Algebra/Regular/Basic.lean"
    },
    ".lake.packages.mathlib.Mathlib.Algebra.Regular.ULift": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Algebra/Regular/ULift.lean"
    },
    ".lake.packages.mathlib.Mathlib.Algebra.Central.Matrix": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Algebra/Central/Matrix.lean"
    },
    ".lake.packages.mathlib.Mathlib.Algebra.Central.TensorProduct": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Algebra/Central/TensorProduct.lean"
    },
    ".lake.packages.mathlib.Mathlib.Algebra.Central.Basic": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Algebra/Central/Basic.lean"
    },
    ".lake.packages.mathlib.Mathlib.Algebra.Central.Defs": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Algebra/Central/Defs.lean"
    },
    ".lake.packages.mathlib.Mathlib.Algebra.CharP.Two": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Algebra/CharP/Two.lean"
    },
    ".lake.packages.mathlib.Mathlib.Algebra.CharP.Lemmas": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Algebra/CharP/Lemmas.lean"
    },
    ".lake.packages.mathlib.Mathlib.Algebra.CharP.LocalRing": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Algebra/CharP/LocalRing.lean"
    },
    ".lake.packages.mathlib.Mathlib.Algebra.CharP.MixedCharZero": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Algebra/CharP/MixedCharZero.lean"
    },
    ".lake.packages.mathlib.Mathlib.Algebra.CharP.IntermediateField": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Algebra/CharP/IntermediateField.lean"
    },
    ".lake.packages.mathlib.Mathlib.Algebra.CharP.Invertible": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Algebra/CharP/Invertible.lean"
    },
    ".lake.packages.mathlib.Mathlib.Algebra.CharP.Pi": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Algebra/CharP/Pi.lean"
    },
    ".lake.packages.mathlib.Mathlib.Algebra.CharP.Subring": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Algebra/CharP/Subring.lean"
    },
    ".lake.packages.mathlib.Mathlib.Algebra.CharP.Basic": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Algebra/CharP/Basic.lean"
    },
    ".lake.packages.mathlib.Mathlib.Algebra.CharP.Frobenius": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Algebra/CharP/Frobenius.lean"
    },
    ".lake.packages.mathlib.Mathlib.Algebra.CharP.Quotient": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Algebra/CharP/Quotient.lean"
    },
    ".lake.packages.mathlib.Mathlib.Algebra.CharP.Defs": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Algebra/CharP/Defs.lean"
    },
    ".lake.packages.mathlib.Mathlib.Algebra.CharP.Algebra": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Algebra/CharP/Algebra.lean"
    },
    ".lake.packages.mathlib.Mathlib.Algebra.CharP.LinearMaps": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Algebra/CharP/LinearMaps.lean"
    },
    ".lake.packages.mathlib.Mathlib.Algebra.CharP.CharAndCard": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Algebra/CharP/CharAndCard.lean"
    },
    ".lake.packages.mathlib.Mathlib.Algebra.CharP.Reduced": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Algebra/CharP/Reduced.lean"
    },
    ".lake.packages.mathlib.Mathlib.Algebra.NoZeroSMulDivisors.Prod": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Algebra/NoZeroSMulDivisors/Prod.lean"
    },
    ".lake.packages.mathlib.Mathlib.Algebra.NoZeroSMulDivisors.Pi": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Algebra/NoZeroSMulDivisors/Pi.lean"
    },
    ".lake.packages.mathlib.Mathlib.Algebra.NoZeroSMulDivisors.Basic": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Algebra/NoZeroSMulDivisors/Basic.lean"
    },
    ".lake.packages.mathlib.Mathlib.Algebra.NoZeroSMulDivisors.Defs": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Algebra/NoZeroSMulDivisors/Defs.lean"
    },
    ".lake.packages.mathlib.Mathlib.Algebra.Pointwise.Stabilizer": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Algebra/Pointwise/Stabilizer.lean"
    },
    ".lake.packages.mathlib.Mathlib.Algebra.Polynomial.Div": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Algebra/Polynomial/Div.lean"
    },
    ".lake.packages.mathlib.Mathlib.Algebra.Polynomial.CoeffList": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Algebra/Polynomial/CoeffList.lean"
    },
    ".lake.packages.mathlib.Mathlib.Algebra.Polynomial.CoeffMem": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Algebra/Polynomial/CoeffMem.lean"
    },
    ".lake.packages.mathlib.Mathlib.Algebra.Polynomial.Derivation": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Algebra/Polynomial/Derivation.lean"
    },
    ".lake.packages.mathlib.Mathlib.Algebra.Polynomial.Reverse": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Algebra/Polynomial/Reverse.lean"
    },
    ".lake.packages.mathlib.Mathlib.Algebra.Polynomial.SpecificDegree": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Algebra/Polynomial/SpecificDegree.lean"
    },
    ".lake.packages.mathlib.Mathlib.Algebra.Polynomial.Smeval": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Algebra/Polynomial/Smeval.lean"
    },
    ".lake.packages.mathlib.Mathlib.Algebra.Polynomial.Expand": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Algebra/Polynomial/Expand.lean"
    },
    ".lake.packages.mathlib.Mathlib.Algebra.Polynomial.Mirror": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Algebra/Polynomial/Mirror.lean"
    },
    ".lake.packages.mathlib.Mathlib.Algebra.Polynomial.Laurent": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Algebra/Polynomial/Laurent.lean"
    },
    ".lake.packages.mathlib.Mathlib.Algebra.Polynomial.Bivariate": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Algebra/Polynomial/Bivariate.lean"
    },
    ".lake.packages.mathlib.Mathlib.Algebra.Polynomial.Monomial": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Algebra/Polynomial/Monomial.lean"
    },
    ".lake.packages.mathlib.Mathlib.Algebra.Polynomial.AlgebraMap": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Algebra/Polynomial/AlgebraMap.lean"
    },
    ".lake.packages.mathlib.Mathlib.Algebra.Polynomial.SumIteratedDerivative": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Algebra/Polynomial/SumIteratedDerivative.lean"
    },
    ".lake.packages.mathlib.Mathlib.Algebra.Polynomial.Sequence": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Algebra/Polynomial/Sequence.lean"
    },
    ".lake.packages.mathlib.Mathlib.Algebra.Polynomial.Basic": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Algebra/Polynomial/Basic.lean"
    },
    ".lake.packages.mathlib.Mathlib.Algebra.Polynomial.Derivative": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Algebra/Polynomial/Derivative.lean"
    },
    ".lake.packages.mathlib.Mathlib.Algebra.Polynomial.UnitTrinomial": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Algebra/Polynomial/UnitTrinomial.lean"
    },
    ".lake.packages.mathlib.Mathlib.Algebra.Polynomial.Lifts": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Algebra/Polynomial/Lifts.lean"
    },
    ".lake.packages.mathlib.Mathlib.Algebra.Polynomial.Taylor": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Algebra/Polynomial/Taylor.lean"
    },
    ".lake.packages.mathlib.Mathlib.Algebra.Polynomial.RingDivision": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Algebra/Polynomial/RingDivision.lean"
    },
    ".lake.packages.mathlib.Mathlib.Algebra.Polynomial.CancelLeads": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Algebra/Polynomial/CancelLeads.lean"
    },
    ".lake.packages.mathlib.Mathlib.Algebra.Polynomial.BigOperators": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Algebra/Polynomial/BigOperators.lean"
    },
    ".lake.packages.mathlib.Mathlib.Algebra.Polynomial.GroupRingAction": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Algebra/Polynomial/GroupRingAction.lean"
    },
    ".lake.packages.mathlib.Mathlib.Algebra.Polynomial.PartialFractions": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Algebra/Polynomial/PartialFractions.lean"
    },
    ".lake.packages.mathlib.Mathlib.Algebra.Polynomial.Monic": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Algebra/Polynomial/Monic.lean"
    },
    ".lake.packages.mathlib.Mathlib.Algebra.Polynomial.HasseDeriv": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Algebra/Polynomial/HasseDeriv.lean"
    },
    ".lake.packages.mathlib.Mathlib.Algebra.Polynomial.Splits": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Algebra/Polynomial/Splits.lean"
    },
    ".lake.packages.mathlib.Mathlib.Algebra.Polynomial.OfFn": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Algebra/Polynomial/OfFn.lean"
    },
    ".lake.packages.mathlib.Mathlib.Algebra.Polynomial.Coeff": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Algebra/Polynomial/Coeff.lean"
    },
    ".lake.packages.mathlib.Mathlib.Algebra.Polynomial.Basis": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Algebra/Polynomial/Basis.lean"
    },
    ".lake.packages.mathlib.Mathlib.Algebra.Polynomial.Identities": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Algebra/Polynomial/Identities.lean"
    },
    ".lake.packages.mathlib.Mathlib.Algebra.Polynomial.Cardinal": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Algebra/Polynomial/Cardinal.lean"
    },
    ".lake.packages.mathlib.Mathlib.Algebra.Polynomial.Inductions": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Algebra/Polynomial/Inductions.lean"
    },
    ".lake.packages.mathlib.Mathlib.Algebra.Polynomial.FieldDivision": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Algebra/Polynomial/FieldDivision.lean"
    },
    ".lake.packages.mathlib.Mathlib.Algebra.Polynomial.Roots": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Algebra/Polynomial/Roots.lean"
    },
    ".lake.packages.mathlib.Mathlib.Algebra.Polynomial.EraseLead": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Algebra/Polynomial/EraseLead.lean"
    },
    ".lake.packages.mathlib.Mathlib.Algebra.Polynomial.DenomsClearable": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Algebra/Polynomial/DenomsClearable.lean"
    },
    ".lake.packages.mathlib.Mathlib.Algebra.Polynomial.Module.Basic": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Algebra/Polynomial/Module/Basic.lean"
    },
    ".lake.packages.mathlib.Mathlib.Algebra.Polynomial.Module.AEval": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Algebra/Polynomial/Module/AEval.lean"
    },
    ".lake.packages.mathlib.Mathlib.Algebra.Polynomial.Module.FiniteDimensional": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Algebra/Polynomial/Module/FiniteDimensional.lean"
    },
    ".lake.packages.mathlib.Mathlib.Algebra.Polynomial.Degree.TrailingDegree": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Algebra/Polynomial/Degree/TrailingDegree.lean"
    },
    ".lake.packages.mathlib.Mathlib.Algebra.Polynomial.Degree.CardPowDegree": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Algebra/Polynomial/Degree/CardPowDegree.lean"
    },
    ".lake.packages.mathlib.Mathlib.Algebra.Polynomial.Degree.Lemmas": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Algebra/Polynomial/Degree/Lemmas.lean"
    },
    ".lake.packages.mathlib.Mathlib.Algebra.Polynomial.Degree.Support": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Algebra/Polynomial/Degree/Support.lean"
    },
    ".lake.packages.mathlib.Mathlib.Algebra.Polynomial.Degree.Definitions": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Algebra/Polynomial/Degree/Definitions.lean"
    },
    ".lake.packages.mathlib.Mathlib.Algebra.Polynomial.Degree.Monomial": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Algebra/Polynomial/Degree/Monomial.lean"
    },
    ".lake.packages.mathlib.Mathlib.Algebra.Polynomial.Degree.Operations": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Algebra/Polynomial/Degree/Operations.lean"
    },
    ".lake.packages.mathlib.Mathlib.Algebra.Polynomial.Degree.IsMonicOfDegree": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Algebra/Polynomial/Degree/IsMonicOfDegree.lean"
    },
    ".lake.packages.mathlib.Mathlib.Algebra.Polynomial.Degree.Domain": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Algebra/Polynomial/Degree/Domain.lean"
    },
    ".lake.packages.mathlib.Mathlib.Algebra.Polynomial.Degree.SmallDegree": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Algebra/Polynomial/Degree/SmallDegree.lean"
    },
    ".lake.packages.mathlib.Mathlib.Algebra.Polynomial.Degree.Units": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Algebra/Polynomial/Degree/Units.lean"
    },
    ".lake.packages.mathlib.Mathlib.Algebra.Polynomial.Eval.SMul": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Algebra/Polynomial/Eval/SMul.lean"
    },
    ".lake.packages.mathlib.Mathlib.Algebra.Polynomial.Eval.Subring": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Algebra/Polynomial/Eval/Subring.lean"
    },
    ".lake.packages.mathlib.Mathlib.Algebra.Polynomial.Eval.Defs": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Algebra/Polynomial/Eval/Defs.lean"
    },
    ".lake.packages.mathlib.Mathlib.Algebra.Polynomial.Eval.Degree": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Algebra/Polynomial/Eval/Degree.lean"
    },
    ".lake.packages.mathlib.Mathlib.Algebra.Polynomial.Eval.Irreducible": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Algebra/Polynomial/Eval/Irreducible.lean"
    },
    ".lake.packages.mathlib.Mathlib.Algebra.Polynomial.Eval.Coeff": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Algebra/Polynomial/Eval/Coeff.lean"
    },
    ".lake.packages.mathlib.Mathlib.Algebra.Polynomial.Eval.Algebra": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Algebra/Polynomial/Eval/Algebra.lean"
    },
    ".lake.packages.mathlib.Mathlib.Algebra.Prime.Lemmas": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Algebra/Prime/Lemmas.lean"
    },
    ".lake.packages.mathlib.Mathlib.Algebra.Prime.Defs": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Algebra/Prime/Defs.lean"
    },
    ".lake.packages.mathlib.Mathlib.Algebra.Squarefree.Basic": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Algebra/Squarefree/Basic.lean"
    },
    ".lake.packages.mathlib.Mathlib.Algebra.Homology.ExactSequence": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Algebra/Homology/ExactSequence.lean"
    },
    ".lake.packages.mathlib.Mathlib.Algebra.Homology.AlternatingConst": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Algebra/Homology/AlternatingConst.lean"
    },
    ".lake.packages.mathlib.Mathlib.Algebra.Homology.Opposite": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Algebra/Homology/Opposite.lean"
    },
    ".lake.packages.mathlib.Mathlib.Algebra.Homology.BifunctorShift": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Algebra/Homology/BifunctorShift.lean"
    },
    ".lake.packages.mathlib.Mathlib.Algebra.Homology.Augment": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Algebra/Homology/Augment.lean"
    },
    ".lake.packages.mathlib.Mathlib.Algebra.Homology.ComplexShape": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Algebra/Homology/ComplexShape.lean"
    },
    ".lake.packages.mathlib.Mathlib.Algebra.Homology.Additive": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Algebra/Homology/Additive.lean"
    },
    ".lake.packages.mathlib.Mathlib.Algebra.Homology.QuasiIso": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Algebra/Homology/QuasiIso.lean"
    },
    ".lake.packages.mathlib.Mathlib.Algebra.Homology.Monoidal": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Algebra/Homology/Monoidal.lean"
    },
    ".lake.packages.mathlib.Mathlib.Algebra.Homology.HomologicalComplex": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Algebra/Homology/HomologicalComplex.lean"
    },
    ".lake.packages.mathlib.Mathlib.Algebra.Homology.LocalCohomology": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Algebra/Homology/LocalCohomology.lean"
    },
    ".lake.packages.mathlib.Mathlib.Algebra.Homology.HomologicalComplexAbelian": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Algebra/Homology/HomologicalComplexAbelian.lean"
    },
    ".lake.packages.mathlib.Mathlib.Algebra.Homology.BifunctorFlip": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Algebra/Homology/BifunctorFlip.lean"
    },
    ".lake.packages.mathlib.Mathlib.Algebra.Homology.ImageToKernel": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Algebra/Homology/ImageToKernel.lean"
    },
    ".lake.packages.mathlib.Mathlib.Algebra.Homology.HomologicalBicomplex": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Algebra/Homology/HomologicalBicomplex.lean"
    },
    ".lake.packages.mathlib.Mathlib.Algebra.Homology.Linear": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Algebra/Homology/Linear.lean"
    },
    ".lake.packages.mathlib.Mathlib.Algebra.Homology.BifunctorHomotopy": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Algebra/Homology/BifunctorHomotopy.lean"
    },
    ".lake.packages.mathlib.Mathlib.Algebra.Homology.Bifunctor": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Algebra/Homology/Bifunctor.lean"
    },
    ".lake.packages.mathlib.Mathlib.Algebra.Homology.Single": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Algebra/Homology/Single.lean"
    },
    ".lake.packages.mathlib.Mathlib.Algebra.Homology.HomologicalComplexBiprod": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Algebra/Homology/HomologicalComplexBiprod.lean"
    },
    ".lake.packages.mathlib.Mathlib.Algebra.Homology.HasNoLoop": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Algebra/Homology/HasNoLoop.lean"
    },
    ".lake.packages.mathlib.Mathlib.Algebra.Homology.TotalComplex": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Algebra/Homology/TotalComplex.lean"
    },
    ".lake.packages.mathlib.Mathlib.Algebra.Homology.Square": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Algebra/Homology/Square.lean"
    },
    ".lake.packages.mathlib.Mathlib.Algebra.Homology.BifunctorAssociator": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Algebra/Homology/BifunctorAssociator.lean"
    },
    ".lake.packages.mathlib.Mathlib.Algebra.Homology.Refinements": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Algebra/Homology/Refinements.lean"
    },
    ".lake.packages.mathlib.Mathlib.Algebra.Homology.HomologySequence": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Algebra/Homology/HomologySequence.lean"
    },
    ".lake.packages.mathlib.Mathlib.Algebra.Homology.Localization": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Algebra/Homology/Localization.lean"
    },
    ".lake.packages.mathlib.Mathlib.Algebra.Homology.Functor": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Algebra/Homology/Functor.lean"
    },
    ".lake.packages.mathlib.Mathlib.Algebra.Homology.TotalComplexSymmetry": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Algebra/Homology/TotalComplexSymmetry.lean"
    },
    ".lake.packages.mathlib.Mathlib.Algebra.Homology.ComplexShapeSigns": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Algebra/Homology/ComplexShapeSigns.lean"
    },
    ".lake.packages.mathlib.Mathlib.Algebra.Homology.HomotopyCategory": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Algebra/Homology/HomotopyCategory.lean"
    },
    ".lake.packages.mathlib.Mathlib.Algebra.Homology.GrothendieckAbelian": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Algebra/Homology/GrothendieckAbelian.lean"
    },
    ".lake.packages.mathlib.Mathlib.Algebra.Homology.TotalComplexShift": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Algebra/Homology/TotalComplexShift.lean"
    },
    ".lake.packages.mathlib.Mathlib.Algebra.Homology.HomologicalComplexLimits": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Algebra/Homology/HomologicalComplexLimits.lean"
    },
    ".lake.packages.mathlib.Mathlib.Algebra.Homology.DifferentialObject": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Algebra/Homology/DifferentialObject.lean"
    },
    ".lake.packages.mathlib.Mathlib.Algebra.Homology.HomotopyCofiber": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Algebra/Homology/HomotopyCofiber.lean"
    },
    ".lake.packages.mathlib.Mathlib.Algebra.Homology.Double": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Algebra/Homology/Double.lean"
    },
    ".lake.packages.mathlib.Mathlib.Algebra.Homology.ConcreteCategory": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Algebra/Homology/ConcreteCategory.lean"
    },
    ".lake.packages.mathlib.Mathlib.Algebra.Homology.Homotopy": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Algebra/Homology/Homotopy.lean"
    },
    ".lake.packages.mathlib.Mathlib.Algebra.Homology.HomologySequenceLemmas": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Algebra/Homology/HomologySequenceLemmas.lean"
    },
    ".lake.packages.mathlib.Mathlib.Algebra.Homology.CommSq": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Algebra/Homology/CommSq.lean"
    },
    ".lake.packages.mathlib.Mathlib.Algebra.Homology.SingleHomology": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Algebra/Homology/SingleHomology.lean"
    },
    ".lake.packages.mathlib.Mathlib.Algebra.Homology.Embedding.Boundary": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Algebra/Homology/Embedding/Boundary.lean"
    },
    ".lake.packages.mathlib.Mathlib.Algebra.Homology.Embedding.Restriction": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Algebra/Homology/Embedding/Restriction.lean"
    },
    ".lake.packages.mathlib.Mathlib.Algebra.Homology.Embedding.TruncGEHomology": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Algebra/Homology/Embedding/TruncGEHomology.lean"
    },
    ".lake.packages.mathlib.Mathlib.Algebra.Homology.Embedding.CochainComplex": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Algebra/Homology/Embedding/CochainComplex.lean"
    },
    ".lake.packages.mathlib.Mathlib.Algebra.Homology.Embedding.Basic": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Algebra/Homology/Embedding/Basic.lean"
    },
    ".lake.packages.mathlib.Mathlib.Algebra.Homology.Embedding.TruncLE": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Algebra/Homology/Embedding/TruncLE.lean"
    },
    ".lake.packages.mathlib.Mathlib.Algebra.Homology.Embedding.Connect": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Algebra/Homology/Embedding/Connect.lean"
    },
    ".lake.packages.mathlib.Mathlib.Algebra.Homology.Embedding.IsSupported": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Algebra/Homology/Embedding/IsSupported.lean"
    },
    ".lake.packages.mathlib.Mathlib.Algebra.Homology.Embedding.ExtendHomology": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Algebra/Homology/Embedding/ExtendHomology.lean"
    },
    ".lake.packages.mathlib.Mathlib.Algebra.Homology.Embedding.HomEquiv": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Algebra/Homology/Embedding/HomEquiv.lean"
    },
    ".lake.packages.mathlib.Mathlib.Algebra.Homology.Embedding.Extend": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Algebra/Homology/Embedding/Extend.lean"
    },
    ".lake.packages.mathlib.Mathlib.Algebra.Homology.Embedding.RestrictionHomology": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Algebra/Homology/Embedding/RestrictionHomology.lean"
    },
    ".lake.packages.mathlib.Mathlib.Algebra.Homology.Embedding.StupidTrunc": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Algebra/Homology/Embedding/StupidTrunc.lean"
    },
    ".lake.packages.mathlib.Mathlib.Algebra.Homology.Embedding.TruncGE": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Algebra/Homology/Embedding/TruncGE.lean"
    },
    ".lake.packages.mathlib.Mathlib.Algebra.Homology.Embedding.TruncLEHomology": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Algebra/Homology/Embedding/TruncLEHomology.lean"
    },
    ".lake.packages.mathlib.Mathlib.Algebra.Homology.ShortComplex.PreservesHomology": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Algebra/Homology/ShortComplex/PreservesHomology.lean"
    },
    ".lake.packages.mathlib.Mathlib.Algebra.Homology.ShortComplex.Retract": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Algebra/Homology/ShortComplex/Retract.lean"
    },
    ".lake.packages.mathlib.Mathlib.Algebra.Homology.ShortComplex.QuasiIso": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Algebra/Homology/ShortComplex/QuasiIso.lean"
    },
    ".lake.packages.mathlib.Mathlib.Algebra.Homology.ShortComplex.HomologicalComplex": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Algebra/Homology/ShortComplex/HomologicalComplex.lean"
    },
    ".lake.packages.mathlib.Mathlib.Algebra.Homology.ShortComplex.FunctorEquivalence": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Algebra/Homology/ShortComplex/FunctorEquivalence.lean"
    },
    ".lake.packages.mathlib.Mathlib.Algebra.Homology.ShortComplex.Abelian": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Algebra/Homology/ShortComplex/Abelian.lean"
    },
    ".lake.packages.mathlib.Mathlib.Algebra.Homology.ShortComplex.RightHomology": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Algebra/Homology/ShortComplex/RightHomology.lean"
    },
    ".lake.packages.mathlib.Mathlib.Algebra.Homology.ShortComplex.Linear": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Algebra/Homology/ShortComplex/Linear.lean"
    },
    ".lake.packages.mathlib.Mathlib.Algebra.Homology.ShortComplex.Preadditive": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Algebra/Homology/ShortComplex/Preadditive.lean"
    },
    ".lake.packages.mathlib.Mathlib.Algebra.Homology.ShortComplex.Basic": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Algebra/Homology/ShortComplex/Basic.lean"
    },
    ".lake.packages.mathlib.Mathlib.Algebra.Homology.ShortComplex.ExactFunctor": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Algebra/Homology/ShortComplex/ExactFunctor.lean"
    },
    ".lake.packages.mathlib.Mathlib.Algebra.Homology.ShortComplex.ShortExact": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Algebra/Homology/ShortComplex/ShortExact.lean"
    },
    ".lake.packages.mathlib.Mathlib.Algebra.Homology.ShortComplex.Exact": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Algebra/Homology/ShortComplex/Exact.lean"
    },
    ".lake.packages.mathlib.Mathlib.Algebra.Homology.ShortComplex.Ab": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Algebra/Homology/ShortComplex/Ab.lean"
    },
    ".lake.packages.mathlib.Mathlib.Algebra.Homology.ShortComplex.Limits": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Algebra/Homology/ShortComplex/Limits.lean"
    },
    ".lake.packages.mathlib.Mathlib.Algebra.Homology.ShortComplex.Homology": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Algebra/Homology/ShortComplex/Homology.lean"
    },
    ".lake.packages.mathlib.Mathlib.Algebra.Homology.ShortComplex.SnakeLemma": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Algebra/Homology/ShortComplex/SnakeLemma.lean"
    },
    ".lake.packages.mathlib.Mathlib.Algebra.Homology.ShortComplex.ConcreteCategory": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Algebra/Homology/ShortComplex/ConcreteCategory.lean"
    },
    ".lake.packages.mathlib.Mathlib.Algebra.Homology.ShortComplex.LeftHomology": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Algebra/Homology/ShortComplex/LeftHomology.lean"
    },
    ".lake.packages.mathlib.Mathlib.Algebra.Homology.ShortComplex.ModuleCat": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Algebra/Homology/ShortComplex/ModuleCat.lean"
    },
    ".lake.packages.mathlib.Mathlib.Algebra.Homology.DerivedCategory.SingleTriangle": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Algebra/Homology/DerivedCategory/SingleTriangle.lean"
    },
    ".lake.packages.mathlib.Mathlib.Algebra.Homology.DerivedCategory.Basic": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Algebra/Homology/DerivedCategory/Basic.lean"
    },
    ".lake.packages.mathlib.Mathlib.Algebra.Homology.DerivedCategory.ExactFunctor": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Algebra/Homology/DerivedCategory/ExactFunctor.lean"
    },
    ".lake.packages.mathlib.Mathlib.Algebra.Homology.DerivedCategory.ShortExact": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Algebra/Homology/DerivedCategory/ShortExact.lean"
    },
    ".lake.packages.mathlib.Mathlib.Algebra.Homology.DerivedCategory.HomologySequence": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Algebra/Homology/DerivedCategory/HomologySequence.lean"
    },
    ".lake.packages.mathlib.Mathlib.Algebra.Homology.DerivedCategory.FullyFaithful": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Algebra/Homology/DerivedCategory/FullyFaithful.lean"
    },
    ".lake.packages.mathlib.Mathlib.Algebra.Homology.DerivedCategory.Fractions": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Algebra/Homology/DerivedCategory/Fractions.lean"
    },
    ".lake.packages.mathlib.Mathlib.Algebra.Homology.DerivedCategory.Ext.ExtClass": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Algebra/Homology/DerivedCategory/Ext/ExtClass.lean"
    },
    ".lake.packages.mathlib.Mathlib.Algebra.Homology.DerivedCategory.Ext.ExactSequences": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Algebra/Homology/DerivedCategory/Ext/ExactSequences.lean"
    },
    ".lake.packages.mathlib.Mathlib.Algebra.Homology.DerivedCategory.Ext.EnoughInjectives": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Algebra/Homology/DerivedCategory/Ext/EnoughInjectives.lean"
    },
    ".lake.packages.mathlib.Mathlib.Algebra.Homology.DerivedCategory.Ext.Basic": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Algebra/Homology/DerivedCategory/Ext/Basic.lean"
    },
    ".lake.packages.mathlib.Mathlib.Algebra.Homology.DerivedCategory.Ext.EnoughProjectives": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Algebra/Homology/DerivedCategory/Ext/EnoughProjectives.lean"
    },
    ".lake.packages.mathlib.Mathlib.Algebra.Homology.Factorizations.Basic": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Algebra/Homology/Factorizations/Basic.lean"
    },
    ".lake.packages.mathlib.Mathlib.Algebra.Homology.HomotopyCategory.MappingCone": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Algebra/Homology/HomotopyCategory/MappingCone.lean"
    },
    ".lake.packages.mathlib.Mathlib.Algebra.Homology.HomotopyCategory.HomologicalFunctor": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Algebra/Homology/HomotopyCategory/HomologicalFunctor.lean"
    },
    ".lake.packages.mathlib.Mathlib.Algebra.Homology.HomotopyCategory.SingleFunctors": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Algebra/Homology/HomotopyCategory/SingleFunctors.lean"
    },
    ".lake.packages.mathlib.Mathlib.Algebra.Homology.HomotopyCategory.Triangulated": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Algebra/Homology/HomotopyCategory/Triangulated.lean"
    },
    ".lake.packages.mathlib.Mathlib.Algebra.Homology.HomotopyCategory.DegreewiseSplit": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Algebra/Homology/HomotopyCategory/DegreewiseSplit.lean"
    },
    ".lake.packages.mathlib.Mathlib.Algebra.Homology.HomotopyCategory.ShiftSequence": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Algebra/Homology/HomotopyCategory/ShiftSequence.lean"
    },
    ".lake.packages.mathlib.Mathlib.Algebra.Homology.HomotopyCategory.HomComplexShift": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Algebra/Homology/HomotopyCategory/HomComplexShift.lean"
    },
    ".lake.packages.mathlib.Mathlib.Algebra.Homology.HomotopyCategory.ShortExact": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Algebra/Homology/HomotopyCategory/ShortExact.lean"
    },
    ".lake.packages.mathlib.Mathlib.Algebra.Homology.HomotopyCategory.HomComplex": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Algebra/Homology/HomotopyCategory/HomComplex.lean"
    },
    ".lake.packages.mathlib.Mathlib.Algebra.Homology.HomotopyCategory.Shift": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Algebra/Homology/HomotopyCategory/Shift.lean"
    },
    ".lake.packages.mathlib.Mathlib.Algebra.Homology.HomotopyCategory.Pretriangulated": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Algebra/Homology/HomotopyCategory/Pretriangulated.lean"
    },
    ".lake.packages.mathlib.Mathlib.Algebra.Jordan.Basic": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Algebra/Jordan/Basic.lean"
    },
    ".lake.packages.mathlib.Mathlib.Algebra.Algebra.Opposite": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Algebra/Algebra/Opposite.lean"
    },
    ".lake.packages.mathlib.Mathlib.Algebra.Algebra.RestrictScalars": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Algebra/Algebra/RestrictScalars.lean"
    },
    ".lake.packages.mathlib.Mathlib.Algebra.Algebra.Bilinear": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Algebra/Algebra/Bilinear.lean"
    },
    ".lake.packages.mathlib.Mathlib.Algebra.Algebra.Rat": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Algebra/Algebra/Rat.lean"
    },
    ".lake.packages.mathlib.Mathlib.Algebra.Algebra.TransferInstance": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Algebra/Algebra/TransferInstance.lean"
    },
    ".lake.packages.mathlib.Mathlib.Algebra.Algebra.Prod": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Algebra/Algebra/Prod.lean"
    },
    ".lake.packages.mathlib.Mathlib.Algebra.Algebra.Tower": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Algebra/Algebra/Tower.lean"
    },
    ".lake.packages.mathlib.Mathlib.Algebra.Algebra.Pi": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Algebra/Algebra/Pi.lean"
    },
    ".lake.packages.mathlib.Mathlib.Algebra.Algebra.Basic": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Algebra/Algebra/Basic.lean"
    },
    ".lake.packages.mathlib.Mathlib.Algebra.Algebra.Operations": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Algebra/Algebra/Operations.lean"
    },
    ".lake.packages.mathlib.Mathlib.Algebra.Algebra.Defs": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Algebra/Algebra/Defs.lean"
    },
    ".lake.packages.mathlib.Mathlib.Algebra.Algebra.Shrink": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Algebra/Algebra/Shrink.lean"
    },
    ".lake.packages.mathlib.Mathlib.Algebra.Algebra.NonUnitalSubalgebra": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Algebra/Algebra/NonUnitalSubalgebra.lean"
    },
    ".lake.packages.mathlib.Mathlib.Algebra.Algebra.Equiv": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Algebra/Algebra/Equiv.lean"
    },
    ".lake.packages.mathlib.Mathlib.Algebra.Algebra.Field": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Algebra/Algebra/Field.lean"
    },
    ".lake.packages.mathlib.Mathlib.Algebra.Algebra.Unitization": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Algebra/Algebra/Unitization.lean"
    },
    ".lake.packages.mathlib.Mathlib.Algebra.Algebra.ZMod": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Algebra/Algebra/ZMod.lean"
    },
    ".lake.packages.mathlib.Mathlib.Algebra.Algebra.Hom": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Algebra/Algebra/Hom.lean"
    },
    ".lake.packages.mathlib.Mathlib.Algebra.Algebra.NonUnitalHom": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Algebra/Algebra/NonUnitalHom.lean"
    },
    ".lake.packages.mathlib.Mathlib.Algebra.Algebra.Hom.Rat": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Algebra/Algebra/Hom/Rat.lean"
    },
    ".lake.packages.mathlib.Mathlib.Algebra.Algebra.Subalgebra.Matrix": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Algebra/Algebra/Subalgebra/Matrix.lean"
    },
    ".lake.packages.mathlib.Mathlib.Algebra.Algebra.Subalgebra.MulOpposite": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Algebra/Algebra/Subalgebra/MulOpposite.lean"
    },
    ".lake.packages.mathlib.Mathlib.Algebra.Algebra.Subalgebra.Rank": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Algebra/Algebra/Subalgebra/Rank.lean"
    },
    ".lake.packages.mathlib.Mathlib.Algebra.Algebra.Subalgebra.Prod": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Algebra/Algebra/Subalgebra/Prod.lean"
    },
    ".lake.packages.mathlib.Mathlib.Algebra.Algebra.Subalgebra.Pointwise": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Algebra/Algebra/Subalgebra/Pointwise.lean"
    },
    ".lake.packages.mathlib.Mathlib.Algebra.Algebra.Subalgebra.Tower": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Algebra/Algebra/Subalgebra/Tower.lean"
    },
    ".lake.packages.mathlib.Mathlib.Algebra.Algebra.Subalgebra.Order": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Algebra/Algebra/Subalgebra/Order.lean"
    },
    ".lake.packages.mathlib.Mathlib.Algebra.Algebra.Subalgebra.Pi": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Algebra/Algebra/Subalgebra/Pi.lean"
    },
    ".lake.packages.mathlib.Mathlib.Algebra.Algebra.Subalgebra.IsSimpleOrder": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Algebra/Algebra/Subalgebra/IsSimpleOrder.lean"
    },
    ".lake.packages.mathlib.Mathlib.Algebra.Algebra.Subalgebra.Basic": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Algebra/Algebra/Subalgebra/Basic.lean"
    },
    ".lake.packages.mathlib.Mathlib.Algebra.Algebra.Subalgebra.Operations": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Algebra/Algebra/Subalgebra/Operations.lean"
    },
    ".lake.packages.mathlib.Mathlib.Algebra.Algebra.Subalgebra.Centralizer": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Algebra/Algebra/Subalgebra/Centralizer.lean"
    },
    ".lake.packages.mathlib.Mathlib.Algebra.Algebra.Subalgebra.Unitization": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Algebra/Algebra/Subalgebra/Unitization.lean"
    },
    ".lake.packages.mathlib.Mathlib.Algebra.Algebra.Subalgebra.Directed": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Algebra/Algebra/Subalgebra/Directed.lean"
    },
    ".lake.packages.mathlib.Mathlib.Algebra.Algebra.Subalgebra.Lattice": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Algebra/Algebra/Subalgebra/Lattice.lean"
    },
    ".lake.packages.mathlib.Mathlib.Algebra.Algebra.Spectrum.Quasispectrum": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Algebra/Algebra/Spectrum/Quasispectrum.lean"
    },
    ".lake.packages.mathlib.Mathlib.Algebra.Algebra.Spectrum.Pi": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Algebra/Algebra/Spectrum/Pi.lean"
    },
    ".lake.packages.mathlib.Mathlib.Algebra.Algebra.Spectrum.Basic": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Algebra/Algebra/Spectrum/Basic.lean"
    },
    ".lake.packages.mathlib.Mathlib.Algebra.ContinuedFractions.Basic": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Algebra/ContinuedFractions/Basic.lean"
    },
    ".lake.packages.mathlib.Mathlib.Algebra.ContinuedFractions.ConvergentsEquiv": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Algebra/ContinuedFractions/ConvergentsEquiv.lean"
    },
    ".lake.packages.mathlib.Mathlib.Algebra.ContinuedFractions.Translations": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Algebra/ContinuedFractions/Translations.lean"
    },
    ".lake.packages.mathlib.Mathlib.Algebra.ContinuedFractions.ContinuantsRecurrence": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Algebra/ContinuedFractions/ContinuantsRecurrence.lean"
    },
    ".lake.packages.mathlib.Mathlib.Algebra.ContinuedFractions.Determinant": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Algebra/ContinuedFractions/Determinant.lean"
    },
    ".lake.packages.mathlib.Mathlib.Algebra.ContinuedFractions.TerminatedStable": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Algebra/ContinuedFractions/TerminatedStable.lean"
    },
    ".lake.packages.mathlib.Mathlib.Algebra.ContinuedFractions.Computation.Approximations": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Algebra/ContinuedFractions/Computation/Approximations.lean"
    },
    ".lake.packages.mathlib.Mathlib.Algebra.ContinuedFractions.Computation.Basic": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Algebra/ContinuedFractions/Computation/Basic.lean"
    },
    ".lake.packages.mathlib.Mathlib.Algebra.ContinuedFractions.Computation.CorrectnessTerminating": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Algebra/ContinuedFractions/Computation/CorrectnessTerminating.lean"
    },
    ".lake.packages.mathlib.Mathlib.Algebra.ContinuedFractions.Computation.TerminatesIffRat": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Algebra/ContinuedFractions/Computation/TerminatesIffRat.lean"
    },
    ".lake.packages.mathlib.Mathlib.Algebra.ContinuedFractions.Computation.Translations": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Algebra/ContinuedFractions/Computation/Translations.lean"
    },
    ".lake.packages.mathlib.Mathlib.Algebra.ContinuedFractions.Computation.ApproximationCorollaries": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Algebra/ContinuedFractions/Computation/ApproximationCorollaries.lean"
    },
    ".lake.packages.mathlib.Mathlib.Deprecated.Order": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Deprecated/Order.lean"
    },
    ".lake.packages.mathlib.Mathlib.Deprecated.RingHom": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Deprecated/RingHom.lean"
    },
    ".lake.packages.mathlib.Mathlib.Deprecated.Aliases": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Deprecated/Aliases.lean"
    },
    ".lake.packages.mathlib.Mathlib.Deprecated.AnalyticManifold": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Mathlib/Deprecated/AnalyticManifold.lean"
    },
    ".lake.packages.mathlib.Counterexamples.IrrationalPowerOfIrrational": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Counterexamples/IrrationalPowerOfIrrational.lean"
    },
    ".lake.packages.mathlib.Counterexamples.SorgenfreyLine": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Counterexamples/SorgenfreyLine.lean"
    },
    ".lake.packages.mathlib.Counterexamples.QuadraticForm": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Counterexamples/QuadraticForm.lean"
    },
    ".lake.packages.mathlib.Counterexamples.Girard": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Counterexamples/Girard.lean"
    },
    ".lake.packages.mathlib.Counterexamples.CharPZeroNeCharZero": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Counterexamples/CharPZeroNeCharZero.lean"
    },
    ".lake.packages.mathlib.Counterexamples.CliffordAlgebraNotInjective": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Counterexamples/CliffordAlgebraNotInjective.lean"
    },
    ".lake.packages.mathlib.Counterexamples.LinearOrderWithPosMulPosEqZero": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Counterexamples/LinearOrderWithPosMulPosEqZero.lean"
    },
    ".lake.packages.mathlib.Counterexamples.Pseudoelement": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Counterexamples/Pseudoelement.lean"
    },
    ".lake.packages.mathlib.Counterexamples.GameMultiplication": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Counterexamples/GameMultiplication.lean"
    },
    ".lake.packages.mathlib.Counterexamples.AharoniKorman": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Counterexamples/AharoniKorman.lean"
    },
    ".lake.packages.mathlib.Counterexamples.ZeroDivisorsInAddMonoidAlgebras": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Counterexamples/ZeroDivisorsInAddMonoidAlgebras.lean"
    },
    ".lake.packages.mathlib.Counterexamples.Phillips": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Counterexamples/Phillips.lean"
    },
    ".lake.packages.mathlib.Counterexamples.DirectSumIsInternal": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Counterexamples/DirectSumIsInternal.lean"
    },
    ".lake.packages.mathlib.Counterexamples.DiscreteTopologyNonDiscreteUniformity": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Counterexamples/DiscreteTopologyNonDiscreteUniformity.lean"
    },
    ".lake.packages.mathlib.Counterexamples.CanonicallyOrderedCommSemiringTwoMul": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Counterexamples/CanonicallyOrderedCommSemiringTwoMul.lean"
    },
    ".lake.packages.mathlib.Counterexamples.OrderedCancelAddCommMonoidWithBounds": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Counterexamples/OrderedCancelAddCommMonoidWithBounds.lean"
    },
    ".lake.packages.mathlib.Counterexamples.HomogeneousPrimeNotPrime": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Counterexamples/HomogeneousPrimeNotPrime.lean"
    },
    ".lake.packages.mathlib.Counterexamples.SeminormLatticeNotDistrib": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Counterexamples/SeminormLatticeNotDistrib.lean"
    },
    ".lake.packages.mathlib.Counterexamples.Cyclotomic105": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Counterexamples/Cyclotomic105.lean"
    },
    ".lake.packages.mathlib.Counterexamples.MapFloor": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Counterexamples/MapFloor.lean"
    },
    ".lake.packages.mathlib.Counterexamples.MonicNonRegular": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Counterexamples/MonicNonRegular.lean"
    },
    ".lake.packages.mathlib.Cache.IO": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Cache/IO.lean"
    },
    ".lake.packages.mathlib.Cache.Requests": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Cache/Requests.lean"
    },
    ".lake.packages.mathlib.Cache.Lean": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Cache/Lean.lean"
    },
    ".lake.packages.mathlib.Cache.Hashing": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Cache/Hashing.lean"
    },
    ".lake.packages.mathlib.Cache.Main": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Cache/Main.lean"
    },
    ".lake.packages.mathlib.Archive.Sensitivity": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Archive/Sensitivity.lean"
    },
    ".lake.packages.mathlib.Archive.ZagierTwoSquares": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Archive/ZagierTwoSquares.lean"
    },
    ".lake.packages.mathlib.Archive.Hairer": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Archive/Hairer.lean"
    },
    ".lake.packages.mathlib.Archive.Arithcc": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Archive/Arithcc.lean"
    },
    ".lake.packages.mathlib.Archive.MiuLanguage.DecisionSuf": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Archive/MiuLanguage/DecisionSuf.lean"
    },
    ".lake.packages.mathlib.Archive.MiuLanguage.Basic": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Archive/MiuLanguage/Basic.lean"
    },
    ".lake.packages.mathlib.Archive.MiuLanguage.DecisionNec": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Archive/MiuLanguage/DecisionNec.lean"
    },
    ".lake.packages.mathlib.Archive.Wiedijk100Theorems.AscendingDescendingSequences": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Archive/Wiedijk100Theorems/AscendingDescendingSequences.lean"
    },
    ".lake.packages.mathlib.Archive.Wiedijk100Theorems.SolutionOfCubicQuartic": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Archive/Wiedijk100Theorems/SolutionOfCubicQuartic.lean"
    },
    ".lake.packages.mathlib.Archive.Wiedijk100Theorems.AbelRuffini": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Archive/Wiedijk100Theorems/AbelRuffini.lean"
    },
    ".lake.packages.mathlib.Archive.Wiedijk100Theorems.HeronsFormula": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Archive/Wiedijk100Theorems/HeronsFormula.lean"
    },
    ".lake.packages.mathlib.Archive.Wiedijk100Theorems.SumOfPrimeReciprocalsDiverges": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Archive/Wiedijk100Theorems/SumOfPrimeReciprocalsDiverges.lean"
    },
    ".lake.packages.mathlib.Archive.Wiedijk100Theorems.InverseTriangleSum": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Archive/Wiedijk100Theorems/InverseTriangleSum.lean"
    },
    ".lake.packages.mathlib.Archive.Wiedijk100Theorems.FriendshipGraphs": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Archive/Wiedijk100Theorems/FriendshipGraphs.lean"
    },
    ".lake.packages.mathlib.Archive.Wiedijk100Theorems.BallotProblem": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Archive/Wiedijk100Theorems/BallotProblem.lean"
    },
    ".lake.packages.mathlib.Archive.Wiedijk100Theorems.PerfectNumbers": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Archive/Wiedijk100Theorems/PerfectNumbers.lean"
    },
    ".lake.packages.mathlib.Archive.Wiedijk100Theorems.BuffonsNeedle": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Archive/Wiedijk100Theorems/BuffonsNeedle.lean"
    },
    ".lake.packages.mathlib.Archive.Wiedijk100Theorems.CubingACube": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Archive/Wiedijk100Theorems/CubingACube.lean"
    },
    ".lake.packages.mathlib.Archive.Wiedijk100Theorems.Konigsberg": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Archive/Wiedijk100Theorems/Konigsberg.lean"
    },
    ".lake.packages.mathlib.Archive.Wiedijk100Theorems.Partition": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Archive/Wiedijk100Theorems/Partition.lean"
    },
    ".lake.packages.mathlib.Archive.Wiedijk100Theorems.AreaOfACircle": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Archive/Wiedijk100Theorems/AreaOfACircle.lean"
    },
    ".lake.packages.mathlib.Archive.Wiedijk100Theorems.BirthdayProblem": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Archive/Wiedijk100Theorems/BirthdayProblem.lean"
    },
    ".lake.packages.mathlib.Archive.Imo.Imo2019Q1": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Archive/Imo/Imo2019Q1.lean"
    },
    ".lake.packages.mathlib.Archive.Imo.Imo2024Q3": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Archive/Imo/Imo2024Q3.lean"
    },
    ".lake.packages.mathlib.Archive.Imo.Imo2006Q5": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Archive/Imo/Imo2006Q5.lean"
    },
    ".lake.packages.mathlib.Archive.Imo.Imo1960Q1": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Archive/Imo/Imo1960Q1.lean"
    },
    ".lake.packages.mathlib.Archive.Imo.Imo2008Q4": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Archive/Imo/Imo2008Q4.lean"
    },
    ".lake.packages.mathlib.Archive.Imo.Imo1998Q2": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Archive/Imo/Imo1998Q2.lean"
    },
    ".lake.packages.mathlib.Archive.Imo.Imo1962Q1": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Archive/Imo/Imo1962Q1.lean"
    },
    ".lake.packages.mathlib.Archive.Imo.Imo1963Q5": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Archive/Imo/Imo1963Q5.lean"
    },
    ".lake.packages.mathlib.Archive.Imo.Imo2001Q6": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Archive/Imo/Imo2001Q6.lean"
    },
    ".lake.packages.mathlib.Archive.Imo.Imo2024Q2": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Archive/Imo/Imo2024Q2.lean"
    },
    ".lake.packages.mathlib.Archive.Imo.Imo2021Q1": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Archive/Imo/Imo2021Q1.lean"
    },
    ".lake.packages.mathlib.Archive.Imo.Imo1986Q5": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Archive/Imo/Imo1986Q5.lean"
    },
    ".lake.packages.mathlib.Archive.Imo.Imo1987Q1": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Archive/Imo/Imo1987Q1.lean"
    },
    ".lake.packages.mathlib.Archive.Imo.Imo1959Q2": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Archive/Imo/Imo1959Q2.lean"
    },
    ".lake.packages.mathlib.Archive.Imo.Imo1961Q3": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Archive/Imo/Imo1961Q3.lean"
    },
    ".lake.packages.mathlib.Archive.Imo.Imo2024Q5": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Archive/Imo/Imo2024Q5.lean"
    },
    ".lake.packages.mathlib.Archive.Imo.Imo2006Q3": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Archive/Imo/Imo2006Q3.lean"
    },
    ".lake.packages.mathlib.Archive.Imo.Imo2020Q2": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Archive/Imo/Imo2020Q2.lean"
    },
    ".lake.packages.mathlib.Archive.Imo.Imo2008Q2": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Archive/Imo/Imo2008Q2.lean"
    },
    ".lake.packages.mathlib.Archive.Imo.Imo2013Q1": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Archive/Imo/Imo2013Q1.lean"
    },
    ".lake.packages.mathlib.Archive.Imo.Imo2008Q3": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Archive/Imo/Imo2008Q3.lean"
    },
    ".lake.packages.mathlib.Archive.Imo.Imo2015Q6": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Archive/Imo/Imo2015Q6.lean"
    },
    ".lake.packages.mathlib.Archive.Imo.Imo1964Q1": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Archive/Imo/Imo1964Q1.lean"
    },
    ".lake.packages.mathlib.Archive.Imo.Imo1982Q3": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Archive/Imo/Imo1982Q3.lean"
    },
    ".lake.packages.mathlib.Archive.Imo.Imo1985Q2": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Archive/Imo/Imo1985Q2.lean"
    },
    ".lake.packages.mathlib.Archive.Imo.Imo1988Q6": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Archive/Imo/Imo1988Q6.lean"
    },
    ".lake.packages.mathlib.Archive.Imo.Imo1962Q4": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Archive/Imo/Imo1962Q4.lean"
    },
    ".lake.packages.mathlib.Archive.Imo.Imo2005Q4": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Archive/Imo/Imo2005Q4.lean"
    },
    ".lake.packages.mathlib.Archive.Imo.Imo2001Q3": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Archive/Imo/Imo2001Q3.lean"
    },
    ".lake.packages.mathlib.Archive.Imo.Imo1977Q6": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Archive/Imo/Imo1977Q6.lean"
    },
    ".lake.packages.mathlib.Archive.Imo.Imo1972Q5": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Archive/Imo/Imo1972Q5.lean"
    },
    ".lake.packages.mathlib.Archive.Imo.Imo2019Q4": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Archive/Imo/Imo2019Q4.lean"
    },
    ".lake.packages.mathlib.Archive.Imo.Imo1959Q1": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Archive/Imo/Imo1959Q1.lean"
    },
    ".lake.packages.mathlib.Archive.Imo.Imo2011Q3": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Archive/Imo/Imo2011Q3.lean"
    },
    ".lake.packages.mathlib.Archive.Imo.Imo2024Q6": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Archive/Imo/Imo2024Q6.lean"
    },
    ".lake.packages.mathlib.Archive.Imo.Imo2001Q2": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Archive/Imo/Imo2001Q2.lean"
    },
    ".lake.packages.mathlib.Archive.Imo.Imo1982Q1": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Archive/Imo/Imo1982Q1.lean"
    },
    ".lake.packages.mathlib.Archive.Imo.Imo2013Q5": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Archive/Imo/Imo2013Q5.lean"
    },
    ".lake.packages.mathlib.Archive.Imo.Imo1975Q1": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Archive/Imo/Imo1975Q1.lean"
    },
    ".lake.packages.mathlib.Archive.Imo.Imo2024Q1": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Archive/Imo/Imo2024Q1.lean"
    },
    ".lake.packages.mathlib.Archive.Imo.Imo1994Q1": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Archive/Imo/Imo1994Q1.lean"
    },
    ".lake.packages.mathlib.Archive.Imo.Imo1981Q3": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Archive/Imo/Imo1981Q3.lean"
    },
    ".lake.packages.mathlib.Archive.Imo.Imo2019Q2": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Archive/Imo/Imo2019Q2.lean"
    },
    ".lake.packages.mathlib.Archive.Imo.Imo2011Q5": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Archive/Imo/Imo2011Q5.lean"
    },
    ".lake.packages.mathlib.Archive.Imo.Imo1960Q2": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Archive/Imo/Imo1960Q2.lean"
    },
    ".lake.packages.mathlib.Archive.Imo.Imo1969Q1": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Archive/Imo/Imo1969Q1.lean"
    },
    ".lake.packages.mathlib.Archive.Imo.Imo2005Q3": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Archive/Imo/Imo2005Q3.lean"
    },
    ".lake.packages.mathlib.Archive.Examples.PropEncodable": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Archive/Examples/PropEncodable.lean"
    },
    ".lake.packages.mathlib.Archive.Examples.MersennePrimes": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Archive/Examples/MersennePrimes.lean"
    },
    ".lake.packages.mathlib.Archive.Examples.Eisenstein": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Archive/Examples/Eisenstein.lean"
    },
    ".lake.packages.mathlib.Archive.Examples.IfNormalization.Statement": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Archive/Examples/IfNormalization/Statement.lean"
    },
    ".lake.packages.mathlib.Archive.Examples.IfNormalization.Result": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Archive/Examples/IfNormalization/Result.lean"
    },
    ".lake.packages.mathlib.Archive.Examples.IfNormalization.WithoutAesop": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Archive/Examples/IfNormalization/WithoutAesop.lean"
    },
    ".lake.packages.mathlib.Archive.OxfordInvariants.Summer2021.Week3P1": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/Archive/OxfordInvariants/Summer2021/Week3P1.lean"
    },
    ".lake.packages.mathlib.MathlibTest.toAdditiveIrredDef": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/MathlibTest/toAdditiveIrredDef.lean"
    },
    ".lake.packages.mathlib.MathlibTest.toAdditive": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/MathlibTest/toAdditive.lean"
    },
    ".lake.packages.mathlib.MathlibTest.levenshtein": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/MathlibTest/levenshtein.lean"
    },
    ".lake.packages.mathlib.MathlibTest.algebraize": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/MathlibTest/algebraize.lean"
    },
    ".lake.packages.mathlib.MathlibTest.delabLinearIndependent": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/MathlibTest/delabLinearIndependent.lean"
    },
    ".lake.packages.mathlib.MathlibTest.basicTactics": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/MathlibTest/basicTactics.lean"
    },
    ".lake.packages.mathlib.MathlibTest.Check": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/MathlibTest/Check.lean"
    },
    ".lake.packages.mathlib.MathlibTest.norm_cast": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/MathlibTest/norm_cast.lean"
    },
    ".lake.packages.mathlib.MathlibTest.ExtractGoal": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/MathlibTest/ExtractGoal.lean"
    },
    ".lake.packages.mathlib.MathlibTest.FunLike": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/MathlibTest/FunLike.lean"
    },
    ".lake.packages.mathlib.MathlibTest.Clear_": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/MathlibTest/Clear_.lean"
    },
    ".lake.packages.mathlib.MathlibTest.observe": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/MathlibTest/observe.lean"
    },
    ".lake.packages.mathlib.MathlibTest.fin_cases": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/MathlibTest/fin_cases.lean"
    },
    ".lake.packages.mathlib.MathlibTest.Replace": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/MathlibTest/Replace.lean"
    },
    ".lake.packages.mathlib.MathlibTest.aesop_cat": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/MathlibTest/aesop_cat.lean"
    },
    ".lake.packages.mathlib.MathlibTest.RegularMeasure": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/MathlibTest/RegularMeasure.lean"
    },
    ".lake.packages.mathlib.MathlibTest.ModuleCasing": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/MathlibTest/ModuleCasing.lean"
    },
    ".lake.packages.mathlib.MathlibTest.FindSyntax": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/MathlibTest/FindSyntax.lean"
    },
    ".lake.packages.mathlib.MathlibTest.UnusedTactic": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/MathlibTest/UnusedTactic.lean"
    },
    ".lake.packages.mathlib.MathlibTest.tactic_timeout": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/MathlibTest/tactic_timeout.lean"
    },
    ".lake.packages.mathlib.MathlibTest.DoubleUnderscore": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/MathlibTest/DoubleUnderscore.lean"
    },
    ".lake.packages.mathlib.MathlibTest.borelize": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/MathlibTest/borelize.lean"
    },
    ".lake.packages.mathlib.MathlibTest.LongFile": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/MathlibTest/LongFile.lean"
    },
    ".lake.packages.mathlib.MathlibTest.TermReduce": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/MathlibTest/TermReduce.lean"
    },
    ".lake.packages.mathlib.MathlibTest.GuardGoalNums": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/MathlibTest/GuardGoalNums.lean"
    },
    ".lake.packages.mathlib.MathlibTest.Lint": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/MathlibTest/Lint.lean"
    },
    ".lake.packages.mathlib.MathlibTest.DeprecatedModuleTest": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/MathlibTest/DeprecatedModuleTest.lean"
    },
    ".lake.packages.mathlib.MathlibTest.DeprecateTo": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/MathlibTest/DeprecateTo.lean"
    },
    ".lake.packages.mathlib.MathlibTest.eval_elab": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/MathlibTest/eval_elab.lean"
    },
    ".lake.packages.mathlib.MathlibTest.convert2": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/MathlibTest/convert2.lean"
    },
    ".lake.packages.mathlib.MathlibTest.apply_rules": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/MathlibTest/apply_rules.lean"
    },
    ".lake.packages.mathlib.MathlibTest.congrm": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/MathlibTest/congrm.lean"
    },
    ".lake.packages.mathlib.MathlibTest.TransImports": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/MathlibTest/TransImports.lean"
    },
    ".lake.packages.mathlib.MathlibTest.cases": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/MathlibTest/cases.lean"
    },
    ".lake.packages.mathlib.MathlibTest.GuardHypNums": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/MathlibTest/GuardHypNums.lean"
    },
    ".lake.packages.mathlib.MathlibTest.Explode": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/MathlibTest/Explode.lean"
    },
    ".lake.packages.mathlib.MathlibTest.BinaryRec": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/MathlibTest/BinaryRec.lean"
    },
    ".lake.packages.mathlib.MathlibTest.matrix": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/MathlibTest/matrix.lean"
    },
    ".lake.packages.mathlib.MathlibTest.PPRoundtrip": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/MathlibTest/PPRoundtrip.lean"
    },
    ".lake.packages.mathlib.MathlibTest.BigOps": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/MathlibTest/BigOps.lean"
    },
    ".lake.packages.mathlib.MathlibTest.simp_confluence": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/MathlibTest/simp_confluence.lean"
    },
    ".lake.packages.mathlib.MathlibTest.fun_prop_dev": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/MathlibTest/fun_prop_dev.lean"
    },
    ".lake.packages.mathlib.MathlibTest.TCSynth": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/MathlibTest/TCSynth.lean"
    },
    ".lake.packages.mathlib.MathlibTest.measurability": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/MathlibTest/measurability.lean"
    },
    ".lake.packages.mathlib.MathlibTest.import_all": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/MathlibTest/import_all.lean"
    },
    ".lake.packages.mathlib.MathlibTest.PosDef": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/MathlibTest/PosDef.lean"
    },
    ".lake.packages.mathlib.MathlibTest.module": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/MathlibTest/module.lean"
    },
    ".lake.packages.mathlib.MathlibTest.ring": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/MathlibTest/ring.lean"
    },
    ".lake.packages.mathlib.MathlibTest.Multigoal": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/MathlibTest/Multigoal.lean"
    },
    ".lake.packages.mathlib.MathlibTest.DefEqTransformations": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/MathlibTest/DefEqTransformations.lean"
    },
    ".lake.packages.mathlib.MathlibTest.fast_instance": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/MathlibTest/fast_instance.lean"
    },
    ".lake.packages.mathlib.MathlibTest.notation3": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/MathlibTest/notation3.lean"
    },
    ".lake.packages.mathlib.MathlibTest.ErwQuestion": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/MathlibTest/ErwQuestion.lean"
    },
    ".lake.packages.mathlib.MathlibTest.conv": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/MathlibTest/conv.lean"
    },
    ".lake.packages.mathlib.MathlibTest.ring_compare": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/MathlibTest/ring_compare.lean"
    },
    ".lake.packages.mathlib.MathlibTest.MfldSetTac": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/MathlibTest/MfldSetTac.lean"
    },
    ".lake.packages.mathlib.MathlibTest.Constructor": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/MathlibTest/Constructor.lean"
    },
    ".lake.packages.mathlib.MathlibTest.EuclideanSpace": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/MathlibTest/EuclideanSpace.lean"
    },
    ".lake.packages.mathlib.MathlibTest.norm_num": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/MathlibTest/norm_num.lean"
    },
    ".lake.packages.mathlib.MathlibTest.fun_prop": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/MathlibTest/fun_prop.lean"
    },
    ".lake.packages.mathlib.MathlibTest.byContra": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/MathlibTest/byContra.lean"
    },
    ".lake.packages.mathlib.MathlibTest.LintStyle": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/MathlibTest/LintStyle.lean"
    },
    ".lake.packages.mathlib.MathlibTest.IsBoundedDefault": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/MathlibTest/IsBoundedDefault.lean"
    },
    ".lake.packages.mathlib.MathlibTest.Group": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/MathlibTest/Group.lean"
    },
    ".lake.packages.mathlib.MathlibTest.SplitIfs": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/MathlibTest/SplitIfs.lean"
    },
    ".lake.packages.mathlib.MathlibTest.AesopUnusedTactic": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/MathlibTest/AesopUnusedTactic.lean"
    },
    ".lake.packages.mathlib.MathlibTest.SwapVar": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/MathlibTest/SwapVar.lean"
    },
    ".lake.packages.mathlib.MathlibTest.TypeCheck": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/MathlibTest/TypeCheck.lean"
    },
    ".lake.packages.mathlib.MathlibTest.rsuffices": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/MathlibTest/rsuffices.lean"
    },
    ".lake.packages.mathlib.MathlibTest.FBinop": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/MathlibTest/FBinop.lean"
    },
    ".lake.packages.mathlib.MathlibTest.AssertImported": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/MathlibTest/AssertImported.lean"
    },
    ".lake.packages.mathlib.MathlibTest.apply_congr": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/MathlibTest/apply_congr.lean"
    },
    ".lake.packages.mathlib.MathlibTest.Split": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/MathlibTest/Split.lean"
    },
    ".lake.packages.mathlib.MathlibTest.push_neg": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/MathlibTest/push_neg.lean"
    },
    ".lake.packages.mathlib.MathlibTest.Deriv": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/MathlibTest/Deriv.lean"
    },
    ".lake.packages.mathlib.MathlibTest.recover": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/MathlibTest/recover.lean"
    },
    ".lake.packages.mathlib.MathlibTest.Simps": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/MathlibTest/Simps.lean"
    },
    ".lake.packages.mathlib.MathlibTest.derive_encodable": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/MathlibTest/derive_encodable.lean"
    },
    ".lake.packages.mathlib.MathlibTest.tfae": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/MathlibTest/tfae.lean"
    },
    ".lake.packages.mathlib.MathlibTest.Rename": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/MathlibTest/Rename.lean"
    },
    ".lake.packages.mathlib.MathlibTest.propose": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/MathlibTest/propose.lean"
    },
    ".lake.packages.mathlib.MathlibTest.antidiagonal": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/MathlibTest/antidiagonal.lean"
    },
    ".lake.packages.mathlib.MathlibTest.DocPrime": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/MathlibTest/DocPrime.lean"
    },
    ".lake.packages.mathlib.MathlibTest.ArithMult": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/MathlibTest/ArithMult.lean"
    },
    ".lake.packages.mathlib.MathlibTest.interval_cases": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/MathlibTest/interval_cases.lean"
    },
    ".lake.packages.mathlib.MathlibTest.factors": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/MathlibTest/factors.lean"
    },
    ".lake.packages.mathlib.MathlibTest.HigherOrder": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/MathlibTest/HigherOrder.lean"
    },
    ".lake.packages.mathlib.MathlibTest.BinPow": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/MathlibTest/BinPow.lean"
    },
    ".lake.packages.mathlib.MathlibTest.MaxPowDiv": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/MathlibTest/MaxPowDiv.lean"
    },
    ".lake.packages.mathlib.MathlibTest.irreducibleDef": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/MathlibTest/irreducibleDef.lean"
    },
    ".lake.packages.mathlib.MathlibTest.Change": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/MathlibTest/Change.lean"
    },
    ".lake.packages.mathlib.MathlibTest.CountHeartbeats": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/MathlibTest/CountHeartbeats.lean"
    },
    ".lake.packages.mathlib.MathlibTest.apply_fun": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/MathlibTest/apply_fun.lean"
    },
    ".lake.packages.mathlib.MathlibTest.ForbiddenWindows": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/MathlibTest/ForbiddenWindows.lean"
    },
    ".lake.packages.mathlib.MathlibTest.interactiveUnfold": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/MathlibTest/interactiveUnfold.lean"
    },
    ".lake.packages.mathlib.MathlibTest.mod_cases": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/MathlibTest/mod_cases.lean"
    },
    ".lake.packages.mathlib.MathlibTest.Perm": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/MathlibTest/Perm.lean"
    },
    ".lake.packages.mathlib.MathlibTest.linear_combination'": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/MathlibTest/linear_combination'.lean"
    },
    ".lake.packages.mathlib.MathlibTest.choose_reduction": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/MathlibTest/choose_reduction.lean"
    },
    ".lake.packages.mathlib.MathlibTest.Have": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/MathlibTest/Have.lean"
    },
    ".lake.packages.mathlib.MathlibTest.deriving_countable": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/MathlibTest/deriving_countable.lean"
    },
    ".lake.packages.mathlib.MathlibTest.order": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/MathlibTest/order.lean"
    },
    ".lake.packages.mathlib.MathlibTest.AssertExists": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/MathlibTest/AssertExists.lean"
    },
    ".lake.packages.mathlib.MathlibTest.simp_intro": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/MathlibTest/simp_intro.lean"
    },
    ".lake.packages.mathlib.MathlibTest.Monotonicity": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/MathlibTest/Monotonicity.lean"
    },
    ".lake.packages.mathlib.MathlibTest.cancel_denoms": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/MathlibTest/cancel_denoms.lean"
    },
    ".lake.packages.mathlib.MathlibTest.wlog": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/MathlibTest/wlog.lean"
    },
    ".lake.packages.mathlib.MathlibTest.pnat_to_nat": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/MathlibTest/pnat_to_nat.lean"
    },
    ".lake.packages.mathlib.MathlibTest.superscript": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/MathlibTest/superscript.lean"
    },
    ".lake.packages.mathlib.MathlibTest.delaborators": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/MathlibTest/delaborators.lean"
    },
    ".lake.packages.mathlib.MathlibTest.DeriveToExpr": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/MathlibTest/DeriveToExpr.lean"
    },
    ".lake.packages.mathlib.MathlibTest.eqns": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/MathlibTest/eqns.lean"
    },
    ".lake.packages.mathlib.MathlibTest.symm": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/MathlibTest/symm.lean"
    },
    ".lake.packages.mathlib.MathlibTest.Traversable": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/MathlibTest/Traversable.lean"
    },
    ".lake.packages.mathlib.MathlibTest.Inhabit": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/MathlibTest/Inhabit.lean"
    },
    ".lake.packages.mathlib.MathlibTest.meta": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/MathlibTest/meta.lean"
    },
    ".lake.packages.mathlib.MathlibTest.ClearExcept": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/MathlibTest/ClearExcept.lean"
    },
    ".lake.packages.mathlib.MathlibTest.congr": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/MathlibTest/congr.lean"
    },
    ".lake.packages.mathlib.MathlibTest.Recall": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/MathlibTest/Recall.lean"
    },
    ".lake.packages.mathlib.MathlibTest.ExistsI": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/MathlibTest/ExistsI.lean"
    },
    ".lake.packages.mathlib.MathlibTest.MonCat": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/MathlibTest/MonCat.lean"
    },
    ".lake.packages.mathlib.MathlibTest.CalcQuestionMark": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/MathlibTest/CalcQuestionMark.lean"
    },
    ".lake.packages.mathlib.MathlibTest.NoncommRing": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/MathlibTest/NoncommRing.lean"
    },
    ".lake.packages.mathlib.MathlibTest.ValuedCSP": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/MathlibTest/ValuedCSP.lean"
    },
    ".lake.packages.mathlib.MathlibTest.MathlibTestExecutable": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/MathlibTest/MathlibTestExecutable.lean"
    },
    ".lake.packages.mathlib.MathlibTest.TermCongr2": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/MathlibTest/TermCongr2.lean"
    },
    ".lake.packages.mathlib.MathlibTest.reduce_mod_char": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/MathlibTest/reduce_mod_char.lean"
    },
    ".lake.packages.mathlib.MathlibTest.Clean": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/MathlibTest/Clean.lean"
    },
    ".lake.packages.mathlib.MathlibTest.DFinsuppMultiLinear": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/MathlibTest/DFinsuppMultiLinear.lean"
    },
    ".lake.packages.mathlib.MathlibTest.ApplyAt": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/MathlibTest/ApplyAt.lean"
    },
    ".lake.packages.mathlib.MathlibTest.polyrith": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/MathlibTest/polyrith.lean"
    },
    ".lake.packages.mathlib.MathlibTest.globalAttributeIn": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/MathlibTest/globalAttributeIn.lean"
    },
    ".lake.packages.mathlib.MathlibTest.Rify": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/MathlibTest/Rify.lean"
    },
    ".lake.packages.mathlib.MathlibTest.Tauto": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/MathlibTest/Tauto.lean"
    },
    ".lake.packages.mathlib.MathlibTest.itauto": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/MathlibTest/itauto.lean"
    },
    ".lake.packages.mathlib.MathlibTest.FlexibleLinter": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/MathlibTest/FlexibleLinter.lean"
    },
    ".lake.packages.mathlib.MathlibTest.Simp": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/MathlibTest/Simp.lean"
    },
    ".lake.packages.mathlib.MathlibTest.finsupp_notation": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/MathlibTest/finsupp_notation.lean"
    },
    ".lake.packages.mathlib.MathlibTest.HashCommandLinter": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/MathlibTest/HashCommandLinter.lean"
    },
    ".lake.packages.mathlib.MathlibTest.SimpRw": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/MathlibTest/SimpRw.lean"
    },
    ".lake.packages.mathlib.MathlibTest.InferParam": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/MathlibTest/InferParam.lean"
    },
    ".lake.packages.mathlib.MathlibTest.Continuity": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/MathlibTest/Continuity.lean"
    },
    ".lake.packages.mathlib.MathlibTest.norm_num_flt": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/MathlibTest/norm_num_flt.lean"
    },
    ".lake.packages.mathlib.MathlibTest.apply_with": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/MathlibTest/apply_with.lean"
    },
    ".lake.packages.mathlib.MathlibTest.GeneralizeProofs": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/MathlibTest/GeneralizeProofs.lean"
    },
    ".lake.packages.mathlib.MathlibTest.rewrites": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/MathlibTest/rewrites.lean"
    },
    ".lake.packages.mathlib.MathlibTest.DocString": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/MathlibTest/DocString.lean"
    },
    ".lake.packages.mathlib.MathlibTest.Set": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/MathlibTest/Set.lean"
    },
    ".lake.packages.mathlib.MathlibTest.CommDiag": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/MathlibTest/CommDiag.lean"
    },
    ".lake.packages.mathlib.MathlibTest.slow_simp": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/MathlibTest/slow_simp.lean"
    },
    ".lake.packages.mathlib.MathlibTest.Quaternion": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/MathlibTest/Quaternion.lean"
    },
    ".lake.packages.mathlib.MathlibTest.norm_num_ext": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/MathlibTest/norm_num_ext.lean"
    },
    ".lake.packages.mathlib.MathlibTest.MkIffOfInductive": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/MathlibTest/MkIffOfInductive.lean"
    },
    ".lake.packages.mathlib.MathlibTest.finset_builder": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/MathlibTest/finset_builder.lean"
    },
    ".lake.packages.mathlib.MathlibTest.Header": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/MathlibTest/Header.lean"
    },
    ".lake.packages.mathlib.MathlibTest.LibraryRewrite": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/MathlibTest/LibraryRewrite.lean"
    },
    ".lake.packages.mathlib.MathlibTest.spread": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/MathlibTest/spread.lean"
    },
    ".lake.packages.mathlib.MathlibTest.casesm": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/MathlibTest/casesm.lean"
    },
    ".lake.packages.mathlib.MathlibTest.trace": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/MathlibTest/trace.lean"
    },
    ".lake.packages.mathlib.MathlibTest.CommandStart": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/MathlibTest/CommandStart.lean"
    },
    ".lake.packages.mathlib.MathlibTest.GRewrite": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/MathlibTest/GRewrite.lean"
    },
    ".lake.packages.mathlib.MathlibTest.convert": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/MathlibTest/convert.lean"
    },
    ".lake.packages.mathlib.MathlibTest.StringDiagram": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/MathlibTest/StringDiagram.lean"
    },
    ".lake.packages.mathlib.MathlibTest.CompileInductive": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/MathlibTest/CompileInductive.lean"
    },
    ".lake.packages.mathlib.MathlibTest.Complex": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/MathlibTest/Complex.lean"
    },
    ".lake.packages.mathlib.MathlibTest.peel": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/MathlibTest/peel.lean"
    },
    ".lake.packages.mathlib.MathlibTest.renameBvar": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/MathlibTest/renameBvar.lean"
    },
    ".lake.packages.mathlib.MathlibTest.Zify": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/MathlibTest/Zify.lean"
    },
    ".lake.packages.mathlib.MathlibTest.success_if_fail_with_msg": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/MathlibTest/success_if_fail_with_msg.lean"
    },
    ".lake.packages.mathlib.MathlibTest.TautoSet": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/MathlibTest/TautoSet.lean"
    },
    ".lake.packages.mathlib.MathlibTest.enat_to_nat": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/MathlibTest/enat_to_nat.lean"
    },
    ".lake.packages.mathlib.MathlibTest.says": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/MathlibTest/says.lean"
    },
    ".lake.packages.mathlib.MathlibTest.nontriviality": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/MathlibTest/nontriviality.lean"
    },
    ".lake.packages.mathlib.MathlibTest.finset_repr": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/MathlibTest/finset_repr.lean"
    },
    ".lake.packages.mathlib.MathlibTest.positivity": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/MathlibTest/positivity.lean"
    },
    ".lake.packages.mathlib.MathlibTest.right_actions": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/MathlibTest/right_actions.lean"
    },
    ".lake.packages.mathlib.MathlibTest.format_table": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/MathlibTest/format_table.lean"
    },
    ".lake.packages.mathlib.MathlibTest.NthRewrite": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/MathlibTest/NthRewrite.lean"
    },
    ".lake.packages.mathlib.MathlibTest.vec_notation": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/MathlibTest/vec_notation.lean"
    },
    ".lake.packages.mathlib.MathlibTest.abel": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/MathlibTest/abel.lean"
    },
    ".lake.packages.mathlib.MathlibTest.DeriveFintype": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/MathlibTest/DeriveFintype.lean"
    },
    ".lake.packages.mathlib.MathlibTest.UnsetOption": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/MathlibTest/UnsetOption.lean"
    },
    ".lake.packages.mathlib.MathlibTest.dfinsupp_notation": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/MathlibTest/dfinsupp_notation.lean"
    },
    ".lake.packages.mathlib.MathlibTest.RefinedDiscrTree": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/MathlibTest/RefinedDiscrTree.lean"
    },
    ".lake.packages.mathlib.MathlibTest.runCmd": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/MathlibTest/runCmd.lean"
    },
    ".lake.packages.mathlib.MathlibTest.ClearExclamation": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/MathlibTest/ClearExclamation.lean"
    },
    ".lake.packages.mathlib.MathlibTest.coe": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/MathlibTest/coe.lean"
    },
    ".lake.packages.mathlib.MathlibTest.Equiv": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/MathlibTest/Equiv.lean"
    },
    ".lake.packages.mathlib.MathlibTest.nomatch": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/MathlibTest/nomatch.lean"
    },
    ".lake.packages.mathlib.MathlibTest.norm_num_ordinal": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/MathlibTest/norm_num_ordinal.lean"
    },
    ".lake.packages.mathlib.MathlibTest.ProdAssoc": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/MathlibTest/ProdAssoc.lean"
    },
    ".lake.packages.mathlib.MathlibTest.instance_diamonds": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/MathlibTest/instance_diamonds.lean"
    },
    ".lake.packages.mathlib.MathlibTest.set_like": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/MathlibTest/set_like.lean"
    },
    ".lake.packages.mathlib.MathlibTest.norm_num_rpow": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/MathlibTest/norm_num_rpow.lean"
    },
    ".lake.packages.mathlib.MathlibTest.Polynomial": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/MathlibTest/Polynomial.lean"
    },
    ".lake.packages.mathlib.MathlibTest.Expr": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/MathlibTest/Expr.lean"
    },
    ".lake.packages.mathlib.MathlibTest.FieldSimp": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/MathlibTest/FieldSimp.lean"
    },
    ".lake.packages.mathlib.MathlibTest.hint": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/MathlibTest/hint.lean"
    },
    ".lake.packages.mathlib.MathlibTest.Qify": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/MathlibTest/Qify.lean"
    },
    ".lake.packages.mathlib.MathlibTest.FinCoercions": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/MathlibTest/FinCoercions.lean"
    },
    ".lake.packages.mathlib.MathlibTest.Subsingleton": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/MathlibTest/Subsingleton.lean"
    },
    ".lake.packages.mathlib.MathlibTest.zmod": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/MathlibTest/zmod.lean"
    },
    ".lake.packages.mathlib.MathlibTest.InstanceTransparency": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/MathlibTest/InstanceTransparency.lean"
    },
    ".lake.packages.mathlib.MathlibTest.lift": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/MathlibTest/lift.lean"
    },
    ".lake.packages.mathlib.MathlibTest.DeprecatedModule": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/MathlibTest/DeprecatedModule.lean"
    },
    ".lake.packages.mathlib.MathlibTest.oldObtain": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/MathlibTest/oldObtain.lean"
    },
    ".lake.packages.mathlib.MathlibTest.HaveLetLinter": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/MathlibTest/HaveLetLinter.lean"
    },
    ".lake.packages.mathlib.MathlibTest.linear_combination": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/MathlibTest/linear_combination.lean"
    },
    ".lake.packages.mathlib.MathlibTest.fun_prop2": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/MathlibTest/fun_prop2.lean"
    },
    ".lake.packages.mathlib.MathlibTest.jacobiSym": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/MathlibTest/jacobiSym.lean"
    },
    ".lake.packages.mathlib.MathlibTest.slim_check": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/MathlibTest/slim_check.lean"
    },
    ".lake.packages.mathlib.MathlibTest.cc": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/MathlibTest/cc.lean"
    },
    ".lake.packages.mathlib.MathlibTest.TermCongr": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/MathlibTest/TermCongr.lean"
    },
    ".lake.packages.mathlib.MathlibTest.ComputeDegree": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/MathlibTest/ComputeDegree.lean"
    },
    ".lake.packages.mathlib.MathlibTest.StacksAttribute": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/MathlibTest/StacksAttribute.lean"
    },
    ".lake.packages.mathlib.MathlibTest.ClearValue": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/MathlibTest/ClearValue.lean"
    },
    ".lake.packages.mathlib.MathlibTest.Contrapose": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/MathlibTest/Contrapose.lean"
    },
    ".lake.packages.mathlib.MathlibTest.finiteness": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/MathlibTest/finiteness.lean"
    },
    ".lake.packages.mathlib.MathlibTest.MinImports": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/MathlibTest/MinImports.lean"
    },
    ".lake.packages.mathlib.MathlibTest.Use": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/MathlibTest/Use.lean"
    },
    ".lake.packages.mathlib.MathlibTest.Variable": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/MathlibTest/Variable.lean"
    },
    ".lake.packages.mathlib.MathlibTest.Find": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/MathlibTest/Find.lean"
    },
    ".lake.packages.mathlib.MathlibTest.DualNumber": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/MathlibTest/DualNumber.lean"
    },
    ".lake.packages.mathlib.MathlibTest.ImplicitUniverses": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/MathlibTest/ImplicitUniverses.lean"
    },
    ".lake.packages.mathlib.MathlibTest.random": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/MathlibTest/random.lean"
    },
    ".lake.packages.mathlib.MathlibTest.MoveAdd": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/MathlibTest/MoveAdd.lean"
    },
    ".lake.packages.mathlib.MathlibTest.linarith": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/MathlibTest/linarith.lean"
    },
    ".lake.packages.mathlib.MathlibTest.choose": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/MathlibTest/choose.lean"
    },
    ".lake.packages.mathlib.MathlibTest.Real": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/MathlibTest/Real.lean"
    },
    ".lake.packages.mathlib.MathlibTest.fail_if_no_progress": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/MathlibTest/fail_if_no_progress.lean"
    },
    ".lake.packages.mathlib.MathlibTest.DeprecatedSyntaxLinter": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/MathlibTest/DeprecatedSyntaxLinter.lean"
    },
    ".lake.packages.mathlib.MathlibTest.Simproc.ExistsAndEq": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/MathlibTest/Simproc/ExistsAndEq.lean"
    },
    ".lake.packages.mathlib.MathlibTest.Simproc.Divisors": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/MathlibTest/Simproc/Divisors.lean"
    },
    ".lake.packages.mathlib.MathlibTest.Simproc.ProdUnivMany": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/MathlibTest/Simproc/ProdUnivMany.lean"
    },
    ".lake.packages.mathlib.MathlibTest.Util.Qq": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/MathlibTest/Util/Qq.lean"
    },
    ".lake.packages.mathlib.MathlibTest.Nat.log": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/MathlibTest/Nat/log.lean"
    },
    ".lake.packages.mathlib.MathlibTest.CategoryTheory.Coherence": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/MathlibTest/CategoryTheory/Coherence.lean"
    },
    ".lake.packages.mathlib.MathlibTest.CategoryTheory.Elementwise": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/MathlibTest/CategoryTheory/Elementwise.lean"
    },
    ".lake.packages.mathlib.MathlibTest.CategoryTheory.Reassoc": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/MathlibTest/CategoryTheory/Reassoc.lean"
    },
    ".lake.packages.mathlib.MathlibTest.CategoryTheory.ToApp": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/MathlibTest/CategoryTheory/ToApp.lean"
    },
    ".lake.packages.mathlib.MathlibTest.CategoryTheory.PrettyPrinting": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/MathlibTest/CategoryTheory/PrettyPrinting.lean"
    },
    ".lake.packages.mathlib.MathlibTest.CategoryTheory.SubstHomLift": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/MathlibTest/CategoryTheory/SubstHomLift.lean"
    },
    ".lake.packages.mathlib.MathlibTest.CategoryTheory.CheckCompositions": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/MathlibTest/CategoryTheory/CheckCompositions.lean"
    },
    ".lake.packages.mathlib.MathlibTest.CategoryTheory.MonoidalComp": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/MathlibTest/CategoryTheory/MonoidalComp.lean"
    },
    ".lake.packages.mathlib.MathlibTest.CategoryTheory.Slice": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/MathlibTest/CategoryTheory/Slice.lean"
    },
    ".lake.packages.mathlib.MathlibTest.CategoryTheory.Mon_": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/MathlibTest/CategoryTheory/Mon_.lean"
    },
    ".lake.packages.mathlib.MathlibTest.CategoryTheory.ConcreteCategory.Alg": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/MathlibTest/CategoryTheory/ConcreteCategory/Alg.lean"
    },
    ".lake.packages.mathlib.MathlibTest.CategoryTheory.ConcreteCategory.Ring": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/MathlibTest/CategoryTheory/ConcreteCategory/Ring.lean"
    },
    ".lake.packages.mathlib.MathlibTest.CategoryTheory.ConcreteCategory.Semigrp": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/MathlibTest/CategoryTheory/ConcreteCategory/Semigrp.lean"
    },
    ".lake.packages.mathlib.MathlibTest.CategoryTheory.ConcreteCategory.ProfiniteGrp": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/MathlibTest/CategoryTheory/ConcreteCategory/ProfiniteGrp.lean"
    },
    ".lake.packages.mathlib.MathlibTest.CategoryTheory.ConcreteCategory.MonCat": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/MathlibTest/CategoryTheory/ConcreteCategory/MonCat.lean"
    },
    ".lake.packages.mathlib.MathlibTest.CategoryTheory.ConcreteCategory.TopModuleCat": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/MathlibTest/CategoryTheory/ConcreteCategory/TopModuleCat.lean"
    },
    ".lake.packages.mathlib.MathlibTest.CategoryTheory.ConcreteCategory.CommAlgCat": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/MathlibTest/CategoryTheory/ConcreteCategory/CommAlgCat.lean"
    },
    ".lake.packages.mathlib.MathlibTest.CategoryTheory.ConcreteCategory.ModuleCat": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/MathlibTest/CategoryTheory/ConcreteCategory/ModuleCat.lean"
    },
    ".lake.packages.mathlib.MathlibTest.CategoryTheory.ConcreteCategory.Grp": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/MathlibTest/CategoryTheory/ConcreteCategory/Grp.lean"
    },
    ".lake.packages.mathlib.MathlibTest.CategoryTheory.Sites.PreservesSheafification": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/MathlibTest/CategoryTheory/Sites/PreservesSheafification.lean"
    },
    ".lake.packages.mathlib.MathlibTest.CategoryTheory.Sites.Whiskering": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/MathlibTest/CategoryTheory/Sites/Whiskering.lean"
    },
    ".lake.packages.mathlib.MathlibTest.CategoryTheory.Sites.ConcreteSheafification": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/MathlibTest/CategoryTheory/Sites/ConcreteSheafification.lean"
    },
    ".lake.packages.mathlib.MathlibTest.CategoryTheory.Monoidal.Basic": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/MathlibTest/CategoryTheory/Monoidal/Basic.lean"
    },
    ".lake.packages.mathlib.MathlibTest.CategoryTheory.Monoidal.Normalize": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/MathlibTest/CategoryTheory/Monoidal/Normalize.lean"
    },
    ".lake.packages.mathlib.MathlibTest.CategoryTheory.Bicategory.Basic": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/MathlibTest/CategoryTheory/Bicategory/Basic.lean"
    },
    ".lake.packages.mathlib.MathlibTest.CategoryTheory.Bicategory.Normalize": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/MathlibTest/CategoryTheory/Bicategory/Normalize.lean"
    },
    ".lake.packages.mathlib.MathlibTest.search.BestFirst": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/MathlibTest/search/BestFirst.lean"
    },
    ".lake.packages.mathlib.MathlibTest.GCongr.inequalities": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/MathlibTest/GCongr/inequalities.lean"
    },
    ".lake.packages.mathlib.MathlibTest.GCongr.implications": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/MathlibTest/GCongr/implications.lean"
    },
    ".lake.packages.mathlib.MathlibTest.GCongr.mod": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/MathlibTest/GCongr/mod.lean"
    },
    ".lake.packages.mathlib.MathlibTest.Bound.attribute": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/MathlibTest/Bound/attribute.lean"
    },
    ".lake.packages.mathlib.MathlibTest.Bound.bound": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/MathlibTest/Bound/bound.lean"
    },
    ".lake.packages.mathlib.MathlibTest.instances.CommRing_integralClosure": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/MathlibTest/instances/CommRing_integralClosure.lean"
    },
    ".lake.packages.mathlib.MathlibTest.instances.Ring_finiteness": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/MathlibTest/instances/Ring_finiteness.lean"
    },
    ".lake.packages.mathlib.MathlibTest.DirectoryDependencyLinter.Test": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/MathlibTest/DirectoryDependencyLinter/Test.lean"
    },
    ".lake.packages.mathlib.MathlibTest.Delab.FinsetBuilder": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/MathlibTest/Delab/FinsetBuilder.lean"
    },
    ".lake.packages.mathlib.MathlibTest.Delab.SupInf": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/MathlibTest/Delab/SupInf.lean"
    },
    ".lake.packages.mathlib.MathlibTest.Delab.Scheme": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/MathlibTest/Delab/Scheme.lean"
    },
    ".lake.packages.mathlib.MathlibTest.instance_diamonds.normed": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/MathlibTest/instance_diamonds/normed.lean"
    },
    ".lake.packages.mathlib.MathlibTest.instance_diamonds.algebra_rat": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/MathlibTest/instance_diamonds/algebra_rat.lean"
    },
    ".lake.packages.mathlib.MathlibTest.instance_diamonds.FieldTheory.SplittingField.Construction": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/MathlibTest/instance_diamonds/FieldTheory/SplittingField/Construction.lean"
    },
    ".lake.packages.mathlib.MathlibTest.instance_diamonds.FieldTheory.IsAlgClosed.AlgebraicClosure": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/MathlibTest/instance_diamonds/FieldTheory/IsAlgClosed/AlgebraicClosure.lean"
    },
    ".lake.packages.mathlib.MathlibTest.instance_diamonds.Data.Complex.Module": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/MathlibTest/instance_diamonds/Data/Complex/Module.lean"
    },
    ".lake.packages.mathlib.MathlibTest.solve_by_elim.instances": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/MathlibTest/solve_by_elim/instances.lean"
    },
    ".lake.packages.mathlib.MathlibTest.solve_by_elim.basic": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/MathlibTest/solve_by_elim/basic.lean"
    },
    ".lake.packages.mathlib.MathlibTest.solve_by_elim.dummy_label_attr": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/MathlibTest/solve_by_elim/dummy_label_attr.lean"
    },
    ".lake.packages.mathlib.MathlibTest.grind.ordered_ring": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/MathlibTest/grind/ordered_ring.lean"
    },
    ".lake.packages.mathlib.MathlibTest.grind.ring": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/MathlibTest/grind/ring.lean"
    },
    ".lake.packages.mathlib.MathlibTest.grind.pairwise_disjoint": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/MathlibTest/grind/pairwise_disjoint.lean"
    },
    ".lake.packages.mathlib.MathlibTest.grind.trig": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/MathlibTest/grind/trig.lean"
    },
    ".lake.packages.mathlib.MathlibTest.grind.field": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/MathlibTest/grind/field.lean"
    },
    ".lake.packages.mathlib.MathlibTest.grind.cc": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/MathlibTest/grind/cc.lean"
    },
    ".lake.packages.mathlib.MathlibTest.grind.ac": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/MathlibTest/grind/ac.lean"
    },
    ".lake.packages.mathlib.MathlibTest.RewriteSearch.Basic": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/MathlibTest/RewriteSearch/Basic.lean"
    },
    ".lake.packages.mathlib.MathlibTest.RewriteSearch.Polynomial": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/MathlibTest/RewriteSearch/Polynomial.lean"
    },
    ".lake.packages.mathlib.MathlibTest.LibrarySearch.observe": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/MathlibTest/LibrarySearch/observe.lean"
    },
    ".lake.packages.mathlib.MathlibTest.LibrarySearch.mathlib": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/MathlibTest/LibrarySearch/mathlib.lean"
    },
    ".lake.packages.mathlib.MathlibTest.LibrarySearch.basic": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/MathlibTest/LibrarySearch/basic.lean"
    },
    ".lake.packages.mathlib.MathlibTest.LibrarySearch.IsCompact": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/MathlibTest/LibrarySearch/IsCompact.lean"
    },
    ".lake.packages.mathlib.docs.Conv.Guide": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/docs/Conv/Guide.lean"
    },
    ".lake.packages.mathlib.docs.Conv.Introduction": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/docs/Conv/Introduction.lean"
    },
    ".lake.packages.mathlib.DownstreamTest.DownstreamTest": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/DownstreamTest/DownstreamTest.lean"
    },
    ".lake.packages.mathlib.scripts.lint-style": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/scripts/lint-style.lean"
    },
    ".lake.packages.mathlib.scripts.mk_all": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/scripts/mk_all.lean"
    },
    ".lake.packages.mathlib.scripts.check-yaml": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/scripts/check-yaml.lean"
    },
    ".lake.packages.mathlib.scripts.autolabel": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/scripts/autolabel.lean"
    },
    ".lake.packages.mathlib.scripts.bench_summary": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/mathlib/scripts/bench_summary.lean"
    },
    ".lake.packages.plausible.Plausible": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/plausible/Plausible.lean"
    },
    ".lake.packages.plausible.Test": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/plausible/Test.lean"
    },
    ".lake.packages.plausible.Plausible.Attr": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/plausible/Plausible/Attr.lean"
    },
    ".lake.packages.plausible.Plausible.Functions": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/plausible/Plausible/Functions.lean"
    },
    ".lake.packages.plausible.Plausible.Testable": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/plausible/Plausible/Testable.lean"
    },
    ".lake.packages.plausible.Plausible.Gen": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/plausible/Plausible/Gen.lean"
    },
    ".lake.packages.plausible.Plausible.Tactic": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/plausible/Plausible/Tactic.lean"
    },
    ".lake.packages.plausible.Plausible.Sampleable": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/plausible/Plausible/Sampleable.lean"
    },
    ".lake.packages.plausible.Plausible.Random": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/plausible/Plausible/Random.lean"
    },
    ".lake.packages.plausible.Test.Testable": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/plausible/Test/Testable.lean"
    },
    ".lake.packages.plausible.Test.Tactic": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/plausible/Test/Tactic.lean"
    },
    ".lake.packages.proofwidgets.ProofWidgets": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/proofwidgets/ProofWidgets.lean"
    },
    ".lake.packages.proofwidgets.test.delab": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/proofwidgets/test/delab.lean"
    },
    ".lake.packages.proofwidgets.ProofWidgets.Compat": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/proofwidgets/ProofWidgets/Compat.lean"
    },
    ".lake.packages.proofwidgets.ProofWidgets.Util": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/proofwidgets/ProofWidgets/Util.lean"
    },
    ".lake.packages.proofwidgets.ProofWidgets.Cancellable": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/proofwidgets/ProofWidgets/Cancellable.lean"
    },
    ".lake.packages.proofwidgets.ProofWidgets.Component.GraphDisplay": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/proofwidgets/ProofWidgets/Component/GraphDisplay.lean"
    },
    ".lake.packages.proofwidgets.ProofWidgets.Component.FilterDetails": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/proofwidgets/ProofWidgets/Component/FilterDetails.lean"
    },
    ".lake.packages.proofwidgets.ProofWidgets.Component.Basic": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/proofwidgets/ProofWidgets/Component/Basic.lean"
    },
    ".lake.packages.proofwidgets.ProofWidgets.Component.OfRpcMethod": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/proofwidgets/ProofWidgets/Component/OfRpcMethod.lean"
    },
    ".lake.packages.proofwidgets.ProofWidgets.Component.MakeEditLink": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/proofwidgets/ProofWidgets/Component/MakeEditLink.lean"
    },
    ".lake.packages.proofwidgets.ProofWidgets.Component.PenroseDiagram": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/proofwidgets/ProofWidgets/Component/PenroseDiagram.lean"
    },
    ".lake.packages.proofwidgets.ProofWidgets.Component.Recharts": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/proofwidgets/ProofWidgets/Component/Recharts.lean"
    },
    ".lake.packages.proofwidgets.ProofWidgets.Component.HtmlDisplay": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/proofwidgets/ProofWidgets/Component/HtmlDisplay.lean"
    },
    ".lake.packages.proofwidgets.ProofWidgets.Component.InteractiveSvg": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/proofwidgets/ProofWidgets/Component/InteractiveSvg.lean"
    },
    ".lake.packages.proofwidgets.ProofWidgets.Component.Panel.Basic": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/proofwidgets/ProofWidgets/Component/Panel/Basic.lean"
    },
    ".lake.packages.proofwidgets.ProofWidgets.Component.Panel.SelectionPanel": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/proofwidgets/ProofWidgets/Component/Panel/SelectionPanel.lean"
    },
    ".lake.packages.proofwidgets.ProofWidgets.Component.Panel.GoalTypePanel": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/proofwidgets/ProofWidgets/Component/Panel/GoalTypePanel.lean"
    },
    ".lake.packages.proofwidgets.ProofWidgets.Data.Svg": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/proofwidgets/ProofWidgets/Data/Svg.lean"
    },
    ".lake.packages.proofwidgets.ProofWidgets.Data.Html": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/proofwidgets/ProofWidgets/Data/Html.lean"
    },
    ".lake.packages.proofwidgets.ProofWidgets.Demos.Svg": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/proofwidgets/ProofWidgets/Demos/Svg.lean"
    },
    ".lake.packages.proofwidgets.ProofWidgets.Demos.Dynkin": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/proofwidgets/ProofWidgets/Demos/Dynkin.lean"
    },
    ".lake.packages.proofwidgets.ProofWidgets.Demos.Euclidean": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/proofwidgets/ProofWidgets/Demos/Euclidean.lean"
    },
    ".lake.packages.proofwidgets.ProofWidgets.Demos.Conv": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/proofwidgets/ProofWidgets/Demos/Conv.lean"
    },
    ".lake.packages.proofwidgets.ProofWidgets.Demos.SelectInsertConv": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/proofwidgets/ProofWidgets/Demos/SelectInsertConv.lean"
    },
    ".lake.packages.proofwidgets.ProofWidgets.Demos.Venn": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/proofwidgets/ProofWidgets/Demos/Venn.lean"
    },
    ".lake.packages.proofwidgets.ProofWidgets.Demos.RbTree": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/proofwidgets/ProofWidgets/Demos/RbTree.lean"
    },
    ".lake.packages.proofwidgets.ProofWidgets.Demos.Plot": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/proofwidgets/ProofWidgets/Demos/Plot.lean"
    },
    ".lake.packages.proofwidgets.ProofWidgets.Demos.ExprPresentation": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/proofwidgets/ProofWidgets/Demos/ExprPresentation.lean"
    },
    ".lake.packages.proofwidgets.ProofWidgets.Demos.Jsx": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/proofwidgets/ProofWidgets/Demos/Jsx.lean"
    },
    ".lake.packages.proofwidgets.ProofWidgets.Demos.InteractiveSvg": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/proofwidgets/ProofWidgets/Demos/InteractiveSvg.lean"
    },
    ".lake.packages.proofwidgets.ProofWidgets.Demos.Macro": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/proofwidgets/ProofWidgets/Demos/Macro.lean"
    },
    ".lake.packages.proofwidgets.ProofWidgets.Demos.LazyComputation": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/proofwidgets/ProofWidgets/Demos/LazyComputation.lean"
    },
    ".lake.packages.proofwidgets.ProofWidgets.Demos.Rubiks": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/proofwidgets/ProofWidgets/Demos/Rubiks.lean"
    },
    ".lake.packages.proofwidgets.ProofWidgets.Demos.Graph.Basic": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/proofwidgets/ProofWidgets/Demos/Graph/Basic.lean"
    },
    ".lake.packages.proofwidgets.ProofWidgets.Demos.Graph.MVarGraph": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/proofwidgets/ProofWidgets/Demos/Graph/MVarGraph.lean"
    },
    ".lake.packages.proofwidgets.ProofWidgets.Demos.Graph.ExprGraph": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/proofwidgets/ProofWidgets/Demos/Graph/ExprGraph.lean"
    },
    ".lake.packages.proofwidgets.ProofWidgets.Presentation.Expr": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/proofwidgets/ProofWidgets/Presentation/Expr.lean"
    },
    ".lake.packages.batteries.Batteries": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/batteries/Batteries.lean"
    },
    ".lake.packages.batteries.Shake.Main": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/batteries/Shake/Main.lean"
    },
    ".lake.packages.batteries.Batteries.Logic": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/batteries/Batteries/Logic.lean"
    },
    ".lake.packages.batteries.Batteries.Linter": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/batteries/Batteries/Linter.lean"
    },
    ".lake.packages.batteries.Batteries.CodeAction": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/batteries/Batteries/CodeAction.lean"
    },
    ".lake.packages.batteries.Batteries.WF": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/batteries/Batteries/WF.lean"
    },
    ".lake.packages.batteries.Batteries.Tactic.Instances": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/batteries/Batteries/Tactic/Instances.lean"
    },
    ".lake.packages.batteries.Batteries.Tactic.Lint": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/batteries/Batteries/Tactic/Lint.lean"
    },
    ".lake.packages.batteries.Batteries.Tactic.Alias": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/batteries/Batteries/Tactic/Alias.lean"
    },
    ".lake.packages.batteries.Batteries.Tactic.Init": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/batteries/Batteries/Tactic/Init.lean"
    },
    ".lake.packages.batteries.Batteries.Tactic.SqueezeScope": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/batteries/Batteries/Tactic/SqueezeScope.lean"
    },
    ".lake.packages.batteries.Batteries.Tactic.PrintOpaques": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/batteries/Batteries/Tactic/PrintOpaques.lean"
    },
    ".lake.packages.batteries.Batteries.Tactic.PermuteGoals": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/batteries/Batteries/Tactic/PermuteGoals.lean"
    },
    ".lake.packages.batteries.Batteries.Tactic.Basic": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/batteries/Batteries/Tactic/Basic.lean"
    },
    ".lake.packages.batteries.Batteries.Tactic.Congr": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/batteries/Batteries/Tactic/Congr.lean"
    },
    ".lake.packages.batteries.Batteries.Tactic.Case": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/batteries/Batteries/Tactic/Case.lean"
    },
    ".lake.packages.batteries.Batteries.Tactic.Unreachable": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/batteries/Batteries/Tactic/Unreachable.lean"
    },
    ".lake.packages.batteries.Batteries.Tactic.SeqFocus": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/batteries/Batteries/Tactic/SeqFocus.lean"
    },
    ".lake.packages.batteries.Batteries.Tactic.Exact": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/batteries/Batteries/Tactic/Exact.lean"
    },
    ".lake.packages.batteries.Batteries.Tactic.NoMatch": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/batteries/Batteries/Tactic/NoMatch.lean"
    },
    ".lake.packages.batteries.Batteries.Tactic.PrintDependents": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/batteries/Batteries/Tactic/PrintDependents.lean"
    },
    ".lake.packages.batteries.Batteries.Tactic.Trans": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/batteries/Batteries/Tactic/Trans.lean"
    },
    ".lake.packages.batteries.Batteries.Tactic.Lemma": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/batteries/Batteries/Tactic/Lemma.lean"
    },
    ".lake.packages.batteries.Batteries.Tactic.PrintPrefix": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/batteries/Batteries/Tactic/PrintPrefix.lean"
    },
    ".lake.packages.batteries.Batteries.Tactic.OpenPrivate": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/batteries/Batteries/Tactic/OpenPrivate.lean"
    },
    ".lake.packages.batteries.Batteries.Tactic.HelpCmd": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/batteries/Batteries/Tactic/HelpCmd.lean"
    },
    ".lake.packages.batteries.Batteries.Tactic.ShowUnused": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/batteries/Batteries/Tactic/ShowUnused.lean"
    },
    ".lake.packages.batteries.Batteries.Tactic.Lint.TypeClass": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/batteries/Batteries/Tactic/Lint/TypeClass.lean"
    },
    ".lake.packages.batteries.Batteries.Tactic.Lint.Basic": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/batteries/Batteries/Tactic/Lint/Basic.lean"
    },
    ".lake.packages.batteries.Batteries.Tactic.Lint.Simp": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/batteries/Batteries/Tactic/Lint/Simp.lean"
    },
    ".lake.packages.batteries.Batteries.Tactic.Lint.Frontend": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/batteries/Batteries/Tactic/Lint/Frontend.lean"
    },
    ".lake.packages.batteries.Batteries.Tactic.Lint.Misc": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/batteries/Batteries/Tactic/Lint/Misc.lean"
    },
    ".lake.packages.batteries.Batteries.Lean.LawfulMonad": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/batteries/Batteries/Lean/LawfulMonad.lean"
    },
    ".lake.packages.batteries.Batteries.Lean.Float": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/batteries/Batteries/Lean/Float.lean"
    },
    ".lake.packages.batteries.Batteries.Lean.Json": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/batteries/Batteries/Lean/Json.lean"
    },
    ".lake.packages.batteries.Batteries.Lean.HashMap": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/batteries/Batteries/Lean/HashMap.lean"
    },
    ".lake.packages.batteries.Batteries.Lean.Except": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/batteries/Batteries/Lean/Except.lean"
    },
    ".lake.packages.batteries.Batteries.Lean.PersistentHashSet": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/batteries/Batteries/Lean/PersistentHashSet.lean"
    },
    ".lake.packages.batteries.Batteries.Lean.TagAttribute": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/batteries/Batteries/Lean/TagAttribute.lean"
    },
    ".lake.packages.batteries.Batteries.Lean.EStateM": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/batteries/Batteries/Lean/EStateM.lean"
    },
    ".lake.packages.batteries.Batteries.Lean.Syntax": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/batteries/Batteries/Lean/Syntax.lean"
    },
    ".lake.packages.batteries.Batteries.Lean.LawfulMonadLift": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/batteries/Batteries/Lean/LawfulMonadLift.lean"
    },
    ".lake.packages.batteries.Batteries.Lean.NameMapAttribute": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/batteries/Batteries/Lean/NameMapAttribute.lean"
    },
    ".lake.packages.batteries.Batteries.Lean.SatisfiesM": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/batteries/Batteries/Lean/SatisfiesM.lean"
    },
    ".lake.packages.batteries.Batteries.Lean.PersistentHashMap": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/batteries/Batteries/Lean/PersistentHashMap.lean"
    },
    ".lake.packages.batteries.Batteries.Lean.MonadBacktrack": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/batteries/Batteries/Lean/MonadBacktrack.lean"
    },
    ".lake.packages.batteries.Batteries.Lean.HashSet": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/batteries/Batteries/Lean/HashSet.lean"
    },
    ".lake.packages.batteries.Batteries.Lean.Expr": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/batteries/Batteries/Lean/Expr.lean"
    },
    ".lake.packages.batteries.Batteries.Lean.AttributeExtra": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/batteries/Batteries/Lean/AttributeExtra.lean"
    },
    ".lake.packages.batteries.Batteries.Lean.Position": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/batteries/Batteries/Lean/Position.lean"
    },
    ".lake.packages.batteries.Batteries.Lean.Util.EnvSearch": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/batteries/Batteries/Lean/Util/EnvSearch.lean"
    },
    ".lake.packages.batteries.Batteries.Lean.IO.Process": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/batteries/Batteries/Lean/IO/Process.lean"
    },
    ".lake.packages.batteries.Batteries.Lean.Meta.InstantiateMVars": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/batteries/Batteries/Lean/Meta/InstantiateMVars.lean"
    },
    ".lake.packages.batteries.Batteries.Lean.Meta.SavedState": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/batteries/Batteries/Lean/Meta/SavedState.lean"
    },
    ".lake.packages.batteries.Batteries.Lean.Meta.Basic": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/batteries/Batteries/Lean/Meta/Basic.lean"
    },
    ".lake.packages.batteries.Batteries.Lean.Meta.Simp": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/batteries/Batteries/Lean/Meta/Simp.lean"
    },
    ".lake.packages.batteries.Batteries.Lean.Meta.Inaccessible": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/batteries/Batteries/Lean/Meta/Inaccessible.lean"
    },
    ".lake.packages.batteries.Batteries.Lean.Meta.Expr": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/batteries/Batteries/Lean/Meta/Expr.lean"
    },
    ".lake.packages.batteries.Batteries.Lean.Meta.UnusedNames": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/batteries/Batteries/Lean/Meta/UnusedNames.lean"
    },
    ".lake.packages.batteries.Batteries.Lean.Meta.DiscrTree": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/batteries/Batteries/Lean/Meta/DiscrTree.lean"
    },
    ".lake.packages.batteries.Batteries.Lean.System.IO": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/batteries/Batteries/Lean/System/IO.lean"
    },
    ".lake.packages.batteries.Batteries.Util.LibraryNote": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/batteries/Batteries/Util/LibraryNote.lean"
    },
    ".lake.packages.batteries.Batteries.Util.Cache": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/batteries/Batteries/Util/Cache.lean"
    },
    ".lake.packages.batteries.Batteries.Util.Pickle": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/batteries/Batteries/Util/Pickle.lean"
    },
    ".lake.packages.batteries.Batteries.Util.ExtendedBinder": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/batteries/Batteries/Util/ExtendedBinder.lean"
    },
    ".lake.packages.batteries.Batteries.Util.ProofWanted": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/batteries/Batteries/Util/ProofWanted.lean"
    },
    ".lake.packages.batteries.Batteries.Util.Panic": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/batteries/Batteries/Util/Panic.lean"
    },
    ".lake.packages.batteries.Batteries.Linter.UnnecessarySeqFocus": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/batteries/Batteries/Linter/UnnecessarySeqFocus.lean"
    },
    ".lake.packages.batteries.Batteries.Linter.UnreachableTactic": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/batteries/Batteries/Linter/UnreachableTactic.lean"
    },
    ".lake.packages.batteries.Batteries.Classes.Order": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/batteries/Batteries/Classes/Order.lean"
    },
    ".lake.packages.batteries.Batteries.Classes.SatisfiesM": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/batteries/Batteries/Classes/SatisfiesM.lean"
    },
    ".lake.packages.batteries.Batteries.Classes.RatCast": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/batteries/Batteries/Classes/RatCast.lean"
    },
    ".lake.packages.batteries.Batteries.Classes.Cast": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/batteries/Batteries/Classes/Cast.lean"
    },
    ".lake.packages.batteries.Batteries.CodeAction.Deprecated": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/batteries/Batteries/CodeAction/Deprecated.lean"
    },
    ".lake.packages.batteries.Batteries.CodeAction.Attr": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/batteries/Batteries/CodeAction/Attr.lean"
    },
    ".lake.packages.batteries.Batteries.CodeAction.Basic": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/batteries/Batteries/CodeAction/Basic.lean"
    },
    ".lake.packages.batteries.Batteries.CodeAction.Misc": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/batteries/Batteries/CodeAction/Misc.lean"
    },
    ".lake.packages.batteries.Batteries.Data.String": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/batteries/Batteries/Data/String.lean"
    },
    ".lake.packages.batteries.Batteries.Data.RBMap": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/batteries/Batteries/Data/RBMap.lean"
    },
    ".lake.packages.batteries.Batteries.Data.Fin": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/batteries/Batteries/Data/Fin.lean"
    },
    ".lake.packages.batteries.Batteries.Data.ByteSubarray": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/batteries/Batteries/Data/ByteSubarray.lean"
    },
    ".lake.packages.batteries.Batteries.Data.Int": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/batteries/Batteries/Data/Int.lean"
    },
    ".lake.packages.batteries.Batteries.Data.Rat": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/batteries/Batteries/Data/Rat.lean"
    },
    ".lake.packages.batteries.Batteries.Data.FloatArray": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/batteries/Batteries/Data/FloatArray.lean"
    },
    ".lake.packages.batteries.Batteries.Data.List": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/batteries/Batteries/Data/List.lean"
    },
    ".lake.packages.batteries.Batteries.Data.HashMap": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/batteries/Batteries/Data/HashMap.lean"
    },
    ".lake.packages.batteries.Batteries.Data.Nat": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/batteries/Batteries/Data/Nat.lean"
    },
    ".lake.packages.batteries.Batteries.Data.BitVec": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/batteries/Batteries/Data/BitVec.lean"
    },
    ".lake.packages.batteries.Batteries.Data.DList": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/batteries/Batteries/Data/DList.lean"
    },
    ".lake.packages.batteries.Batteries.Data.MLList": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/batteries/Batteries/Data/MLList.lean"
    },
    ".lake.packages.batteries.Batteries.Data.UnionFind": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/batteries/Batteries/Data/UnionFind.lean"
    },
    ".lake.packages.batteries.Batteries.Data.Vector": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/batteries/Batteries/Data/Vector.lean"
    },
    ".lake.packages.batteries.Batteries.Data.NameSet": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/batteries/Batteries/Data/NameSet.lean"
    },
    ".lake.packages.batteries.Batteries.Data.ByteArray": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/batteries/Batteries/Data/ByteArray.lean"
    },
    ".lake.packages.batteries.Batteries.Data.BinomialHeap": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/batteries/Batteries/Data/BinomialHeap.lean"
    },
    ".lake.packages.batteries.Batteries.Data.PairingHeap": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/batteries/Batteries/Data/PairingHeap.lean"
    },
    ".lake.packages.batteries.Batteries.Data.BinaryHeap": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/batteries/Batteries/Data/BinaryHeap.lean"
    },
    ".lake.packages.batteries.Batteries.Data.Range": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/batteries/Batteries/Data/Range.lean"
    },
    ".lake.packages.batteries.Batteries.Data.AssocList": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/batteries/Batteries/Data/AssocList.lean"
    },
    ".lake.packages.batteries.Batteries.Data.Char": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/batteries/Batteries/Data/Char.lean"
    },
    ".lake.packages.batteries.Batteries.Data.Array": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/batteries/Batteries/Data/Array.lean"
    },
    ".lake.packages.batteries.Batteries.Data.UInt": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/batteries/Batteries/Data/UInt.lean"
    },
    ".lake.packages.batteries.Batteries.Data.Stream": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/batteries/Batteries/Data/Stream.lean"
    },
    ".lake.packages.batteries.Batteries.Data.Random": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/batteries/Batteries/Data/Random.lean"
    },
    ".lake.packages.batteries.Batteries.Data.BinomialHeap.Lemmas": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/batteries/Batteries/Data/BinomialHeap/Lemmas.lean"
    },
    ".lake.packages.batteries.Batteries.Data.BinomialHeap.Basic": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/batteries/Batteries/Data/BinomialHeap/Basic.lean"
    },
    ".lake.packages.batteries.Batteries.Data.DList.Lemmas": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/batteries/Batteries/Data/DList/Lemmas.lean"
    },
    ".lake.packages.batteries.Batteries.Data.DList.Basic": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/batteries/Batteries/Data/DList/Basic.lean"
    },
    ".lake.packages.batteries.Batteries.Data.Char.AsciiCasing": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/batteries/Batteries/Data/Char/AsciiCasing.lean"
    },
    ".lake.packages.batteries.Batteries.Data.Char.Basic": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/batteries/Batteries/Data/Char/Basic.lean"
    },
    ".lake.packages.batteries.Batteries.Data.Fin.Lemmas": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/batteries/Batteries/Data/Fin/Lemmas.lean"
    },
    ".lake.packages.batteries.Batteries.Data.Fin.OfBits": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/batteries/Batteries/Data/Fin/OfBits.lean"
    },
    ".lake.packages.batteries.Batteries.Data.Fin.Basic": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/batteries/Batteries/Data/Fin/Basic.lean"
    },
    ".lake.packages.batteries.Batteries.Data.Fin.Fold": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/batteries/Batteries/Data/Fin/Fold.lean"
    },
    ".lake.packages.batteries.Batteries.Data.MLList.IO": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/batteries/Batteries/Data/MLList/IO.lean"
    },
    ".lake.packages.batteries.Batteries.Data.MLList.Basic": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/batteries/Batteries/Data/MLList/Basic.lean"
    },
    ".lake.packages.batteries.Batteries.Data.MLList.Heartbeats": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/batteries/Batteries/Data/MLList/Heartbeats.lean"
    },
    ".lake.packages.batteries.Batteries.Data.Array.Lemmas": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/batteries/Batteries/Data/Array/Lemmas.lean"
    },
    ".lake.packages.batteries.Batteries.Data.Array.Pairwise": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/batteries/Batteries/Data/Array/Pairwise.lean"
    },
    ".lake.packages.batteries.Batteries.Data.Array.Merge": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/batteries/Batteries/Data/Array/Merge.lean"
    },
    ".lake.packages.batteries.Batteries.Data.Array.Monadic": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/batteries/Batteries/Data/Array/Monadic.lean"
    },
    ".lake.packages.batteries.Batteries.Data.Array.Basic": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/batteries/Batteries/Data/Array/Basic.lean"
    },
    ".lake.packages.batteries.Batteries.Data.Array.Match": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/batteries/Batteries/Data/Array/Match.lean"
    },
    ".lake.packages.batteries.Batteries.Data.Array.Init.Lemmas": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/batteries/Batteries/Data/Array/Init/Lemmas.lean"
    },
    ".lake.packages.batteries.Batteries.Data.BitVec.Lemmas": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/batteries/Batteries/Data/BitVec/Lemmas.lean"
    },
    ".lake.packages.batteries.Batteries.Data.BitVec.Basic": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/batteries/Batteries/Data/BitVec/Basic.lean"
    },
    ".lake.packages.batteries.Batteries.Data.UnionFind.Lemmas": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/batteries/Batteries/Data/UnionFind/Lemmas.lean"
    },
    ".lake.packages.batteries.Batteries.Data.UnionFind.Basic": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/batteries/Batteries/Data/UnionFind/Basic.lean"
    },
    ".lake.packages.batteries.Batteries.Data.Nat.Gcd": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/batteries/Batteries/Data/Nat/Gcd.lean"
    },
    ".lake.packages.batteries.Batteries.Data.Nat.Lemmas": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/batteries/Batteries/Data/Nat/Lemmas.lean"
    },
    ".lake.packages.batteries.Batteries.Data.Nat.Digits": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/batteries/Batteries/Data/Nat/Digits.lean"
    },
    ".lake.packages.batteries.Batteries.Data.Nat.Basic": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/batteries/Batteries/Data/Nat/Basic.lean"
    },
    ".lake.packages.batteries.Batteries.Data.Nat.Bisect": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/batteries/Batteries/Data/Nat/Bisect.lean"
    },
    ".lake.packages.batteries.Batteries.Data.Rat.Float": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/batteries/Batteries/Data/Rat/Float.lean"
    },
    ".lake.packages.batteries.Batteries.Data.Rat.Lemmas": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/batteries/Batteries/Data/Rat/Lemmas.lean"
    },
    ".lake.packages.batteries.Batteries.Data.Rat.Basic": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/batteries/Batteries/Data/Rat/Basic.lean"
    },
    ".lake.packages.batteries.Batteries.Data.HashMap.Lemmas": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/batteries/Batteries/Data/HashMap/Lemmas.lean"
    },
    ".lake.packages.batteries.Batteries.Data.HashMap.Basic": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/batteries/Batteries/Data/HashMap/Basic.lean"
    },
    ".lake.packages.batteries.Batteries.Data.List.Count": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/batteries/Batteries/Data/List/Count.lean"
    },
    ".lake.packages.batteries.Batteries.Data.List.Lemmas": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/batteries/Batteries/Data/List/Lemmas.lean"
    },
    ".lake.packages.batteries.Batteries.Data.List.Pairwise": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/batteries/Batteries/Data/List/Pairwise.lean"
    },
    ".lake.packages.batteries.Batteries.Data.List.ArrayMap": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/batteries/Batteries/Data/List/ArrayMap.lean"
    },
    ".lake.packages.batteries.Batteries.Data.List.Monadic": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/batteries/Batteries/Data/List/Monadic.lean"
    },
    ".lake.packages.batteries.Batteries.Data.List.Perm": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/batteries/Batteries/Data/List/Perm.lean"
    },
    ".lake.packages.batteries.Batteries.Data.List.Matcher": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/batteries/Batteries/Data/List/Matcher.lean"
    },
    ".lake.packages.batteries.Batteries.Data.List.Basic": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/batteries/Batteries/Data/List/Basic.lean"
    },
    ".lake.packages.batteries.Batteries.Data.List.OfFn": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/batteries/Batteries/Data/List/OfFn.lean"
    },
    ".lake.packages.batteries.Batteries.Data.List.Init.Lemmas": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/batteries/Batteries/Data/List/Init/Lemmas.lean"
    },
    ".lake.packages.batteries.Batteries.Data.String.Lemmas": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/batteries/Batteries/Data/String/Lemmas.lean"
    },
    ".lake.packages.batteries.Batteries.Data.String.Matcher": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/batteries/Batteries/Data/String/Matcher.lean"
    },
    ".lake.packages.batteries.Batteries.Data.String.Basic": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/batteries/Batteries/Data/String/Basic.lean"
    },
    ".lake.packages.batteries.Batteries.Data.Random.MersenneTwister": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/batteries/Batteries/Data/Random/MersenneTwister.lean"
    },
    ".lake.packages.batteries.Batteries.Data.Range.Lemmas": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/batteries/Batteries/Data/Range/Lemmas.lean"
    },
    ".lake.packages.batteries.Batteries.Data.Vector.Lemmas": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/batteries/Batteries/Data/Vector/Lemmas.lean"
    },
    ".lake.packages.batteries.Batteries.Data.Vector.Monadic": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/batteries/Batteries/Data/Vector/Monadic.lean"
    },
    ".lake.packages.batteries.Batteries.Data.Vector.Basic": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/batteries/Batteries/Data/Vector/Basic.lean"
    },
    ".lake.packages.batteries.Batteries.Data.RBMap.Depth": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/batteries/Batteries/Data/RBMap/Depth.lean"
    },
    ".lake.packages.batteries.Batteries.Data.RBMap.Lemmas": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/batteries/Batteries/Data/RBMap/Lemmas.lean"
    },
    ".lake.packages.batteries.Batteries.Data.RBMap.Basic": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/batteries/Batteries/Data/RBMap/Basic.lean"
    },
    ".lake.packages.batteries.Batteries.Data.RBMap.Alter": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/batteries/Batteries/Data/RBMap/Alter.lean"
    },
    ".lake.packages.batteries.Batteries.Data.RBMap.WF": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/batteries/Batteries/Data/RBMap/WF.lean"
    },
    ".lake.packages.batteries.Batteries.Control.Lemmas": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/batteries/Batteries/Control/Lemmas.lean"
    },
    ".lake.packages.batteries.Batteries.Control.Monad": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/batteries/Batteries/Control/Monad.lean"
    },
    ".lake.packages.batteries.Batteries.Control.AlternativeMonad": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/batteries/Batteries/Control/AlternativeMonad.lean"
    },
    ".lake.packages.batteries.Batteries.Control.LawfulMonadState": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/batteries/Batteries/Control/LawfulMonadState.lean"
    },
    ".lake.packages.batteries.Batteries.Control.OptionT": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/batteries/Batteries/Control/OptionT.lean"
    },
    ".lake.packages.batteries.Batteries.Control.ForInStep": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/batteries/Batteries/Control/ForInStep.lean"
    },
    ".lake.packages.batteries.Batteries.Control.Nondet.Basic": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/batteries/Batteries/Control/Nondet/Basic.lean"
    },
    ".lake.packages.batteries.Batteries.Control.ForInStep.Lemmas": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/batteries/Batteries/Control/ForInStep/Lemmas.lean"
    },
    ".lake.packages.batteries.Batteries.Control.ForInStep.Basic": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/batteries/Batteries/Control/ForInStep/Basic.lean"
    },
    ".lake.packages.batteries.scripts.check_imports": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/batteries/scripts/check_imports.lean"
    },
    ".lake.packages.batteries.scripts.runLinter": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/batteries/scripts/runLinter.lean"
    },
    ".lake.packages.batteries.BatteriesTest.norm_cast": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/batteries/BatteriesTest/norm_cast.lean"
    },
    ".lake.packages.batteries.BatteriesTest.lint_lean": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/batteries/BatteriesTest/lint_lean.lean"
    },
    ".lake.packages.batteries.BatteriesTest.instances": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/batteries/BatteriesTest/instances.lean"
    },
    ".lake.packages.batteries.BatteriesTest.float": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/batteries/BatteriesTest/float.lean"
    },
    ".lake.packages.batteries.BatteriesTest.absurd": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/batteries/BatteriesTest/absurd.lean"
    },
    ".lake.packages.batteries.BatteriesTest.where": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/batteries/BatteriesTest/where.lean"
    },
    ".lake.packages.batteries.BatteriesTest.print_opaques": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/batteries/BatteriesTest/print_opaques.lean"
    },
    ".lake.packages.batteries.BatteriesTest.simpa": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/batteries/BatteriesTest/simpa.lean"
    },
    ".lake.packages.batteries.BatteriesTest.show_term": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/batteries/BatteriesTest/show_term.lean"
    },
    ".lake.packages.batteries.BatteriesTest.OpenPrivateDefs": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/batteries/BatteriesTest/OpenPrivateDefs.lean"
    },
    ".lake.packages.batteries.BatteriesTest.ArrayMap": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/batteries/BatteriesTest/ArrayMap.lean"
    },
    ".lake.packages.batteries.BatteriesTest.nondet": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/batteries/BatteriesTest/nondet.lean"
    },
    ".lake.packages.batteries.BatteriesTest.seq_focus": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/batteries/BatteriesTest/seq_focus.lean"
    },
    ".lake.packages.batteries.BatteriesTest.lemma_cmd": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/batteries/BatteriesTest/lemma_cmd.lean"
    },
    ".lake.packages.batteries.BatteriesTest.alias": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/batteries/BatteriesTest/alias.lean"
    },
    ".lake.packages.batteries.BatteriesTest.lint_docBlame": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/batteries/BatteriesTest/lint_docBlame.lean"
    },
    ".lake.packages.batteries.BatteriesTest.list_sublists": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/batteries/BatteriesTest/list_sublists.lean"
    },
    ".lake.packages.batteries.BatteriesTest.import_lean": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/batteries/BatteriesTest/import_lean.lean"
    },
    ".lake.packages.batteries.BatteriesTest.isIndependentOf": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/batteries/BatteriesTest/isIndependentOf.lean"
    },
    ".lake.packages.batteries.BatteriesTest.rfl": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/batteries/BatteriesTest/rfl.lean"
    },
    ".lake.packages.batteries.BatteriesTest.MLList": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/batteries/BatteriesTest/MLList.lean"
    },
    ".lake.packages.batteries.BatteriesTest.lint_docBlameThm": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/batteries/BatteriesTest/lint_docBlameThm.lean"
    },
    ".lake.packages.batteries.BatteriesTest.by_contra": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/batteries/BatteriesTest/by_contra.lean"
    },
    ".lake.packages.batteries.BatteriesTest.congr": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/batteries/BatteriesTest/congr.lean"
    },
    ".lake.packages.batteries.BatteriesTest.exfalso": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/batteries/BatteriesTest/exfalso.lean"
    },
    ".lake.packages.batteries.BatteriesTest.conv_equals": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/batteries/BatteriesTest/conv_equals.lean"
    },
    ".lake.packages.batteries.BatteriesTest.lint_empty": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/batteries/BatteriesTest/lint_empty.lean"
    },
    ".lake.packages.batteries.BatteriesTest.case": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/batteries/BatteriesTest/case.lean"
    },
    ".lake.packages.batteries.BatteriesTest.vector": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/batteries/BatteriesTest/vector.lean"
    },
    ".lake.packages.batteries.BatteriesTest.register_label_attr": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/batteries/BatteriesTest/register_label_attr.lean"
    },
    ".lake.packages.batteries.BatteriesTest.library_note": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/batteries/BatteriesTest/library_note.lean"
    },
    ".lake.packages.batteries.BatteriesTest.show_unused": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/batteries/BatteriesTest/show_unused.lean"
    },
    ".lake.packages.batteries.BatteriesTest.on_goal": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/batteries/BatteriesTest/on_goal.lean"
    },
    ".lake.packages.batteries.BatteriesTest.kmp_matcher": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/batteries/BatteriesTest/kmp_matcher.lean"
    },
    ".lake.packages.batteries.BatteriesTest.solve_by_elim": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/batteries/BatteriesTest/solve_by_elim.lean"
    },
    ".lake.packages.batteries.BatteriesTest.help_cmd": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/batteries/BatteriesTest/help_cmd.lean"
    },
    ".lake.packages.batteries.BatteriesTest.lint_unreachableTactic": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/batteries/BatteriesTest/lint_unreachableTactic.lean"
    },
    ".lake.packages.batteries.BatteriesTest.trans": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/batteries/BatteriesTest/trans.lean"
    },
    ".lake.packages.batteries.BatteriesTest.lintTC": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/batteries/BatteriesTest/lintTC.lean"
    },
    ".lake.packages.batteries.BatteriesTest.openPrivate": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/batteries/BatteriesTest/openPrivate.lean"
    },
    ".lake.packages.batteries.BatteriesTest.mersenne_twister": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/batteries/BatteriesTest/mersenne_twister.lean"
    },
    ".lake.packages.batteries.BatteriesTest.lintsimp": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/batteries/BatteriesTest/lintsimp.lean"
    },
    ".lake.packages.batteries.BatteriesTest.proof_wanted": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/batteries/BatteriesTest/proof_wanted.lean"
    },
    ".lake.packages.batteries.BatteriesTest.lint_dupNamespace": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/batteries/BatteriesTest/lint_dupNamespace.lean"
    },
    ".lake.packages.batteries.BatteriesTest.Char": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/batteries/BatteriesTest/Char.lean"
    },
    ".lake.packages.batteries.BatteriesTest.array": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/batteries/BatteriesTest/array.lean"
    },
    ".lake.packages.batteries.BatteriesTest.lint_simpNF": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/batteries/BatteriesTest/lint_simpNF.lean"
    },
    ".lake.packages.batteries.BatteriesTest.lintunused": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/batteries/BatteriesTest/lintunused.lean"
    },
    ".lake.packages.batteries.BatteriesTest.tryThis": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/batteries/BatteriesTest/tryThis.lean"
    },
    ".lake.packages.batteries.BatteriesTest.satisfying": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/batteries/BatteriesTest/satisfying.lean"
    },
    ".lake.packages.batteries.BatteriesTest.simp_trace": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/batteries/BatteriesTest/simp_trace.lean"
    },
    ".lake.packages.batteries.BatteriesTest.print_prefix": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/batteries/BatteriesTest/print_prefix.lean"
    },
    ".lake.packages.batteries.BatteriesTest.Internal.DummyLibraryNote": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/batteries/BatteriesTest/Internal/DummyLibraryNote.lean"
    },
    ".lake.packages.batteries.BatteriesTest.Internal.DummyLabelAttr": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/batteries/BatteriesTest/Internal/DummyLabelAttr.lean"
    },
    ".lake.packages.batteries.BatteriesTest.Internal.DummyLibraryNote2": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/batteries/BatteriesTest/Internal/DummyLibraryNote2.lean"
    },
    ".lake.packages.batteries.BatteriesTest.omega.benchmark": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/batteries/BatteriesTest/omega/benchmark.lean"
    },
    ".lake.packages.Cli.Cli": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/Cli/Cli.lean"
    },
    ".lake.packages.Cli.Cli.Extensions": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/Cli/Cli/Extensions.lean"
    },
    ".lake.packages.Cli.Cli.Basic": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/Cli/Cli/Basic.lean"
    },
    ".lake.packages.Cli.Cli.Tests": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/Cli/Cli/Tests.lean"
    },
    ".lake.packages.Cli.Cli.Example": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/Cli/Cli/Example.lean"
    },
    ".lake.packages.aesop.Aesop": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/aesop/Aesop.lean"
    },
    ".lake.packages.aesop.AesopTest.TryThisIndentation": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/aesop/AesopTest/TryThisIndentation.lean"
    },
    ".lake.packages.aesop.AesopTest.ForwardUnknownFVar": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/aesop/AesopTest/ForwardUnknownFVar.lean"
    },
    ".lake.packages.aesop.AesopTest.12": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/aesop/AesopTest/12.lean"
    },
    ".lake.packages.aesop.AesopTest.EraseUnfold": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/aesop/AesopTest/EraseUnfold.lean"
    },
    ".lake.packages.aesop.AesopTest.2": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/aesop/AesopTest/2.lean"
    },
    ".lake.packages.aesop.AesopTest.MVarsInInitialGoal": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/aesop/AesopTest/MVarsInInitialGoal.lean"
    },
    ".lake.packages.aesop.AesopTest.Persistence3": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/aesop/AesopTest/Persistence3.lean"
    },
    ".lake.packages.aesop.AesopTest.Intros": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/aesop/AesopTest/Intros.lean"
    },
    ".lake.packages.aesop.AesopTest.Jesse": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/aesop/AesopTest/Jesse.lean"
    },
    ".lake.packages.aesop.AesopTest.HeartbeatLimit": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/aesop/AesopTest/HeartbeatLimit.lean"
    },
    ".lake.packages.aesop.AesopTest.NormSimp": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/aesop/AesopTest/NormSimp.lean"
    },
    ".lake.packages.aesop.AesopTest.203": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/aesop/AesopTest/203.lean"
    },
    ".lake.packages.aesop.AesopTest.Cases": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/aesop/AesopTest/Cases.lean"
    },
    ".lake.packages.aesop.AesopTest.Persistence2": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/aesop/AesopTest/Persistence2.lean"
    },
    ".lake.packages.aesop.AesopTest.RecursiveUnfoldRule": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/aesop/AesopTest/RecursiveUnfoldRule.lean"
    },
    ".lake.packages.aesop.AesopTest.DefaultRuleSets": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/aesop/AesopTest/DefaultRuleSets.lean"
    },
    ".lake.packages.aesop.AesopTest.DestructProducts": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/aesop/AesopTest/DestructProducts.lean"
    },
    ".lake.packages.aesop.AesopTest.SaturatePerformance": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/aesop/AesopTest/SaturatePerformance.lean"
    },
    ".lake.packages.aesop.AesopTest.SeqCalcProver": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/aesop/AesopTest/SeqCalcProver.lean"
    },
    ".lake.packages.aesop.AesopTest.DestructProductsTransparency": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/aesop/AesopTest/DestructProductsTransparency.lean"
    },
    ".lake.packages.aesop.AesopTest.Logic": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/aesop/AesopTest/Logic.lean"
    },
    ".lake.packages.aesop.AesopTest.126": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/aesop/AesopTest/126.lean"
    },
    ".lake.packages.aesop.AesopTest.Com": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/aesop/AesopTest/Com.lean"
    },
    ".lake.packages.aesop.AesopTest.ExtScript": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/aesop/AesopTest/ExtScript.lean"
    },
    ".lake.packages.aesop.AesopTest.List": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/aesop/AesopTest/List.lean"
    },
    ".lake.packages.aesop.AesopTest.13": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/aesop/AesopTest/13.lean"
    },
    ".lake.packages.aesop.AesopTest.18": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/aesop/AesopTest/18.lean"
    },
    ".lake.packages.aesop.AesopTest.Nonterminal": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/aesop/AesopTest/Nonterminal.lean"
    },
    ".lake.packages.aesop.AesopTest.Split": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/aesop/AesopTest/Split.lean"
    },
    ".lake.packages.aesop.AesopTest.ForwardRedundantHypsWithMVars": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/aesop/AesopTest/ForwardRedundantHypsWithMVars.lean"
    },
    ".lake.packages.aesop.AesopTest.Unfold": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/aesop/AesopTest/Unfold.lean"
    },
    ".lake.packages.aesop.AesopTest.TacticConfig": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/aesop/AesopTest/TacticConfig.lean"
    },
    ".lake.packages.aesop.AesopTest.DefaultRuleSetsInit": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/aesop/AesopTest/DefaultRuleSetsInit.lean"
    },
    ".lake.packages.aesop.AesopTest.IncompleteScript": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/aesop/AesopTest/IncompleteScript.lean"
    },
    ".lake.packages.aesop.AesopTest.43": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/aesop/AesopTest/43.lean"
    },
    ".lake.packages.aesop.AesopTest.Strategy": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/aesop/AesopTest/Strategy.lean"
    },
    ".lake.packages.aesop.AesopTest.AddRulesCommand": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/aesop/AesopTest/AddRulesCommand.lean"
    },
    ".lake.packages.aesop.AesopTest.CompositeLocalRuleTerm": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/aesop/AesopTest/CompositeLocalRuleTerm.lean"
    },
    ".lake.packages.aesop.AesopTest.Stats": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/aesop/AesopTest/Stats.lean"
    },
    ".lake.packages.aesop.AesopTest.TerminalError": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/aesop/AesopTest/TerminalError.lean"
    },
    ".lake.packages.aesop.AesopTest.DroppedMVars": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/aesop/AesopTest/DroppedMVars.lean"
    },
    ".lake.packages.aesop.AesopTest.CasesScript": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/aesop/AesopTest/CasesScript.lean"
    },
    ".lake.packages.aesop.AesopTest.RuleSets0": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/aesop/AesopTest/RuleSets0.lean"
    },
    ".lake.packages.aesop.AesopTest.ApplyHypsTransparency": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/aesop/AesopTest/ApplyHypsTransparency.lean"
    },
    ".lake.packages.aesop.AesopTest.RulePattern": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/aesop/AesopTest/RulePattern.lean"
    },
    ".lake.packages.aesop.AesopTest.WarnApplyIff": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/aesop/AesopTest/WarnApplyIff.lean"
    },
    ".lake.packages.aesop.AesopTest.Safe": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/aesop/AesopTest/Safe.lean"
    },
    ".lake.packages.aesop.AesopTest.RuleSets1": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/aesop/AesopTest/RuleSets1.lean"
    },
    ".lake.packages.aesop.AesopTest.CustomTactic": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/aesop/AesopTest/CustomTactic.lean"
    },
    ".lake.packages.aesop.AesopTest.RulePatternUniverseBug": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/aesop/AesopTest/RulePatternUniverseBug.lean"
    },
    ".lake.packages.aesop.AesopTest.SafePrefixInTerminalError": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/aesop/AesopTest/SafePrefixInTerminalError.lean"
    },
    ".lake.packages.aesop.AesopTest.205": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/aesop/AesopTest/205.lean"
    },
    ".lake.packages.aesop.AesopTest.Aesop": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/aesop/AesopTest/Aesop.lean"
    },
    ".lake.packages.aesop.AesopTest.23": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/aesop/AesopTest/23.lean"
    },
    ".lake.packages.aesop.AesopTest.ScriptWithOptions": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/aesop/AesopTest/ScriptWithOptions.lean"
    },
    ".lake.packages.aesop.AesopTest.SimpLetHypotheses": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/aesop/AesopTest/SimpLetHypotheses.lean"
    },
    ".lake.packages.aesop.AesopTest.EraseSimp": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/aesop/AesopTest/EraseSimp.lean"
    },
    ".lake.packages.aesop.AesopTest.SafeExtractionCopyIntroducedMVars": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/aesop/AesopTest/SafeExtractionCopyIntroducedMVars.lean"
    },
    ".lake.packages.aesop.AesopTest.NoProgress": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/aesop/AesopTest/NoProgress.lean"
    },
    ".lake.packages.aesop.AesopTest.Tauto": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/aesop/AesopTest/Tauto.lean"
    },
    ".lake.packages.aesop.AesopTest.CasesTransparency": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/aesop/AesopTest/CasesTransparency.lean"
    },
    ".lake.packages.aesop.AesopTest.20": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/aesop/AesopTest/20.lean"
    },
    ".lake.packages.aesop.AesopTest.Filter": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/aesop/AesopTest/Filter.lean"
    },
    ".lake.packages.aesop.AesopTest.LocalRuleSet": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/aesop/AesopTest/LocalRuleSet.lean"
    },
    ".lake.packages.aesop.AesopTest.TacGen": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/aesop/AesopTest/TacGen.lean"
    },
    ".lake.packages.aesop.AesopTest.TraceProof": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/aesop/AesopTest/TraceProof.lean"
    },
    ".lake.packages.aesop.AesopTest.DocLists": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/aesop/AesopTest/DocLists.lean"
    },
    ".lake.packages.aesop.AesopTest.Ext": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/aesop/AesopTest/Ext.lean"
    },
    ".lake.packages.aesop.AesopTest.RulePatternLooseBVar": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/aesop/AesopTest/RulePatternLooseBVar.lean"
    },
    ".lake.packages.aesop.AesopTest.NoNormSimp": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/aesop/AesopTest/NoNormSimp.lean"
    },
    ".lake.packages.aesop.AesopTest.ForwardConstant": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/aesop/AesopTest/ForwardConstant.lean"
    },
    ".lake.packages.aesop.AesopTest.RuleSetNameHygiene0": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/aesop/AesopTest/RuleSetNameHygiene0.lean"
    },
    ".lake.packages.aesop.AesopTest.41": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/aesop/AesopTest/41.lean"
    },
    ".lake.packages.aesop.AesopTest.RuleSetNameHygiene1": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/aesop/AesopTest/RuleSetNameHygiene1.lean"
    },
    ".lake.packages.aesop.AesopTest.SplitScript": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/aesop/AesopTest/SplitScript.lean"
    },
    ".lake.packages.aesop.AesopTest.ConstructorEquations": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/aesop/AesopTest/ConstructorEquations.lean"
    },
    ".lake.packages.aesop.AesopTest.AllWeaken": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/aesop/AesopTest/AllWeaken.lean"
    },
    ".lake.packages.aesop.AesopTest.NameResolution": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/aesop/AesopTest/NameResolution.lean"
    },
    ".lake.packages.aesop.AesopTest.LocalTactic": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/aesop/AesopTest/LocalTactic.lean"
    },
    ".lake.packages.aesop.AesopTest.ForwardTransparency": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/aesop/AesopTest/ForwardTransparency.lean"
    },
    ".lake.packages.aesop.AesopTest.SafePrefixExpansionRappLimit": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/aesop/AesopTest/SafePrefixExpansionRappLimit.lean"
    },
    ".lake.packages.aesop.AesopTest.Simprocs": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/aesop/AesopTest/Simprocs.lean"
    },
    ".lake.packages.aesop.AesopTest.ApplyTransparency": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/aesop/AesopTest/ApplyTransparency.lean"
    },
    ".lake.packages.aesop.AesopTest.AssumptionTransparency": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/aesop/AesopTest/AssumptionTransparency.lean"
    },
    ".lake.packages.aesop.AesopTest.AuxDecl": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/aesop/AesopTest/AuxDecl.lean"
    },
    ".lake.packages.aesop.AesopTest.207": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/aesop/AesopTest/207.lean"
    },
    ".lake.packages.aesop.AesopTest.GlobalRuleIdentErrorChecking": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/aesop/AesopTest/GlobalRuleIdentErrorChecking.lean"
    },
    ".lake.packages.aesop.AesopTest.Constructors": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/aesop/AesopTest/Constructors.lean"
    },
    ".lake.packages.aesop.AesopTest.UnreachableTacticLinter": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/aesop/AesopTest/UnreachableTacticLinter.lean"
    },
    ".lake.packages.aesop.AesopTest.125": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/aesop/AesopTest/125.lean"
    },
    ".lake.packages.aesop.AesopTest.CustomIndexing": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/aesop/AesopTest/CustomIndexing.lean"
    },
    ".lake.packages.aesop.AesopTest.10": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/aesop/AesopTest/10.lean"
    },
    ".lake.packages.aesop.AesopTest.Forward": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/aesop/AesopTest/Forward.lean"
    },
    ".lake.packages.aesop.AesopTest.Metas": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/aesop/AesopTest/Metas.lean"
    },
    ".lake.packages.aesop.AesopTest.BigStep": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/aesop/AesopTest/BigStep.lean"
    },
    ".lake.packages.aesop.AesopTest.EnableUnfold": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/aesop/AesopTest/EnableUnfold.lean"
    },
    ".lake.packages.aesop.AesopTest.Subst": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/aesop/AesopTest/Subst.lean"
    },
    ".lake.packages.aesop.AesopTest.Persistence1": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/aesop/AesopTest/Persistence1.lean"
    },
    ".lake.packages.aesop.AesopTest.26": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/aesop/AesopTest/26.lean"
    },
    ".lake.packages.aesop.AesopTest.LegacyForward": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/aesop/AesopTest/LegacyForward.lean"
    },
    ".lake.packages.aesop.AesopTest.Erase": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/aesop/AesopTest/Erase.lean"
    },
    ".lake.packages.aesop.AesopTest.27": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/aesop/AesopTest/27.lean"
    },
    ".lake.packages.aesop.AesopTest.Persistence0": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/aesop/AesopTest/Persistence0.lean"
    },
    ".lake.packages.aesop.AesopTest.EqualUpToIds": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/aesop/AesopTest/EqualUpToIds.lean"
    },
    ".lake.packages.aesop.AesopTest.ElabConfig": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/aesop/AesopTest/ElabConfig.lean"
    },
    ".lake.packages.aesop.AesopTest.IntrosAllTransparency": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/aesop/AesopTest/IntrosAllTransparency.lean"
    },
    ".lake.packages.aesop.AesopTest.PostponeSafeRules": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/aesop/AesopTest/PostponeSafeRules.lean"
    },
    ".lake.packages.aesop.AesopTest.NoImportClash": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/aesop/AesopTest/NoImportClash.lean"
    },
    ".lake.packages.aesop.AesopTest.13_2": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/aesop/AesopTest/13_2.lean"
    },
    ".lake.packages.aesop.Aesop.Tracing": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/aesop/Aesop/Tracing.lean"
    },
    ".lake.packages.aesop.Aesop.Percent": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/aesop/Aesop/Percent.lean"
    },
    ".lake.packages.aesop.Aesop.Check": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/aesop/Aesop/Check.lean"
    },
    ".lake.packages.aesop.Aesop.Saturate": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/aesop/Aesop/Saturate.lean"
    },
    ".lake.packages.aesop.Aesop.Builder": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/aesop/Aesop/Builder.lean"
    },
    ".lake.packages.aesop.Aesop.Exception": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/aesop/Aesop/Exception.lean"
    },
    ".lake.packages.aesop.Aesop.Index": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/aesop/Aesop/Index.lean"
    },
    ".lake.packages.aesop.Aesop.BuiltinRules": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/aesop/Aesop/BuiltinRules.lean"
    },
    ".lake.packages.aesop.Aesop.BaseM": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/aesop/Aesop/BaseM.lean"
    },
    ".lake.packages.aesop.Aesop.RulePattern": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/aesop/Aesop/RulePattern.lean"
    },
    ".lake.packages.aesop.Aesop.Nanos": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/aesop/Aesop/Nanos.lean"
    },
    ".lake.packages.aesop.Aesop.Tree": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/aesop/Aesop/Tree.lean"
    },
    ".lake.packages.aesop.Aesop.Rule": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/aesop/Aesop/Rule.lean"
    },
    ".lake.packages.aesop.Aesop.RuleSet": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/aesop/Aesop/RuleSet.lean"
    },
    ".lake.packages.aesop.Aesop.Constants": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/aesop/Aesop/Constants.lean"
    },
    ".lake.packages.aesop.Aesop.RPINF": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/aesop/Aesop/RPINF.lean"
    },
    ".lake.packages.aesop.Aesop.Options": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/aesop/Aesop/Options.lean"
    },
    ".lake.packages.aesop.Aesop.RuleTac": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/aesop/Aesop/RuleTac.lean"
    },
    ".lake.packages.aesop.Aesop.Frontend": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/aesop/Aesop/Frontend.lean"
    },
    ".lake.packages.aesop.Aesop.ElabM": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/aesop/Aesop/ElabM.lean"
    },
    ".lake.packages.aesop.Aesop.Main": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/aesop/Aesop/Main.lean"
    },
    ".lake.packages.aesop.Aesop.Tree.Tracing": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/aesop/Aesop/Tree/Tracing.lean"
    },
    ".lake.packages.aesop.Aesop.Tree.Check": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/aesop/Aesop/Tree/Check.lean"
    },
    ".lake.packages.aesop.Aesop.Tree.Data": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/aesop/Aesop/Tree/Data.lean"
    },
    ".lake.packages.aesop.Aesop.Tree.ExtractProof": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/aesop/Aesop/Tree/ExtractProof.lean"
    },
    ".lake.packages.aesop.Aesop.Tree.ExtractScript": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/aesop/Aesop/Tree/ExtractScript.lean"
    },
    ".lake.packages.aesop.Aesop.Tree.TreeM": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/aesop/Aesop/Tree/TreeM.lean"
    },
    ".lake.packages.aesop.Aesop.Tree.Traversal": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/aesop/Aesop/Tree/Traversal.lean"
    },
    ".lake.packages.aesop.Aesop.Tree.RunMetaM": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/aesop/Aesop/Tree/RunMetaM.lean"
    },
    ".lake.packages.aesop.Aesop.Tree.State": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/aesop/Aesop/Tree/State.lean"
    },
    ".lake.packages.aesop.Aesop.Tree.AddRapp": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/aesop/Aesop/Tree/AddRapp.lean"
    },
    ".lake.packages.aesop.Aesop.Tree.UnsafeQueue": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/aesop/Aesop/Tree/UnsafeQueue.lean"
    },
    ".lake.packages.aesop.Aesop.Tree.Free": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/aesop/Aesop/Tree/Free.lean"
    },
    ".lake.packages.aesop.Aesop.Tree.Data.ForwardRuleMatches": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/aesop/Aesop/Tree/Data/ForwardRuleMatches.lean"
    },
    ".lake.packages.aesop.Aesop.Options.Public": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/aesop/Aesop/Options/Public.lean"
    },
    ".lake.packages.aesop.Aesop.Options.Internal": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/aesop/Aesop/Options/Internal.lean"
    },
    ".lake.packages.aesop.Aesop.RuleSet.Filter": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/aesop/Aesop/RuleSet/Filter.lean"
    },
    ".lake.packages.aesop.Aesop.RuleSet.Member": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/aesop/Aesop/RuleSet/Member.lean"
    },
    ".lake.packages.aesop.Aesop.RuleSet.Name": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/aesop/Aesop/RuleSet/Name.lean"
    },
    ".lake.packages.aesop.Aesop.Frontend.Command": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/aesop/Aesop/Frontend/Command.lean"
    },
    ".lake.packages.aesop.Aesop.Frontend.RuleExpr": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/aesop/Aesop/Frontend/RuleExpr.lean"
    },
    ".lake.packages.aesop.Aesop.Frontend.Saturate": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/aesop/Aesop/Frontend/Saturate.lean"
    },
    ".lake.packages.aesop.Aesop.Frontend.Extension": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/aesop/Aesop/Frontend/Extension.lean"
    },
    ".lake.packages.aesop.Aesop.Frontend.Basic": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/aesop/Aesop/Frontend/Basic.lean"
    },
    ".lake.packages.aesop.Aesop.Frontend.Tactic": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/aesop/Aesop/Frontend/Tactic.lean"
    },
    ".lake.packages.aesop.Aesop.Frontend.Attribute": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/aesop/Aesop/Frontend/Attribute.lean"
    },
    ".lake.packages.aesop.Aesop.Frontend.Extension.Init": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/aesop/Aesop/Frontend/Extension/Init.lean"
    },
    ".lake.packages.aesop.Aesop.RulePattern.Cache": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/aesop/Aesop/RulePattern/Cache.lean"
    },
    ".lake.packages.aesop.Aesop.Util.UnionFind": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/aesop/Aesop/Util/UnionFind.lean"
    },
    ".lake.packages.aesop.Aesop.Util.Basic": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/aesop/Aesop/Util/Basic.lean"
    },
    ".lake.packages.aesop.Aesop.Util.UnorderedArraySet": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/aesop/Aesop/Util/UnorderedArraySet.lean"
    },
    ".lake.packages.aesop.Aesop.Util.Tactic": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/aesop/Aesop/Util/Tactic.lean"
    },
    ".lake.packages.aesop.Aesop.Util.EqualUpToIds": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/aesop/Aesop/Util/EqualUpToIds.lean"
    },
    ".lake.packages.aesop.Aesop.Util.Tactic.Unfold": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/aesop/Aesop/Util/Tactic/Unfold.lean"
    },
    ".lake.packages.aesop.Aesop.Util.Tactic.Ext": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/aesop/Aesop/Util/Tactic/Ext.lean"
    },
    ".lake.packages.aesop.Aesop.Script.OptimizeSyntax": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/aesop/Aesop/Script/OptimizeSyntax.lean"
    },
    ".lake.packages.aesop.Aesop.Script.Check": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/aesop/Aesop/Script/Check.lean"
    },
    ".lake.packages.aesop.Aesop.Script.GoalWithMVars": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/aesop/Aesop/Script/GoalWithMVars.lean"
    },
    ".lake.packages.aesop.Aesop.Script.Util": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/aesop/Aesop/Script/Util.lean"
    },
    ".lake.packages.aesop.Aesop.Script.ScriptM": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/aesop/Aesop/Script/ScriptM.lean"
    },
    ".lake.packages.aesop.Aesop.Script.TacticState": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/aesop/Aesop/Script/TacticState.lean"
    },
    ".lake.packages.aesop.Aesop.Script.SScript": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/aesop/Aesop/Script/SScript.lean"
    },
    ".lake.packages.aesop.Aesop.Script.CtorNames": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/aesop/Aesop/Script/CtorNames.lean"
    },
    ".lake.packages.aesop.Aesop.Script.Tactic": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/aesop/Aesop/Script/Tactic.lean"
    },
    ".lake.packages.aesop.Aesop.Script.StructureStatic": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/aesop/Aesop/Script/StructureStatic.lean"
    },
    ".lake.packages.aesop.Aesop.Script.UScript": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/aesop/Aesop/Script/UScript.lean"
    },
    ".lake.packages.aesop.Aesop.Script.SpecificTactics": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/aesop/Aesop/Script/SpecificTactics.lean"
    },
    ".lake.packages.aesop.Aesop.Script.StructureDynamic": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/aesop/Aesop/Script/StructureDynamic.lean"
    },
    ".lake.packages.aesop.Aesop.Script.Step": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/aesop/Aesop/Script/Step.lean"
    },
    ".lake.packages.aesop.Aesop.Script.Main": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/aesop/Aesop/Script/Main.lean"
    },
    ".lake.packages.aesop.Aesop.Script.UScriptToSScript": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/aesop/Aesop/Script/UScriptToSScript.lean"
    },
    ".lake.packages.aesop.Aesop.Rule.Basic": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/aesop/Aesop/Rule/Basic.lean"
    },
    ".lake.packages.aesop.Aesop.Rule.Name": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/aesop/Aesop/Rule/Name.lean"
    },
    ".lake.packages.aesop.Aesop.Rule.Forward": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/aesop/Aesop/Rule/Forward.lean"
    },
    ".lake.packages.aesop.Aesop.Search.SearchM": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/aesop/Aesop/Search/SearchM.lean"
    },
    ".lake.packages.aesop.Aesop.Search.Queue": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/aesop/Aesop/Search/Queue.lean"
    },
    ".lake.packages.aesop.Aesop.Search.Expansion": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/aesop/Aesop/Search/Expansion.lean"
    },
    ".lake.packages.aesop.Aesop.Search.RuleSelection": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/aesop/Aesop/Search/RuleSelection.lean"
    },
    ".lake.packages.aesop.Aesop.Search.Main": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/aesop/Aesop/Search/Main.lean"
    },
    ".lake.packages.aesop.Aesop.Search.ExpandSafePrefix": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/aesop/Aesop/Search/ExpandSafePrefix.lean"
    },
    ".lake.packages.aesop.Aesop.Search.Expansion.Norm": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/aesop/Aesop/Search/Expansion/Norm.lean"
    },
    ".lake.packages.aesop.Aesop.Search.Expansion.Basic": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/aesop/Aesop/Search/Expansion/Basic.lean"
    },
    ".lake.packages.aesop.Aesop.Search.Expansion.Simp": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/aesop/Aesop/Search/Expansion/Simp.lean"
    },
    ".lake.packages.aesop.Aesop.Search.Queue.Class": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/aesop/Aesop/Search/Queue/Class.lean"
    },
    ".lake.packages.aesop.Aesop.RuleTac.GoalDiff": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/aesop/Aesop/RuleTac/GoalDiff.lean"
    },
    ".lake.packages.aesop.Aesop.RuleTac.Cases": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/aesop/Aesop/RuleTac/Cases.lean"
    },
    ".lake.packages.aesop.Aesop.RuleTac.Apply": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/aesop/Aesop/RuleTac/Apply.lean"
    },
    ".lake.packages.aesop.Aesop.RuleTac.Preprocess": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/aesop/Aesop/RuleTac/Preprocess.lean"
    },
    ".lake.packages.aesop.Aesop.RuleTac.Basic": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/aesop/Aesop/RuleTac/Basic.lean"
    },
    ".lake.packages.aesop.Aesop.RuleTac.RuleTerm": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/aesop/Aesop/RuleTac/RuleTerm.lean"
    },
    ".lake.packages.aesop.Aesop.RuleTac.Tactic": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/aesop/Aesop/RuleTac/Tactic.lean"
    },
    ".lake.packages.aesop.Aesop.RuleTac.Descr": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/aesop/Aesop/RuleTac/Descr.lean"
    },
    ".lake.packages.aesop.Aesop.RuleTac.ElabRuleTerm": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/aesop/Aesop/RuleTac/ElabRuleTerm.lean"
    },
    ".lake.packages.aesop.Aesop.RuleTac.FVarIdSubst": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/aesop/Aesop/RuleTac/FVarIdSubst.lean"
    },
    ".lake.packages.aesop.Aesop.RuleTac.Forward": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/aesop/Aesop/RuleTac/Forward.lean"
    },
    ".lake.packages.aesop.Aesop.RuleTac.Forward.Basic": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/aesop/Aesop/RuleTac/Forward/Basic.lean"
    },
    ".lake.packages.aesop.Aesop.BuiltinRules.Intros": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/aesop/Aesop/BuiltinRules/Intros.lean"
    },
    ".lake.packages.aesop.Aesop.BuiltinRules.DestructProducts": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/aesop/Aesop/BuiltinRules/DestructProducts.lean"
    },
    ".lake.packages.aesop.Aesop.BuiltinRules.Split": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/aesop/Aesop/BuiltinRules/Split.lean"
    },
    ".lake.packages.aesop.Aesop.BuiltinRules.Rfl": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/aesop/Aesop/BuiltinRules/Rfl.lean"
    },
    ".lake.packages.aesop.Aesop.BuiltinRules.Assumption": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/aesop/Aesop/BuiltinRules/Assumption.lean"
    },
    ".lake.packages.aesop.Aesop.BuiltinRules.Ext": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/aesop/Aesop/BuiltinRules/Ext.lean"
    },
    ".lake.packages.aesop.Aesop.BuiltinRules.Subst": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/aesop/Aesop/BuiltinRules/Subst.lean"
    },
    ".lake.packages.aesop.Aesop.BuiltinRules.ApplyHyps": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/aesop/Aesop/BuiltinRules/ApplyHyps.lean"
    },
    ".lake.packages.aesop.Aesop.Index.DiscrKeyConfig": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/aesop/Aesop/Index/DiscrKeyConfig.lean"
    },
    ".lake.packages.aesop.Aesop.Index.RulePattern": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/aesop/Aesop/Index/RulePattern.lean"
    },
    ".lake.packages.aesop.Aesop.Index.DiscrTreeConfig": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/aesop/Aesop/Index/DiscrTreeConfig.lean"
    },
    ".lake.packages.aesop.Aesop.Index.Basic": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/aesop/Aesop/Index/Basic.lean"
    },
    ".lake.packages.aesop.Aesop.Index.Forward": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/aesop/Aesop/Index/Forward.lean"
    },
    ".lake.packages.aesop.Aesop.RPINF.Basic": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/aesop/Aesop/RPINF/Basic.lean"
    },
    ".lake.packages.aesop.Aesop.Builder.NormSimp": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/aesop/Aesop/Builder/NormSimp.lean"
    },
    ".lake.packages.aesop.Aesop.Builder.Cases": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/aesop/Aesop/Builder/Cases.lean"
    },
    ".lake.packages.aesop.Aesop.Builder.Apply": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/aesop/Aesop/Builder/Apply.lean"
    },
    ".lake.packages.aesop.Aesop.Builder.Unfold": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/aesop/Aesop/Builder/Unfold.lean"
    },
    ".lake.packages.aesop.Aesop.Builder.Default": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/aesop/Aesop/Builder/Default.lean"
    },
    ".lake.packages.aesop.Aesop.Builder.Basic": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/aesop/Aesop/Builder/Basic.lean"
    },
    ".lake.packages.aesop.Aesop.Builder.Tactic": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/aesop/Aesop/Builder/Tactic.lean"
    },
    ".lake.packages.aesop.Aesop.Builder.Constructors": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/aesop/Aesop/Builder/Constructors.lean"
    },
    ".lake.packages.aesop.Aesop.Builder.Forward": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/aesop/Aesop/Builder/Forward.lean"
    },
    ".lake.packages.aesop.Aesop.Stats.Extension": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/aesop/Aesop/Stats/Extension.lean"
    },
    ".lake.packages.aesop.Aesop.Stats.Basic": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/aesop/Aesop/Stats/Basic.lean"
    },
    ".lake.packages.aesop.Aesop.Stats.Report": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/aesop/Aesop/Stats/Report.lean"
    },
    ".lake.packages.aesop.Aesop.Forward.Substitution": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/aesop/Aesop/Forward/Substitution.lean"
    },
    ".lake.packages.aesop.Aesop.Forward.SlotIndex": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/aesop/Aesop/Forward/SlotIndex.lean"
    },
    ".lake.packages.aesop.Aesop.Forward.State": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/aesop/Aesop/Forward/State.lean"
    },
    ".lake.packages.aesop.Aesop.Forward.LevelIndex": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/aesop/Aesop/Forward/LevelIndex.lean"
    },
    ".lake.packages.aesop.Aesop.Forward.Match": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/aesop/Aesop/Forward/Match.lean"
    },
    ".lake.packages.aesop.Aesop.Forward.RuleInfo": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/aesop/Aesop/Forward/RuleInfo.lean"
    },
    ".lake.packages.aesop.Aesop.Forward.PremiseIndex": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/aesop/Aesop/Forward/PremiseIndex.lean"
    },
    ".lake.packages.aesop.Aesop.Forward.CompleteMatchQueue": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/aesop/Aesop/Forward/CompleteMatchQueue.lean"
    },
    ".lake.packages.aesop.Aesop.Forward.Match.Types": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/aesop/Aesop/Forward/Match/Types.lean"
    },
    ".lake.packages.aesop.Aesop.Forward.State.ApplyGoalDiff": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/aesop/Aesop/Forward/State/ApplyGoalDiff.lean"
    },
    ".lake.packages.aesop.Aesop.Forward.State.Initial": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/aesop/Aesop/Forward/State/Initial.lean"
    },
    ".lake.packages.importGraph.ImportGraphTest": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/importGraph/ImportGraphTest.lean"
    },
    ".lake.packages.importGraph.Main": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/importGraph/Main.lean"
    },
    ".lake.packages.importGraph.ImportGraph": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/importGraph/ImportGraph.lean"
    },
    ".lake.packages.importGraph.ImportGraphTest.Unused": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/importGraph/ImportGraphTest/Unused.lean"
    },
    ".lake.packages.importGraph.ImportGraphTest.Imports": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/importGraph/ImportGraphTest/Imports.lean"
    },
    ".lake.packages.importGraph.ImportGraphTest.Dot": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/importGraph/ImportGraphTest/Dot.lean"
    },
    ".lake.packages.importGraph.ImportGraphTest.Used": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/importGraph/ImportGraphTest/Used.lean"
    },
    ".lake.packages.importGraph.ImportGraph.RequiredModules": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/importGraph/ImportGraph/RequiredModules.lean"
    },
    ".lake.packages.importGraph.ImportGraph.Imports": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/importGraph/ImportGraph/Imports.lean"
    },
    ".lake.packages.importGraph.ImportGraph.UnusedTransitiveImports": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/importGraph/ImportGraph/UnusedTransitiveImports.lean"
    },
    ".lake.packages.importGraph.ImportGraph.Gexf": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/importGraph/ImportGraph/Gexf.lean"
    },
    ".lake.packages.importGraph.ImportGraph.CurrentModule": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/importGraph/ImportGraph/CurrentModule.lean"
    },
    ".lake.packages.importGraph.ImportGraph.Cli": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/importGraph/ImportGraph/Cli.lean"
    },
    ".lake.packages.importGraph.ImportGraph.Lean.Name": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/importGraph/ImportGraph/Lean/Name.lean"
    },
    ".lake.packages.LeanSearchClient.LeanSearchClientTest": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/LeanSearchClient/LeanSearchClientTest.lean"
    },
    ".lake.packages.LeanSearchClient.LeanSearchClient": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/LeanSearchClient/LeanSearchClient.lean"
    },
    ".lake.packages.LeanSearchClient.LeanSearchClientTest.LoogleExamples": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/LeanSearchClient/LeanSearchClientTest/LoogleExamples.lean"
    },
    ".lake.packages.LeanSearchClient.LeanSearchClientTest.MoogleExamples": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/LeanSearchClient/LeanSearchClientTest/MoogleExamples.lean"
    },
    ".lake.packages.LeanSearchClient.LeanSearchClientTest.StateSearchExamples": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/LeanSearchClient/LeanSearchClientTest/StateSearchExamples.lean"
    },
    ".lake.packages.LeanSearchClient.LeanSearchClientTest.Examples": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/LeanSearchClient/LeanSearchClientTest/Examples.lean"
    },
    ".lake.packages.LeanSearchClient.LeanSearchClient.LoogleSyntax": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/LeanSearchClient/LeanSearchClient/LoogleSyntax.lean"
    },
    ".lake.packages.LeanSearchClient.LeanSearchClient.Syntax": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/LeanSearchClient/LeanSearchClient/Syntax.lean"
    },
    ".lake.packages.LeanSearchClient.LeanSearchClient.Basic": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/LeanSearchClient/LeanSearchClient/Basic.lean"
    },
    ".lake.packages.Qq.Qq": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/Qq/Qq.lean"
    },
    ".lake.packages.Qq.examples.betterApp": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/Qq/examples/betterApp.lean"
    },
    ".lake.packages.Qq.examples.hoMatching": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/Qq/examples/hoMatching.lean"
    },
    ".lake.packages.Qq.examples.typeclass": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/Qq/examples/typeclass.lean"
    },
    ".lake.packages.Qq.examples.matching": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/Qq/examples/matching.lean"
    },
    ".lake.packages.Qq.examples.defeqs": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/Qq/examples/defeqs.lean"
    },
    ".lake.packages.Qq.examples.matchMotive": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/Qq/examples/matchMotive.lean"
    },
    ".lake.packages.Qq.examples.commandTest": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/Qq/examples/commandTest.lean"
    },
    ".lake.packages.Qq.examples.clauseConvertType": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/Qq/examples/clauseConvertType.lean"
    },
    ".lake.packages.Qq.examples.misc": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/Qq/examples/misc.lean"
    },
    ".lake.packages.Qq.examples.introQ": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/Qq/examples/introQ.lean"
    },
    ".lake.packages.Qq.examples.conjs": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/Qq/examples/conjs.lean"
    },
    ".lake.packages.Qq.examples.strengthenInstance": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/Qq/examples/strengthenInstance.lean"
    },
    ".lake.packages.Qq.examples.clauseConvertProp": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/Qq/examples/clauseConvertProp.lean"
    },
    ".lake.packages.Qq.examples.mkPairwiseEquality": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/Qq/examples/mkPairwiseEquality.lean"
    },
    ".lake.packages.Qq.Qq.SortLocalDecls": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/Qq/Qq/SortLocalDecls.lean"
    },
    ".lake.packages.Qq.Qq.Simp": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/Qq/Qq/Simp.lean"
    },
    ".lake.packages.Qq.Qq.AssertInstancesCommute": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/Qq/Qq/AssertInstancesCommute.lean"
    },
    ".lake.packages.Qq.Qq.MetaM": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/Qq/Qq/MetaM.lean"
    },
    ".lake.packages.Qq.Qq.Typ": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/Qq/Qq/Typ.lean"
    },
    ".lake.packages.Qq.Qq.Macro": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/Qq/Qq/Macro.lean"
    },
    ".lake.packages.Qq.Qq.Match": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/Qq/Qq/Match.lean"
    },
    ".lake.packages.Qq.Qq.Delab": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/Qq/Qq/Delab.lean"
    },
    ".lake.packages.Qq.Qq.Commands": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/Qq/Qq/Commands.lean"
    },
    ".lake.packages.Qq.Qq.ForLean.LocalContext": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/Qq/Qq/ForLean/LocalContext.lean"
    },
    ".lake.packages.Qq.Qq.ForLean.ToExpr": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/Qq/Qq/ForLean/ToExpr.lean"
    },
    ".lake.packages.Qq.Qq.ForLean.Do": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/Qq/Qq/ForLean/Do.lean"
    },
    ".lake.packages.Qq.Qq.ForLean.ReduceEval": {
      "status": "not_implemented",
      "errors": [],
      "warnings": [],
      "has_sorry": false,
      "node_id": null,
      "file_path": "formal/.lake/packages/Qq/Qq/ForLean/ReduceEval.lean"
    }
  },
  "summary": {
    "total": 7665,
    "not_implemented": 7662,
    "errors_present": 0,
    "warnings_present": 3,
    "completed": 0
  }
}