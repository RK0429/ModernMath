---
title: "インタラクティブ可視化"
lang: ja
translations:
  en: "../en/visualizations.html"
---

# インタラクティブ知識グラフ可視化

このページでは、インタラクティブな可視化を通じて数学的知識グラフを探索する方法を紹介します。

## PyVisインタラクティブグラフ

PyVisを使用して、知識グラフ内のすべてのノードに対してインタラクティブな可視化を生成しました。これらの可視化により、以下のことが可能になります：

- **ローカル近傍の探索**: 各ノードの可視化は、その直接的な依存関係と依存先を表示
- **グラフとのインタラクション**: ズーム、パン、ノードにカーソルを合わせて詳細を表示
- **関係性の理解**: 有向エッジは概念間の依存関係を示す

### 個別ノードの可視化

各数学的概念には、そのローカル近傍を示す独自のインタラクティブグラフがあります。以下にいくつかの例を示します：

- [群の定義 インタラクティブグラフ](output/interactive/def-group.html){target="_blank"}
- [ベクトル空間 インタラクティブグラフ](output/interactive/def-vector-space.html){target="_blank"}
- [位相空間 インタラクティブグラフ](output/interactive/def-topological-space.html){target="_blank"}

### 分野別概要の可視化

数学分野内のすべての概念を示す分野レベルの可視化も提供しています：

- [代数学分野の概要](output/interactive/domain-algebra.html){target="_blank"}
- [位相空間論分野の概要](output/interactive/domain-topology.html){target="_blank"}
- [解析学分野の概要](output/interactive/domain-analysis.html){target="_blank"}

### 完全な可視化インデックス

利用可能なすべての可視化の完全なリストについては、[インタラクティブ可視化インデックス](output/interactive/index.html){target="_blank"}をご覧ください。

## Quartoへの可視化の埋め込み

### 方法1: 直接リンク

最も簡単な方法は、上記のようにスタンドアロンのHTMLファイルへリンクすることです。

### 方法2: IFrameによる埋め込み

iframeを使用して、Quartoページに可視化を直接埋め込むことができます：

```{=html}
<iframe src="output/interactive/def-group.html" width="100%" height="600px" frameborder="0"></iframe>
```

### 方法3: Observable JS統合（近日公開）

Observable JSを使用してD3.js可視化をQuartoページに直接統合する作業を進めています。これにより以下が可能になります：

- 動的データ読み込み
- カスタムフィルタリングと検索
- 他のページコンテンツとの統合
- レスポンシブデザイン

## 可視化の理解

### ノードタイプと色

- **定義** （緑色のボックス）: 基本的概念
- **定理** （青色の楕円）: 証明された命題
- **公理** （オレンジ色のダイヤモンド）: 基礎的な仮定
- **例** （紫色の正方形）: 具体的な事例

### グラフレイアウト

グラフは以下の特徴を持つ力学的レイアウトを使用します：
- 密接に関連する概念を近くに配置
- 有向矢印で依存関係の流れを表示
- 物理シミュレーションによるインタラクティブな探索が可能

### ナビゲーションのヒント

- ノードを**クリック＆ドラッグ**してレイアウトを再配置
- **スクロール**でズームイン/アウト
- ノードに**カーソルを合わせる**と詳細情報を表示
- より良い制御のために**ナビゲーションボタン**を使用

## 技術的詳細

これらの可視化は、ビルドパイプラインの一部として自動的に生成されます：

1. 知識グラフはQuartoコンテンツから構築されます
2. PyVisが各ノードのインタラクティブHTMLファイルを作成
3. 分野別概要が関連する概念を集約
4. コンテンツが変更されると、すべての可視化が更新されます

実装に興味のある開発者の方は、以下をご覧ください：
- 可視化モジュール: `viz/pyvis_graphs.py`
- ビルドスクリプト: `scripts/generate_pyvis.py`
- CI/CD統合: `.github/workflows/build.yml`
