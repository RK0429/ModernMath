---
title: "Troubleshooting Guide"
description: "Solutions to common issues when working with the ModernMath Knowledge Graph"
format:
  html:
    toc: true
    toc-depth: 3
    number-sections: true
---

# Introduction

This guide provides solutions to common issues you might encounter while working with the ModernMath Knowledge Graph project. Issues are organized by category for easy navigation.

# Installation and Setup Issues

## Poetry Installation Problems

### Issue: Poetry command not found
**Symptoms**:
```bash
$ poetry install
bash: poetry: command not found
```

**Solution**:
1. Install Poetry using the official installer:
   ```bash
   curl -sSL https://install.python-poetry.org | python3 -
   ```
2. Add Poetry to your PATH:
   ```bash
   export PATH="$HOME/.local/bin:$PATH"
   ```
3. Verify installation:
   ```bash
   poetry --version
   ```

### Issue: Poetry install fails with Python version error
**Symptoms**:
```
The current project's Python requirement (>=3.11,<4.0) is not compatible
```

**Solution**:
1. Install Python 3.11 or higher
2. Tell Poetry to use the correct Python version:
   ```bash
   poetry env use python3.11
   ```
3. Run install again:
   ```bash
   poetry install
   ```

## Quarto Installation Issues

### Issue: Quarto command not found
**Symptoms**:
```bash
$ quarto render
bash: quarto: command not found
```

**Solution**:
1. Download Quarto from [quarto.org](https://quarto.org/docs/get-started/)
2. Install using your system's package manager:
   - macOS: `brew install quarto`
   - Ubuntu/Debian: Download .deb file and run `sudo dpkg -i quarto*.deb`
   - Windows: Use the installer
3. Verify installation:
   ```bash
   quarto --version
   ```

# Content Creation Issues

## YAML Front Matter Errors

### Issue: Invalid YAML syntax
**Symptoms**:
```
ERROR: Invalid YAML front matter in content/algebra/def-example.qmd
```

**Common Causes and Solutions**:

1. **Incorrect indentation**:
   ```yaml
   # Wrong - tabs used
   requires:
   	- "def-group"

   # Correct - spaces used
   requires:
     - "def-group"
   ```

2. **Missing quotes for special characters**:
   ```yaml
   # Wrong
   title: Definition: Group (G,*)

   # Correct
   title: "Definition: Group (G,*)"
   ```

3. **Incorrect list syntax**:
   ```yaml
   # Wrong
   requires: def-group, def-set

   # Correct
   requires:
     - "def-group"
     - "def-set"
   ```

### Issue: Missing required metadata fields
**Symptoms**:
```
Error: Missing required field 'type' in def-example.qmd
```

**Solution**: Ensure all required fields are present:
```yaml
---
title: "Definition: Example"
id: "def-example"
type: "Definition"  # Required!
status: "draft"     # Required!
---
```

## Cross-Reference Issues

### Issue: Broken cross-references
**Symptoms**:
- `@def-something` appears as plain text
- Validation reports: `Cross-reference @def-something not found`

**Solutions**:

1. **Check target exists**:
   ```bash
   find content -name "def-something.qmd"
   ```

2. **Verify ID matches filename**:
   - Filename: `def-group.qmd`
   - ID in YAML: `id: "def-group"`

3. **Use correct path for cross-domain references**:
   ```markdown
   # Wrong
   @def-topological-space

   # Correct (if in different domain)
   @topology/def-topological-space
   ```

### Issue: Circular dependencies
**Symptoms**:
```
Error: Circular dependency detected: def-a → def-b → def-c → def-a
```

**Solution**:
1. Review the logical dependencies
2. Refactor content to break the cycle
3. Consider if one definition should be more fundamental

## LaTeX Rendering Issues

### Issue: Math not rendering
**Symptoms**: LaTeX code shows as plain text: `$x^2 + y^2 = z^2$`

**Solutions**:

1. **Check delimiters**:
   ```markdown
   # Correct inline math
   The equation $x^2 + y^2 = z^2$ is famous.

   # Correct display math
   $$
   \int_0^1 x^2 \, dx = \frac{1}{3}
   $$
   ```

2. **Escape special characters in text**:
   ```markdown
   # Wrong
   The cost is $100 dollars

   # Correct
   The cost is \$100 dollars
   ```

3. **Check for conflicting syntax**:
   ```markdown
   # Wrong - underscore conflicts
   file_name_with_underscores

   # Correct - escape or use code
   file\_name\_with\_underscores
   `file_name_with_underscores`
   ```

# Build and Validation Issues

## Python Script Errors

### Issue: ModuleNotFoundError
**Symptoms**:
```python
ModuleNotFoundError: No module named 'rdflib'
```

**Solution**:
1. Ensure you're in the Poetry environment:
   ```bash
   poetry shell
   ```
2. Or run scripts with Poetry:
   ```bash
   poetry run python scripts/build_graph.py
   ```

### Issue: FileNotFoundError in scripts
**Symptoms**:
```
FileNotFoundError: [Errno 2] No such file or directory: 'content/'
```

**Solution**:
1. Run scripts from project root:
   ```bash
   cd /path/to/ModernMath
   poetry run python scripts/build_graph.py
   ```

## Graph Building Errors

### Issue: RDF parsing errors
**Symptoms**:
```
Error building graph: Invalid URI in triple
```

**Common Causes**:
1. **Special characters in IDs**:
   ```yaml
   # Wrong
   id: "def-group-(abstract)"

   # Correct
   id: "def-group-abstract"
   ```

2. **Spaces in IDs**:
   ```yaml
   # Wrong
   id: "def normal subgroup"

   # Correct
   id: "def-normal-subgroup"
   ```

### Issue: Graph validation failures
**Symptoms**:
```
Validation Error: Orphaned nodes detected
```

**Solution**:
1. Add cross-references to isolated nodes
2. Or mark as intentionally standalone in metadata

# Quarto Rendering Issues

## Build Failures

### Issue: Quarto render fails
**Symptoms**:
```
ERROR: Render failed due to invalid document
```

**Solutions**:

1. **Check for syntax errors**:
   ```bash
   quarto check
   ```

2. **Render single file to isolate issue**:
   ```bash
   quarto render content/algebra/def-problem.qmd
   ```

3. **Check console output for specific error**

### Issue: Custom environments not working
**Symptoms**: Definition/theorem blocks appear as plain text

**Solution**:
1. Ensure extensions are installed:
   ```bash
   quarto add _extensions/math-environments
   ```
2. Check extension is enabled in `_quarto.yml`:
   ```yaml
   filters:
     - math-environments
   ```

## Visualization Issues

### Issue: Mermaid diagrams not rendering
**Symptoms**: Mermaid code blocks show as text

**Solution**:
1. Use correct fence syntax:
   ````markdown
   ```{mermaid}
   graph TD
     A[Definition] --> B[Theorem]
   ```
   ````

2. Check Quarto version supports Mermaid:
   ```bash
   quarto --version  # Should be 1.4+
   ```

### Issue: Interactive graphs not loading
**Symptoms**: Blank space where graph should be

**Solutions**:
1. Check browser console for errors (F12)
2. Verify JSON data files exist:
   ```bash
   ls output/d3-data/
   ```
3. Check relative paths in HTML

# API and Backend Issues

## Fuseki SPARQL Endpoint

### Issue: Fuseki won't start
**Symptoms**:
```
Error: Address already in use
```

**Solution**:
1. Check if port 3030 is in use:
   ```bash
   lsof -i :3030
   ```
2. Kill existing process or use different port:
   ```bash
   ./fuseki-server --port=3031
   ```

### Issue: SPARQL queries return empty
**Symptoms**: Valid queries return no results

**Solution**:
1. Check data is loaded:
   ```bash
   curl http://localhost:3030/mathwiki/data
   ```
2. Reload data:
   ```bash
   cd fuseki/scripts
   ./load_data.sh
   ```

## Flask API Issues

### Issue: API returns 500 errors
**Symptoms**:
```json
{"error": "Internal server error"}
```

**Solution**:
1. Check API logs:
   ```bash
   tail -f api/logs/api.log
   ```
2. Verify Fuseki is running
3. Test SPARQL endpoint directly

### Issue: CORS errors in browser
**Symptoms**:
```
Access to fetch at 'http://localhost:5001/api/...' from origin 'http://localhost:4000' has been blocked by CORS policy
```

**Solution**:
Add CORS headers in Flask app (already configured in current setup)

# GitHub Actions / CI-CD Issues

## Build Pipeline Failures

### Issue: GitHub Actions failing
**Symptoms**: Red X on pull request

**Solutions**:

1. **Check specific failing step** in Actions tab
2. **Common failures**:
   - Python version mismatch
   - Missing dependencies
   - Validation errors

3. **Run same commands locally**:
   ```bash
   poetry install
   poetry run flake8 scripts/
   poetry run python scripts/validate_metadata.py
   poetry run python scripts/build_graph.py
   quarto render
   ```

### Issue: Deployment not updating
**Symptoms**: Changes not appearing on GitHub Pages

**Solution**:
1. Check deployment status in repo settings
2. Verify branch is set correctly (usually `gh-pages`)
3. Clear browser cache
4. Check `_site/` contents locally

# Performance Issues

## Slow Build Times

### Issue: Graph building takes too long
**Symptoms**: `build_graph.py` runs for minutes

**Solutions**:
1. **Use incremental builds** (if implemented)
2. **Profile the script**:
   ```bash
   poetry run python -m cProfile scripts/build_graph.py
   ```
3. **Check for inefficient queries**

### Issue: Website loads slowly
**Symptoms**: Pages take long to load

**Solutions**:
1. **Optimize images** if any
2. **Check visualization data size**:
   ```bash
   du -sh output/interactive/*
   ```
3. **Enable caching** in API

# Development Environment Issues

## VS Code Integration

### Issue: Python interpreter not found
**Solution**:
1. Select Poetry interpreter:
   - Cmd/Ctrl + Shift + P
   - "Python: Select Interpreter"
   - Choose Poetry environment

### Issue: Quarto preview not working
**Solution**:
1. Install Quarto VS Code extension
2. Ensure Quarto is in PATH
3. Restart VS Code

# Getting Additional Help

## Debugging Steps

1. **Check logs**:
   - API logs: `api/logs/api.log`
   - Fuseki logs: `fuseki/fuseki.log`
   - Build output

2. **Run validation**:
   ```bash
   poetry run python scripts/validate_metadata.py
   poetry run python scripts/validate_graph.py
   ```

3. **Isolate the problem**:
   - Try with a single file
   - Use minimal test case
   - Check each component separately

## Reporting Issues

When reporting issues on GitHub:

1. **Include**:
   - Error messages (full text)
   - Steps to reproduce
   - System information
   - Relevant file contents

2. **Format**:
   ```markdown
   ## Description
   Brief description of the issue

   ## Steps to Reproduce
   1. Run command X
   2. Edit file Y
   3. See error

   ## Expected Behavior
   What should happen

   ## Actual Behavior
   What actually happens

   ## System Info
   - OS: macOS 14.0
   - Python: 3.11.5
   - Quarto: 1.4.0
   - Poetry: 1.6.0
   ```

## Community Resources

- **GitHub Issues**: Search existing issues first
- **Discussions**: For questions and help
- **Contributing Guide**: For development setup
- **API Documentation**: For backend details

# Quick Reference

## Common Commands

```bash
# Environment setup
poetry install
poetry shell

# Validation
poetry run python scripts/validate_metadata.py
poetry run python scripts/validate_graph.py

# Building
poetry run python scripts/build_graph.py
quarto render

# Testing single file
quarto preview content/algebra/def-group.qmd

# API and backend
cd fuseki/scripts && ./start_fuseki.sh
cd api && ./start_api.sh

# Clean rebuild
rm -rf _site/
rm knowledge_graph.ttl
poetry run python scripts/build_graph.py
quarto render
```

## File Locations

- Content: `content/[domain]/[type]-[name].qmd`
- Scripts: `scripts/`
- API: `api/`
- Fuseki: `fuseki/`
- Output: `output/` and `_site/`
- Logs: `api/logs/` and `fuseki/`

Remember: Most issues can be resolved by carefully reading error messages and checking file paths, syntax, and dependencies.
